<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><entry xmlns='http://www.w3.org/2005/Atom' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-4838136820032157985.post-1215474650509337553</id><published>2021-08-19T09:37:00.001-07:00</published><updated>2022-08-23T12:40:09.299-07:00</updated><title type='text'>Understanding Network Access in Windows AppContainers</title><content type='html'>&lt;style type=&quot;text/css&quot;&gt;ul.lst-kix_w3t1hchiy4w5-6{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-1{list-style-type:none}ul.lst-kix_w3t1hchiy4w5-5{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-0{list-style-type:none}ul.lst-kix_w3t1hchiy4w5-4{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-3{list-style-type:none}ul.lst-kix_w3t1hchiy4w5-3{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-2{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-5{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-4{list-style-type:none}ul.lst-kix_w3t1hchiy4w5-8{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-7{list-style-type:none}ul.lst-kix_w3t1hchiy4w5-7{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-6{list-style-type:none}ul.lst-kix_a73fbzj8zqo2-8{list-style-type:none}ul.lst-kix_w3t1hchiy4w5-2{list-style-type:none}ul.lst-kix_w3t1hchiy4w5-1{list-style-type:none}ul.lst-kix_w3t1hchiy4w5-0{list-style-type:none}.lst-kix_9fia5rt9e6y-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_9fia5rt9e6y-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_w3t1hchiy4w5-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_9fia5rt9e6y-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_9fia5rt9e6y-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_w3t1hchiy4w5-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_a73fbzj8zqo2-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_9fia5rt9e6y-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_9fia5rt9e6y-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_9fia5rt9e6y-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_w3t1hchiy4w5-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_a73fbzj8zqo2-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_9fia5rt9e6y-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_w3t1hchiy4w5-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_w3t1hchiy4w5-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_a73fbzj8zqo2-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_a73fbzj8zqo2-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_w3t1hchiy4w5-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_a73fbzj8zqo2-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_a73fbzj8zqo2-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_w3t1hchiy4w5-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_a73fbzj8zqo2-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_9fia5rt9e6y-5&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_uwx5zr9ju08v-8{list-style-type:none}.lst-kix_a73fbzj8zqo2-7&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_uwx5zr9ju08v-3{list-style-type:none}ul.lst-kix_uwx5zr9ju08v-2{list-style-type:none}ul.lst-kix_uwx5zr9ju08v-1{list-style-type:none}ul.lst-kix_uwx5zr9ju08v-0{list-style-type:none}.lst-kix_w3t1hchiy4w5-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_a73fbzj8zqo2-8&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_uwx5zr9ju08v-7{list-style-type:none}ul.lst-kix_uwx5zr9ju08v-6{list-style-type:none}ul.lst-kix_uwx5zr9ju08v-5{list-style-type:none}ul.lst-kix_uwx5zr9ju08v-4{list-style-type:none}.lst-kix_w3t1hchiy4w5-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_uwx5zr9ju08v-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_uwx5zr9ju08v-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_uwx5zr9ju08v-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_uwx5zr9ju08v-5&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_9fia5rt9e6y-0{list-style-type:none}ul.lst-kix_9fia5rt9e6y-1{list-style-type:none}ul.lst-kix_9fia5rt9e6y-2{list-style-type:none}ul.lst-kix_9fia5rt9e6y-3{list-style-type:none}ul.lst-kix_9fia5rt9e6y-4{list-style-type:none}ul.lst-kix_9fia5rt9e6y-5{list-style-type:none}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ul.lst-kix_9fia5rt9e6y-6{list-style-type:none}ul.lst-kix_9fia5rt9e6y-7{list-style-type:none}ul.lst-kix_9fia5rt9e6y-8{list-style-type:none}.lst-kix_uwx5zr9ju08v-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_uwx5zr9ju08v-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_uwx5zr9ju08v-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_uwx5zr9ju08v-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_uwx5zr9ju08v-4&gt;li:before{content:&quot;\0025cb  &quot;}ol{margin:0;padding:0}table td,table th{padding:0}.c19{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#012356;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c40{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c6{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:249.8pt;border-top-color:#000000;border-bottom-style:solid}.c30{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:247.5pt;border-top-color:#000000;border-bottom-style:solid}.c15{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:218.2pt;border-top-color:#000000;border-bottom-style:solid}.c28{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:220.5pt;border-top-color:#000000;border-bottom-style:solid}.c9{background-color:#ffffff;color:#171717;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10.5pt;font-family:&quot;Arial&quot;;font-style:normal}.c35{background-color:#ffe599;color:#171717;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c39{background-color:#d9ead3;color:#171717;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c24{background-color:#f9cb9c;color:#171717;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c31{background-color:#f6b26b;color:#171717;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c3{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.c20{color:#f4cccc;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c5{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:&quot;Arial&quot;;font-style:normal}.c33{padding-top:16pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c26{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c25{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:&quot;Arial&quot;;font-style:normal}.c2{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;;font-style:normal}.c8{color:#ffff00;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c16{color:#434343;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:&quot;Arial&quot;;font-style:normal}.c18{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c0{color:#efefef;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c34{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;}.c22{color:#000000;font-weight:700;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;}.c4{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c10{border-spacing:0;border-collapse:collapse;margin-right:auto}.c13{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c38{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c32{background-color:#ffffff;font-size:10.5pt;color:#171717}.c14{font-family:&quot;Courier New&quot;;color:#efefef;font-weight:400}.c23{font-family:&quot;Courier New&quot;;color:#ffff00;font-weight:400}.c27{border:1px solid black;margin:5px}.c17{padding:0;margin:0}.c11{color:inherit;text-decoration:inherit}.c29{margin-left:36pt;padding-left:0pt}.c37{background-color:#ff9900}.c12{height:0pt}.c36{background-color:#ff0000}.c21{height:11pt}.c7{font-style:italic}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}p{margin:0;color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c38&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Posted by James Forshaw, Project Zero&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Recently &lt;/span&gt;&lt;span&gt;I&amp;#39;ve&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;been delving into the inner workings of the Windows Firewall. This is interesting to me as it&amp;#39;s used to enforce various restrictions such as whether AppContainer sandboxed applications can access the network. Being able to bypass network restrictions in AppContainer sandboxes is interesting as it expands the attack surface available to the application, such as being able to access services on localhost, as well as granting access to intranet resources in an Enterprise.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;I recently discovered a &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2207&quot;&gt;configuration issue&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;with the Windows Firewall which allowed the restrictions to be bypassed and allowed an AppContainer process to access the network. Unfortunately Microsoft decided it didn&amp;#39;t meet the bar for a security bulletin so it&amp;#39;s marked as WontFix. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;As the mechanism that the Windows Firewall uses to restrict access to the network from an AppContainer isn&amp;#39;t officially documented as far as I know, I&amp;#39;ll provide the details on how the restrictions are implemented. This will provide the background to understanding why my configuration issue allowed for network access.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;I&amp;#39;ll also take the opportunity to give an overview of how the Windows Firewall functions and how you can use some of my tooling to inspect the current firewall configuration. This will provide security researchers with the information they need to better understand the firewall and assess its configuration to find other security issues similar to the one I reported. At the same time I&amp;#39;ll note some interesting quirks in the implementation which you might find useful.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c26&quot; id=&quot;h.dy1a1mgzrf91&quot;&gt;&lt;span class=&quot;c25&quot;&gt;Windows Firewall Architecture Primer&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Before we can understand how network access is controlled in an AppContainer we need to understand how the built-in Windows firewall functions. Prior to XP SP2 Windows didn&amp;#39;t have a built-in firewall, and you would typically install a third-party firewall such as ZoneAlarm. These firewalls were implemented by hooking into &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/network/&quot;&gt;Network Driver Interface Specification (NDIS)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;drivers or implementing user-mode &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/winsock/about-the-winsock-spi&quot;&gt;Winsock Service Providers&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;but this was complex and error prone.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;While XP SP2 introduced the built-in firewall, the basis for the one used in modern versions of Windows was introduced in Vista as the &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/fwp/windows-filtering-platform-start-page&quot;&gt;Windows Filtering Platform (WFP)&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. However, as a user you wouldn&amp;#39;t typically interact directly with WFP. Instead you&amp;#39;d use a firewall product which exposes a user interface, and then configures WFP to do the actual firewalling. On a default installation of Windows this would be the Windows Defender Firewall. If you installed a third-party firewall this would replace the Defender component but the actual firewall would still be implemented through configuring WFP.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;/p&gt;

 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c34 c7&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdrhKLVqgZvHWYXMuk3OGSBiicJM0CjhHiN5lpecetctCFzLfbk3iJhpzupig9KOC87QvqyxJOiGgtpCl5XPthk-YM7i57afRn_n2IgmwyB-5-Txd2lcVLmGTE3KXgn2Px9xr2DH7rXOUZuQ-E8uhWl6n_3iIDX_XNiq5GvOTLMHQ9cLvHM9M3IqdO/s1091/Firewall%20Arch.jpg&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdrhKLVqgZvHWYXMuk3OGSBiicJM0CjhHiN5lpecetctCFzLfbk3iJhpzupig9KOC87QvqyxJOiGgtpCl5XPthk-YM7i57afRn_n2IgmwyB-5-Txd2lcVLmGTE3KXgn2Px9xr2DH7rXOUZuQ-E8uhWl6n_3iIDX_XNiq5GvOTLMHQ9cLvHM9M3IqdO/s1091/Firewall%20Arch.jpg&quot; border=&quot;0&quot; alt=&quot;Architectural diagram of the built-in Windows Firewall. Showing a separation between user components (MPSSVC, BFE) and the kernel components (AFD, TCP/IP, NETIO and Callout Drivers)&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The diagram gives an overview of how various components in the OS are connected together to implement the firewall. A user would interact with the Windows Defender firewall using the GUI, or a command line interface such as PowerShell&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/powershell/module/netsecurity/&quot;&gt;NetSecurity&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;module. This interface communicates with the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Windows Defender Firewall Service (MPSSVC)&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;over RPC to query and modify the firewall rules.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;MPSSVC converts its ruleset to the lower-level WFP firewall filters and sends them over RPC to the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Base Filtering Engine (BFE)&lt;/span&gt;&lt;span&gt;&amp;nbsp;service. These filters are then uploaded to the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;TCP/IP driver (TCPIP.SYS)&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the kernel which is where the firewall processing is handled. The device objects (such as &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;\Device\WFP&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;) which the TCP/IP driver exposes are secured so that only the BFE service can access them. This means all access to the kernel firewall needs to be mediated through the service.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;When an application, such as a Web Browser, creates a new network socket the AFD driver responsible for managing sockets will communicate with the TCP/IP driver to configure the socket for IP. At this point the TCP/IP driver will capture the security context of the creating process and store that for later use by the firewall. When an operation is performed on the socket, such as making or accepting a new connection, the firewall filters will be evaluated. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The evaluation is handled primarily by the NETIO driver as well as registered callout drivers. These callout drivers allow for more complex firewall rules to be implemented as well as inspecting and modifying network traffic. The drivers can also forward checks to user-mode services. As an example, the ability to forward checks to user mode allows the Windows Defender Firewall to display a UI when an unknown application listens on a wildcard address, as shown below.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;/p&gt;

 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c7&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNv1FWMhoSZ5e-wPcjKJV_ipVdX9a_2iuNy_QNl26CtdQWyoZHd9ZSvQ8hO6wdIaz2oG8Vk6YfVwsZyMq_RuJ9baGvP-voqdTEmU46JREeXBBFzZyss8GUHf4lBfDxnqYlXNmGBxdWwdB383FP7XoYYMvb8W0aQ7g1D5esP1jxsczHRCYIsMN0gI7t/s790/firewall_access.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNv1FWMhoSZ5e-wPcjKJV_ipVdX9a_2iuNy_QNl26CtdQWyoZHd9ZSvQ8hO6wdIaz2oG8Vk6YfVwsZyMq_RuJ9baGvP-voqdTEmU46JREeXBBFzZyss8GUHf4lBfDxnqYlXNmGBxdWwdB383FP7XoYYMvb8W0aQ7g1D5esP1jxsczHRCYIsMN0gI7t/s790/firewall_access.png&quot; border=&quot;0&quot; alt=&quot;Dialog displayed by the Windows Firewall service when an unknown application tries to listen for incoming connections.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The end result of the evaluation is whether the operation is permitted or blocked. The behavior of a block depends on the operation. If an outbound connection is blocked the caller is notified. If an inbound connection is blocked the firewall will drop the packets and provide no notification to the peer, such as a TCP Reset or ICMP response. This default drop behavior can be changed through a &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gpfas/e0e681d3-0468-4796-b541-c5f9945041d8&quot;&gt;system wide configuration change&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. Let&amp;#39;s dig into more detail on how the rules are configured for evaluation.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c26&quot; id=&quot;h.oda8qztbl83f&quot;&gt;&lt;span class=&quot;c25&quot;&gt;Layers, Sublayers and Filters&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The firewall rules are configured using three types of object: layers, sublayers and filters as shown in the following diagram.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;/p&gt;

 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c34 c7&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgm2IvcV_nSSWmbQ1uTzwO03BEMF7wyH8DDc2mWCCu-PViM4jbMpPwah8ebnA1odBcaWVvwekj-cGIYciZ3UZ_pGTMM34lpm2NZIQzgZOKoH07gFIRa97-amF7hD6wzly5vupgES7ZNzS9xUVslOJTF_OT06ip5OqlowrZVFljUwviI6S--F4RjmcWV/s554/Layers%20and%20Filtering.jpg&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgm2IvcV_nSSWmbQ1uTzwO03BEMF7wyH8DDc2mWCCu-PViM4jbMpPwah8ebnA1odBcaWVvwekj-cGIYciZ3UZ_pGTMM34lpm2NZIQzgZOKoH07gFIRa97-amF7hD6wzly5vupgES7ZNzS9xUVslOJTF_OT06ip5OqlowrZVFljUwviI6S--F4RjmcWV/s554/Layers%20and%20Filtering.jpg&quot; border=&quot;0&quot; alt=&quot;Diagram showing the relationship between layers, sublayers and filters. Each layer can have one or more sublayers which in turn has one or more associated filters.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The firewall layer is used to categorize the network operation to be evaluated. For example there are separate layers for inbound and outbound packets. This is typically further differentiated by IP version, so there are separate IPv4 and IPv6 layers for inbound and outbound packets. While the firewall is primarily focussed on IP traffic there does exist limited MAC and Virtual Switch layers to perform specialist firewalling operations. You can find the list of pre-defined layers on MSDN &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/fwp/management-filtering-layer-identifiers-&quot;&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. As the WFP needs to know what layer handles which operation there&amp;#39;s no way for additional layers to be added to the system by a third-party application.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;When a packet is evaluated by a layer the WFP performs &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/fwp/filter-arbitration&quot;&gt;Filter Arbitration&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This is a set of rules which determine the order of evaluation of the filters. First WFP&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;enumerates all registered filters which are associated with the layer&amp;#39;s unique GUID. Next, WFP groups the filters by their sublayer&amp;#39;s GUID and orders the filter groupings by a weight value which was specified when the sublayer was registered. Finally, WFP evaluates each filter according to the order based on a weight value specified when the filter was registered.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;For every filter, WFP checks if the list of conditions match the packet and its associated meta-data. If the conditions match then the filter performs a specified action, which can be one of the following:&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;padding: 0;&quot; class=&quot;c17 lst-kix_uwx5zr9ju08v-0 start&quot;&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Permit&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Block&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Callout Terminating&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Callout Unknown&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Callout Inspection&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;If the action is &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Permit &lt;/span&gt;&lt;span&gt;or &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Block&lt;/span&gt;&lt;span&gt;&amp;nbsp;then the filter evaluation for the current sublayer is terminated with that action as the result. If the action is a callout then WFP will invoke the filter&amp;#39;s registered callout driver&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fwpsk/nc-fwpsk-fwps_callout_classify_fn0&quot;&gt;classify function&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to perform additional checks. The classify function can evaluate the packet and its meta-data and specify a final result of &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Permit&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Block &lt;/span&gt;&lt;span&gt;or additionally &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Continue &lt;/span&gt;&lt;span&gt;which indicates the filter should be ignored. In general if the action is &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Callout Terminating&lt;/span&gt;&lt;span&gt;&amp;nbsp;then it should only set &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Permit &lt;/span&gt;&lt;span&gt;and &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Block&lt;/span&gt;&lt;span&gt;, and if it&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Callout Inspection&lt;/span&gt;&lt;span&gt;&amp;nbsp;then it should only set &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Continue&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Callout Unknown&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;action is for callouts which might terminate or might not depending on the result of the classification.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Once a terminating filter has been evaluated WFP stops processing that sublayer. However, WFP will continue to process the remaining sublayers in the same way regardless of the final result. In general if any sublayer returns a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Block&lt;/span&gt;&lt;span&gt;&amp;nbsp;result &lt;/span&gt;&lt;span&gt;then the packet will be blocked, otherwise it&amp;#39;ll be permitted. This means that if a higher priority sublayer&amp;#39;s result is &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Permit&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;, it can still be blocked by a lower-priority sublayer.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;A filter can be configured with the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_FILTER_FLAG_CLEAR_ACTION_RIGHT&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag which indicates that the result should be considered &amp;ldquo;hard&amp;rdquo; allowing a higher priority filter to permit a packet which can&amp;#39;t be overridden by a lower-priority blocking filter. The rules for the final result are even more complex than I make out including soft blocks and vetos, refer to the &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/fwp/filter-arbitration&quot;&gt;page in MSDN&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;for more information.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;To simplify the classification of network traffic, WFP provides a set of stateful layers which correspond to major network events such as TCP connection and port binding. The stateful filtering is referred to as &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/fwp/application-layer-enforcement--ale-&quot;&gt;Application Layer Enforcement (ALE)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. For example the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_LAYER_ALE_AUTH_CONNECT_V4&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;layer will be evaluated when a TCP connection using IPv4 is being made.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;For any given connection it will only be evaluated once, not for every packet associated with the TCP connection handshake. In general these &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/fwp/ale-layers&quot;&gt;ALE layers&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;are the ones we&amp;#39;ll focus on when inspecting the firewall configuration, as they&amp;#39;re the most commonly used. The three main ALE layers you&amp;#39;re going to need to inspect are the following:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.3aaa255ecc1a81c80e51f0412c1f656fa6f40adc&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.0&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c30&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Description&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c30&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;FWPM_LAYER_ALE_AUTH_CONNECT_V4/6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Processed when TCP connect() called.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c30&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;FWPM_LAYER_ALE_AUTH_LISTEN_V4/6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Processed when TCP listen() called.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c30&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4/6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Processed when a packet/connection is received.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;What layers are used and in what order they are evaluated depend on the specific operation being performed. You can find the list of the layers for TCP packets &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/fwp/tcp-packet-flows&quot;&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and UDP packets &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/fwp/udp-packet-flows&quot;&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. Now, let&amp;#39;s dig into how filter conditions are defined and what information they can check. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c26&quot; id=&quot;h.b12oj4ik1roh&quot;&gt;&lt;span class=&quot;c25&quot;&gt;Filter Conditions&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Each filter contains an optional list of conditions which are used to match a packet. If no list is specified then the filter will always match any incoming packet and perform its defined action. If more than one condition is specified then the filter is only matched if all of the conditions match. If you have multiple conditions of the same type they&amp;#39;re OR&amp;#39;ed together, which allows a single filter to match on multiple values.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Each condition contains three values:&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;padding: 0;&quot; class=&quot;c17 lst-kix_w3t1hchiy4w5-0 start&quot;&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The layer field to check.&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The value to compare against.&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The match type, for example the packet value and the condition value are equal.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Each layer has a list of fields that will be populated whenever a filter&amp;#39;s conditions are checked. The field might directly reflect a value from the packet, such as the destination IP address or the interface the packet is traversing. Or it could be a metadata value, such as the user identity of the process which created the socket. Some common fields are as follows:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.cd771d5d37490ff376385a74cca3438891315752&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.1&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c22 c7&quot;&gt;Field Type&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c7 c22&quot;&gt;Description&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c32&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The remote IP address.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_IP_LOCAL_ADDRESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The local IP address.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_IP_PROTOCOL&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The IP protocol type, e.g. TCP or UDP&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_IP_REMOTE_PORT&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The remote protocol port.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_IP_LOCAL_PORT&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The local protocol port.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_ALE_USER_ID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The user&amp;#39;s identity.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_ALE_REMOTE_USER_ID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The remote user&amp;#39;s identity.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_ALE_APP_ID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The path to the socket&amp;#39;s executable.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The user&amp;#39;s AppContainer package SID.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_FLAGS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;A set of additional flags.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_ORIGINAL_PROFILE_ID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The source network interface profile.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c6&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c9&quot;&gt;FWPM_CONDITION_CURRENT_PROFILE_ID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c15&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The current network interface profile.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The value to compare against the field can take different values depending on the field being checked. For example the field &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;can be compared to IPv4 or IPv6 addresses depending on the layer it&amp;#39;s used in. The value can also be a range, allowing a filter to match on an IP address within a bounded set of addresses.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_USER_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;conditions are based on the access token captured when creating the TCP or UDP socket. The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_USER_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;stores a security descriptor which is used with an access check with the creator&amp;#39;s token. If the token is granted access then the condition is considered to match. For &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;the condition checks the package SID of the AppContainer token. If the token is not an AppContainer then the filtering engine sets the package SID to the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL SID (S-1-0-0)&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_REMOTE_USER_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;is similar to the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_USER_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;condition but compares against the remote authenticated user. &lt;/span&gt;&lt;span&gt;In most cases sockets are not authenticated&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;, however if IPsec is in use that can result in a remote user token being available to compare. It&amp;#39;s also used in some higher-level layers such as RPC filters.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The match type can be one of the following:&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;padding: 0;&quot; class=&quot;c17 lst-kix_9fia5rt9e6y-0 start&quot;&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_EQUAL&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_EQUAL_CASE_INSENSITIVE&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_FLAGS_ALL_SET&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_FLAGS_ANY_SET&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_FLAGS_NONE_SET&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_GREATER&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_GREATER_OR_EQUAL&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_LESS&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_LESS_OR_EQUAL&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_NOT_EQUAL&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_NOT_PREFIX&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_PREFIX&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;FWP_MATCH_RANGE&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The match types should hopefully be self explanatory based on their names. How the match is interpreted depends on the field&amp;#39;s type and the value being used to check against. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c26&quot; id=&quot;h.xjr0mp71omhg&quot;&gt;&lt;span class=&quot;c25&quot;&gt;Inspecting the Firewall Configuration&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;We now have an idea of the basics of how WFP works to filter network traffic. Let&amp;#39;s look at how to inspect the current configuration. We can&amp;#39;t use any of the normal firewall commands or UIs such as the PowerShell NetSecurity module as I already mentioned these represent the Windows Defender view of the firewall. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Instead we need to use the RPC APIs BFE exposes to access the configuration, for example you can access a filter using the &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fwpmu/nf-fwpmu-fwpmfiltergetbykey0&quot;&gt;FwpmFilterGetByKey0&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;API. Note that the BFE maintains security descriptors to restrict access to WFP objects. By default nothing can be accessed by non-administrators, therefore you&amp;#39;d need to call the RPC APIs while running as an administrator.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;You could implement your own tooling to call all the different APIs, but it&amp;#39;d be much easier if someone had already done it for us. For built-in tools the only one I know of is using &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows-server/networking/technologies/netsh/netsh-contexts&quot;&gt;netsh&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;wfp &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;namespace. For example to dump all the currently configured filters you can use the following command as an administrator:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.8d2c0a0c5175286b751a70c2aa752c5ba3d21d57&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.2&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;netsh wfp show filters file = -&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;This will print all filters in an XML format to the console. Be prepared to wait a while for the output to complete. You can also dump straight to a file. Of course you now need to interpret the XML results. It is possible to also specify certain parameters, such as local and remote addresses to reduce the output to only matching filters.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Processing an XML file doesn&amp;#39;t sound too appealing. To make the firewall configuration easier to inspect I&amp;#39;ve added many of the BFE APIs to my &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://www.powershellgallery.com/packages/NtObjectManager/1.1.31&quot;&gt;NtObjectManager&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;PowerShell module from version 1.1.32 onwards. The module exposes various commands which will return objects representing the current WFP configuration which you can easily use to inspect and group the results however you see fit.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c33&quot; id=&quot;h.325g1dtbp951&quot;&gt;&lt;span class=&quot;c16&quot;&gt;Layer Configuration&lt;/span&gt;&lt;/h3&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Even though the layers are predefined in the WFP implementation it&amp;#39;s still useful to be able to query the details about them. For this you can use the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Get-FwLayer&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;command.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.0b982091d7807de5c519581743d412c34929df42&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.3&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwLayer&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;KeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ---- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_LAYER_OUTBOUND_IPPACKET_V6 &amp;nbsp; Outbound IP Packet v6 Layer &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_LAYER_IPFORWARD_V4_DISCARD &amp;nbsp; IP Forward v4 Discard Layer &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_LAYER_ALE_AUTH_LISTEN_V4 &amp;nbsp; &amp;nbsp; ALE Listen v4 Layer&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The output shows the SDK name for the layer, if it has one, and the name of the layer that the BFE service has configured. The layer can be queried by its SDK name, its GUID or a numeric ID, which we will come back to later. As we mostly only care about the ALE layers then there&amp;#39;s a special &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;AleLayer&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;parameter to query a specific layer without needing to remember the full name or ID.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.106a6412b9d80843ea8c42b8c5d55608f9a04818&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.4&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;(Get-FwLayer -AleLayer ConnectV4).Fields&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;KeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Type &amp;nbsp; &amp;nbsp; &amp;nbsp;DataType &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;---- &amp;nbsp; &amp;nbsp; &amp;nbsp;-------- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_APP_ID &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;RawData &amp;nbsp; ByteBlob &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_USER_ID &amp;nbsp; &amp;nbsp; &amp;nbsp; RawData &amp;nbsp; TokenAccessInformation&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_LOCAL_ADDRESS &amp;nbsp;IPAddress UInt32 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Each layer exposes the list of fields which represent the conditions which can be checked in that layer, you can access the list through the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Fields&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;property. The output shown above contains a few of the condition types we saw earlier in the table of conditions. The output also shows the type of the condition and the data type you should provide when filtering on that condition.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.4b73d7702abe7cdd68619f2dfca206c3e7e04511&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.5&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwSubLayer | Sort-Object Weight | Select KeyName, Weight&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;KeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Weight&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_SUBLAYER_INSPECTION &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_SUBLAYER_TEREDO &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;MICROSOFT_DEFENDER_SUBLAYER_FIREWALL &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;MICROSOFT_DEFENDER_SUBLAYER_WSH &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;MICROSOFT_DEFENDER_SUBLAYER_QUARANTINE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 4 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;You can also inspect the sublayers in the same way, using the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Get-FwSubLayer&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;command as shown above. The most useful information from the sublayer is the weight. As mentioned earlier this is used to determine the ordering of the associated filters. However, as we&amp;#39;ll see you rarely need to query the weight yourself.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c33&quot; id=&quot;h.kx4txr7dcefa&quot;&gt;&lt;span class=&quot;c16&quot;&gt;Filter Configuration&lt;/span&gt;&lt;/h3&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Enforcing the firewall rules is up to the filters. You can enumerate all filters using the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Get-FwFilter&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;command.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.9a80e20803cd73322ecbf4a3ef4396e7654974d5&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.6&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FilterId ActionType Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;-------- ---------- ----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;68071 &amp;nbsp; &amp;nbsp;Block &amp;nbsp; &amp;nbsp; Boot Time Filter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;71199 &amp;nbsp; &amp;nbsp;Permit &amp;nbsp; &amp;nbsp;@FirewallAPI.dll,-80201&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;71350 &amp;nbsp; &amp;nbsp;Block &amp;nbsp; &amp;nbsp; Block inbound traffic to dmcertinst.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The default output shows the ID of a filter, the action type and the user defined name. The filter objects returned also contain the layer and sublayer identifiers as well as the list of matching conditions for the filter. As inspecting the filter is going to be the most common operation the module provides the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Format-FwFilter&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;command to format a filter object in a more readable format.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.46076ba715cf35b252b036a49f94a51358ed2a50&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.7&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -Id 71350 | Format-FwFilter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : Block inbound traffic to dmcertinst.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Block&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: c391b53a-1b98-491c-9973-d86e23ea8a84&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 71350&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: Indexed&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 549755813888&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_APP_ID Equal &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;\device\harddiskvolume3\windows\system32\dmcertinst.exe&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The formatted output contains the layer and sublayer information, the assigned weight of the filter and the list of conditions. The layer is &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4&lt;/span&gt;&lt;span&gt;&amp;nbsp;which handles new incoming connections. The sublayer is MICROSOFT_DEFENDER_SUBLAYER_WSH which is used to group &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Windows Service Hardening&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;rules which apply regardless of the normal firewall configuration.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;In this example the filter only matches on the socket creator process executable&amp;#39;s path. The end result if the filter matches the current state is for the IPv4 TCP network connection to be blocked at the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;sublayer. As already mentioned it now won&amp;#39;t matter if a lower priority layer would permit the connection if the block is enforced.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;How can we determine the ordering of sublayers and filters? You could manually extract the weights for each sublayer and filter and try and order them, and hopefully the ordering you come up with matches what WFP uses. A much simpler approach is to specify a flag when enumerating filters for a particular layer to request the BFE APIs sort the filters using the canonical ordering. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.bbb84a15b64f223a1178403511b7ef1ab83275c5&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.8&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -AleLayer ConnectV4 -Sorted&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FilterId ActionType &amp;nbsp; &amp;nbsp; Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;-------- ---------- &amp;nbsp; &amp;nbsp; ----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;65888 &amp;nbsp; &amp;nbsp;Permit &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Interface Un-quarantine filter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;66469 &amp;nbsp; &amp;nbsp;Block &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;66467 &amp;nbsp; &amp;nbsp;Permit &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;66473 &amp;nbsp; &amp;nbsp;Block &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Sorted&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;parameter specifies the flag to sort the filters. You can now go through the list of filters in order and try and work out what would be the matched filter based on some criteria you decide on. Again it&amp;#39;d be helpful if we could get the BFE service to do more of the hard work in figuring out what rules would apply given a particular process. For this we can specify some of the metadata that represents the connection being made and get the BFE service to only return filters which match on their conditions.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e62ff3a5bf06c1a80c9f1aceaa36b7c60cdfdf25&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.9&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$template = New-FwFilterTemplate -AleLayer ConnectV4 -Sorted&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$fs = Get-FwFilter -Template $template&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$fs.Count&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;65&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $template -ProcessId $pid&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$addr = Resolve-DnsName &amp;quot;www.google.com&amp;quot; -Type A&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $template -IPAddress $addr.Address -Port 80&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $template -ProtocolType Tcp&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $template -ConditionFlags 0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$template.Conditions&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- ----- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_APP_ID &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; \device\harddisk...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_USER_ID &amp;nbsp; &amp;nbsp; &amp;nbsp; Equal &amp;nbsp; &amp;nbsp; FirewallTokenInformation &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID &amp;nbsp; &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; S-1-0-0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS Equal &amp;nbsp; &amp;nbsp; 142.250.72.196&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_REMOTE_PORT &amp;nbsp; &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; 80&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_PROTOCOL &amp;nbsp; &amp;nbsp; &amp;nbsp; Equal &amp;nbsp; &amp;nbsp; Tcp&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_FLAGS &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Equal &amp;nbsp; &amp;nbsp; None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$fs = Get-FwFilter -Template $template&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$fs.Count&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;To specify the metadata we need to create an enumeration template using the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;New-FwFilterTemplate&lt;/span&gt;&lt;span&gt;&amp;nbsp;command. We specify the Connect IPv4 layer as well as requesting that the results are sorted. Using this template with the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Get-FwFilter&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;command returns 65 results (on my machine). &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Next we add some metadata, first from the current powershell process. This populates the App ID with the executable path as well as token information such as the user ID and package ID of an AppContainer. We then add details about the target connection request, specifying a TCP connection to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;www.google.com&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;on port 80. Finally we add some condition flags, we&amp;#39;ll come back to these flags later.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Using this new template results in only 2 filters whose conditions will match the metadata. Of course depending on your current configuration the number might be different. In this case 2 filters is much easier to understand than 65. If we format those two filter we see the following:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.14d3d8c28447d038e3573ae296e536607295fcde&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.10&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$fs | Format-FwFilter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : Default Outbound&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 07ba2a96-0364-4759-966d-155007bde926&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 67989&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: Default Outbound&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_CONNECT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_FIREWALL&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 9223372036854783936&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ORIGINAL_PROFILE_ID Equal &amp;nbsp; &amp;nbsp; Public &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_CURRENT_PROFILE_ID &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; Public&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : Default Outbound&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 36da9a47-b57d-434e-9345-0e36809e3f6a&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 67993&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: Default Outbound&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_CONNECT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_FIREWALL&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 3458764513820540928&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Both of the two filters permit the connection and based on the name they&amp;#39;re the default backstop when no other filters match. It&amp;#39;s possible to configure each network profile with different default backstops. In this case the default is to permit outbound traffic. We have two of them because both match all the metadata we provided, although if we&amp;#39;d specified a profile other than &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Public &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;then we&amp;#39;d only get a single filter.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Can we prove that this is the filter which matches a TCP connection? Fortunately we can: WFP supports gathering network events related to the firewall. An event includes the filter which permitted or denied the network request, and we can then compare it to our two filters to see if one of them matched. You can use the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Get-FwNetEvent&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;command to read the current circular buffer of events.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.fd84f43785a2f731e158c79bb81d95af29cb6154&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.11&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;Set-FwEngineOption -NetEventMatchAnyKeywords ClassifyAllow&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$s = [System.Net.Sockets.TcpClient]::new($addr.IPAddress, 80)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Set-FwEngineOption -NetEventMatchAnyKeywords None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$ev_temp = New-FwNetEventTemplate -Condition $template.Conditions&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $ev_temp -NetEventType ClassifyAllow&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwNetEvent -Template $ev_temp | Format-List&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;FilterId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: &lt;/span&gt;&lt;span class=&quot;c0 c36&quot;&gt;67989&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;LayerId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 48&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;ReauthReason &amp;nbsp; &amp;nbsp;: 0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;OriginalProfile : Public&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;CurrentProfile &amp;nbsp;: Public&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;MsFwpDirection &amp;nbsp;: 0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;IsLoopback &amp;nbsp; &amp;nbsp; &amp;nbsp;: False&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Type &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: ClassifyAllow&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : IpProtocolSet, LocalAddrSet, RemoteAddrSet, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Timestamp &amp;nbsp; &amp;nbsp; &amp;nbsp; : 8/5/2021 11:24:41 AM&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;IPProtocol &amp;nbsp; &amp;nbsp; &amp;nbsp;: Tcp&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;LocalEndpoint &amp;nbsp; : 10.0.0.101:63046&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;RemoteEndpoint &amp;nbsp;: 142.250.72.196:80&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;ScopeId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;AppId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : \device\harddiskvolume3\windows\system32\wind...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;UserId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: S-1-5-21-4266194842-3460360287-487498758-1103&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;AddressFamily &amp;nbsp; : Inet&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;PackageSid &amp;nbsp; &amp;nbsp; &amp;nbsp;: S-1-0-0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;First we enable the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;ClassifyAllow &lt;/span&gt;&lt;span&gt;event, which is generated when a firewall event is permitted. By default only firewall blocks are recorded using the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;ClassifyDrop &lt;/span&gt;&lt;span&gt;event to avoid filling the small network event log with too much data. Next we make a connection to the Google web server we queried earlier to generate an event. We then disable the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;ClassifyAllow &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;events again to reduce the risk we&amp;#39;ll lose the event.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Next we can query for the current stored events using &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Get-FwNetEvent&lt;/span&gt;&lt;span&gt;. To limit the network events returned to us we can specify a template in a similar way to when we queried for filters. In this case we create a new template using the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;New-FwNetEventTemplate&lt;/span&gt;&lt;span&gt;&amp;nbsp;command and copy the existing conditions from our filter template. We then add a condition to match on only &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;ClassifyAllow &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;events.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Formatting the results we can see the network connection event to TCP port 80. Crucially if you compare the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FilterId &lt;/span&gt;&lt;span&gt;value to the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Id &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;fields in the two enumerated filters we match the first filter. This gives us confidence that we have a basic understanding of how the filtering works. Let&amp;#39;s move on to running some tests to determine how the AppContainer network restrictions are implemented through WFP.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Worth noting at this point that because the network event buffer can be small, of the order of 30-40 events depending on load, it&amp;#39;s possible on a busy server that events might be lost before you query for them. You can get a real-time trace of events by using the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Start-FwNetEventListener&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;command to avoid losing events.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c26&quot; id=&quot;h.o4gwdt98hsge&quot;&gt;&lt;span class=&quot;c25&quot;&gt;Callout Drivers&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;As mentioned a developer can implement their own custom functionality to inspect and modify network traffic. This functionality is used by various different products, ranging from AV to scan your network traffic for badness to NMAP&amp;#39;s NPCAP &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://github.com/nmap/npcap/blob/master/packetWin7/npf/npf/Loopback.c&quot;&gt;capturing loopback traffic&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;To set up a callout the developer needs to do two things. First they need to register its callback functions for the callout using the &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fwpsk/nf-fwpsk-fwpscalloutregister2&quot;&gt;FwpmCalloutRegister&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API in the &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/network/roadmap-for-developing-wfp-callout-drivers&quot;&gt;kernel driver&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Second they need to create a filter to use the callout by specifying the &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fwpmtypes/ns-fwpmtypes-fwpm_filter0&quot;&gt;providerContextKey&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;GUID and one of the action types which invoke a callout.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;You can query the list of registered callouts using the &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fwpmu/nf-fwpmu-fwpmcalloutenum0&quot;&gt;FwpmCalloutEnum0&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API in user-mode. I expose this API through the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Get-FwCallout&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;command.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.2396b12a8028cda722ae1b6b81be45210a76e4c9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.12&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwCallout | Sort CalloutId | Select CalloutId, KeyName&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;CalloutId KeyName&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;--------- -------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1 FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2 FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V6&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3 FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 4 FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V6&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 5 FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 6 FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V6&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The above output shows the callouts listed by their callout ID numbers. &lt;/span&gt;&lt;span&gt;The ID number is key&lt;/span&gt;&lt;span&gt;&amp;nbsp;to finding the callback functions in the kernel. &lt;/span&gt;&lt;span&gt;There doesn&amp;#39;t seem to be a way of enumerating the addresses of callout functions directly (at least from user mode). &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://codemachine.com/articles/find_wfp_callouts.html&quot;&gt;This article&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;shows a basic approach to extract the callback functions using a kernel debugger, although it&amp;#39;s a little out of date.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The NETIO driver stores all registered callbacks in a large array, the index being the callout ID. If you want to find a specific callout then find the base of the array using the description in the article then just calculate the offset based on a single callout structure and the index. For example on Windows 10 21H1 x64 the following command will dump a callout&amp;#39;s classify callback function. Replace N with the callout ID, the magic numbers 198 and 50 are the offset into the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;gWfpGlobal &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;global data table and the size of a callout entry which you can discover through analyzing the code.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.f1b35794a1a1f1389c2e1ccd4bbd950f2fba28f2&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.13&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c40&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c18&quot;&gt;0: kd&amp;gt; ln poi(poi(poi(NETIO!gWfpGlobal)+198)+(50*N)+10)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;If you&amp;#39;re in kernel mode there&amp;#39;s an undocumented &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;KfdGetRefCallout&lt;/span&gt;&lt;span&gt;&amp;nbsp;function (and a corresponding &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;KfdDeRefCallout&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;to decrement the reference) exported by NETIO which will return a pointer to the internal callout structure based on the ID avoiding the need to extract the offsets from disassembly. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c26&quot; id=&quot;h.uaafke7sw96h&quot;&gt;&lt;span class=&quot;c25&quot;&gt;AppContainer Network Restrictions&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The basics of accessing the network from an AppContainer sandbox is documented by Microsoft. Specifically the lowbox token used for the sandbox needs to have one or more &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/uwp/packaging/app-capability-declarations&quot;&gt;capabilities&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;enabled to grant access to the network. The three capabilities are:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&quot;padding: 0;&quot; class=&quot;c17 lst-kix_a73fbzj8zqo2-0 start&quot;&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;internetClient - Grants client access to the Internet&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;internetClientServer - Grants client and server access to the Internet&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c4 c29 li-bullet-0&quot;&gt;&lt;span class=&quot;c2&quot;&gt;privateNetworkClientServer - Grants client and server access to local private networks.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;c33&quot; id=&quot;h.bfr60co2drv2&quot;&gt;&lt;span class=&quot;c16&quot;&gt;Client Capabilities&lt;/span&gt;&lt;/h3&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Pretty much all Windows Store applications are granted the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClient &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;capability as accessing the Internet is a thing these days. Even the built-in calculator has this capability, presumably so you can fill in feedback on how awesome a calculator it is.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;/p&gt;

 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c7 c34&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhXeEy36ANfMO26FR3xri1W3D4E7FWau7UbdCWfgwRSEeC7fRTNzP-LEhxN3kj1NuoVoKk4OFQAbTfryVRAI--qILEx1jsL7H6DqdjjNEn-zf7SN_x6lKH49rPKFrsWN5K-DbusILAYUjALq-h_kZbtrtmPMDlptlPP9IKvirCKzbL4yoe6dd6mz8Z6/s789/calculator.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhXeEy36ANfMO26FR3xri1W3D4E7FWau7UbdCWfgwRSEeC7fRTNzP-LEhxN3kj1NuoVoKk4OFQAbTfryVRAI--qILEx1jsL7H6DqdjjNEn-zf7SN_x6lKH49rPKFrsWN5K-DbusILAYUjALq-h_kZbtrtmPMDlptlPP9IKvirCKzbL4yoe6dd6mz8Z6/s789/calculator.png&quot; border=&quot;0&quot; alt=&quot;Image showing the list of capabilities granted to Windows calculator application showing the &amp;ldquo;Your Internet Connection&amp;rdquo; capability is granted.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c34 c7&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;However, this shouldn&amp;#39;t grant the ability to act as a network server, for that you need the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClientServer&lt;/span&gt;&lt;span&gt;&amp;nbsp;capability. Note that Windows defaults to blocking incoming connections, so just because you have the server capability still doesn&amp;#39;t ensure you can receive network connections. The final capability is &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;privateNetworkClientServer&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;which grants access to private networks as both a client and a server. What is the internet and what is private isn&amp;#39;t made immediately clear, hopefully we&amp;#39;ll find out from inspecting the firewall configuration.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.726560f1dcc0a391c92acef89ed310e6111d9ba1&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.14&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$token = Get-NtToken -LowBox -PackageSid TEST&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$addr = Resolve-DnsName &amp;quot;www.google.com&amp;quot; -Type A&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$sock = Invoke-NtToken $token {&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&amp;gt;&amp;gt; &amp;nbsp; [System.Net.Sockets.TcpClient]::new($addr.IPAddress, 80)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&amp;gt;&amp;gt; }&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c20&quot;&gt;Exception calling &amp;quot;.ctor&amp;quot; with &amp;quot;2&amp;quot; argument(s): &amp;quot;An attempt was made to access a socket in a way forbidden by its access permissions 216.58.194.164:80&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c20&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$template = New-FwNetEventTemplate&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $template -IPAddress $addr.IPAddress -Port 80&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $template -NetEventType ClassifyDrop&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwNetEvent -Template $template | Format-List&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FilterId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 71079&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;LayerId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 48&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;ReauthReason &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -Id 71079 | Format-FwFilter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : Block Outbound Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Block&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: fb8f5cab-1a15-4616-b63f-4a0d89e527f8&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 71079&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: Block Outbound Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_CONNECT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 274877906944&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID NotEqual &amp;nbsp;NULL SID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;In the above output we first create a lowbox token for testing the AppContainer access. In this example we don&amp;#39;t provide any capabilities for the token so we&amp;#39;re expecting the network connection should fail. Next we connect a &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.tcpclient?view=net-5.0&quot;&gt;TcpClient&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;socket while impersonating the lowbox token, and the connection is immediately blocked with an error. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;We then get the network event corresponding to the connection request to see what filter blocked the connection. Formatting the filter from the network event we find the &amp;ldquo;Block Outbound Default Rule&amp;rdquo;. This will block any AppContainer network connection, based on the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;condition which hasn&amp;#39;t been permitted by higher priority firewall filters. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Like with the &amp;ldquo;Default Outbound&amp;rdquo; filter we saw earlier, this is a backstop if nothing else matches. Unlike that earlier filter the default is to block rather than permit the connection. Another thing to note is the sublayer name. For &amp;ldquo;Block Outbound Default Rule&amp;rdquo; it&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is used for built-in filters which aren&amp;#39;t directly visible from the Defender firewall configuration. Whereas &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;MICROSOFT_DEFENDER_SUBLAYER_FIREWALL&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;is used for &amp;ldquo;Default Outbound&amp;rdquo;, which is a lower priority sublayer (based on its weight) and thus would never be evaluated due to the higher priority block.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Okay, we know how connections are blocked. Therefore there must be a higher priority filter which permits the connection within the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;span&gt;&amp;nbsp;sublayer. We could go back to manual inspection, but we might as well just see what the network event shows as the matching filter when we grant the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClient&lt;/span&gt;&lt;span&gt;&amp;nbsp;capability.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.11ccdcf255abcf42d021e19361ea96cb417403f3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.15&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$cap = Get-NtSid -KnownSid CapabilityInternetClient&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$token = Get-NtToken -LowBox -PackageSid TEST -CapabilitySid $cap&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Set-FwEngineOption -NetEventMatchAnyKeywords ClassifyAllow&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$sock = Invoke-NtToken $token {&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&amp;gt;&amp;gt; &amp;nbsp; [System.Net.Sockets.TcpClient]::new($addr.IPAddress, 80)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;gt;&amp;gt; }&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Set-FwEngineOption -NetEventMatchAnyKeywords None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;$template = New-FwNetEventTemplate&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $template -IPAddress $addr.IPAddress -Port 80&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-FwCondition $template -NetEventType ClassifyAllow&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwNetEvent -Template $template | Format-List&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FilterId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 71075&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;LayerId &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 48&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;ReauthReason &amp;nbsp; &amp;nbsp;: 0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -Id 71075 | Format-FwFilter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : InternetClient Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 406568a7-a949-410d-adbb-2642ec3e8653&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 71075&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: InternetClient Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_CONNECT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 412316868544&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID &amp;nbsp; &amp;nbsp; &amp;nbsp;NotEqual &amp;nbsp;NULL SID&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS &amp;nbsp; Range &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Low: 0.0.0.0 High: 255.255.255.255&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ORIGINAL_PROFILE_ID Equal &amp;nbsp; &amp;nbsp; Public&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_CURRENT_PROFILE_ID &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; Public&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_USER_ID &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Equal &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;O:LSD:(A;;CC;;;S-1-15-3-1)(A;;CC;;;WD)(A;;CC;;;AN)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;In this example we create a new token using the same package SID but with &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClient &lt;/span&gt;&lt;span&gt;capability. When we connect the socket we now no longer get an error and the connection is permitted. Checking for the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;ClassifyAllow &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;event we find the &amp;ldquo;InternetClient Default Rule&amp;rdquo; filter matched the connection.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Looking at the conditions we can see that it will only match if the socket creator is in an AppContainer based on the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;condition. The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_USER_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;also ensures that it will only match if the creator has the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetCapability &lt;/span&gt;&lt;span&gt;capability &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;which is S-1-15-3-1 in the SDDL format. This filter is what&amp;#39;s granting access to the network.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;One odd thing is in the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS&lt;/span&gt;&lt;span&gt;&amp;nbsp;condition. It seems to match on all possible IPv4 addresses. Shouldn&amp;#39;t this exclude network addresses on our local &amp;ldquo;private&amp;rdquo; network? At the very least you&amp;#39;d assume this would block the reserved IP address ranges from &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://datatracker.ietf.org/doc/html/rfc1918&quot;&gt;RFC1918&lt;/a&gt;&lt;/span&gt;&lt;span&gt;? The key to understanding this is the profile ID conditions, which are both set to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Public&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. The computer I&amp;#39;m running these commands on has a single network interface configured to the public profile as shown:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c7&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPvmoJTbFhG74JFB0ezY0mbIzZBczuwcx8izCO9EmbCg7WgVdJsBGTPXQGEYHkuhjBmcV26dkB86JLes5iXRML_cJl5Rbn3K0tqCGEzlvY9nIqi6admKcDERezqjrGsc6wVS7tUYbyBWdHvwCC_CR4Bmccy0StC8ZYwoyJXJJ7dpuGPnooNvgCAPRN/s724/profile.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPvmoJTbFhG74JFB0ezY0mbIzZBczuwcx8izCO9EmbCg7WgVdJsBGTPXQGEYHkuhjBmcV26dkB86JLes5iXRML_cJl5Rbn3K0tqCGEzlvY9nIqi6admKcDERezqjrGsc6wVS7tUYbyBWdHvwCC_CR4Bmccy0StC8ZYwoyJXJJ7dpuGPnooNvgCAPRN/s724/profile.png&quot; border=&quot;0&quot; alt=&quot;Image showing the option of either Public or Private network profiles.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Therefore the firewall is configured to treat all network addresses in the same context, granting the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClient &lt;/span&gt;&lt;span&gt;capability access to any address including your local &amp;ldquo;private&amp;rdquo; network. This might be unexpected. In fact if you enumerate all the filters on the machine you won&amp;#39;t find any filter to match the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;privateNetworkClientServer &lt;/span&gt;&lt;span&gt;capability and using the capability will not grant access to any network resource.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;If you switch the network profile to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Private&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;, you&amp;#39;ll find there&amp;#39;s now three &amp;ldquo;InternetClient Default Rule&amp;rdquo; filters (note on Windows 11 there will only be one as it uses the OR&amp;#39;ing feature of conditions as mentioned above to merge the three rules together).&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e09797f750872be5db7da696cd4a2a5f50a66242&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.16&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : InternetClient Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID &amp;nbsp; &amp;nbsp; &amp;nbsp;NotEqual &amp;nbsp;NULL SID&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS &amp;nbsp; Range &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Low: 0.0.0.0 High: 10.0.0.0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ORIGINAL_PROFILE_ID Equal &amp;nbsp; &amp;nbsp; Private&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_CURRENT_PROFILE_ID &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; Private&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : InternetClient Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID &amp;nbsp; &amp;nbsp; &amp;nbsp;NotEqual &amp;nbsp;NULL SID&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS &amp;nbsp; Range &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Low: 239.255.255.255 High: 255.255.255.255&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : InternetClient Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID &amp;nbsp; &amp;nbsp; &amp;nbsp;NotEqual &amp;nbsp;NULL SID&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS &amp;nbsp; Range &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Low: 10.255.255.255 High: 224.0.0.0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;As you can see in the first filter, it covers addresses 0.0.0.0 to 10.0.0.0. The machine&amp;#39;s private network is 10.0.0.0/8. The profile IDs are also now set to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Private&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. The other two exclude the entire 10.0.0.0/8 network as well as the multicast group addresses from 224.0.0.0 to 240.0.0.0. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The profile ID conditions are important here if you have more than one network interface. For example if you have two, one &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Public &lt;/span&gt;&lt;span&gt;and one &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Private,&lt;/span&gt;&lt;span&gt;&amp;nbsp;you would get a filter for the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Public &lt;/span&gt;&lt;span&gt;network covering the entire IP address range and the three &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Private &lt;/span&gt;&lt;span&gt;ones excluding the private network addresses. The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Public &lt;/span&gt;&lt;span&gt;filter won&amp;#39;t match if the network traffic is being sent from the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Private &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;network interface preventing the application without the right capability from accessing the private network.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Speaking of which, we can also now identify the filter which will match the private network capability. There&amp;#39;s two, to cover the private network range and the multicast range. We&amp;#39;ll just show one of them.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.a018aad6f03aa23b66eb2eed774b31b3af479be6&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.17&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : PrivateNetwork Outbound Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: e0194c63-c9e4-42a5-bbd4-06d90532d5e6&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 71640&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: PrivateNetwork Outbound Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_CONNECT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 36029209335832512&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID &amp;nbsp; &amp;nbsp; &amp;nbsp;NotEqual &amp;nbsp;NULL SID&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS &amp;nbsp; Range &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Low: 10.0.0.0 High: 10.255.255.255&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ORIGINAL_PROFILE_ID Equal &amp;nbsp; &amp;nbsp; Private&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_CURRENT_PROFILE_ID &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; Private&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_USER_ID &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Equal &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;O:LSD:(A;;CC;;;S-1-15-3-3)(A;;CC;;;WD)(A;;CC;;;AN)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;We can see in the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_USER_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;condition that the connection would be permitted if the creator has the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;privateNetworkClientServer &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;capability, which is S-1-15-3-3 in SDDL. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;It is slightly ironic that the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Public &lt;/span&gt;&lt;span&gt;network profile is probably recommended even if you&amp;#39;re on your own private network (Windows 11 even makes the recommendation explicit as shown below) in that it should reduce the exposed attack surface of the device from others on the network. However if an AppContainer application with the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClient &lt;/span&gt;&lt;span&gt;capability could be compromised it opens up your private network to access where the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Private &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;profile wouldn&amp;#39;t. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;/p&gt;


 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c7&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj6HZRf6o3-m-cyhZsOgNVROEGPDnUi8JQs6bc4ZQhwEM7kvMby2UDr9tA0buQ8jjPQw02T-NtmK6RRX3B4PgwFwOVbAkaOMF8SnE3QsZy8SQNEcU6tcZwsZPuycOSNz_6ZNPIYcXj-MLIInTA0tv94rrsChP6D7bMs1lw4IvXfJIesMARzegEAqQ11/s782/public_network.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj6HZRf6o3-m-cyhZsOgNVROEGPDnUi8JQs6bc4ZQhwEM7kvMby2UDr9tA0buQ8jjPQw02T-NtmK6RRX3B4PgwFwOVbAkaOMF8SnE3QsZy8SQNEcU6tcZwsZPuycOSNz_6ZNPIYcXj-MLIInTA0tv94rrsChP6D7bMs1lw4IvXfJIesMARzegEAqQ11/s782/public_network.png&quot; border=&quot;0&quot; alt=&quot;Image showing the option of either Public or Private network profiles. This is from Windows 11 where Public is marked as recommended.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c7&quot;&gt;Aside: one thing you might wonder, if your network interface is marked as Private and the AppContainer application only has the internetClient capability, what happens if your DNS server is your local router at 10.0.0.1? Wouldn&amp;#39;t the application be blocked from making DNS requests? Windows has a DNS client service which typically is always running. This service is what usually makes DNS requests on behalf of applications as it allows the results to be cached. The RPC server which the service exposes allows callers which have any of the three network capabilities to connect to it and make DNS requests, avoiding the problem. Of course if the service is disabled in-process DNS lookups will start to be used, which could result in weird name resolving issues depending on your network configuration.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;We can now understand how &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2207&quot;&gt;issue 2207&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;I reported to Microsoft bypasses the capability requirements. If in the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;span&gt;&amp;nbsp;sublayer for an outbound connection there are &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Permit&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;filters which are evaluated before the &amp;ldquo;Block Outbound Default Rule&amp;rdquo; filter then it might be possible to avoid needing capabilities. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.950a47990d20f68e9c5415069eb009e1cf2ed411&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.18&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -AleLayer ConnectV4 -Sorted | &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;Where-Object SubLayerKeyName -eq MICROSOFT_DEFENDER_SUBLAYER_WSH |&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;Select-Object ActionType, Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c35&quot;&gt;Permit &amp;nbsp; &amp;nbsp; Allow outbound TCP traffic from dmcertinst.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Permit &amp;nbsp; &amp;nbsp; Allow outbound TCP traffic from omadmclient.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Permit &amp;nbsp; &amp;nbsp; Allow outbound TCP traffic from deviceenroller.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Permit &amp;nbsp; &amp;nbsp; InternetClient Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Permit &amp;nbsp; &amp;nbsp; InternetClientServer Outbound Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Block &amp;nbsp; &amp;nbsp; &amp;nbsp;Block all outbound traffic from SearchFilterHost&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Block &amp;nbsp; &amp;nbsp; &amp;nbsp;Block outbound traffic from dmcertinst.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Block &amp;nbsp; &amp;nbsp; &amp;nbsp;Block outbound traffic from omadmclient.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Block &amp;nbsp; &amp;nbsp; &amp;nbsp;Block outbound traffic from deviceenroller.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c31&quot;&gt;Block &amp;nbsp; &amp;nbsp; &amp;nbsp;Block Outbound Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Block &amp;nbsp; &amp;nbsp; &amp;nbsp;WSH Default Outbound Block&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -Id 72753 | Format-FwFilter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : Allow outbound TCP traffic from dmcertinst.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 5237f74f-6346-4038-a48d-4b779f862e65&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 72753&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_CONNECT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: Indexed&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 422487342972928&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_APP_ID &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;\device\harddiskvolume3\windows\system32\dmcertinst.exe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_PROTOCOL Equal &amp;nbsp; &amp;nbsp; Tcp&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;As we can see in the output there are quite a few &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Permit &lt;/span&gt;&lt;span&gt;filters before the &amp;ldquo;Block Outbound Default Rule&amp;rdquo; filter, and of course I&amp;#39;ve also cropped the list to make it smaller. If we inspect the &amp;ldquo;Allow outbound TCP traffic from dmcertinst.exe&amp;rdquo; filter we find that it only matches on the App ID and the IP protocol. As it doesn&amp;#39;t have an AppContainer specific checks, then any sockets created in the context of a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dmcertinst&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;process would be permitted to make TCP connections. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;Once the &amp;ldquo;Allow outbound TCP traffic from dmcertinst.exe&amp;rdquo; filter matches the sublayer evaluation is terminated and it never reaches the &amp;ldquo;Block Outbound Default Rule&amp;rdquo; filter. This is fairly trivial to exploit, as long as the AppContainer process is allowed to spawn new processes, which is allowed by default.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c33&quot; id=&quot;h.mkob28po89sq&quot;&gt;&lt;span class=&quot;c16&quot;&gt;Server Capabilities&lt;/span&gt;&lt;/h3&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;What about the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClientServer&lt;/span&gt;&lt;span&gt;&amp;nbsp;capability, how does that function? First, there&amp;#39;s a second set of outbound filters to cover the capability with the same network addresses as the base &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClient &lt;/span&gt;&lt;span&gt;capability. The only difference is the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CONDITION_ALE_USER_ID&lt;/span&gt;&lt;span&gt;&amp;nbsp;condition checks for the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClientServer (S-1-15-3-2)&lt;/span&gt;&lt;span&gt;&amp;nbsp;capability instead. For inbound connections the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;layer contains the filter.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.5c5fd583c9a660791b58c690297988f818b902ce&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.19&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -AleLayer RecvAcceptV4 -Sorted | &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;Where-Object Name -Match InternetClientServer | &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;Format-FwFilter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : InternetClientServer Inbound Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 45c5f1d5-6ad2-4a2a-a605-4cab7d4fb257&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 72470&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: InternetClientServer Inbound Default Rule&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 824633728960&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID &amp;nbsp; &amp;nbsp; &amp;nbsp;NotEqual &amp;nbsp;NULL SID&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_IP_REMOTE_ADDRESS &amp;nbsp; Range &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Low: 0.0.0.0 High: 255.255.255.255&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ORIGINAL_PROFILE_ID Equal &amp;nbsp; &amp;nbsp; Public&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_CURRENT_PROFILE_ID &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; Public&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_USER_ID &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Equal &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;O:LSD:(A;;CC;;;S-1-15-3-2)(A;;CC;;;WD)(A;;CC;;;AN)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The example shows the filter for a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Public &lt;/span&gt;&lt;span&gt;network interface granting an AppContainer application the ability to receive network connections. However, this will only be permitted if the socket creator has &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClientServer &lt;/span&gt;&lt;span&gt;capability. Note, there would be similar rules for the private network if the network interface is marked as &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Private&lt;/span&gt;&lt;span&gt;&amp;nbsp;but only granting access with the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;privateNetworkClientServer &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;capability. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;As mentioned earlier just because an application has one of these capabilities doesn&amp;#39;t mean it can receive network connections. The default configuration will block the inbound connection. &amp;nbsp;However, when an &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/uwp/&quot;&gt;UWP&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;application is installed and requires one of the two server capabilities, the AppX installer service registers the AppContainer profile with the Windows Defender Firewall service. This adds a filter to permit the AppContainer package to receive inbound connections. For example the following is for the Microsoft Photos application, which is typically installed by default:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.258a3abd87d3e98a3935eba5711ee2ca79c86d64&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.20&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -Id 68299 | &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;Format-FwFilter -FormatSecurityDescriptor -Summary&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : @{Microsoft.Windows.Photos_2021...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: 7b51c091-ed5f-42c7-a2b2-ce70d777cdea&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 68299&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: @{Microsoft.Windows.Photos_2021...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_FIREWALL&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: Indexed&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 10376294366095343616&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_PACKAGE_ID Equal &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;microsoft.windows.photos_8wekyb3d8bbwe&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_USER_ID &amp;nbsp; &amp;nbsp;Equal &amp;nbsp; &amp;nbsp; O:SYG:SYD:(A;;CCRC;;;S-1-5-21-3563698930-1433966124...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;lt;Owner&amp;gt; (Defaulted) : NT AUTHORITY\SYSTEM&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;lt;Group&amp;gt; (Defaulted) : NT AUTHORITY\SYSTEM&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;lt;DACL&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;DOMAIN\alice: (Allowed)(None)(Full Access)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES:...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;APPLICATION PACKAGE AUTHORITY\Your Internet connection:...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;APPLICATION PACKAGE AUTHORITY\Your Internet connection,...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;APPLICATION PACKAGE AUTHORITY\Your home or work networks:...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;NAMED CAPABILITIES\Proximity: (Allowed)(None)(Full Access)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The filter only checks that the package SID matches and that the socket creator is a specific user in an AppContainer. Note this rule doesn&amp;#39;t do any checking on the executable file, remote IP address, port or profile ID. Once an installed AppContainer application is granted a server capability it can act as a server through the firewall for any traffic type or port.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;A normal application could abuse this configuration to run a network service without needing the administrator access normally required to grant the executable access. All you&amp;#39;d need to do is create an arbitrary AppContainer process in the permitted package and grant it the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;internetClientServer &lt;/span&gt;&lt;span&gt;and/or the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;privateNetworkClientServer &lt;/span&gt;&lt;span&gt;capabilities. If there isn&amp;#39;t an application installed which has the appropriate firewall rules a non-administrator user can install any signed application with the appropriate capabilities to add the firewall rules. While this clearly circumvents the expected administrator requirements for new listening processes it&amp;#39;s presumably by design.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c26&quot; id=&quot;h.fpsp45283a10&quot;&gt;&lt;span class=&quot;c25&quot;&gt;Localhost Access&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;One of the specific restrictions imposed on AppContainer applications is blocking access to localhost. The purpose of this is it makes it more difficult to exploit local network services which might not correctly handle AppContainer callers creating a sandbox escape. Let&amp;#39;s test the behavior out and try to connect to a localhost service.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e4db541c042a9a9e3e2091fa0b944a31717e8ea0&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.21&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$token = Get-NtToken -LowBox -PackageSid &amp;quot;LOOPBACK&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Invoke-NtToken $token { &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&amp;nbsp; &amp;nbsp; [System.Net.Sockets.TcpClient]::new(&amp;quot;127.0.0.1&amp;quot;, 445) &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c20&quot;&gt;Exception calling &amp;quot;.ctor&amp;quot; with &amp;quot;2&amp;quot; argument(s): &amp;quot;A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c20&quot;&gt;connected host has failed to respond 127.0.0.1:445&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;If you compare the error to when we tried to connect to an internet address without the appropriate capability you&amp;#39;ll notice it&amp;#39;s different. When we connected to the internet we got an immediate error indicating that access isn&amp;#39;t permitted. However, for localhost we instead get a timeout error, which is preceded by multi-second delay. Why the difference? Getting the network event which corresponds to the connection and displaying the blocking filter shows something interesting.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.c7ae2cade8277de8b62135c0a3f94c9c9988256b&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.22&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -Id 69039 | &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c23&quot;&gt;Format-FwFilter -FormatSecurityDescriptor -Summary&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Block&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: a58394b7-379c-43ac-aa07-9b620559955e&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 69039&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: &lt;/span&gt;&lt;span class=&quot;c18 c37&quot;&gt;FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 18446744073709551614&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType &amp;nbsp; Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- &amp;nbsp; -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c35&quot;&gt;FWPM_CONDITION_FLAGS &amp;nbsp; &amp;nbsp; &amp;nbsp; FlagsAllSet IsLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_USER_ID Equal &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;O:LSD:(A;;CC;;;AC)(A;;CC;;;S-1-15-3-1)(A;;CC;;;S-1-15-3-2)...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;lt;Owner&amp;gt; : NT AUTHORITY\LOCAL SERVICE&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;lt;DACL&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;APPLICATION PACKAGE AUTHORITY\ALL APPLICATION PACKAGES...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;APPLICATION PACKAGE AUTHORITY\Your Internet connection...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;APPLICATION PACKAGE AUTHORITY\Your Internet connection, including...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;APPLICATION PACKAGE AUTHORITY\Your home or work networks...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;NAMED CAPABILITIES\Proximity: (Allowed)(None)(Match)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Everyone: (Allowed)(None)(Match)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;NT AUTHORITY\ANONYMOUS LOGON: (Allowed)(None)(Match)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;The blocking filter is not in the connect layer as you might expect, instead it&amp;#39;s in the receive/accept layer. This explains why we get a timeout rather than immediate failure: the &amp;ldquo;inbound&amp;rdquo; connection request is being dropped as per the default configuration. This means the TCP client waits for the response from the server, until it eventually hits the timeout limit.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The second interesting thing to note about the filter is it&amp;#39;s not based on an IP address such as 127.0.0.1. Instead it&amp;#39;s using a condition which checks for the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;IsLoopback &lt;/span&gt;&lt;span&gt;condition flag (&lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWP_CONDITION_FLAG_IS_LOOPBACK&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;in the SDK). This flag indicates that the connection is being made through the built-in loopback network, regardless of the destination address. Even if you access the public IP addresses for the local network interfaces the packets will still be routed through the loopback network and the condition flag will be set.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The user ID check is odd, in that the security descriptor matches either AppContainer or non-AppContainer processes. This is of course the point, if it didn&amp;#39;t match both then it wouldn&amp;#39;t block the connection. However, it&amp;#39;s not immediately clear what its actual purpose is if it just matches everything. In my opinion, it adds a risk that the filter will be ignored if the socket creator has disabled the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Everyone &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;group. &amp;nbsp;This condition was modified for supporting LPAC over Windows 8, so it&amp;#39;s presumably intentional.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;You might ask, if the filter would block any loopback connection regardless of whether it&amp;#39;s in an AppContainer, how do loopback connections work for normal applications? Wouldn&amp;#39;t this filter always match and block the connection? &amp;nbsp;Unsurprisingly there are some additional permit filters before the blocking filter as shown below. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.1840a16fe9f034fa60eca82083ef423c4fbf8a0b&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.23&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -AleLayer RecvAcceptV4 -Sorted | &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c23&quot;&gt;Where-Object Name -Match AppContainerLoopback | Format-FwFilter&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType &amp;nbsp; Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- &amp;nbsp; -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_FLAGS FlagsAllSet IsAppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType &amp;nbsp; Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- &amp;nbsp; -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_FLAGS FlagsAllSet IsReserved&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Action Type: Permit&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType &amp;nbsp; Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- &amp;nbsp; -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_FLAGS FlagsAllSet IsNonAppContainerLoopback&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The three filters shown above only check for different condition flags, and you can find documentation for the flags on &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/network/filtering-condition-flags&quot;&gt;MSDN&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Starting at the bottom we have a check for &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;IsNonAppContainerLoopback&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. This flag is set on a connection when the loopback connection is between non-AppContainer created sockets. This filter is what grants normal applications loopback access. It&amp;#39;s also why an application can listen on localhost even if it&amp;#39;s not granted access to receive connections from the network in the firewall configuration.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;In contrast the first filter checks for the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;IsAppContainerLoopback &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;flag. Based on the documentation and the name, you might assume this would allow any AppContainer to use loopback to any other. However, based on testing this flag is only set if the two AppContainers have the same package SID. This is presumably to allow an AppContainer to communicate with itself or other processes within its package through loopback sockets. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c2&quot;&gt;This flag is also, I suspect, the reason that connecting to a loopback socket is handled in the receive layer rather than the connect layer. Perhaps WFP can&amp;#39;t easily tell ahead of time whether both the connecting and receiving sockets will be in the same AppContainer package, so it delays resolving that until the connection has been received. This does lead to the unfortunate behavior that blocked loopback sockets timeout rather than fail immediately.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The final flag, &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;IsReserved&lt;/span&gt;&lt;span&gt;&amp;nbsp;is more curious. MSDN of course says this is &amp;ldquo;Reserved for future use.&amp;rdquo;, &lt;/span&gt;&lt;span&gt;and the future is now&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. Though checking back at the filters in Windows 8.1 also shows it being used, so if it was reserved it wasn&amp;#39;t for very long. The obvious conclusion is this flag is really a &amp;ldquo;Microsoft Reserved&amp;rdquo; flag, by that I mean it&amp;#39;s actually used but Microsoft is yet unwilling to publicly document it.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;What is it used for? AppContainers are supposed to be a capability based system, where you can just add new capabilities to grant additional privileges. It would make sense to have a loopback capability to grant access, which could be restricted to only being used for debugging purposes. However, it seems that loopback access was so beyond the pale for the designers that instead you can only grant access for debug purposes through an &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/netfw/nf-netfw-networkisolationsetappcontainerconfig&quot;&gt;administrator only API&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. Perhaps it&amp;#39;s related? &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.a9bbfabe6ecbaa461c5f8cded94710948469c9c2&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.24&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Add-AppModelLoopbackException -PackageSid &amp;quot;LOOPBACK&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;Get-FwFilter -AleLayer ConnectV4 | &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;Where-Object Name -Match AppContainerLoopback | &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c23&quot;&gt;Format-FwFilter -FormatSecurityDescriptor -Summary&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; : AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c24&quot;&gt;Action Type: CalloutInspection&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;: dfe34c0f-84ca-4af1-9d96-8bf1e8dac8c0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Id &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; : 54912247&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Description: AppContainerLoopback&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Layer &amp;nbsp; &amp;nbsp; &amp;nbsp;: FWPM_LAYER_ALE_AUTH_CONNECT_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Sub Layer &amp;nbsp;: MICROSOFT_DEFENDER_SUBLAYER_WSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Flags &amp;nbsp; &amp;nbsp; &amp;nbsp;: None&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Weight &amp;nbsp; &amp;nbsp; : 18446744073709551615&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c35&quot;&gt;Callout Key: FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V4&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Conditions :&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FieldKeyName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MatchType Value&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; --------- -----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;FWPM_CONDITION_ALE_USER_ID Equal &amp;nbsp; &amp;nbsp; D:(A;NP;CC;;;WD)(A;NP;CC;;;AN)(A;NP;CC;;;S-1-15-3-1861862962-...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1 c21&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;lt;DACL&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;Everyone: (Allowed)(NoPropagateInherit)(Match)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;NT AUTHORITY\ANONYMOUS LOGON: (Allowed)(NoPropagateInherit)(Match)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c39&quot;&gt;PACKAGE CAPABILITY\LOOPBACK: (Allowed)(NoPropagateInherit)(Match)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c39&quot;&gt;LOOPBACK: (Allowed)(NoPropagateInherit)(Match)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;First we add a loopback exemption for the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;LOOPBACK&lt;/span&gt;&lt;span&gt;&amp;nbsp;package name. We then look for the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;AppContainerLoopback &lt;/span&gt;&lt;span&gt;filters in the connect layer. The one we&amp;#39;re interested in is shown. The first thing to note is that the action type is set to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;CalloutInspection&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;. This might seem slightly surprising, you would expect it&amp;#39;d do something more than inspecting the traffic.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The name of the callout, &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V4&lt;/span&gt;&lt;span&gt;&amp;nbsp;gives the game away. The fact that it has &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;RESERVED&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the name can&amp;#39;t be a coincidence. This callout is one implemented internally by Windows in the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;TCPIP!WfpAlepDbgLowboxSetByPolicyLoopbackCalloutClassify&lt;/span&gt;&lt;span&gt;&amp;nbsp;function. This name now loses all mystery and pretty much explains what its purpose is, which is to configure the connection so that the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;IsReserved &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;flag is set when the receive layer processes it.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;The user ID here is equally important. When you register the loopback exemption you only specify the package SID, which is shown in the output as the last &amp;ldquo;LOOPBACK&amp;rdquo; line. Therefore you&amp;#39;d assume you&amp;#39;d need to always run your code within that package. However, the penultimate line is &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;&amp;ldquo;PACKAGE CAPABILITY\LOOPBACK&amp;rdquo;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;which is my module&amp;#39;s way of telling you that this is the package SID, but converted to a capability SID. This is basically changing the first relative identifier in the SID from 2 to 3.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;We can use this behavior to simulate a generic loopback exemption capability. It allows you to create an AppContainer sandboxed process which has access to localhost which isn&amp;#39;t restricted to a particular package. This would be useful for applications such as Chrome to implement a network facing sandboxed process and would work from Windows 8 through &lt;/span&gt;&lt;span&gt;11.&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;. Unfortunately it&amp;#39;s not officially documented so can&amp;#39;t be relied upon. An example demonstrating the use of the capability is shown below.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.c5c3912b5466f474ed23b7f597087336a3689bd7&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.25&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c10&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c12&quot;&gt;&lt;td class=&quot;c19&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;$cap = Get-NtSid -PackageSid &amp;quot;LOOPBACK&amp;quot; -AsCapability&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$token = Get-NtToken -LowBox -PackageSid &amp;quot;TEST&amp;quot; -cap $cap&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$sock = Invoke-NtToken $token { &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;&amp;nbsp; &amp;nbsp; [System.Net.Sockets.TcpClient]::new(&amp;quot;127.0.0.1&amp;quot;, 445) &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c8&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c14&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;$sock.Client.RemoteEndPoint&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;AddressFamily Address &amp;nbsp; Port&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;------------- ------- &amp;nbsp; ----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c1&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;InterNetwork 127.0.0.1 &amp;nbsp;445&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=&quot;c26&quot; id=&quot;h.83prefam1lot&quot;&gt;&lt;span class=&quot;c25&quot;&gt;Conclusions&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;That wraps up my quick overview of how AppContainer network restrictions are implemented using the Windows Firewall. I covered the basics of the Windows Firewall as well as covered some of my tooling I wrote to do analysis of the configuration. &lt;/span&gt;&lt;span&gt;This background information allowed me to explain why the&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;&lt;a class=&quot;c111&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2207&quot;&gt;&amp;nbsp;issue&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;I reported to Microsoft worked. &lt;/span&gt;&lt;span&gt;I also pointed out some of the quirks of the implementation which you might find of interest. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span&gt;Having a good understanding of how a security feature works is an important step towards finding security issues. I hope that by providing both the background and tooling other researchers can also find similar issues and try and get them fixed.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://googleprojectzero.blogspot.com/feeds/1215474650509337553/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://googleprojectzero.blogspot.com/2021/08/understanding-network-access-windows-app.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/1215474650509337553'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/1215474650509337553'/><link rel='alternate' type='text/html' href='https://googleprojectzero.blogspot.com/2021/08/understanding-network-access-windows-app.html' title='Understanding Network Access in Windows AppContainers'/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/blank.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgdrhKLVqgZvHWYXMuk3OGSBiicJM0CjhHiN5lpecetctCFzLfbk3iJhpzupig9KOC87QvqyxJOiGgtpCl5XPthk-YM7i57afRn_n2IgmwyB-5-Txd2lcVLmGTE3KXgn2Px9xr2DH7rXOUZuQ-E8uhWl6n_3iIDX_XNiq5GvOTLMHQ9cLvHM9M3IqdO/s72-c/Firewall%20Arch.jpg" height="72" width="72"/><thr:total>0</thr:total></entry>