<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><entry xmlns='http://www.w3.org/2005/Atom' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-4838136820032157985.post-2485989426162409270</id><published>2022-06-14T09:00:00.000-07:00</published><updated>2022-06-14T09:00:24.588-07:00</updated><title type='text'>An Autopsy on a Zombie In-the-Wild 0-day</title><content type='html'>&lt;style type=&quot;text/css&quot;&gt;@import url(&#39;https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw&#39;);.lst-kix_vnkr79j0brd5-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_vnkr79j0brd5-8&gt;li:before{content:&quot;\0025a0  &quot;}ol.lst-kix_rpn0sahs9m0k-5.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-5 0}.lst-kix_rpn0sahs9m0k-1&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-1}.lst-kix_vnkr79j0brd5-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_vnkr79j0brd5-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_vnkr79j0brd5-4&gt;li:before{content:&quot;\0025cb  &quot;}ol.lst-kix_rpn0sahs9m0k-8.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-8 0}.lst-kix_vnkr79j0brd5-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_vnkr79j0brd5-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_vnkr79j0brd5-1&gt;li:before{content:&quot;\0025cb  &quot;}ol.lst-kix_omx22nj2js1z-1.start{counter-reset:lst-ctn-kix_omx22nj2js1z-1 0}.lst-kix_omx22nj2js1z-0&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-0}ul.lst-kix_vnkr79j0brd5-4{list-style-type:none}ul.lst-kix_vnkr79j0brd5-3{list-style-type:none}ul.lst-kix_vnkr79j0brd5-2{list-style-type:none}ul.lst-kix_vnkr79j0brd5-1{list-style-type:none}.lst-kix_omx22nj2js1z-1&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-1,lower-latin) &quot;. &quot;}ul.lst-kix_vnkr79j0brd5-8{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-0.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-0 0}ul.lst-kix_vnkr79j0brd5-7{list-style-type:none}.lst-kix_omx22nj2js1z-0&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-0,decimal) &quot;. &quot;}ul.lst-kix_vnkr79j0brd5-6{list-style-type:none}ul.lst-kix_vnkr79j0brd5-5{list-style-type:none}ul.lst-kix_vnkr79j0brd5-0{list-style-type:none}.lst-kix_vnkr79j0brd5-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_omx22nj2js1z-2&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-2}.lst-kix_omx22nj2js1z-8&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-8}.lst-kix_3vloefecb731-0&gt;li:before{content:&quot;\0025cf  &quot;}ol.lst-kix_omx22nj2js1z-0.start{counter-reset:lst-ctn-kix_omx22nj2js1z-0 0}ul.lst-kix_ziaggw1wsf95-3{list-style-type:none}ul.lst-kix_ziaggw1wsf95-4{list-style-type:none}ol.lst-kix_omx22nj2js1z-7.start{counter-reset:lst-ctn-kix_omx22nj2js1z-7 0}ul.lst-kix_ziaggw1wsf95-5{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-3.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-3 0}ul.lst-kix_ziaggw1wsf95-6{list-style-type:none}ul.lst-kix_ziaggw1wsf95-0{list-style-type:none}ul.lst-kix_ziaggw1wsf95-1{list-style-type:none}ul.lst-kix_ziaggw1wsf95-2{list-style-type:none}ul.lst-kix_3vloefecb731-0{list-style-type:none}.lst-kix_3vloefecb731-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_3vloefecb731-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_3vloefecb731-1&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_3vloefecb731-8{list-style-type:none}ul.lst-kix_3vloefecb731-7{list-style-type:none}ul.lst-kix_3vloefecb731-6{list-style-type:none}ul.lst-kix_3vloefecb731-5{list-style-type:none}.lst-kix_3vloefecb731-3&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_3vloefecb731-4{list-style-type:none}ul.lst-kix_3vloefecb731-3{list-style-type:none}.lst-kix_3vloefecb731-2&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_3vloefecb731-2{list-style-type:none}ul.lst-kix_3vloefecb731-1{list-style-type:none}.lst-kix_rpn0sahs9m0k-8&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-8}ol.lst-kix_omx22nj2js1z-6.start{counter-reset:lst-ctn-kix_omx22nj2js1z-6 0}.lst-kix_rpn0sahs9m0k-2&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-2}.lst-kix_rpn0sahs9m0k-5&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-5}.lst-kix_3vloefecb731-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_3vloefecb731-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_3vloefecb731-8&gt;li:before{content:&quot;\0025a0  &quot;}ol.lst-kix_rpn0sahs9m0k-2.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-2 0}.lst-kix_omx22nj2js1z-5&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-5}ol.lst-kix_rpn0sahs9m0k-1.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-1 0}.lst-kix_omx22nj2js1z-4&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-4}.lst-kix_rpn0sahs9m0k-6&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-6}ol.lst-kix_rpn0sahs9m0k-4.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-4 0}ol.lst-kix_omx22nj2js1z-8.start{counter-reset:lst-ctn-kix_omx22nj2js1z-8 0}ol.lst-kix_omx22nj2js1z-2.start{counter-reset:lst-ctn-kix_omx22nj2js1z-2 0}ul.lst-kix_ziaggw1wsf95-7{list-style-type:none}ul.lst-kix_ziaggw1wsf95-8{list-style-type:none}.lst-kix_omx22nj2js1z-3&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-3}ol.lst-kix_rpn0sahs9m0k-7.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-7 0}.lst-kix_omx22nj2js1z-6&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-6}.lst-kix_rpn0sahs9m0k-4&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-4}.lst-kix_rpn0sahs9m0k-7&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-7}ol.lst-kix_omx22nj2js1z-5.start{counter-reset:lst-ctn-kix_omx22nj2js1z-5 0}.lst-kix_rpn0sahs9m0k-5&gt;li:before{content:&quot;(&quot; counter(lst-ctn-kix_rpn0sahs9m0k-5,lower-roman) &quot;) &quot;}.lst-kix_rpn0sahs9m0k-6&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_rpn0sahs9m0k-6,decimal) &quot;. &quot;}.lst-kix_rpn0sahs9m0k-4&gt;li:before{content:&quot;(&quot; counter(lst-ctn-kix_rpn0sahs9m0k-4,lower-latin) &quot;) &quot;}.lst-kix_rpn0sahs9m0k-8&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_rpn0sahs9m0k-8,lower-roman) &quot;. &quot;}.lst-kix_rpn0sahs9m0k-1&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_rpn0sahs9m0k-1,lower-latin) &quot;) &quot;}.lst-kix_rpn0sahs9m0k-2&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_rpn0sahs9m0k-2,lower-roman) &quot;) &quot;}.lst-kix_rpn0sahs9m0k-3&gt;li:before{content:&quot;(&quot; counter(lst-ctn-kix_rpn0sahs9m0k-3,decimal) &quot;) &quot;}.lst-kix_omx22nj2js1z-2&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-2,lower-roman) &quot;. &quot;}.lst-kix_rpn0sahs9m0k-3&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-3}.lst-kix_omx22nj2js1z-3&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-3,decimal) &quot;. &quot;}ol.lst-kix_omx22nj2js1z-3.start{counter-reset:lst-ctn-kix_omx22nj2js1z-3 0}ol.lst-kix_rpn0sahs9m0k-7{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-8{list-style-type:none}.lst-kix_omx22nj2js1z-5&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-5,lower-roman) &quot;. &quot;}.lst-kix_ziaggw1wsf95-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_rpn0sahs9m0k-0&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_rpn0sahs9m0k-0,decimal) &quot;) &quot;}.lst-kix_omx22nj2js1z-4&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-4,lower-latin) &quot;. &quot;}.lst-kix_omx22nj2js1z-7&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-7}.lst-kix_omx22nj2js1z-7&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-7,lower-latin) &quot;. &quot;}ol.lst-kix_rpn0sahs9m0k-1{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-2{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-0{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-5{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-6{list-style-type:none}.lst-kix_omx22nj2js1z-6&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-6,decimal) &quot;. &quot;}ol.lst-kix_rpn0sahs9m0k-3{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-6.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-6 0}.lst-kix_omx22nj2js1z-1&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-1}ol.lst-kix_rpn0sahs9m0k-4{list-style-type:none}.lst-kix_ziaggw1wsf95-6&gt;li:before{content:&quot;\0025cf  &quot;}ol.lst-kix_omx22nj2js1z-0{list-style-type:none}.lst-kix_ziaggw1wsf95-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_ziaggw1wsf95-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_ziaggw1wsf95-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_ziaggw1wsf95-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_omx22nj2js1z-8&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_omx22nj2js1z-8,lower-roman) &quot;. &quot;}ol.lst-kix_omx22nj2js1z-6{list-style-type:none}.lst-kix_ziaggw1wsf95-2&gt;li:before{content:&quot;\0025a0  &quot;}ol.lst-kix_omx22nj2js1z-5{list-style-type:none}ol.lst-kix_omx22nj2js1z-4.start{counter-reset:lst-ctn-kix_omx22nj2js1z-4 0}ol.lst-kix_omx22nj2js1z-8{list-style-type:none}.lst-kix_ziaggw1wsf95-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_ziaggw1wsf95-3&gt;li:before{content:&quot;\0025cf  &quot;}ol.lst-kix_omx22nj2js1z-7{list-style-type:none}ol.lst-kix_omx22nj2js1z-2{list-style-type:none}ol.lst-kix_omx22nj2js1z-1{list-style-type:none}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ol.lst-kix_omx22nj2js1z-4{list-style-type:none}ol.lst-kix_omx22nj2js1z-3{list-style-type:none}.lst-kix_rpn0sahs9m0k-0&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-0}.lst-kix_rpn0sahs9m0k-7&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_rpn0sahs9m0k-7,lower-latin) &quot;. &quot;}ol{margin:0;padding:0}table td,table th{padding:0}.ZslSztaQWN-c45{border-right-style:solid;padding-top:1.7pt;border-top-width:0pt;border-right-width:0pt;padding-left:8.5pt;padding-bottom:4.2pt;line-height:1.5;border-left-width:0pt;border-top-style:solid;border-left-style:solid;border-bottom-width:0pt;border-bottom-style:solid;text-align:left;padding-right:0pt}.ZslSztaQWN-c9{border-right-style:solid;padding:0pt 4pt 0pt 4pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#00aa00;border-left-width:1pt;border-top-style:solid;background-color:#eeeedd;border-left-style:solid;border-bottom-width:1pt;width:30pt;border-top-color:#999988;border-bottom-style:solid}.ZslSztaQWN-c49{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#00aa00;border-top-width:0pt;border-right-width:1pt;border-left-color:#00aa00;vertical-align:top;border-right-color:#00aa00;border-left-width:1pt;border-top-style:solid;background-color:#ddffdd;border-left-style:solid;border-bottom-width:1pt;width:421.5pt;border-top-color:#cc0000;border-bottom-style:solid}.ZslSztaQWN-c38{border-right-style:solid;padding:0pt 2pt 0pt 2pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#d7d7d7;border-left-width:1pt;border-top-style:solid;background-color:#eeeeee;border-left-style:solid;border-bottom-width:1pt;width:30pt;border-top-color:#d7d7d7;border-bottom-style:solid}.ZslSztaQWN-c30{border-right-style:solid;padding:0pt 2pt 0pt 2pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#999999;vertical-align:top;border-right-color:#d7d7d7;border-left-width:0pt;border-top-style:solid;background-color:#eeeeee;border-left-style:solid;border-bottom-width:1pt;width:27pt;border-top-color:#d7d7d7;border-bottom-style:solid}.ZslSztaQWN-c44{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#cc0000;border-top-width:0pt;border-right-width:0pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#ffffff;border-left-style:solid;border-bottom-width:1pt;width:421.5pt;border-top-color:#000000;border-bottom-style:solid}.ZslSztaQWN-c36{border-right-style:solid;padding:0pt 4pt 0pt 4pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#cc0000;border-left-width:1pt;border-top-style:solid;background-color:#eeeedd;border-left-style:solid;border-bottom-width:1pt;width:30pt;border-top-color:#999988;border-bottom-style:solid}.ZslSztaQWN-c51{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:0pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#ffffff;border-left-style:solid;border-bottom-width:0pt;width:421.5pt;border-top-color:#d7d7d7;border-bottom-style:solid}.ZslSztaQWN-c13{border-right-style:solid;padding:0pt 4pt 0pt 4pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#888866;vertical-align:top;border-right-color:#d7d7d7;border-left-width:0pt;border-top-style:solid;background-color:#eeeedd;border-left-style:solid;border-bottom-width:1pt;width:27pt;border-top-color:#999988;border-bottom-style:solid}.ZslSztaQWN-c48{border-right-style:solid;padding:0pt 4pt 0pt 4pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#d7d7d7;border-left-width:1pt;border-top-style:solid;background-color:#eeeedd;border-left-style:solid;border-bottom-width:1pt;width:30pt;border-top-color:#999988;border-bottom-style:solid}.ZslSztaQWN-c10{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.ZslSztaQWN-c50{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#d7d7d7;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#d7d7d7;border-left-width:1pt;border-top-style:solid;background-color:#f7f7f7;border-left-style:solid;border-bottom-width:1pt;width:421.5pt;border-top-color:#d7d7d7;border-bottom-style:solid}.ZslSztaQWN-c34{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#cc0000;border-top-width:1pt;border-right-width:1pt;border-left-color:#cc0000;vertical-align:top;border-right-color:#cc0000;border-left-width:1pt;border-top-style:solid;background-color:#ffdddd;border-left-style:solid;border-bottom-width:0pt;width:421.5pt;border-top-color:#cc0000;border-bottom-style:solid}.ZslSztaQWN-c18{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:center;height:11pt}.ZslSztaQWN-c11{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.ZslSztaQWN-c5{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;;font-style:normal}.ZslSztaQWN-c31{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.ZslSztaQWN-c52{padding-top:6pt;padding-bottom:0pt;line-height:1.45;text-align:left}.ZslSztaQWN-c46{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#9c27b0;font-weight:400}.ZslSztaQWN-c24{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:right}.ZslSztaQWN-c8{color:#000000;font-weight:400;font-size:20pt;font-family:&quot;Arial&quot;}.ZslSztaQWN-c25{color:#24292f;font-weight:400;font-size:10pt;font-family:Consolas,&quot;Courier New&quot;}.ZslSztaQWN-c12{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.ZslSztaQWN-c17{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#0f9d58;font-weight:400}.ZslSztaQWN-c0{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#000000;font-weight:400}.ZslSztaQWN-c32{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#455a64;font-weight:400}.ZslSztaQWN-c21{color:#000000;font-weight:400;font-size:7pt;font-family:&quot;Verdana&quot;}.ZslSztaQWN-c1{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#3367d6;font-weight:400}.ZslSztaQWN-c33{font-size:7pt;font-family:&quot;Verdana&quot;;color:#888866;font-weight:400}.ZslSztaQWN-c16{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.ZslSztaQWN-c3{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#c53929;font-weight:400}.ZslSztaQWN-c27{border-spacing:0;border-collapse:collapse;margin-right:auto}.ZslSztaQWN-c42{color:#333333;font-weight:700;font-size:11pt;font-family:&quot;Arial&quot;}.ZslSztaQWN-c2{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#616161;font-weight:400}.ZslSztaQWN-c28{font-size:7pt;font-family:&quot;Courier New&quot;;font-weight:400}.ZslSztaQWN-c43{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.ZslSztaQWN-c4{font-family:Consolas,&quot;Courier New&quot;;color:#0d904f;font-weight:400}.ZslSztaQWN-c6{text-decoration:none;vertical-align:baseline;font-style:normal}.ZslSztaQWN-c19{orphans:2;widows:2}.ZslSztaQWN-c29{color:#1155cc;font-weight:700}.ZslSztaQWN-c23{margin-left:36pt;padding-left:0pt}.ZslSztaQWN-c47{font-weight:400;font-family:Consolas,&quot;Courier New&quot;}.ZslSztaQWN-c14{color:inherit;text-decoration:inherit}.ZslSztaQWN-c22{padding:0;margin:0}.ZslSztaQWN-c26{margin-left:72pt;padding-left:0pt}.ZslSztaQWN-c20{height:11pt}.ZslSztaQWN-c15{height:0pt}.ZslSztaQWN-c37{background-color:#99ee99}.ZslSztaQWN-c40{height:11.2pt}.ZslSztaQWN-c35{height:12pt}.ZslSztaQWN-c7{height:12.8pt}.ZslSztaQWN-c39{background-color:#ee9999}.ZslSztaQWN-c41{margin-left:36pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}p{margin:0;color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;ZslSztaQWN-c43&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;Posted by Maddie Stone, Google Project Zero&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;Whenever there&amp;rsquo;s a new in-the-wild 0-day disclosed, I&amp;rsquo;m very interested in understanding the root cause of the bug. This allows us to then understand if it was fully fixed, look for variants, and brainstorm new mitigations. This blog is the story of a &amp;ldquo;zombie&amp;rdquo; Safari 0-day and how it came back from the dead to be disclosed as exploited in-the-wild in 2022. CVE-2022-22620 was initially fixed in 2013, reintroduced in 2016, and then disclosed as exploited in-the-wild in 2022. If you&amp;rsquo;re interested in the full root cause analysis for CVE-2022-22620, we&amp;rsquo;ve published it &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2022/CVE-2022-22620.html&quot;&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;In the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://googleprojectzero.blogspot.com/2021/02/deja-vu-lnerability.html&quot;&gt;2020 Year in Review of 0-days exploited in the wild&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;, I wrote how 25% of all 0-days detected and disclosed as exploited in-the-wild in 2020 were variants of previously disclosed vulnerabilities. Almost halfway through 2022 and it seems like we&amp;rsquo;re seeing a similar trend. Attackers don&amp;rsquo;t need novel bugs to effectively exploit users with 0-days, but instead can use vulnerabilities closely related to previously disclosed ones. This blog focuses on just one example from this year because it&amp;rsquo;s a little bit different from other variants that we&amp;rsquo;ve discussed before. Most variants we&amp;rsquo;ve discussed previously exist due to incomplete patching. But in this case, the variant was completely patched when the vulnerability was initially reported in 2013. However, the variant was reintroduced 3 years later during large refactoring efforts. The vulnerability then continued to exist for 5 years until it was fixed as an in-the-wild 0-day in January 2022.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;ZslSztaQWN-c31 ZslSztaQWN-c19&quot; id=&quot;h.73vyhrucsc6&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c8 ZslSztaQWN-c6&quot;&gt;Getting Started&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;In the case of CVE-2022-22620 I had two pieces of information to help me figure out the vulnerability: &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/486816dc355c19f1de1b8056f85d0bbf7084dd6e&quot;&gt;the patch&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(thanks to Apple for sharing with me!) and &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://support.apple.com/en-us/HT213093&quot;&gt;the description from the security bulletin&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;stating that the vulnerability is a use-after-free. The primary change in the patch was to change the type of the second argument (&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;) to the function &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;from a raw pointer, &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue*&lt;/span&gt;&lt;span&gt;&amp;nbsp;to a reference-counted pointer, &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;RefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c19 ZslSztaQWN-c45&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c29&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://trac.webkit.org/changeset/288539/webkit/trunk/Source/WebCore/loader/FrameLoader.cpp&quot;&gt;trunk/Source/WebCore/loader/FrameLoader.cpp&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c6 ZslSztaQWN-c42&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.d2b748d06cece430655335607ebc8e7dbe422f78&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.0&quot;&gt;&lt;/a&gt;&lt;table class=&quot;ZslSztaQWN-c27&quot;&gt;&lt;tr class=&quot;ZslSztaQWN-c7&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c30&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c18&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c21 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c38&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c18&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c21 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c50&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c21 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ZslSztaQWN-c40&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c13&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c24 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c33&quot;&gt;1094&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c48&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c24 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c33&quot;&gt;1094&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c51&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c28&quot;&gt;// This does the same kind of work that didOpenURL does, except it relies on the fact&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ZslSztaQWN-c40&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c13&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c24 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c33&quot;&gt;1095&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c48&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c19 ZslSztaQWN-c24&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c33&quot;&gt;1095&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c28&quot;&gt;// that a higher level already checked that the URLs match and the scrolling is the right thing to do.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ZslSztaQWN-c35&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c13&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c24 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c33&quot;&gt;1096&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c36&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c24 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c33&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c34&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c28&quot;&gt;void FrameLoader::loadInSameDocument(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c28 ZslSztaQWN-c39&quot;&gt;const URL&amp;amp; url, SerializedScriptValue*&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c28&quot;&gt;&amp;nbsp;stateObject, bool isNewNavigation)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;ZslSztaQWN-c35&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c13&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c24 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c33&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c9&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c24 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c33&quot;&gt;1096&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;ZslSztaQWN-c49&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c28&quot;&gt;void FrameLoader::loadInSameDocument(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c28 ZslSztaQWN-c37&quot;&gt;URL url, RefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c28&quot;&gt;&amp;nbsp;stateObject, bool isNewNavigation)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;Whenever I&amp;rsquo;m doing a root cause analysis on a browser in-the-wild 0-day, along with studying the code, I also usually search through commit history and bug trackers to see if I can find anything related. I do this to try and understand when the bug was introduced, but also to try and save time. (There&amp;rsquo;s a lot of 0-days to be studied! &amp;#x1f600;)&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;ZslSztaQWN-c31 ZslSztaQWN-c19&quot; id=&quot;h.biu13uvstqei&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c8 ZslSztaQWN-c6&quot;&gt;The Previous Life&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;In the case of CVE-2022-22620, I was scrolling through the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://git-scm.com/docs/git-blame&quot;&gt;git &lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://git-scm.com/docs/git-blame&quot;&gt;blame&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;view of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;FrameLoader.cpp&lt;/span&gt;&lt;span&gt;. Specifically I was looking at the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/blame/7b23cae2a1b1ffd026288f15261f8ba272c3b24b/Source/WebCore/loader/FrameLoader.cpp#L1096&quot;&gt;definition of &lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16 ZslSztaQWN-c47&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/blame/7b23cae2a1b1ffd026288f15261f8ba272c3b24b/Source/WebCore/loader/FrameLoader.cpp#L1096&quot;&gt;loadInSameDocument&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. When looking at the git blame for this line prior to our patch, it&amp;rsquo;s a &lt;/span&gt;&lt;span&gt;very &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/aa31b6b4d09b09acdf1cec11f2f7f35bd362dd0e&quot;&gt;interesting commit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The commit was actually changing the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument from a reference-counted pointer, &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span&gt;, to a raw pointer, &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;*&lt;/span&gt;&lt;span&gt;. This change from December 2016 introduced CVE-2022-22620. The &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/aa31b6b4d09b09acdf1cec11f2f7f35bd362dd0e#diff-9fb71b6fa7156160059b0216d05933e621d422df2b20f72ad7399eb946b8ba04&quot;&gt;Changelog even states&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c25 ZslSztaQWN-c6&quot;&gt;(WebCore::FrameLoader::loadInSameDocument): Take a raw pointer for the&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c25 ZslSztaQWN-c6&quot;&gt;serialized script value state object. No one was passing ownership.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c25 ZslSztaQWN-c6&quot;&gt;But pass it along to statePopped as a Ref since we need to pass ownership&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c25 ZslSztaQWN-c6&quot;&gt;of the null value, at least for now.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;Now I was intrigued and wanted to track down the previous commit that had changed the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span&gt;. I was in luck and only had to go &lt;/span&gt;&lt;span&gt;back in the history two more steps&lt;/span&gt;&lt;span&gt;. There was a &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/4b3be1d3a8d22cb2b2f5ddb8299f7cd25a21cebf&quot;&gt;commit from 2013&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that changed the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument from the raw pointer, &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue*&lt;/span&gt;&lt;span&gt;, to a reference-counted pointer, &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;. This commit from February 2013 was doing the same thing that our commit in 2022 was doing. The commit was titled &amp;ldquo;Use-after-free in SerializedScriptValue::deserialize&amp;rdquo; and included a good description of how that use-after-free worked.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;The commit also included a test:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c6 ZslSztaQWN-c25&quot;&gt;Added a test that demonstrated a crash due to use-after-free&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c25 ZslSztaQWN-c6&quot;&gt;of SerializedScriptValue.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c25 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c19 ZslSztaQWN-c52&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c25 ZslSztaQWN-c6&quot;&gt;Test: fast/history/replacestate-nocrash.html&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;The trigger from this test is:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.bea0338a691e658fe5342eccc78ecfb67c0fd560&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.1&quot;&gt;&lt;/a&gt;&lt;table class=&quot;ZslSztaQWN-c27&quot;&gt;&lt;tr class=&quot;ZslSztaQWN-c15&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c10&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;__defineSetter__&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c46&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;replaceState&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;)});&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;replaceState&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;zzz&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;repeat&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c3&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;My hope was that the test would crash the vulnerable version of WebKit and I&amp;rsquo;d be done with my root cause analysis and could move on to the next bug. Unfortunately, it didn&amp;rsquo;t crash.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;The commit description included the comment to check out a Chromium bug. (During this time Chromium still used the WebKit rendering engine. Chromium forked&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://blog.chromium.org/2013/04/blink-rendering-engine-for-chromium.html&quot;&gt;&amp;nbsp;the Blink rendering engine in April 2013&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.) &lt;/span&gt;&lt;span&gt;I saw that my now Project Zero teammate, Sergei Glazunov, originally reported the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=171839&quot;&gt;Chromium bug&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;back in 2013&lt;/span&gt;&lt;span&gt;, so I asked him for the details.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;The use-after-free from 2013 (&lt;/span&gt;&lt;span&gt;no CVE was assigned&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;was&lt;/span&gt;&lt;span&gt;&amp;nbsp;a bug in the implementation of the History API. This API allows access to (and modification of) a stack of the pages visited in the current frame, and these page states are stored as a &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue&lt;/span&gt;&lt;span&gt;. The History API exposes a getter for &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;state&lt;/span&gt;&lt;span&gt;, and a method &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;replaceState&lt;/span&gt;&lt;span&gt;&amp;nbsp;which allows overwriting the &amp;quot;most recent&amp;quot; history entry. &lt;br&gt;&lt;br&gt;The bug was that in the implementation of the getter for &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;state&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue::deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;was called on the current &amp;quot;most recent&amp;quot; history entry value without increasing its reference count. As &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue::deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;could trigger a callback into user JavaScript, the callback could call &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;replaceState&lt;/span&gt;&lt;span&gt;&amp;nbsp;to drop the only reference to the history entry value by replacing it with a new value. When the callback returned, the rest of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue::deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;ran with a free&amp;#39;d &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;this&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;In order to fix this bug, it appears that the developers decided to change every caller of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue::deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;to increase the reference count &lt;/span&gt;&lt;span&gt;on the&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;by changing the argument types from a raw pointer to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span&gt;. &amp;nbsp;While the originally reported trigger called &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;through the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;V8History::stateAccessorGetter&lt;/span&gt;&lt;span&gt;&amp;nbsp;function, the developers&amp;rsquo; fix also caught and patched the path to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;through &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;The timeline of the changes impacting the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&amp;nbsp;is:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-0 start&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/e544495d282d4726fcb491e0e441ddba338b5ec1&quot;&gt;December 2009 - state object History API added.&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-1 start&quot; style=&quot;margin-left: 23pt;&quot;&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem.m_stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;is type &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;RefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem::stateObject()&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue*&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;takes &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument as &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue*&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-0&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/4b3be1d3a8d22cb2b2f5ddb8299f7cd25a21cebf&quot;&gt;January 2013 - Patching Sergei&amp;rsquo;s bug&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-1 start&quot; style=&quot;margin-left: 23pt;&quot;&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem::stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns a &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;takes &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument as &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-0&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/ec83a53b569f6c2b493e9874a498cd1b683656a1&quot;&gt;September 2015- Deprecating use of PassRefPtr in history directory&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-1 start&quot; style=&quot;margin-left: 23pt;&quot;&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem::stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;RefPtr&lt;/span&gt;&lt;span&gt;&amp;nbsp;instead of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;PassRefPtr&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-0&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/ed43edee9f8f114c3b2db3c0420e23f926a968ee&quot;&gt;October 2016 - (Potentially) ad-hoc refactoring &lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-1 start&quot; style=&quot;margin-left: 23pt;&quot;&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem::stateObject()&lt;/span&gt;&lt;span&gt;&amp;nbsp;is changed to return raw pointer instead of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;RefPtr&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-0&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/aa31b6b4d09b09acdf1cec11f2f7f35bd362dd0e&quot;&gt;December 2016 - CVE-2022-22600 introduced&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-1 start&quot; style=&quot;margin-left: 23pt;&quot;&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;changed to take &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;as a raw pointer instead of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-0&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/486816dc355c19f1de1b8056f85d0bbf7084dd6e&quot;&gt;January 2022 - CVE-2022-22600 patched&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=&quot;c22 lst-kix_vnkr79j0brd5-1 start&quot; style=&quot;margin-left: 23pt;&quot;&gt;&lt;li class=&quot;c12 c19 c26 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;changed to take &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;as a &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;RefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;ZslSztaQWN-c19 ZslSztaQWN-c31&quot; id=&quot;h.av2i567ev8fi&quot;&gt;&lt;span&gt;The Autopsy&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;When we look at the timeline of changes for &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;it seems that the bug was re-introduced in December 2016 due to refactoring. The question is, why did the patch author think that &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;would not need to hold a reference. From the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/commit/aa31b6b4d09b09acdf1cec11f2f7f35bd362dd0e&quot;&gt;December 2016 commit ChangeLog&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;Take a raw pointer for the serialized script value state object. &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;No one was passing ownership.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;My assessment is that it&amp;rsquo;s due to the October 2016 changes in &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem:stateObject&lt;/span&gt;&lt;span&gt;. When the author was evaluating the refactoring changes needed in the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;dom&lt;/span&gt;&lt;span&gt;&amp;nbsp;directory in December 2016, it would have appeared that the only calls to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;passed in either a &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;null&lt;/span&gt;&lt;span&gt;&amp;nbsp;value or the result of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject()&lt;/span&gt;&lt;span&gt;&amp;nbsp;which as of October 2016 now passed a raw &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;SerializedScriptValue*&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer. When looking at those two options for the type of an argument, then it&amp;rsquo;s potentially understandable that the developer thought that &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;did not need to share ownership of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;So why then was &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem::stateObject&lt;/span&gt;&lt;span&gt;&amp;rsquo;s return value changed from a &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;RefPtr&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&amp;nbsp;to a raw pointer in October 2016? That I&amp;rsquo;m struggling to find an explanation for. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;According to the description, the patch in October 2016 was intended to &amp;ldquo;Replace all uses of ExceptionCodeWithMessage with WebCore::Exception&amp;rdquo;. However when we look at the ChangeLog it seems that the author decided to also do some (seemingly unrelated) refactoring to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem&lt;/span&gt;&lt;span&gt;. These are some of the only changes in the commit whose descriptions aren&amp;rsquo;t related to exceptions. As an outsider looking at the commits, it seems that the developer by chance thought they&amp;rsquo;d do a little &amp;ldquo;clean-up&amp;rdquo; while working through the required refactoring on the exceptions. If this was simply an additional ad-hoc step while in the code, rather than the goal of the commit, it seems plausible that the developer and reviewers may not have further traced the full lifetime of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem::stateObject&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;While the change to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;HistoryItem&lt;/span&gt;&lt;span&gt;&amp;nbsp;in October 2016 was not sufficient to introduce the bug, it seems that that change likely contributed to the developer in December 2016 thinking that &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;didn&amp;rsquo;t need to increase the reference count on the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;Both the October 2016 and the December 2016 commits were very large. The commit in October changed 40 files with 900 additions and 1225 deletions. The commit in December changed 95 files with 1336 additions and 1325 deletions. It seems untenable for any developers or reviewers to understand the security implications of each change in those commits in detail&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;, especially since they&amp;rsquo;re related to lifetime semantics.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;ZslSztaQWN-c31 ZslSztaQWN-c19&quot; id=&quot;h.wnkfqwd2smy6&quot;&gt;&lt;span&gt;The Zombie&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;We&amp;rsquo;ve now tracked down the evolution of changes to fix the 2013 vulnerability&amp;hellip;and then revert those fixes&amp;hellip; so I got back to identifying the 2022 bug. It&amp;rsquo;s the same bug, but triggered through a different path. T&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;hat&amp;rsquo;s why the 2013 test case wasn&amp;rsquo;t crashing the version of WebKit that should have been vulnerable to CVE-2022-22620:&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot;c22 lst-kix_rpn0sahs9m0k-0 start&quot; start=&quot;1&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span&gt;The 2013 test case triggers the bug through the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;V8History::stateAccessorAndGetter&lt;/span&gt;&lt;span&gt;&amp;nbsp;path instead of &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;, and&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span&gt;As a part of Sergei&amp;rsquo;s 2013 bug report there were additional hardening measures put into place that prevented user-code callbacks being processed during deserialization.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;Therefore we needed to figure out how to call &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;and instead of using the deserialization to trigger a JavaScript callback, we needed to find another event in the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&amp;nbsp;function that would trigger the callback to user JavaScript.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;To quickly figure out how to call &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;, I modified the WebKit source code to trigger a test failure if &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;was ever called and then ran all the tests in the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;fast/history&lt;/span&gt;&lt;span&gt;&amp;nbsp;d&lt;/span&gt;&lt;span&gt;irectory. There were 5 out of the 80 tests that called &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;:&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;c22 lst-kix_3vloefecb731-0 start&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/multiple-back-forward-navigations.html&quot;&gt;fast/history/multiple-back-forward-navigations.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/history-traversal-is-asynchronous.html&quot;&gt;fast/history/history-traversal-is-asynchronous.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/history-back-forward-within-subframe-hash.html&quot;&gt;fast/history/history-back-forward-within-subframe-hash.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/link-inside-any.html&quot;&gt;fast/history/link-inside-any.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/timed-refresh-in-cached-frame.html&quot;&gt;fast/history/timed-refresh-in-cached-frame.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;The tests &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;history-back-forward-within-subframe-hash.html&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;fast/history/history-traversal-is-asynchronous.html&lt;/span&gt;&lt;span&gt;&amp;nbsp;were the most helpful. We can trigger the call to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;by setting the history stack with an object whose location is the same page, but includes a hash. We then call &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;history.back()&lt;/span&gt;&lt;span&gt;&amp;nbsp;to go back to that state that includes the URL with the hash. &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSamePage&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&amp;nbsp;is responsible for scrolling to that location.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.6c73d82779de9619168336c5e74c9282d03e1118&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.2&quot;&gt;&lt;/a&gt;&lt;table class=&quot;ZslSztaQWN-c27&quot;&gt;&lt;tr class=&quot;ZslSztaQWN-c15&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c10&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;pushState&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;state1&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;location &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;#foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;pushState&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;state2&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c32&quot;&gt;// current state&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c20&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c32&quot;&gt;//goes back to state1, triggering loadInSameDocument&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;Now that I knew how to call &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;, I teamed up with Sergei to identify how we could get user code execution sometime during the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;function, but prior to the call to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;statePopped&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://github.com/WebKit/WebKit/blob/7b23cae2a1b1ffd026288f15261f8ba272c3b24b/Source/WebCore/loader/FrameLoader.cpp#L1158&quot;&gt;FrameLoader.cpp#1158&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;):&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.44cc163a06cabebe835e9730a761749f62c29f76&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.3&quot;&gt;&lt;/a&gt;&lt;table class=&quot;ZslSztaQWN-c27&quot;&gt;&lt;tr class=&quot;ZslSztaQWN-c15&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c10&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;m_frame&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;()-&amp;gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;statePopped&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;stateObject &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;Ref&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;SerializedScriptValue&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;stateObject &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;SerializedScriptValue&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;nullValue&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;());&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;The callback to user code would have to occur prior to the call to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;statePopped&lt;/span&gt;&lt;span&gt;&amp;nbsp;because &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&amp;nbsp;was cast to a reference there and thus would now be reference-counted. We assumed that this would be the place where the &amp;ldquo;freed&amp;rdquo; object was &amp;ldquo;used&amp;rdquo;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;If you go down the rabbit hole of the calls made in &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;, we find that there is a path to the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;blur&lt;/span&gt;&lt;span&gt;&amp;nbsp;event being dispatched. We could have also used a tool like &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c16&quot;&gt;&lt;a class=&quot;ZslSztaQWN-c141&quot; href=&quot;https://codeql.github.com/&quot;&gt;CodeQL&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to see if there was a path from &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;dispatchEvent&lt;/span&gt;&lt;span&gt;, but in this case we just used manual auditing. The call tree to the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&amp;nbsp;event is:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.870849a2bc6536879e2f5ddf1089bb7c44ea4edb&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.4&quot;&gt;&lt;/a&gt;&lt;table class=&quot;ZslSztaQWN-c27&quot;&gt;&lt;tr class=&quot;ZslSztaQWN-c15&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c10&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;FrameLoader&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;FrameLoader&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;scrollToFragmentWithParentBoundary&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;FrameView&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;scrollToFragment&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;FrameView&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;scrollToFragmentInternal&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;FocusController&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;setFocusedElement&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;FocusController&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;setFocusedFrame&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dispatchWindowEvent&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;eventNames&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;blurEvent&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;CanBubble&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;No&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;Event&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;IsCancelable&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c1&quot;&gt;No&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;));&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;blur&lt;/span&gt;&lt;span&gt;&amp;nbsp;event fires on an element whenever focus is moved from that element to another element. In our case &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;is triggered when we need to scroll to a new location within the current page. If we&amp;rsquo;re scrolling and therefore changing focus to a new element, the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&amp;nbsp;event is fired on the element that previously had the focus. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;The last piece for our trigger is to free the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;onblur&lt;/span&gt;&lt;span&gt;&amp;nbsp;event handler. To do that we call &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;replaceState&lt;/span&gt;&lt;span&gt;, which overwrites the current history state with a new object. This causes the final reference to be dropped on the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;and it&amp;rsquo;s therefore free&amp;rsquo;&lt;/span&gt;&lt;span&gt;d&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;still uses the free&amp;rsquo;d &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;in its call to &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;statePopped&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b75e8b9268f5881526cd63ea2dc82bafaef64a9f&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.5&quot;&gt;&lt;/a&gt;&lt;table class=&quot;ZslSztaQWN-c27&quot;&gt;&lt;tr class=&quot;ZslSztaQWN-c15&quot;&gt;&lt;td class=&quot;ZslSztaQWN-c10&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;input &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;document&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;));&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c20&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;a &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;document&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;));&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;id &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c20&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;pushState&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;state1&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;location &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;#foo&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;pushState&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;state2&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c20&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; input&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; input&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;onblur &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;replaceState&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;state3&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c17&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setTimeout&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(()&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;history&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c3&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c3&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c2&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c20&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c0 ZslSztaQWN-c6&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;In both the 2013 and 2022 cases, the root vulnerability is that the &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not correctly reference-counted. In 2013, the developers did a great job of patching all the different paths to trigger the vulnerability, not just the one in the submitted proof-of-concept. This meant that they had also killed the vulnerability in &lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c4&quot;&gt;loadInSameDocument&lt;/span&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;. The refactoring in December 2016 then revived the vulnerability to enable it to be exploited in-the-wild and re-patched in 2022.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;ZslSztaQWN-c31 ZslSztaQWN-c19&quot; id=&quot;h.x9lxjo77j0n3&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c8 ZslSztaQWN-c6&quot;&gt;Conclusion&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;Usually when we talk about variants, they exist due to incomplete patches: the vendor doesn&amp;rsquo;t correctly and completely fix the reported vulnerability. However, for CVE-2022-22620 the vulnerability was correctly and completely fixed in 2013. &lt;/span&gt;&lt;span&gt;Its &lt;/span&gt;&lt;span&gt;fix was just regressed&lt;/span&gt;&lt;span&gt;&amp;nbsp;in 2016&lt;/span&gt;&lt;span&gt;&amp;nbsp;during refactoring&lt;/span&gt;&lt;span&gt;. We don&amp;rsquo;t know how long an attacker was exploiting this vulnerability in-the-wild, but we do know that the vulnerability existed (again) for 5 years: December 2016 until January 2022.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;There&amp;rsquo;s no easy answer for what should have been done differently. The developers responding to the initial bug report in 2013 followed a lot of best-practices: &lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot;c22 lst-kix_ziaggw1wsf95-0 start&quot;&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;Patched all paths to trigger the vulnerability, not just the one in the proof-of-concept. This meant that they patched the variant that would become CVE-2022-22620.&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;Submitted a test case with the patch.&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;Detailed commit messages explaining the vulnerability and how they were fixing it.&lt;/span&gt;&lt;/li&gt;&lt;li class=&quot;c12 c19 c23 li-bullet-0&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;Additional hardening measures during deserialization.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
 &lt;p class=&quot;ZslSztaQWN-c11 ZslSztaQWN-c41&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;As an offensive security research team, we can make assumptions about what we believe to be the core challenges facing modern software development teams: legacy code, short reviewer turn-around expectations, refactoring and security efforts are generally under-appreciated and under-rewarded, and lack of memory safety mitigations. Developers and security teams need time to review patches, especially for security issues, and rewarding these efforts, will make a difference. It also will save the vendor resources in the long run. In this case, 9 years after a vulnerability was initially triaged, patched, tested, and released, the whole process had to be duplicated again, but this time under the pressure of in-the-wild exploitation. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c11&quot;&gt;&lt;span class=&quot;ZslSztaQWN-c5&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;ZslSztaQWN-c12 ZslSztaQWN-c19&quot;&gt;&lt;span&gt;While this case study was a 0-day in Safari/WebKit, this is not an issue unique to Safari. Already in 2022, we&amp;rsquo;ve seen in-the-wild 0-days that are variants of previously disclosed bugs targeting Chromium, Windows, Pixel, and iOS as well.&lt;/span&gt;&lt;span&gt;&amp;nbsp;It&amp;rsquo;s a good reminder that as defenders we all need to stay vigilant in reviewing and auditing code and patches. &lt;/span&gt;&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://googleprojectzero.blogspot.com/feeds/2485989426162409270/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://googleprojectzero.blogspot.com/2022/06/an-autopsy-on-zombie-in-wild-0-day.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/2485989426162409270'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/2485989426162409270'/><link rel='alternate' type='text/html' href='https://googleprojectzero.blogspot.com/2022/06/an-autopsy-on-zombie-in-wild-0-day.html' title='An Autopsy on a Zombie In-the-Wild 0-day'/><author><name>Google Project Zero</name><uri>http://www.blogger.com/profile/08975904405228580347</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/b16-rounded.gif'/></author><thr:total>0</thr:total></entry>