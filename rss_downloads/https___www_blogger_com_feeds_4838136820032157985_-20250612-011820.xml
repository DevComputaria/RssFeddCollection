<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><entry xmlns='http://www.w3.org/2005/Atom' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-4838136820032157985.post-1033743652169779882</id><published>2022-04-07T09:08:00.002-07:00</published><updated>2022-08-24T12:04:12.783-07:00</updated><title type='text'>CVE-2021-30737, @xerub&#39;s 2021 iOS ASN.1 Vulnerability</title><content type='html'>&lt;style type=&quot;text/css&quot;&gt;@import url(&#39;https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw&#39;);ol{margin:0;padding:0}table td,table th{padding:0}.c5{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.c10{color:#434343;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:&quot;Arial&quot;;font-style:normal}.c2{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.c9{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;;font-style:normal}.c27{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;}.c31{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-style:normal}.c33{padding-top:16pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;text-align:left}.c19{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.c32{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.c16{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#9c27b0;font-weight:400}.c22{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#0f9d58;font-weight:400}.c34{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:right}.c3{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#000000;font-weight:400}.c11{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#c53929;font-weight:400}.c1{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#616161;font-weight:400}.c21{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c20{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#3367d6;font-weight:400}.c23{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#455a64;font-weight:400}.c25{border-spacing:0;border-collapse:collapse;margin-right:auto}.c6{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.c13{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c29{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;text-decoration:underline}.c30{font-weight:400;font-family:Consolas,&quot;Courier New&quot;}.c8{orphans:2;widows:2}.c24{color:inherit;text-decoration:inherit}.c7{font-weight:400;font-family:&quot;Courier New&quot;}.c4{background-color:#d9ead3}.c14{height:11pt}.c28{font-family:&quot;Arial&quot;}.c12{background-color:#f4cccc}.c18{height:0pt}.c26{font-style:italic}.c15{background-color:#ffffff}.c17{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}p{margin:0;color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c13&quot;&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;Posted by Ian Beer, Google Project Zero&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c17&quot;&gt;This blog post is my analysis of a vulnerability found by &lt;/span&gt;&lt;span class=&quot;c21 c17&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://twitter.com/xerub&quot;&gt;@xerub&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c21 c17&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;http://phrack.org/issues/70/12.html#article&quot;&gt;Phrack published @xerub&amp;#39;s writeup&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c19 c28 c17&quot;&gt;&amp;nbsp;so go check that out first.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c19 c28 c17&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;As well as doing my own vulnerability research I also spend time trying as best as I can to keep up with the public state-of-the-art, especially when details of a particularly interesting vulnerability are announced or a new in-the-wild exploit is caught. Originally this post was just a series of notes I took last year as I was trying to understand this bug. But the bug itself and the narrative around it are so fascinating that I thought it would be worth writing up these notes into a more coherent form to share with the community.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c32 c8&quot; id=&quot;h.s8tx0adm3791&quot;&gt;&lt;span&gt;Background&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;On April 14th 2021 the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://www.washingtonpost.com/technology/2021/04/14/azimuth-san-bernardino-apple-iphone-fbi/&quot;&gt;Washington Post published an article&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;on the unlocking of the San Bernardino iPhone by &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://www.vice.com/en/article/8xdayg/iphone-zero-days-inside-azimuth-security&quot;&gt;Azimuth&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;containing a nugget of non-public information:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;c26&quot;&gt;Azimuth specialized in finding &lt;/span&gt;&lt;span class=&quot;c26 c29&quot;&gt;significant vulnerabilities&lt;/span&gt;&lt;span class=&quot;c26&quot;&gt;. Dowd [...] had found one &lt;/span&gt;&lt;span class=&quot;c29 c26&quot;&gt;in open-source code from Mozilla that Apple used&lt;/span&gt;&lt;span class=&quot;c26&quot;&gt;&amp;nbsp;to permit accessories to be plugged into&lt;/span&gt;&lt;span class=&quot;c26&quot;&gt;&amp;nbsp;an iPhone&amp;rsquo;s lightning port, according to the person.&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;There&amp;#39;s not that much Mozilla code running on an iPhone and even less which is likely to be part of such an attack surface. Therefore, if accurate, this quote almost certainly meant that Azimuth had exploited a vulnerability in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://en.wikipedia.org/wiki/ASN.1&quot;&gt;ASN.1&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;parser used by &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://opensource.apple.com/source/Security/&quot;&gt;Security.framework&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;, which is a fork of Mozilla&amp;#39;s NSS ASN.1 parser.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;I searched around in &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://bugzilla.mozilla.org/&quot;&gt;bugzilla&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(Mozilla&amp;#39;s issue tracker) looking for candidate vulnerabilities which matched the timeline discussed in the Post article and narrowed it down to a handful of plausible bugs including: &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1202868&quot;&gt;1202868&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1192028&quot;&gt;1192028&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1245528&quot;&gt;1245528&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;I was surprised that there had been so many exploitable-looking issues in the ASN.1 code and decided to add auditing the NSS ASN.1 parser as an quarterly goal.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;A month later, having predictably done absolutely nothing more towards that goal, I saw this &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://twitter.com/xerub/status/1397190931653222400&quot;&gt;tweet from @xerub&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;/p&gt;
  
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3Zm78R4JD6H57okd_d1wpa26R9mX0Q746I5hMzwV8EMxosHbDjO5l5tH2hEpkq0m3S7AMmHOU9_6J7veCrxIxq66ilLSKJCLgHBGalgzSo0MrCulaERSbqUhXkHwqNbZdeVg4JWisV2ZuDb_j_AxLxvzX3t1EEtp396DCTt6fYeihuTRsevnnGUXD/s1188/image2%20%281%29%281%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3Zm78R4JD6H57okd_d1wpa26R9mX0Q746I5hMzwV8EMxosHbDjO5l5tH2hEpkq0m3S7AMmHOU9_6J7veCrxIxq66ilLSKJCLgHBGalgzSo0MrCulaERSbqUhXkHwqNbZdeVg4JWisV2ZuDb_j_AxLxvzX3t1EEtp396DCTt6fYeihuTRsevnnGUXD/s1188/image2%20%281%29%281%29.png&quot; border=&quot;0&quot; alt=&quot;@xerub: CVE-2021-30737 is pretty bad. Please update ASAP. (Shameless excerpt from the full chain source code) 4:00 PM - May 25, 2021&quot; style=&quot;max-height: 750; max-width: 600px; &quot;title=&quot;@xerub: CVE-2021-30737 is pretty bad. Please update ASAP. (Shameless excerpt from the full chain source code) 4:00 PM - May 25, 2021&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c34 c8&quot;&gt;&lt;span class=&quot;c27 c26&quot;&gt;@xerub: CVE-2021-30737 is pretty bad. Please update ASAP. (Shameless excerpt from the full chain source code) 4:00 PM - May 25, 2021&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;The shameless excerpt reads:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c27 c26&quot;&gt;// This is the real deal. Take no chances, take no prisoners! I AM THE STATE MACHINE!&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;And CVE-2021-30737, fixed in iOS 14.6 was described in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://support.apple.com/en-us/HT212528#:~:text=2021%2D30699%3A%20videosdebarraquito-,Security,CVE%2D2021%2D30737%3A%20xerub,-WebKit&quot;&gt;iOS release notes&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;as:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;/p&gt;
  
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEje1dcAUA5sK_nqVsE360buSwr8PiFgWjPgQpoq-OM0yvBR6Cb0NFXaoXwmIEE6g_fljFihcv3Vh2lUeXZJgKXfFZVC0t3-nuLvhNOx5bEriX6rZmYt1CIiRMxQ47Sw4tuyc9e7ruZC6lLPKklbsN9QQKoEE7h6QeUzQKyNk9APG5-WYvYgjCR7KRJd/s1650/image4%20%281%29%281%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEje1dcAUA5sK_nqVsE360buSwr8PiFgWjPgQpoq-OM0yvBR6Cb0NFXaoXwmIEE6g_fljFihcv3Vh2lUeXZJgKXfFZVC0t3-nuLvhNOx5bEriX6rZmYt1CIiRMxQ47Sw4tuyc9e7ruZC6lLPKklbsN9QQKoEE7h6QeUzQKyNk9APG5-WYvYgjCR7KRJd/s1200/image4%20%281%29%281%29.png&quot; border=&quot;0&quot; alt=&quot;Screenshot of text. Transcript: Security. Available for: iPhone 6s and later, iPad Pro (all models), iPad Air 2 and later, iPad 5th generation and later, iPad mini 4 and later, and iPod touch (7th generation). Impact: Processing a maliciously crafted certificate may lead to arbitrary code execution. Description: A memory corruption issue in the ASN.1 decoder was addressed by removing the vulnerable code. CVE-2021-30737: xerub&quot; style=&quot;max-height: 750; max-width: 600px;&quot; title=&quot;Screenshot of text. Transcript: Security. Available for: iPhone 6s and later, iPad Pro (all models), iPad Air 2 and later, iPad 5th generation and later, iPad mini 4 and later, and iPod touch (7th generation). Impact: Processing a maliciously crafted certificate may lead to arbitrary code execution. Description: A memory corruption issue in the ASN.1 decoder was addressed by removing the vulnerable code. CVE-2021-30737: xerub&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c34 c8&quot;&gt;&lt;span class=&quot;c27 c26&quot;&gt;Impact: Processing a maliciously crafted certification may lead to arbitrary code execution&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c34 c8&quot;&gt;&lt;span class=&quot;c27 c26&quot;&gt;Description: A memory corruption issue in the ASN.1 decoder was addressed by removing the vulnerable code.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;Feeling slightly annoyed that I hadn&amp;#39;t acted on my instincts as there was clearly something awesome lurking there I made a mental note to diff the source code once Apple released it which they finally did a few weeks later on &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://opensource.apple.com/source/Security/Security-59754.120.12/&quot;&gt;opensource.apple.com in the Security package&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;Here&amp;#39;s the diff between the MacOS 11.4 and 11.3 versions of &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://opensource.apple.com/source/Security/Security-59754.120.12/OSX/libsecurity_asn1/lib/secasn1d.c.auto.html&quot;&gt;secasn1d.c&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;which contains the ASN.1 parser:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.7d4e5129f2e85e500fa9ac546c708b609028d0e3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.0&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;diff &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;git a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;OSX&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;libsecurity_asn1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;secasn1d&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;c b&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;OSX&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;libsecurity_asn1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;secasn1d&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;index f338527&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;5b4915a&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;100644&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;---&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;OSX&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;libsecurity_asn1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;secasn1d&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+++&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;b&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;OSX&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;libsecurity_asn1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;secasn1d&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;434&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;434&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;loser&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PORT_ArenaRelease&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;our_pool&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;our_mark&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;our_mark &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;new_state &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_Free&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;new_state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1794&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1791&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_parse_bit_string &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*PORT_Assert (state-&amp;gt;pending &amp;gt; 0); */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;PORT_Assert &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c4&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c4&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;item &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23 c12&quot;&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c4&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c4&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;The first change (removing the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;PORT_Free&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;) is immaterial for Apple&amp;#39;s use case as it&amp;#39;s fixing a double free which doesn&amp;#39;t impact Apple&amp;#39;s build. It&amp;#39;s only relevant when &amp;quot;allocator marks&amp;quot; are enabled and this feature is disabled.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;The vulnerability must therefore be in &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;. We know from xerub&amp;#39;s tweet that something goes wrong with a state machine, but to figure it out we need to cover some ASN.1 basics and then start looking at how the NSS ASN.1 state machine works.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c32 c8&quot; id=&quot;h.niqtzuiy3s6j&quot;&gt;&lt;span class=&quot;c31 c28&quot;&gt;ASN.1 encoding&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;ASN.1 is a Type-Length-Value serialization format, but with the neat quirk that it can also handle the case when you don&amp;#39;t know the length of the value, but want to serialize it anyway! That quirk is only possible when ASN.1 is encoded according to &lt;/span&gt;&lt;span&gt;Basic Encoding Rules (BER.) There is a stricter encoding called DER (Distinguished Encoding Rules)&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;which enforces that a particular value only has a single correct encoding and disallows the cases where you can serialize values without knowing their eventual lengths.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://luca.ntop.org/Teaching/Appunti/asn1.html&quot;&gt;This page is a nice beginner&amp;#39;s guide to ASN.1&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;. I&amp;#39;d really recommend skimming that to get a good overview of ASN.1.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;There are a lot of built-in types in ASN.1. I&amp;#39;m only going to describe the minimum required to understand this vulnerability (mostly because I don&amp;#39;t know any more than that!) So let&amp;#39;s just start from the very first byte of a serialized ASN.1 object and figure out how to decode it:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;This first byte tells you the type, with the least significant 5 bits defining the type identifier. The special type identifier value of &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;0x1f&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;tells you that the type identifier doesn&amp;#39;t fit in those 5 bits and is instead encoded in a different way (which we&amp;#39;ll ignore):&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;/p&gt;
  
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEizzg9gXNiEAlpqdPX6dIJ-pzEqqCLLQgRmv0BPkemfLnoeJFYJVgOPrEm6MR8HJMgX88oyMorrni9bnqDYcIuTjMuqF4gqF9q-Upt4tvTQAlzJMoO5u1ZcgAYcSt6eGnLaXeqSQyDO1D2tV4BXPquPyyzosMl00q5xBdmHucTkCxNRKIWkLSXj0KyR/s600/image6%20%281%29%281%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEizzg9gXNiEAlpqdPX6dIJ-pzEqqCLLQgRmv0BPkemfLnoeJFYJVgOPrEm6MR8HJMgX88oyMorrni9bnqDYcIuTjMuqF4gqF9q-Upt4tvTQAlzJMoO5u1ZcgAYcSt6eGnLaXeqSQyDO1D2tV4BXPquPyyzosMl00q5xBdmHucTkCxNRKIWkLSXj0KyR/s600/image6%20%281%29%281%29.png&quot; border=&quot;0&quot; alt=&quot;Diagram showing first two bytes of a serialized ASN.1 object. The first byte in this case is the type and class identifier and the second is the length.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; title=&quot;Diagram showing first two bytes of a serialized ASN.1 object. The first byte in this case is the type and class identifier and the second is the length.&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c34 c8&quot;&gt;&lt;span class=&quot;c27 c26&quot;&gt;Diagram showing first two bytes of a serialized ASN.1 object. The first byte in this case is the type and class identifier and the second is the length.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;The upper two bits of the first byte tell you the class of the type: universal, application, content-specific or private. For us, we&amp;#39;ll leave that as 0 (universal.)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;Bit 6 is where the fun starts. A value of 1 tells us that this is a &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;primitive&lt;/span&gt;&lt;span&gt;&amp;nbsp;encoding which means that following the length are content bytes which can be directly interpreted as the intended type. For example, a primitive encoding of the string &amp;quot;HELLO&amp;quot; as an ASN.1 &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;printable string&lt;/span&gt;&lt;span&gt;&amp;nbsp;would have a length byte of &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;5&lt;/span&gt;&lt;span&gt;&amp;nbsp;followed by the ASCII characters &amp;quot;&lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;HELLO&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;quot;. All fairly straightforward.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;A value of 0 for bit 6 however tells us that this is a &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;constructed&lt;/span&gt;&lt;span&gt;&amp;nbsp;encoding. This means that the bytes following the length are not the &amp;quot;raw&amp;quot; content bytes for the type but are instead ASN.1 encodings of one or more &amp;quot;chunks&amp;quot; which need to be individually parsed and concatenated to form the final output value. And to make things extra complicated it&amp;#39;s also possible to specify a length value of &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;which means that you don&amp;#39;t even know how long the reconstructed output will be or how much of the subsequent input will be required to completely build the output.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;This final case (of a constructed type with indefinite length) is known as &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;indefinite&lt;/span&gt;&lt;span&gt;&amp;nbsp;form. The end of the input which makes up a single indefinite value is signaled by a serialized type with the identifier, constructed, class and length values all equal to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;, which is encoded as two &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;bytes.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c32 c8&quot; id=&quot;h.iu15q8vvc4lc&quot;&gt;&lt;span class=&quot;c31 c28&quot;&gt;ASN.1 bitstrings&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;Most of the ASN.1 string types require no special treatment; they&amp;#39;re just buffers of raw bytes. Some of them have length restrictions. For example: a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;BMP&lt;/span&gt;&lt;span&gt;&amp;nbsp;string must have an even length and a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;UNIVERSAL&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;string must be a multiple of 4 bytes in length, but that&amp;#39;s about it.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;ASN.1 &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;bitstrings&lt;/span&gt;&lt;span&gt;&amp;nbsp;are strings of bits as opposed to bytes. You could for example have a bitstring with a length of a single bit (so either a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;) or a bitstring with a length of 127 bits (so 15 full bytes plus an extra 7 bits.) &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;Encoded ASN.1 &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;bitstrings&lt;/span&gt;&lt;span&gt;&amp;nbsp;have an extra metadata byte after the length but before the contents, which encodes the number of unused &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;bits&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;in the final byte.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;/p&gt;
  
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhozw2VvZycyqovtb9-AdzBUGQAUR8Bt9lGRG4A0LS9aMYAohwNVGi7CAFrCGUG6Y3SGu1iFvpn85ZrrPiA0f6dxo2Qy18ypN6sf_LG7mNNMICekk9VOcWHMDE7ZtRoZQyeIiWhKr8D0Od3frzIFnEc6oYPM0CG9kGk4QWUVSAxMrqoD6km_Cy5V1ww/s1165/image1%20%282%29%283%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhozw2VvZycyqovtb9-AdzBUGQAUR8Bt9lGRG4A0LS9aMYAohwNVGi7CAFrCGUG6Y3SGu1iFvpn85ZrrPiA0f6dxo2Qy18ypN6sf_LG7mNNMICekk9VOcWHMDE7ZtRoZQyeIiWhKr8D0Od3frzIFnEc6oYPM0CG9kGk4QWUVSAxMrqoD6km_Cy5V1ww/s1165/image1%20%282%29%283%29.png&quot; border=&quot;0&quot; alt=&quot;Diagram showing the complete encoding of a 3-bit bitstring. The length of 2 includes the unused-bits count byte which has a value of 5, indicating that only the 3 most-significant bits of the final byte are valid.&quot; style=&quot;max-height: 750; max-width: 600px;&quot;title=&quot;Diagram showing the complete encoding of a 3-bit bitstring. The length of 2 includes the unused-bits count byte which has a value of 5, indicating that only the 3 most-significant bits of the final byte are valid.&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c34 c8&quot;&gt;&lt;span class=&quot;c27 c26&quot;&gt;Diagram showing the complete encoding of a 3-bit bitstring. The length of 2 includes the unused-bits count byte which has a value of 5, indicating that only the 3 most-significant bits of the final byte are valid.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c8 c14 c34&quot;&gt;&lt;span class=&quot;c26 c27&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c32 c8&quot; id=&quot;h.9dutmbj0iutz&quot;&gt;&lt;span class=&quot;c31 c28&quot;&gt;Parsing ASN.1&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;ASN.1 data always needs to be decoded in tandem with a template that tells the parser what data to expect and also provides output pointers to be filled in with the parsed output data. Here&amp;#39;s the template my test program uses to exercise the bitstring code:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e816d0e76cff75906d870663f8d39eaa14fc6487&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.1&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Template&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;simple_bitstring_template&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; SEC_ASN1_BIT_STRING &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;SEC_ASN1_MAY_STREAM&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// kind: bit string,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// &amp;nbsp;may be constructed&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// offset: in dest/src&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// sub: subtemplate for indirection&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// size: of output structure&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span&gt;A &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;SecASN1Item&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a very simple wrapper around a buffer. We can provide a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;for the parser to use to return the parsed bitstring then call the parser:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.800141608823d3e78f5e3937494968c764bff2e1&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.2&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;decoded &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;};&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c20&quot;&gt;PLArenaPool&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;pool &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;PORT_NewArena&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c20&quot;&gt;SECStatus&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;status &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; SEC_ASN1Decode&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// pool: arena for destination allocations&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;decoded&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// dest: decoded encoded items in to here&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;simple_bitstring_template&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// template&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;asn1_bytes&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// buf: asn1 input bytes&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;asn1_bytes_len&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// len: input size&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=&quot;c32 c8&quot; id=&quot;h.ge5rhouvh4pm&quot;&gt;&lt;span class=&quot;c28 c31&quot;&gt;NSS ASN.1 state machine&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;The state machine has two core data structures:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c7&quot;&gt;SEC_ASN1DecoderContext&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;- the overall parsing context&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_state&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;- a single parser state, kept in a doubly-linked list forming a stack of nested states&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c9&quot;&gt;Here&amp;#39;s a trimmed version of the state object showing the relevant fields:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.6e6d0d518a15f071678c6483b9dc57daeed428e3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.3&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;typedef&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_state_struct &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; SEC_ASN1DecoderContext &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Template&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;theTemplate&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_state_struct &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_state_struct &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; sec_asn1d_parse_place place&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;contents_length&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;pending&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;consumed&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;depth&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The main engine of the parsing state machine is the method &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;SEC_ASN1DecoderUpdate&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;which takes a context object, raw input buffer and length:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.ca1f754aaf2b9b2a69a0b772c008c3066c24eed5&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.4&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c20&quot;&gt;SECStatus&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;SEC_ASN1DecoderUpdate &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;SEC_ASN1DecoderContext &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;size_t len&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The current state is stored in the context object&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;current&lt;/span&gt;&lt;span&gt;&amp;nbsp;field, and that current &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;place&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;field determines the current state which the parser is in. Those states are defined here:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.58b2c4a0a10300b6306e34913640a092d86c5d56&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.5&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&amp;#8203;&amp;#8203;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;typedef&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;enum&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; beforeIdentifier&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringIdentifier&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterIdentifier&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; beforeLength&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringLength&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterLength&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; beforeBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringConstructedString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringGroup&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringLeaf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringSaveEncoding&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringSequence&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterConstructedString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterGroup&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterExplicit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterImplicit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterInline&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterPointer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterSaveEncoding&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; beforeEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; beforeChoice&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; duringChoice&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; afterChoice&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp; &amp;nbsp; notInUse&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_parse_place&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The state machine loop switches on the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;place&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;field to determine which method to call:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.34b38de34f5f395cb1366034a4fd68d5d626ae2c&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.6&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeIdentifier&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; consumed &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_parse_identifier &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; what &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;SEC_ASN1_Identifier&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;duringIdentifier&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; consumed &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_parse_more_identifier &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; what &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;SEC_ASN1_Identifier&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;afterIdentifier&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sec_asn1d_confirm_identifier &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Each state method which could consume input is passed a pointer (&lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;buf&lt;/span&gt;&lt;span&gt;) to the next unconsumed byte in the raw input buffer and a count of the remaining unconsumed bytes (&lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;).&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;It&amp;#39;s then up to each of those methods to return how much of the input they consumed, and signal any errors by updating the context object&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;field.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The parser can be recursive: a state can set its &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;-&amp;gt;place&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;field to a state which expects to handle a parsed child state and then allocate a new child state. For example when parsing an ASN.1 sequence:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.8eeaeea98c81e67701fd5ceeb50d55e628cd74e9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.7&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;duringSequence&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; state &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_push_state &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;theTemplate &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;PR_TRUE&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The current state sets its own next state to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;duringSequence&lt;/span&gt;&lt;span&gt;&amp;nbsp;then calls &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_push_state&lt;/span&gt;&lt;span&gt;&amp;nbsp;which allocates a new state object, with a new template and a copy of the parent&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;field.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_push_state&lt;/span&gt;&lt;span&gt;&amp;nbsp;updates the context&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;current&lt;/span&gt;&lt;span&gt;&amp;nbsp;field such that the next loop around &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;SEC_ASN1DecoderUpdate&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;will see this child state as the current state:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.4abe94039e6236e075539145b72103a31c4c2c18&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.8&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; cx&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;current &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;new_state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Note that the initial value of the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;place&lt;/span&gt;&lt;span&gt;&amp;nbsp;field (which determines the current state) of the newly allocated child is determined by the template. The final state in the state machine path followed by that child will then be responsible for popping itself off the state stack such that the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;duringSequence&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;state can be reached by its parent to consume the results of the child.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c32 c8 c15&quot; id=&quot;h.wuusy9tj5c7g&quot;&gt;&lt;span class=&quot;c31 c28&quot;&gt;Buffer management&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The buffer management is where the NSS ASN.1 parser starts to get really mind bending. If you read through the code you will notice an extreme lack of bounds checks when the output buffers are being filled in - there basically are none. For example, &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_leaf&lt;/span&gt;&lt;span&gt;&amp;nbsp;which copies the raw encoded string bytes for example simply &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;memcpy&amp;#39;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;s into the output buffer with no bounds checks that the length of the string matches the size of the buffer.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;Rather than using explicit bounds checks to ensure lengths are valid, the memory safety is instead supposed to be achieved by relying on the fact that decoding valid ASN.1 can never produce output which is larger than its input.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;That is, there are no forms of decompression or input expansion so any parsed output data must be equal to or shorter in length than the input which encoded it. NSS leverages this and over-allocates all output buffers to simply be as large as their inputs.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;For primitive strings this is quite simple: the length and input are provided so there&amp;#39;s nothing really to &lt;/span&gt;&lt;span&gt;go that wrong&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;. But for constructed strings this gets a little fiddly...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;One way to think of constructed strings is as trees of substrings, nested up to 32-levels deep. Here&amp;#39;s an example:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;/p&gt;
  
  
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWnoJoAO5ls05zNgJGzqsN-UTCkUxRl-o1NzXip0CTwvdJOCTXWxYeXnoMWZ47Ndbk0T0AZTcfOhRCGFN8sVbag29apOW4fp-hbZ5RWUsmgdhjcNBhcqqox8S-mGrZL3Lu4nAwpMTJBeStprEvPyqPm7vH84d9IdTRReK-S72A3IGlAPZis6Oj90QS/s706/image3%20%281%29%281%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWnoJoAO5ls05zNgJGzqsN-UTCkUxRl-o1NzXip0CTwvdJOCTXWxYeXnoMWZ47Ndbk0T0AZTcfOhRCGFN8sVbag29apOW4fp-hbZ5RWUsmgdhjcNBhcqqox8S-mGrZL3Lu4nAwpMTJBeStprEvPyqPm7vH84d9IdTRReK-S72A3IGlAPZis6Oj90QS/s706/image3%20%281%29%281%29.png&quot; border=&quot;0&quot; alt=&quot;An outer constructed definite length string with three children: a primitive string &amp;quot;abc&amp;quot;, a constructed indefinite length string and a primitive string &amp;quot;ghi&amp;quot;. The constructed indefinite string has two children, a primitive string &amp;quot;def&amp;quot; and an end-of-contents marker.&quot; style=&quot;max-height: 750; max-width: 600px;&quot; title=&quot;An outer constructed definite length string with three children: a primitive string &amp;quot;abc&amp;quot;, a constructed indefinite length string and a primitive string &amp;quot;ghi&amp;quot;. The constructed indefinite string has two children, a primitive string &amp;quot;def&amp;quot; and an end-of-contents marker.&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c34 c8 c15&quot;&gt;&lt;span class=&quot;c27 c26&quot;&gt;An outer constructed definite length string with three children: a primitive string &amp;quot;abc&amp;quot;, a constructed indefinite length string and a primitive string &amp;quot;ghi&amp;quot;. The constructed indefinite string has two children, a primitive string &amp;quot;def&amp;quot; and an end-of-contents marker.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;We start with a constructed definite length string. The string&amp;#39;s length value &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;is the complete size of the remaining input which makes up this string; that number of input bytes should be parsed as substrings and concatenated to form the parsed output.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;At this point the NSS ASN.1 string parser allocates the output buffer for the parsed output string using the length &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;L&lt;/span&gt;&lt;span&gt;&amp;nbsp;of that first input string. This buffer is an over-allocated worst case. The part which makes it really fun though is that NSS allocates the output buffer then promptly throws away that length! This might not be so obvious from quickly glancing through the code though. The buffer which is allocated is stored as the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;field of a buffer wrapper type:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.a656829ca34a4322a58a35aea96a9b25f2306e10&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.9&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;typedef&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;cssm_data &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; size_t &lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; uint8_t &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;__nullable &lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Oid&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;(Recall that we passed in a pointer to a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the template; it&amp;#39;s the &lt;/span&gt;&lt;span class=&quot;c30&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;field of that which gets filled in with the allocated string buffer pointer here. This type is very slightly different between NSS and Apple&amp;#39;s fork, but the difference doesn&amp;#39;t matter here.)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;That &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Length&lt;/span&gt;&lt;span&gt;&amp;nbsp;field is &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;the size of the allocated &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer. It&amp;#39;s a (type-specific) count which determines how many bits or bytes of the buffer pointed to by &lt;/span&gt;&lt;span class=&quot;c30&quot;&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;are valid. I say type-specific because for bit-strings &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Length&lt;/span&gt;&lt;span&gt;&amp;nbsp;is stored in units of bits but for other strings it&amp;#39;s in units of bytes. (&lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1245528&quot;&gt;CVE-2016-1950&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;was a bug in NSS where the code mixed up those units.)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Rather than storing the allocated buffer size along with the buffer pointer, each time a substring/child string is encountered the parser walks back up the stack of currently-being-parsed states to find the inner-most definite length string. &lt;/span&gt;&lt;span&gt;As it&amp;#39;s walking up the states it examines each state to determine how much of its input it has consumed in order to be able to determine whether it&amp;#39;s the case that the current to-be-parsed substring is indeed completely enclosed within the inner-most enclosing definite length string.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;If that sounds complicated, it is! The logic which does this is here, and it took me a good few days to pull it apart enough to figure out what this was doing:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.9b3aa6a323d6b6a86a105c4a1b098ad0fb513030&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.10&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;parent &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_get_enclosing_construct&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;parent &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;indefinite&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; parent &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_get_enclosing_construct&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;remaining &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;parent &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_check_and_subtract_length&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;remaining&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;consumed&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;||&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/* If parent-&amp;gt;indefinite is true, parent-&amp;gt;contents_length is&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* zero and this is a no-op. */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_check_and_subtract_length&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;remaining&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;contents_length&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;||&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/* If parent-&amp;gt;indefinite is true, then ensure there is enough&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* space for an EOC tag of 2 bytes. */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;indefinite&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_check_and_subtract_length&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;remaining&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/* This element is larger than its enclosing element, which is&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* invalid. */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;parent &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;sec_asn1d_get_enclosing_construct&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;parent&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;indefinite&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;It first walks up the state stack to find the innermost constructed definite state and uses its &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;pending&lt;/span&gt;&lt;span&gt;&amp;nbsp;value as an upper bound. It then walks the state stack again and for each in-between state subtracts from that original value of &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;pending&lt;/span&gt;&lt;span&gt;&amp;nbsp;how many bytes could have been consumed by those in between states. It&amp;#39;s pretty clear that the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;pending&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;value is therefore vitally important; it&amp;#39;s used to determine an upper bound so if we could mess with it this &amp;quot;bounds check&amp;quot; could go wrong.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;After figuring out that this was pretty clearly the only place where any kind of bounds checking takes place I looked back at the fix more closely.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;We know that &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;is only the function which changed:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.42f4c91c05b2a51603f4110e33201853c8d03da3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.11&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_parse_bit_string &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*PORT_Assert (state-&amp;gt;pending &amp;gt; 0); */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;item &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23 c12&quot;&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c12 c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;len &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;needBytes&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dprintf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c22&quot;&gt;&amp;quot;decodeError: parse_bit_string remainder oflow\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_SetError &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;SEC_ERROR_BAD_DER&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;decodeError&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;bit_string_unused_bits &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;duringBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The highlighted region of the function are the characters which were removed by the patch. This function is meant to return the number of input bytes (pointed to by &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;buf&lt;/span&gt;&lt;span&gt;) which it consumed and my initial hunch was to notice that the patch removed a path through this function where you could get the count of input bytes consumed and &lt;/span&gt;&lt;span class=&quot;c30&quot;&gt;pending&lt;/span&gt;&lt;span&gt;&amp;nbsp;out-of-sync. It should be the case that when they return 1 in the removed code they also decrement &lt;/span&gt;&lt;span class=&quot;c30&quot;&gt;state-&amp;gt;pending&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;, as they do in the other place where this function returns 1.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;I spent quite a while trying to figure out how you could actually turn that into something useful but in the end I don&amp;#39;t think you can.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;So what else is going on here?&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;This state is reached with &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;buf&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointing to the first byte after the length value of a primitive bitstring. &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;contents_length&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the value of that parsed length. Bitstrings, as discussed earlier, are a unique ASN.1 string type in that they have an extra meta-data byte at the beginning (the unused-bits count byte.) It&amp;#39;s perfectly fine to have a definite zero-length string - indeed that&amp;#39;s (sort-of) handled earlier than this in the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;prepareForContents&lt;/span&gt;&lt;span&gt;&amp;nbsp;state, which short-circuits straight to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;afterEndOfContents&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.f2043ae4749f0304b8055ed271eca98bdb5b783d&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.12&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;indefinite&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;* A zero-length simple or constructed string; we are done.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;afterEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Here they&amp;#39;re detecting a definite-length string type with a content length of 0. But this doesn&amp;#39;t handle the edge case of a bitstring which consists only of the unused-bits count byte. The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;contents_length&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;value of that bitstring will be 1, but it doesn&amp;#39;t actually have any &amp;quot;contents&amp;quot;. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;It&amp;#39;s this case which the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;(state-&amp;gt;contents_length == 1)&lt;/span&gt;&lt;span&gt;&amp;nbsp;conditional in &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;matches:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.cc85cec956c682ae2159b3e2792de03dfdc37f3c&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.13&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;item &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;By setting &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;place&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;beforeEndOfContents&lt;/span&gt;&lt;span&gt;&amp;nbsp;they are again trying to short-circuit the state machine to skip ahead to the state after the string contents have been consumed. But here they take an additional step which they didn&amp;#39;t take when trying to achieve exactly the same thing in &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;prepareForContents&lt;/span&gt;&lt;span&gt;. In addition to updating &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;place&lt;/span&gt;&lt;span&gt;&amp;nbsp;they also &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span&gt;&amp;nbsp;out the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;field and set the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Length&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;I mentioned earlier that the new child states which are allocated to recursively parse the sub-strings of constructed strings get a &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;copy&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the parent&amp;#39;s dest field (which is a pointer to a pointer to the output buffer.) This makes sense: that output buffer is only allocated once then gets recursively filled-in in a linear fashion by the children. (Technically this isn&amp;#39;t actually how it works if the outermost string is indefinite length, there&amp;#39;s separate handling for that case which instead builds a linked-list of substrings which are eventually concatenated, see &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_concat_substrings&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;If the output buffer is only allocated once, what happens if you set &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;like they do here? Taking a step back, does that actually make any sense at all?&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;No, I don&amp;#39;t think it makes any sense. Setting &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;at this point should at the very least cause a memory leak, as it&amp;#39;s the only pointer to the output buffer.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The fun part though is that that&amp;#39;s not the only consequence of &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span&gt;ing out that pointer. &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;item-&amp;gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;is used to signal something else.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Here&amp;#39;s a snippet from &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;prepare_for_contents&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;when it&amp;#39;s determining whether there&amp;#39;s enough space in the output buffer for this substring&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.d41f98cf14153779bd60c5cf6b4f85e93e5bdb90&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.14&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;* If we are a substring of a constructed string, then we may&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;* not have to allocate anything (because our parent, the&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;* actual constructed string, did it for us). &amp;nbsp;If we are a&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;* substring and we *do* have to allocate, that means our&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;* parent is an indefinite-length, so we allocate from our pool;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;* later our parent will copy our string into the aggregated&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;* whole and free our pool allocation.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; poolp &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;our_pool&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; alloc_len &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;As the comment implies, if both &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;item-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;is &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span&gt;&amp;nbsp;at this point and &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;substring&lt;/span&gt;&lt;span&gt;&amp;nbsp;is true, then (they believe) it &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;must&lt;/span&gt;&lt;span&gt;&amp;nbsp;be the case that they are currently parsing a substring of an outer-level indefinite string, which has no definite-sized buffer already allocated. In that case the meaning of the &lt;/span&gt;&lt;span class=&quot;c30&quot;&gt;item-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer is different to that which we describe earlier: it&amp;#39;s merely a temporary buffer meant to hold only this substring. Just above here &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;alloc_len&lt;/span&gt;&lt;span&gt;&amp;nbsp;was set to the content length of this substring; and for the outer-&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;definite&lt;/span&gt;&lt;span&gt;-length case it&amp;#39;s vitally important that &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;alloc_len&lt;/span&gt;&lt;span&gt;&amp;nbsp;then gets set to 0 here (which is really indicating that a buffer has &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;already&lt;/span&gt;&lt;span&gt;&amp;nbsp;been allocated and they &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;must not&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;allocate a new one.)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;To emphasize the potentially subtle point: the issue is that using this conjunction (&lt;/span&gt;&lt;span class=&quot;c30&quot;&gt;state-&amp;gt;substring &amp;amp;&amp;amp; !item-&amp;gt;Data&lt;/span&gt;&lt;span&gt;) for determining whether this a substring of a definite length or outer-level-indefinite string is &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;the same as the method used by the convoluted bounds checking code we saw earlier. That method walks up the current state stack and checks the indefinite bits of the super-strings to determine whether they&amp;#39;re processing a substring of an outer-level-indefinite string.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;Putting that all together, you might be able to see where this is going... (but it is still pretty subtle.)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;Assume that we have an outer definite-length constructed bitstring with three primitive bitstrings as substrings:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgrOQ03pJyD_2kyYzOGet_H7mP9Lt9Q297bOTvQ_nuYVxzItU8QoydNBJKi9CS537QEi5dSLjoK_y7rEw-VouOmd52e30UMUqgMCQWA06maNKRshSqr2eyyaIHqtfy-okXJy2qxcsiBuNvNO8FXGCHXSwjAzEWl5esvG0N8ObbRPK3eIOam7z3WMQMG/s831/image5%20%281%29%281%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgrOQ03pJyD_2kyYzOGet_H7mP9Lt9Q297bOTvQ_nuYVxzItU8QoydNBJKi9CS537QEi5dSLjoK_y7rEw-VouOmd52e30UMUqgMCQWA06maNKRshSqr2eyyaIHqtfy-okXJy2qxcsiBuNvNO8FXGCHXSwjAzEWl5esvG0N8ObbRPK3eIOam7z3WMQMG/s831/image5%20%281%29%281%29.png&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;max-height: 750; max-width: 600px; &quot;title=&quot;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Upon encountering the first outer-most definite length constructed bitstring, the code will allocate a fixed-size buffer, large enough to store all the remaining input which makes up this string, which in this case is 42 bytes. At this point &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;points to that buffer.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;They then allocate a child state, which gets a copy of the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer (not a copy of the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span&gt;&amp;nbsp;object; a copy of a pointer &lt;/span&gt;&lt;span class=&quot;c26&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;it), and proceed to parse the first child substring.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;This is a primitive bitstring with a length of &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;which triggers the vulnerable path in &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span&gt;&amp;nbsp;and sets &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span&gt;. The state machine skips ahead to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;beforeEndOfContents&lt;/span&gt;&lt;span&gt;&amp;nbsp;then eventually the next substring gets parsed - this time with &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest-&amp;gt;Data == NULL&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Now the logic goes wrong in a bad way and, as we saw in the snippet above, a new &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer gets allocated which is the size of only this substring (2 bytes) when in fact &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;should already point to a buffer large enough to hold the entire outer-level-indefinite input string. This bitstring&amp;#39;s contents then get parsed and copied into that buffer.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Now we come to the third substring. &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;is no longer &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span&gt;; but the code now has no way of determining that the buffer was in fact only (erroneously) allocated to hold a single substring. It believes the invariant that &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;item-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;only gets allocated &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;once&lt;/span&gt;&lt;span&gt;, when the first outer-level definite length string is encountered, and it&amp;#39;s that fact alone which it uses to determine whether &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;points to a buffer large enough to have this substring appended to it. It then happily appends this third substring, writing outside the bounds of the buffer allocated to store only the second substring.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c17 c28&quot;&gt;This gives you a great memory corruption primitive: you can cause allocations of a controlled size and then overflow them with an arbitrary number of arbitrary bytes.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;Here&amp;#39;s an example encoding for an ASN.1 bitstring which triggers this issue:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.1261584b92e8184a2715fd7e3223a95479b2f4e0&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.15&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp;uint8_t concat_bitstrings_constructed_definite_with_zero_len_realloc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[]&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;ASN1_CLASS_UNIVERSAL &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;ASN1_CONSTRUCTED &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;ASN1_BIT_STRING&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// (0x23)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0x4a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// initial allocation size&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ASN1_CLASS_UNIVERSAL &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;ASN1_PRIMITIVE &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;ASN1_BIT_STRING&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0x1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// force item-&amp;gt;Data = NULL&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// number of unused bits in the final byte&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ASN1_CLASS_UNIVERSAL &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;ASN1_PRIMITIVE &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;ASN1_BIT_STRING&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0x2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// this is the reallocation size&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// number of unused bits in the final byte&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// only byte of bitstring&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ASN1_CLASS_UNIVERSAL &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;ASN1_PRIMITIVE &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;ASN1_BIT_STRING&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// 64 actual bytes, plus the remainder, will cause 0x40 byte memcpy one byte in to 2 byte allocation&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// number of unused bits in the final byte&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;// -- continues for overflow&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=&quot;c8 c15 c32&quot; id=&quot;h.vxzzlpbs8x7&quot;&gt;&lt;span class=&quot;c31 c28&quot;&gt;Why wasn&amp;#39;t this found by fuzzing?&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;This is a reasonable question to ask. This source code is really really hard to audit, even with the diff it was at least a week of work to figure out the true root cause of the bug. I&amp;#39;m not sure if I would have spotted this issue during a code audit. It&amp;#39;s very broken but it&amp;#39;s quite subtle and you have to figure out a &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;lot&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;about the state machine and the bounds-checking rules to see it - I think I might have given up before I figured it out and gone to look for something easier.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;But the trigger test-case is neither structurally complex nor large, and feels within-grasp for a fuzzer. So why wasn&amp;#39;t it found? I&amp;#39;ll offer two points for discussion:&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c8 c15 c33&quot; id=&quot;h.3uiruiqbxcn4&quot;&gt;&lt;span class=&quot;c10&quot;&gt;Perhaps it&amp;#39;s not being fuzzed?&lt;/span&gt;&lt;/h3&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Or at least, it&amp;#39;s not being fuzzed in the exact form which it appears in Apple&amp;#39;s Security.framework library. I understand that both Mozilla and Google do fuzz the NSS ASN.1 parser and have found a bunch of vulnerabilities, but note that the key part of the vulnerable code (&amp;quot;&lt;/span&gt;&lt;span class=&quot;c30&quot;&gt;|| (state-&amp;gt;contents_length == 1&amp;quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=&quot;c30&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;) isn&amp;#39;t present in upstream NSS (more on that below.)&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c33 c8 c15&quot; id=&quot;h.d8eztr5gmfv7&quot;&gt;&lt;span class=&quot;c10&quot;&gt;Can it be fuzzed effectively?&lt;/span&gt;&lt;/h3&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Even if you did build the Security.framework version of the code and used a coverage guided fuzzer, you might well not trigger any crashes. The code uses a custom heap allocator and you&amp;#39;d have to either replace that with direct calls to the system allocator or use ASAN&amp;#39;s custom allocator hooks. Note that &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://searchfox.org/mozilla-central/source/nsprpub/lib/ds/plarena.h#128&quot;&gt;upstream NSS does do that&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but as I &lt;/span&gt;&lt;span&gt;understand&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;it, Apple&amp;#39;s fork doesn&amp;#39;t.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c32 c8 c15&quot; id=&quot;h.k3orbgexvo70&quot;&gt;&lt;span class=&quot;c31 c28&quot;&gt;History&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;I&amp;#39;m always interested in not just understanding how a vulnerability works but how it was introduced. This case is a particularly compelling example because once you understand the bug, the code construct initially looks extremely suspicious. It &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;only&lt;/span&gt;&lt;span&gt;&amp;nbsp;exists in Apple&amp;#39;s fork of NSS and the only impact of that change is to introduce a perfect memory corruption primitive. But let&amp;#39;s go through the history of the code to convince ourselves that it is &lt;/span&gt;&lt;span&gt;much more likely that it was just an unfortunate accident:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The earliest reference to this code I can find is &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://github.com/jrmuizel/mozilla-cvs-history/blob/5dea64f5a5bc55978a9f4632a5f59679572c7985/security/nss/lib/util/secasn1d.c&quot;&gt;this, which appears to be the initial checkin in the Mozilla CVS repo on March 31, 2000&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.fa2500551086942ee26203176218d93c890969af&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.16&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_parse_bit_string &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;len &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;needBytes&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_SetError &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;SEC_ERROR_BAD_DER&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;decodeError&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;bit_string_unused_bits &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;duringBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;On August 24th, 2001 the form of the code changed to something like the current version, &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://github.com/jrmuizel/mozilla-cvs-history/commit/4f4edc3a5054512a54fda651497d1dafe77f7656&quot;&gt;in &lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://github.com/jrmuizel/mozilla-cvs-history/commit/4f4edc3a5054512a54fda651497d1dafe77f7656&quot;&gt;this commit&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://github.com/jrmuizel/mozilla-cvs-history/commit/4f4edc3a5054512a54fda651497d1dafe77f7656&quot;&gt;&amp;nbsp;with the message &amp;quot;Memory leak fixes.&amp;quot;&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.0b11f6358ac77c720b0e948095a2bc43c83ffaf3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.17&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c16&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_parse_bit_string &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*PORT_Assert (state-&amp;gt;pending &amp;gt; 0); */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c4&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c4&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c4&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;dest &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c20 c4&quot;&gt;SECItem&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;item &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c20 c4&quot;&gt;SECItem&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;*)(&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;data &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;len &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c4&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c4&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c4&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1 c4&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3 c4&quot;&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1 c4&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;len &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;needBytes&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_SetError &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;SEC_ERROR_BAD_DER&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;decodeError&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;bit_string_unused_bits &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;duringBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c14&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;This commit added the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;item-&amp;gt;data = NULL&lt;/span&gt;&lt;span&gt;&amp;nbsp;line but here it&amp;#39;s only reachable when &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;pending == 0&lt;/span&gt;&lt;span&gt;. I am fairly convinced that this was dead code and not actually reachable (and that the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;PORT_Assert&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;which they commented out was actually valid.)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;beforeBitString&lt;/span&gt;&lt;span&gt;&amp;nbsp;state (which leads to the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span&gt;&amp;nbsp;method being called) will always be preceded by the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;afterLength&lt;/span&gt;&lt;span&gt;&amp;nbsp;state (implemented by &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_prepare_for_contents.&lt;/span&gt;&lt;span&gt;) On entry to the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;afterLength&lt;/span&gt;&lt;span&gt;&amp;nbsp;state &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;contents_length&lt;/span&gt;&lt;span&gt;&amp;nbsp;is equal to the parsed length field and &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_prepare_for_contents&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;does:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;state-&amp;gt;pending = state-&amp;gt;contents_length;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;So in order to reach &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;pending == 0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;contents_length&lt;/span&gt;&lt;span&gt;&amp;nbsp;would also need to be &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_prepare_for_contents&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;That means that in the if/else decision tree below, at least one of the two conditionals &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;must&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;be true:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b58e1df8cbca28721618ec8bc93413630d1f04c0&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.18&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;indefinite&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* A zero-length simple or constructed string; we are done.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;afterEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;indefinite&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* An indefinite-length string *must* be constructed!&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dprintf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c22&quot;&gt;&amp;quot;decodeError: prepare for contents indefinite not construncted\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_SetError &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;SEC_ERROR_BAD_DER&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;decodeError&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;yet it is required that &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;neither&lt;/span&gt;&lt;span&gt;&amp;nbsp;of those be true in order to reach the final &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;else&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is the only path to reaching &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span&gt;&amp;nbsp;via the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;beforeBitString&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;state:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.fc4cdcb36935579371eeed8ebee2943f0d688093&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.19&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* A non-zero-length simple string.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;underlying_kind &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;SEC_ASN1_BIT_STRING&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;else&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;duringLeaf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;So at that point (24 August 2001) the NSS codebase had some dead code which looked like it was trying to handle parsing an ASN.1 &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;bitstring&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;which didn&amp;#39;t have an unused-bits byte. As we&amp;#39;ve seen in the rest of this post though, that handling is quite wrong, but it didn&amp;#39;t matter as the code was unreachable. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;The earliest reference to Apple&amp;#39;s fork of that NSS code I can find is in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://github.com/apple-oss-distributions/SecurityNssAsn1/tree/SecurityNssAsn1-11&quot;&gt;SecurityNssAsn1-11&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;package for OS X 10.3 (Panther) which would have been released October 24th, 2003. In that project we can find a &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;CHANGES.apple&lt;/span&gt;&lt;span&gt;&amp;nbsp;file which tells us &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://github.com/apple-oss-distributions/SecurityNssAsn1/blob/SecurityNssAsn1-11/CHANGES.Apple&quot;&gt;a little more about the origins of Apple&amp;#39;s fork&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;General Notes&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;-------------&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;1. This module, SecurityNssAsn1, is based on the Netscape Security&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;Services (&amp;quot;NSS&amp;quot;) portion of the Mozilla Browser project. The &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;source upon which SecurityNssAsn1 was based was pulled from &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c7 c19&quot;&gt;&amp;nbsp; &amp;nbsp;the Mozilla CVS repository, top of tree as of January 21, 2003. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;The SecurityNssAsn1 project contains only those portions of NSS &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;used to perform BER encoding and decoding, along with minimal &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;support required by the encode/decode routines.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;2. The directory structure of SecurityNssAsn1 differs significantly&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;from that of NSS, rendering simple diffs to document changes&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;unwieldy. Diffs could still be performed on a file-by-file basis.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;3. All Apple changes are flagged by the symbol __APPLE__, either&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; &amp;nbsp;via &amp;quot;#ifdef __APPLE__&amp;quot; or in a comment. &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;That document continues on to outline a number of broad changes which Apple made to the code, including reformatting the code and changing a number of APIs to add new features. We also learn the date at which Apple forked the code (January 21, 2003) so we can go back through a github mirror of the mozilla CVS repository to find &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&lt;a class=&quot;c241&quot; href=&quot;https://github.com/jrmuizel/mozilla-cvs-history/blob/1f25ac6059384ad941cb20481acef0e6b4d46dbd/security/nss/lib/util/secasn1d.c&quot;&gt;the version of secasn1d.c as it would have appeared then&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and diff them.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;From that diff we can see that the Apple developers actually made fairly significant changes in this initial import, indicating that this code underwent some level of review prior to importing it. For example:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.29dca04094676297fb74e68684dc5ebea1c1ec48&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.20&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1584&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1692&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; * If our child was just our end-of-contents octets, we are done.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;#ifdef&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp; __APPLE__&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/* &lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Without the check for !child-&amp;gt;indefinite, this path could&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* be taken erroneously if the child is indefinite!&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c23&quot;&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;endofcontents &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;indefinite&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;#else&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;endofcontents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;They were pretty clearly looking for potential correctness issues with the code while they were refactoring it. The example shown above is a non-trivial change and one which persists to this day. (And I have no idea whether the NSS or Apple version is correct!) Reading the diff we can see that not every change ended up being marked with &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;#ifdef __APPLE__&lt;/span&gt;&lt;span&gt;&amp;nbsp;or a comment. They also made this change to &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.f88b5d5286baf17de20f09e61c06eac6b0acbd51&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.21&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1372&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;26&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1469&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/*PORT_Assert (state-&amp;gt;pending &amp;gt; 0); */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;PORT_Assert &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c2&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SECItem&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;item &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SECItem&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;data &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;len &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SECItem&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;item &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SECItem&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c23&quot;&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;In the context of all the other changes in this initial import this change looks much less suspicious than I first thought. My guess is that the Apple developers thought that Mozilla had missed handling the case of a bitstring with only the unused-bits bytes and attempted to add support for it. It looks like the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;state-&amp;gt;pending == 0&lt;/span&gt;&lt;span&gt;&amp;nbsp;conditional must have been Mozilla&amp;#39;s check for handling a 0-length bitstring so therefore it was quite reasonable to think that the way it was handling that case by &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;NULL&lt;/span&gt;&lt;span&gt;ing out &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;item-&amp;gt;data&lt;/span&gt;&lt;span&gt;&amp;nbsp;was the right thing to do, so it must also be correct to add the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;contents_length == 1&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;nbsp;case here.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;In reality the &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;contents_length == 1&lt;/span&gt;&lt;span&gt;&amp;nbsp;case was handled perfectly correctly anyway in &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_more_bit_string&lt;/span&gt;&lt;span&gt;, but it wasn&amp;#39;t unreasonable to assume that it had been overlooked based on what looked like a special case handling for the missing unused-bits byte in &lt;/span&gt;&lt;span class=&quot;c7&quot;&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;The fix for the bug was simply to revert the change made during the initial import 18 years ago, making the dangerous but unreachable code unreachable once more:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.cc85cec956c682ae2159b3e2792de03dfdc37f3c&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.22&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c25&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c18&quot;&gt;&lt;td class=&quot;c5&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;pending &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;item &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;SecAsn1Item&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c20&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;place &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;contents_length &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23 c12&quot;&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11 c12&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c16 c12&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c11&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3 c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1 c12&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6&quot;&gt;&lt;span class=&quot;c3&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=&quot;c32 c8 c15&quot; id=&quot;h.kac2os93mix4&quot;&gt;&lt;span class=&quot;c31 c28&quot;&gt;Conclusions&lt;/span&gt;&lt;/h2&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;Forking complicated code is complicated. In this case it took almost two decades to in the end just revert a change made during import. Even verifying whether this revert is correct is really hard.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;The Mozilla and Apple codebases have continued to diverge since 2003. As I discovered slightly too late to be useful, the Mozilla code now has more comments trying to explain the decoder&amp;#39;s &amp;quot;novel&amp;quot; memory safety approach.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;Rewriting this code to be more understandable (and maybe even memory safe) is also distinctly non-trivial. The code doesn&amp;#39;t just implement ASN.1 decoding; it also has to support safely decoding incorrectly encoded data, as described by this verbatim comment for example:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * Okay, this is a hack. &amp;nbsp;It *should* be an error whether&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * pending is too big or too small, but it turns out that&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * we had a bug in our *old* DER encoder that ended up&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * counting an explicit header twice in the case where&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * the underlying type was an ANY. &amp;nbsp;So, because we cannot&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * prevent receiving these (our own certificate server can&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * send them to us), we need to be lenient and accept them.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * To do so, we need to pretend as if we read all of the&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * bytes that the header said we would find, even though&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; * we actually came up short.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span class=&quot;c19 c7&quot;&gt;&amp;nbsp; */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c6 c8 c15&quot;&gt;&lt;span&gt;Verifying that a rewritten, simpler decoder also handles every hard-coded edge case correctly probably leads to it not being so simple after all.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c0 c15&quot;&gt;&lt;span class=&quot;c9&quot;&gt;&lt;/span&gt;&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://googleprojectzero.blogspot.com/feeds/1033743652169779882/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://googleprojectzero.blogspot.com/2022/04/cve-2021-30737-xerubs-2021-ios-asn1.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/1033743652169779882'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/1033743652169779882'/><link rel='alternate' type='text/html' href='https://googleprojectzero.blogspot.com/2022/04/cve-2021-30737-xerubs-2021-ios-asn1.html' title='CVE-2021-30737, @xerub&#39;s 2021 iOS ASN.1 Vulnerability'/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/blank.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3Zm78R4JD6H57okd_d1wpa26R9mX0Q746I5hMzwV8EMxosHbDjO5l5tH2hEpkq0m3S7AMmHOU9_6J7veCrxIxq66ilLSKJCLgHBGalgzSo0MrCulaERSbqUhXkHwqNbZdeVg4JWisV2ZuDb_j_AxLxvzX3t1EEtp396DCTt6fYeihuTRsevnnGUXD/s72-c/image2%20%281%29%281%29.png" height="72" width="72"/><thr:total>0</thr:total></entry>