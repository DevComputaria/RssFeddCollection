<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><entry xmlns='http://www.w3.org/2005/Atom' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-4838136820032157985.post-2714099021755665939</id><published>2021-04-22T11:05:00.005-07:00</published><updated>2022-08-23T12:46:37.338-07:00</updated><title type='text'>Designing sockfuzzer, a network syscall fuzzer for XNU</title><content type='html'>&lt;style type=&quot;text/css&quot;&gt;@import url(&#39;https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw&#39;);.lst-kix_pr131atimb8l-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_pr131atimb8l-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_pr131atimb8l-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_pr131atimb8l-2&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_785jj4szr34a-4{list-style-type:none}ul.lst-kix_hg7n0a8dlgvf-6{list-style-type:none}.lst-kix_pr131atimb8l-7&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_785jj4szr34a-5{list-style-type:none}ul.lst-kix_hg7n0a8dlgvf-5{list-style-type:none}ul.lst-kix_785jj4szr34a-6{list-style-type:none}ul.lst-kix_hg7n0a8dlgvf-4{list-style-type:none}ul.lst-kix_785jj4szr34a-7{list-style-type:none}ul.lst-kix_hg7n0a8dlgvf-3{list-style-type:none}ul.lst-kix_785jj4szr34a-8{list-style-type:none}.lst-kix_pr131atimb8l-5&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_hg7n0a8dlgvf-8{list-style-type:none}.lst-kix_pr131atimb8l-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_pr131atimb8l-8&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_hg7n0a8dlgvf-7{list-style-type:none}ol.lst-kix_n5z70wgxvefs-8.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-8 0}ul.lst-kix_785jj4szr34a-0{list-style-type:none}ul.lst-kix_785jj4szr34a-1{list-style-type:none}ul.lst-kix_785jj4szr34a-2{list-style-type:none}.lst-kix_pr131atimb8l-6&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_785jj4szr34a-3{list-style-type:none}.lst-kix_n5z70wgxvefs-5&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-5}.lst-kix_qihahoz6j83w-8&gt;li:before{content:&quot;\0025a0  &quot;}ol.lst-kix_n5z70wgxvefs-2.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-2 0}.lst-kix_qihahoz6j83w-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_qihahoz6j83w-5&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_dpq1lef19uzo-8{list-style-type:none}ul.lst-kix_xh6dzfiz70hf-6{list-style-type:none}ul.lst-kix_xh6dzfiz70hf-5{list-style-type:none}.lst-kix_qihahoz6j83w-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_qihahoz6j83w-6&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_xh6dzfiz70hf-4{list-style-type:none}ul.lst-kix_xh6dzfiz70hf-3{list-style-type:none}ul.lst-kix_xh6dzfiz70hf-2{list-style-type:none}ul.lst-kix_xh6dzfiz70hf-1{list-style-type:none}ul.lst-kix_xh6dzfiz70hf-0{list-style-type:none}ul.lst-kix_dpq1lef19uzo-0{list-style-type:none}ul.lst-kix_dpq1lef19uzo-1{list-style-type:none}.lst-kix_qihahoz6j83w-2&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_dpq1lef19uzo-2{list-style-type:none}ul.lst-kix_dpq1lef19uzo-3{list-style-type:none}.lst-kix_qihahoz6j83w-3&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_dpq1lef19uzo-4{list-style-type:none}ul.lst-kix_dpq1lef19uzo-5{list-style-type:none}ul.lst-kix_dpq1lef19uzo-6{list-style-type:none}ul.lst-kix_xh6dzfiz70hf-8{list-style-type:none}ul.lst-kix_dpq1lef19uzo-7{list-style-type:none}ul.lst-kix_xh6dzfiz70hf-7{list-style-type:none}.lst-kix_n5z70wgxvefs-1&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-1}.lst-kix_qihahoz6j83w-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_qihahoz6j83w-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_pijsqepbbzpb-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_1n620a6l6s3g-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_dpq1lef19uzo-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_dpq1lef19uzo-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_1n620a6l6s3g-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_pijsqepbbzpb-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_dpq1lef19uzo-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_n5z70wgxvefs-7&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-7}.lst-kix_pijsqepbbzpb-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_1n620a6l6s3g-3&gt;li:before{content:&quot;\0025cf  &quot;}ol.lst-kix_n5z70wgxvefs-3.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-3 0}.lst-kix_1n620a6l6s3g-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_1n620a6l6s3g-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_pijsqepbbzpb-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_pijsqepbbzpb-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_dpq1lef19uzo-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_pijsqepbbzpb-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_1n620a6l6s3g-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_1n620a6l6s3g-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_1n620a6l6s3g-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_dpq1lef19uzo-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_1n620a6l6s3g-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_pijsqepbbzpb-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_dpq1lef19uzo-1&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_g9bgj4bu2h0-0{list-style-type:none}ul.lst-kix_g9bgj4bu2h0-2{list-style-type:none}.lst-kix_dpq1lef19uzo-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_dpq1lef19uzo-4&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_g9bgj4bu2h0-1{list-style-type:none}.lst-kix_pijsqepbbzpb-6&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_hg7n0a8dlgvf-2{list-style-type:none}ul.lst-kix_hg7n0a8dlgvf-1{list-style-type:none}.lst-kix_pijsqepbbzpb-7&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_hg7n0a8dlgvf-0{list-style-type:none}.lst-kix_dpq1lef19uzo-3&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_g9bgj4bu2h0-8{list-style-type:none}ul.lst-kix_pijsqepbbzpb-7{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-7{list-style-type:none}ul.lst-kix_g9bgj4bu2h0-7{list-style-type:none}ul.lst-kix_pijsqepbbzpb-8{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-8{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-5{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-6{list-style-type:none}ul.lst-kix_1n620a6l6s3g-8{list-style-type:none}ul.lst-kix_g9bgj4bu2h0-4{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-3{list-style-type:none}ul.lst-kix_g9bgj4bu2h0-3{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-4{list-style-type:none}ul.lst-kix_g9bgj4bu2h0-6{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-1{list-style-type:none}ul.lst-kix_g9bgj4bu2h0-5{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-2{list-style-type:none}ul.lst-kix_1n620a6l6s3g-3{list-style-type:none}ul.lst-kix_pijsqepbbzpb-0{list-style-type:none}ul.lst-kix_qvcewxmuzrg7-0{list-style-type:none}ul.lst-kix_1n620a6l6s3g-2{list-style-type:none}ul.lst-kix_pijsqepbbzpb-1{list-style-type:none}ul.lst-kix_1n620a6l6s3g-1{list-style-type:none}ul.lst-kix_pijsqepbbzpb-2{list-style-type:none}ul.lst-kix_1n620a6l6s3g-0{list-style-type:none}ul.lst-kix_pijsqepbbzpb-3{list-style-type:none}ul.lst-kix_1n620a6l6s3g-7{list-style-type:none}ul.lst-kix_pijsqepbbzpb-4{list-style-type:none}ul.lst-kix_1n620a6l6s3g-6{list-style-type:none}ul.lst-kix_pijsqepbbzpb-5{list-style-type:none}ul.lst-kix_1n620a6l6s3g-5{list-style-type:none}ul.lst-kix_pijsqepbbzpb-6{list-style-type:none}ul.lst-kix_1n620a6l6s3g-4{list-style-type:none}ol.lst-kix_n5z70wgxvefs-1.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-1 0}.lst-kix_cp3k7292uvts-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_cp3k7292uvts-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_5bnah3qvhyc8-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_cp3k7292uvts-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_5bnah3qvhyc8-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_5bnah3qvhyc8-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_cp3k7292uvts-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_as8tp5tsh1cy-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_as8tp5tsh1cy-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_as8tp5tsh1cy-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_as8tp5tsh1cy-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_xh6dzfiz70hf-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_n5z70wgxvefs-0&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-0}.lst-kix_xh6dzfiz70hf-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_g9bgj4bu2h0-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_g9bgj4bu2h0-8&gt;li:before{content:&quot;\0025a0  &quot;}ol.lst-kix_n5z70wgxvefs-0.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-0 0}.lst-kix_xh6dzfiz70hf-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_3hjmgaf66qdz-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_3hjmgaf66qdz-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_xh6dzfiz70hf-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_xh6dzfiz70hf-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_3hjmgaf66qdz-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_3hjmgaf66qdz-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_3hjmgaf66qdz-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_n5z70wgxvefs-6&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-6}ul.lst-kix_qihahoz6j83w-3{list-style-type:none}ul.lst-kix_5bnah3qvhyc8-6{list-style-type:none}ul.lst-kix_qihahoz6j83w-4{list-style-type:none}ul.lst-kix_5bnah3qvhyc8-5{list-style-type:none}ul.lst-kix_qihahoz6j83w-5{list-style-type:none}ul.lst-kix_5bnah3qvhyc8-4{list-style-type:none}ul.lst-kix_qihahoz6j83w-6{list-style-type:none}ul.lst-kix_5bnah3qvhyc8-3{list-style-type:none}ul.lst-kix_qihahoz6j83w-7{list-style-type:none}ul.lst-kix_qihahoz6j83w-8{list-style-type:none}ul.lst-kix_5bnah3qvhyc8-8{list-style-type:none}ul.lst-kix_5bnah3qvhyc8-7{list-style-type:none}.lst-kix_5uzj2xa2gne-8&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_5bnah3qvhyc8-2{list-style-type:none}ul.lst-kix_qihahoz6j83w-0{list-style-type:none}ul.lst-kix_5bnah3qvhyc8-1{list-style-type:none}ul.lst-kix_qihahoz6j83w-1{list-style-type:none}ul.lst-kix_5bnah3qvhyc8-0{list-style-type:none}ul.lst-kix_qihahoz6j83w-2{list-style-type:none}ol.lst-kix_n5z70wgxvefs-8{list-style-type:none}ol.lst-kix_n5z70wgxvefs-7{list-style-type:none}ol.lst-kix_n5z70wgxvefs-5.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-5 0}ol.lst-kix_n5z70wgxvefs-2{list-style-type:none}ol.lst-kix_n5z70wgxvefs-1{list-style-type:none}ol.lst-kix_n5z70wgxvefs-0{list-style-type:none}ol.lst-kix_n5z70wgxvefs-6{list-style-type:none}ol.lst-kix_n5z70wgxvefs-5{list-style-type:none}ol.lst-kix_n5z70wgxvefs-4{list-style-type:none}.lst-kix_n5z70wgxvefs-4&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-4}ol.lst-kix_n5z70wgxvefs-3{list-style-type:none}.lst-kix_qvcewxmuzrg7-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_qvcewxmuzrg7-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_g9bgj4bu2h0-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_qvcewxmuzrg7-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_qvcewxmuzrg7-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_n5z70wgxvefs-2&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-2}.lst-kix_g9bgj4bu2h0-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_qvcewxmuzrg7-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_qvcewxmuzrg7-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_g9bgj4bu2h0-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_g9bgj4bu2h0-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_5uzj2xa2gne-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_qvcewxmuzrg7-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_g9bgj4bu2h0-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_5uzj2xa2gne-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_5uzj2xa2gne-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_5uzj2xa2gne-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_5uzj2xa2gne-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_5uzj2xa2gne-7&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_xdx87v22dufh-7{list-style-type:none}ul.lst-kix_xdx87v22dufh-8{list-style-type:none}.lst-kix_5uzj2xa2gne-6&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_xdx87v22dufh-3{list-style-type:none}ul.lst-kix_xdx87v22dufh-4{list-style-type:none}.lst-kix_qvcewxmuzrg7-7&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_xdx87v22dufh-5{list-style-type:none}ul.lst-kix_xdx87v22dufh-6{list-style-type:none}.lst-kix_5uzj2xa2gne-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_xdx87v22dufh-0&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_xdx87v22dufh-0{list-style-type:none}.lst-kix_785jj4szr34a-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_785jj4szr34a-1&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_xdx87v22dufh-1{list-style-type:none}.lst-kix_n5z70wgxvefs-3&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-3,decimal) &quot;. &quot;}.lst-kix_n5z70wgxvefs-5&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-5,lower-roman) &quot;. &quot;}ul.lst-kix_xdx87v22dufh-2{list-style-type:none}.lst-kix_xdx87v22dufh-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_785jj4szr34a-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_xdx87v22dufh-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_n5z70wgxvefs-4&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-4,lower-latin) &quot;. &quot;}.lst-kix_n5z70wgxvefs-8&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-8,lower-roman) &quot;. &quot;}.lst-kix_xdx87v22dufh-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_n5z70wgxvefs-1&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-1,lower-latin) &quot;. &quot;}.lst-kix_785jj4szr34a-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_xdx87v22dufh-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_n5z70wgxvefs-2&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-2,lower-roman) &quot;. &quot;}ul.lst-kix_3hjmgaf66qdz-7{list-style-type:none}ul.lst-kix_cp3k7292uvts-6{list-style-type:none}ul.lst-kix_3hjmgaf66qdz-6{list-style-type:none}ul.lst-kix_cp3k7292uvts-7{list-style-type:none}.lst-kix_785jj4szr34a-8&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_cp3k7292uvts-4{list-style-type:none}ul.lst-kix_3hjmgaf66qdz-8{list-style-type:none}ul.lst-kix_cp3k7292uvts-5{list-style-type:none}ul.lst-kix_cp3k7292uvts-2{list-style-type:none}.lst-kix_qvcewxmuzrg7-0&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_cp3k7292uvts-3{list-style-type:none}.lst-kix_785jj4szr34a-7&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_cp3k7292uvts-0{list-style-type:none}ul.lst-kix_cp3k7292uvts-1{list-style-type:none}.lst-kix_785jj4szr34a-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_785jj4szr34a-5&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_3hjmgaf66qdz-1{list-style-type:none}ul.lst-kix_3hjmgaf66qdz-0{list-style-type:none}.lst-kix_n5z70wgxvefs-7&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-7,lower-latin) &quot;. &quot;}ul.lst-kix_3hjmgaf66qdz-3{list-style-type:none}ul.lst-kix_3hjmgaf66qdz-2{list-style-type:none}.lst-kix_785jj4szr34a-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_5a1fzjqf1cfs-8&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_3hjmgaf66qdz-5{list-style-type:none}.lst-kix_xdx87v22dufh-1&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_3hjmgaf66qdz-4{list-style-type:none}.lst-kix_n5z70wgxvefs-6&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-6,decimal) &quot;. &quot;}.lst-kix_5a1fzjqf1cfs-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_5a1fzjqf1cfs-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_hg7n0a8dlgvf-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_hg7n0a8dlgvf-6&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_as8tp5tsh1cy-8{list-style-type:none}.lst-kix_hg7n0a8dlgvf-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_hg7n0a8dlgvf-5&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_as8tp5tsh1cy-5{list-style-type:none}.lst-kix_5a1fzjqf1cfs-3&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_as8tp5tsh1cy-4{list-style-type:none}ul.lst-kix_as8tp5tsh1cy-7{list-style-type:none}.lst-kix_5a1fzjqf1cfs-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_hg7n0a8dlgvf-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_hg7n0a8dlgvf-8&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_as8tp5tsh1cy-6{list-style-type:none}ul.lst-kix_as8tp5tsh1cy-1{list-style-type:none}.lst-kix_5a1fzjqf1cfs-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_5bnah3qvhyc8-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_5bnah3qvhyc8-8&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_as8tp5tsh1cy-0{list-style-type:none}ul.lst-kix_as8tp5tsh1cy-3{list-style-type:none}.lst-kix_hg7n0a8dlgvf-7&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_as8tp5tsh1cy-2{list-style-type:none}.lst-kix_xdx87v22dufh-8&gt;li:before{content:&quot;\0025a0  &quot;}ol.lst-kix_n5z70wgxvefs-4.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-4 0}.lst-kix_5a1fzjqf1cfs-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_xdx87v22dufh-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_xdx87v22dufh-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_n5z70wgxvefs-0&gt;li:before{content:&quot;&quot; counter(lst-ctn-kix_n5z70wgxvefs-0,decimal) &quot;. &quot;}.lst-kix_5a1fzjqf1cfs-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_hg7n0a8dlgvf-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_5a1fzjqf1cfs-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_hg7n0a8dlgvf-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_cp3k7292uvts-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_cp3k7292uvts-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_cp3k7292uvts-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_as8tp5tsh1cy-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_cp3k7292uvts-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_5bnah3qvhyc8-0&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_5bnah3qvhyc8-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_5bnah3qvhyc8-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_cp3k7292uvts-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_5bnah3qvhyc8-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_as8tp5tsh1cy-0&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_cp3k7292uvts-8{list-style-type:none}.lst-kix_n5z70wgxvefs-8&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-8}ul.lst-kix_pr131atimb8l-4{list-style-type:none}ul.lst-kix_pr131atimb8l-3{list-style-type:none}ul.lst-kix_pr131atimb8l-6{list-style-type:none}ul.lst-kix_pr131atimb8l-5{list-style-type:none}.lst-kix_as8tp5tsh1cy-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_as8tp5tsh1cy-4&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_pr131atimb8l-0{list-style-type:none}ul.lst-kix_pr131atimb8l-2{list-style-type:none}ul.lst-kix_pr131atimb8l-1{list-style-type:none}.lst-kix_as8tp5tsh1cy-6&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_pr131atimb8l-8{list-style-type:none}ul.lst-kix_pr131atimb8l-7{list-style-type:none}ul.lst-kix_5a1fzjqf1cfs-3{list-style-type:none}ul.lst-kix_5a1fzjqf1cfs-2{list-style-type:none}ul.lst-kix_5a1fzjqf1cfs-1{list-style-type:none}ul.lst-kix_5a1fzjqf1cfs-0{list-style-type:none}ul.lst-kix_5a1fzjqf1cfs-8{list-style-type:none}ul.lst-kix_5a1fzjqf1cfs-7{list-style-type:none}ul.lst-kix_5a1fzjqf1cfs-6{list-style-type:none}ol.lst-kix_n5z70wgxvefs-6.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-6 0}ul.lst-kix_5a1fzjqf1cfs-5{list-style-type:none}ul.lst-kix_5a1fzjqf1cfs-4{list-style-type:none}.lst-kix_xh6dzfiz70hf-1&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_5uzj2xa2gne-1{list-style-type:none}.lst-kix_g9bgj4bu2h0-5&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_5uzj2xa2gne-0{list-style-type:none}.lst-kix_xh6dzfiz70hf-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_xh6dzfiz70hf-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_g9bgj4bu2h0-7&gt;li:before{content:&quot;\0025cb  &quot;}ol.lst-kix_n5z70wgxvefs-7.start{counter-reset:lst-ctn-kix_n5z70wgxvefs-7 0}ul.lst-kix_5uzj2xa2gne-3{list-style-type:none}ul.lst-kix_5uzj2xa2gne-2{list-style-type:none}ul.lst-kix_5uzj2xa2gne-5{list-style-type:none}ul.lst-kix_5uzj2xa2gne-4{list-style-type:none}ul.lst-kix_5uzj2xa2gne-7{list-style-type:none}.lst-kix_xh6dzfiz70hf-7&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_5uzj2xa2gne-6{list-style-type:none}.lst-kix_3hjmgaf66qdz-1&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_5uzj2xa2gne-8{list-style-type:none}.lst-kix_n5z70wgxvefs-3&gt;li{counter-increment:lst-ctn-kix_n5z70wgxvefs-3}.lst-kix_3hjmgaf66qdz-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_3hjmgaf66qdz-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_3hjmgaf66qdz-5&gt;li:before{content:&quot;\0025a0  &quot;}ol{margin:0;padding:0}table td,table th{padding:0}.c16{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.c20{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.c21{color:#595959;font-weight:400;font-size:14pt;font-family:&quot;Arial&quot;}.c13{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#3367d6;font-weight:400}.c11{padding-top:0pt;padding-bottom:16pt;line-height:1.5;text-align:left}.c0{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#000000;font-weight:400}.c6{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#9c27b0;font-weight:400}.c28{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c26{padding-top:20pt;padding-bottom:16pt;line-height:1.5;text-align:left}.c1{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#616161;font-weight:400}.c3{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#c53929;font-weight:400}.c5{border-spacing:0;border-collapse:collapse;margin-right:auto}.c8{color:#000000;font-weight:400;font-size:11pt;font-family:&quot;Arial&quot;}.c4{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.c14{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c7{color:#000000;font-weight:400;font-size:26pt;font-family:&quot;Arial&quot;}.c19{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#0f9d58;font-weight:400}.c27{color:#000000;font-weight:400;font-size:20pt;font-family:&quot;Arial&quot;}.c30{padding-top:0pt;padding-bottom:16pt;line-height:1.5;text-align:center}.c17{font-size:10pt;font-family:Consolas,&quot;Courier New&quot;;color:#455a64;font-weight:400}.c25{padding-top:0pt;padding-bottom:3pt;line-height:1.5;text-align:left}.c31{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c2{text-decoration:none;vertical-align:baseline;font-style:normal}.c22{-webkit-text-decoration-skip:none;text-decoration:underline;text-decoration-skip-ink:none}.c9{font-family:Consolas,&quot;Courier New&quot;;color:#0d904f;font-weight:400}.c24{border:1px solid black;margin:5px}.c18{orphans:2;widows:2}.c12{color:inherit;text-decoration:inherit}.c15{height:11pt}.c10{height:0pt}.c23{page-break-after:avoid}.c29{font-style:italic}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}p{margin:0;color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c31&quot;&gt;&lt;div&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Posted by Ned Williams&lt;/span&gt;&lt;span&gt;on&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;, Project Zero&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.ndqbhr40lzdh&quot;&gt;&lt;span class=&quot;c7 c2&quot;&gt;Introduction&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;When I started my 20% project &amp;ndash; an initiative where employees are allocated twenty-percent of their paid work time to pursue personal projects &amp;ndash; &amp;nbsp;with Project Zero, I wanted to see if I could apply the techniques I had learned fuzzing Chrome to XNU, the kernel used in iOS and macOS. My interest was sparked after learning some prominent members of the iOS research community believed the kernel was &amp;ldquo;fuzzed to death,&amp;rdquo; and my understanding was that most of the top researchers used auditing for vulnerability research. This meant finding new bugs with fuzzing would be meaningful in demonstrating the value of implementing newer fuzzing techniques. In this project, I pursued a somewhat unusual approach to fuzz XNU networking in userland by converting it into a library, &amp;ldquo;booting&amp;rdquo; it in userspace and using my standard fuzzing workflow to discover vulnerabilities. Somewhat surprisingly, this worked well enough to reproduce some of my peers&amp;rsquo; recent discoveries and report some of my own, one of which was a reliable privilege escalation from the app context, CVE-2019-8605, dubbed &amp;ldquo;SockPuppet.&amp;rdquo; I&amp;rsquo;m excited to open source this fuzzing project, &amp;ldquo;sockfuzzer,&amp;rdquo; for the community to learn from and adapt. In this post, we&amp;rsquo;ll do a deep dive into its design and implementation.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.hjehdh7g62jx&quot;&gt;&lt;span class=&quot;c7 c2&quot;&gt;Attack Surface Review and Target Planning&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;c23 c26&quot; id=&quot;h.3g484yfwyzbz&quot;&gt;&lt;span class=&quot;c27 c2&quot;&gt;Choosing Networking&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;We&amp;rsquo;re at the beginning of a multistage&lt;/span&gt;&lt;span&gt;&amp;nbsp;pr&lt;/span&gt;&lt;span&gt;oject. I had enormous respect for the difficulty of the task ahead of me. I knew I would need to be careful investing time at each stage of the process, constantly looking for evidence that I needed to change direction. The first big decision was to decide what exactly we &lt;/span&gt;&lt;span class=&quot;c29&quot;&gt;wanted&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;to target.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;I started by downloading the &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://opensource.apple.com/tarballs/xnu/&quot;&gt;XNU sources&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;and reviewing them, looking for areas that handled a lot of attacker-controlled input and seemed amenable to fuzzing &amp;ndash; immediately the networking subsystem jumped out as worthy of research. I had just exploited a Chrome sandbox bug that leveraged collaboration between an exploited renderer process and a server working in concert. I recognized these attack surfaces&amp;rsquo; power, where some security-critical code is &amp;ldquo;sandwiched&amp;rdquo; between two attacker-controlled entities. The Chrome browser process is prone to use after free vulnerabilities due to the difficulty of managing state for large APIs, and I suspected XNU would have the same issue. Networking features both parsing and state management. I figured that even if others had already fuzzed the parsers extensively, there could still be use after free vulnerabilities lying dormant.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;I then proceeded to look at recent bug reports. Two bugs that caught my eye: the &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=1558&quot;&gt;mptcp overflow&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;discovered by Ian Beer and the ICMP &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://securitylab.github.com/research/apple-xnu-icmp-error-CVE-2018-4407&quot;&gt;out of bounds write&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;found by Kevin Backhouse. Both of these are somewhat &amp;ldquo;straightforward&amp;rdquo; buffer overflows. The bugs&amp;rsquo; simplicity hinted that kernel networking, even packet parsing, was sufficiently undertested. A fuzzer combining network syscalls and arbitrary remote packets should be large enough in scope to reproduce these issues and find new ones.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Digging deeper, I wanted to understand how to reach these bugs in practice. By cross-referencing the functions and setting kernel breakpoints in a VM, I managed to get a more concrete idea. Here&amp;rsquo;s the call stack for Ian&amp;rsquo;s MPTCP bug:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;/p&gt;


 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixaqhrlPJxgqVridccvdElpi6yxaoJCSUXDp5q8hm_F66e5WHW3NRaFwmy-OWQvCKz661k3LEfi4A4r2sa1LkgMb8pu8CEVjKbzTkblc8SZZYcOsKkw7u0uG2qo5KzCdjbxixJ-CplQI2nohuVE1_t07PiNW-xRxnW-3e4WtILcCE6CoYjbN1D6UPi/s623/image3%282%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixaqhrlPJxgqVridccvdElpi6yxaoJCSUXDp5q8hm_F66e5WHW3NRaFwmy-OWQvCKz661k3LEfi4A4r2sa1LkgMb8pu8CEVjKbzTkblc8SZZYcOsKkw7u0uG2qo5KzCdjbxixJ-CplQI2nohuVE1_t07PiNW-xRxnW-3e4WtILcCE6CoYjbN1D6UPi/s623/image3%282%29.png&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;The buggy function in question is &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;mptcp_usr_connectx&lt;/span&gt;&lt;span&gt;. Moving up the call stack, we find the &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;connectx&lt;/span&gt;&lt;span&gt;&amp;nbsp;syscall, which we see in Ian&amp;rsquo;s original testcase. If we were to write a fuzzer to find this bug, how would we do it? Ultimately, whatever we do has to both find the bug and give us the information we need to reproduce it on the real kernel. Calling &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;mptcp_usr_connectx&lt;/span&gt;&lt;span&gt;&amp;nbsp;directly should surely find the bug, but this seems like the wrong idea because it takes a lot of arguments. Modeling a fuzzer well enough to call this function directly in a way representative of the real code is no easier than auditing the code in the first place, so we&amp;rsquo;ve not made things any easier by writing a targeted fuzzer. It&amp;rsquo;s also wasted effort to write a target for each function this small. On the other hand, the further up the call stack we go, the more complexity we may have to support and the less chance we have of landing on the bug. If I were trying to unit test the networking stack, I would probably avoid the syscall layer and call the intermediate helper functions as a middle ground. This is exactly what I tried in the first draft of the fuzzer; I used &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://developer.apple.com/documentation/kernel/1396122-sock_socket&quot;&gt;sock_socket&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to create &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;struct socket*&lt;/span&gt;&lt;span&gt;&amp;nbsp;objects to pass to &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;connectitx&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the hopes that it would be easy to reproduce this bug while being high-enough level that this bug could plausibly have been discovered without knowing where to look for it&lt;/span&gt;&lt;span&gt;. Surprisingly, after some experimentation, it turned out to be easier to simply call the syscalls directly (via &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;connectx&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;). This makes it easier to translate crashing inputs into programs to run against a real kernel since testcases map 1:1 to syscalls. We&amp;rsquo;ll see more details about this later.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;We can&amp;rsquo;t test networking properly without accounting for packets. In this case, data comes from the hardware, not via syscalls from a user process. We&amp;rsquo;ll have to expose this functionality to our fuzzer. To figure out how to extend our framework to support random packet delivery, we can use our next example bug. Let&amp;rsquo;s take a look at the call stack for delivering a packet to trigger the ICMP bug reported by Kevin Backhouse:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c30&quot;&gt;&lt;/p&gt;

 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjN_4qMCDG0R3Ix94ctakWAgk3QmZ1JVD0IxQVjr9ft44Eu2a3VYxzWkueZJvf8MUd2qsf2Z-Qk2elUh_Zl-Cx5D9k6ueDM-pJNT9LeT3Ruhtc_CAgn0SL1M2XVCL_BYiTya834YqPEYuU5kH0nU68d7eUJrsUuY-hGEZ3EfiX_yCZ7ZvlDnQoQceOe/s450/image2%281%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjN_4qMCDG0R3Ix94ctakWAgk3QmZ1JVD0IxQVjr9ft44Eu2a3VYxzWkueZJvf8MUd2qsf2Z-Qk2elUh_Zl-Cx5D9k6ueDM-pJNT9LeT3Ruhtc_CAgn0SL1M2XVCL_BYiTya834YqPEYuU5kH0nU68d7eUJrsUuY-hGEZ3EfiX_yCZ7ZvlDnQoQceOe/s450/image2%281%29.png&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;max-height: 750px; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;To reach the buggy function, &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;icmp_error&lt;/span&gt;&lt;span&gt;, the call stack is deeper, and unlike with syscalls, it&amp;rsquo;s not immediately obvious which of these functions we should call to cover the relevant code. Starting from the very top of the call stack, we see that the crash occurred in a kernel thread running the &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;dlil_input_thread_func&lt;/span&gt;&lt;span&gt;&amp;nbsp;function. DLIL stands for Data Link Interface Layer, a reference to the OSI model&amp;rsquo;s &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://en.wikipedia.org/wiki/Data_link_layer&quot;&gt;data link layer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Moving further down the stack, we see &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ether_inet_input&lt;/span&gt;&lt;span&gt;, indicating an Ethernet packet (since I tested this issue using Ethernet). We finally make it down to the IP layer, where &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip_dooptions&lt;/span&gt;&lt;span&gt;&amp;nbsp;signals an &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;icmp_error&lt;/span&gt;&lt;span&gt;. As an attacker, we probably don&amp;rsquo;t have a lot of control over the interface a user uses to receive our input, so we can rule out some of the &lt;/span&gt;&lt;span&gt;uppermost layers&lt;/span&gt;&lt;span&gt;. We also don&amp;rsquo;t want to deal with threads in our fuzzer, another design tradeoff we&amp;rsquo;ll describe in more detail later. &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;proto_input&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip_proto_input&lt;/span&gt;&lt;span&gt;&amp;nbsp;don&amp;rsquo;t do much, so I decided that &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip_proto&lt;/span&gt;&lt;span&gt;&amp;nbsp;was where I would inject packets, simply by calling the function when I wanted to deliver a packet. After reviewing &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;proto_register_input&lt;/span&gt;&lt;span&gt;, I discovered another function called &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip6_input&lt;/span&gt;&lt;span&gt;, which was the entry point for the IPv6 code. Here&amp;rsquo;s the prototype for &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip_input&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.cf5c301b37182659cde971ba454e9537e2d2f75a&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.0&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ip_input&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mbuf &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;br&gt;Mbufs are message buffers, a standard buffer format used in network stacks. They enable multiple small packets to be chained together through a linked list. So we just need to generate mbufs with random data before calling &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip_input&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;I was surprised by how easy it was to work with the network stack compared to the syscall interface. `ip_input` and `ip6_input` pure functions that don&amp;rsquo;t require us to know any state to call them. But stepping back, it made more sense. Packet delivery is inherently a clean interface: our kernel has no idea what arbitrary packets may be coming in, so the interface takes a raw packet and then further down in the stack decides how to handle it. Many packets contain metadata that affect the kernel state once received. For example, TCP or UDP packets will be matched to an existing connection by their port number.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Most modern coverage guided fuzzers, including this LibFuzzer-based project, use a design inspired by AFL. When a test case with some known coverage is mutated and the mutant produces coverage that hasn&amp;rsquo;t been seen before, the mutant is added to the current corpus of inputs. It becomes available for further mutations to produce even deeper coverage. Lcamtuf, the author of AFL, has an excellent demonstration of how this algorithm &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://lcamtuf.blogspot.com/2014/11/pulling-jpegs-out-of-thin-air.html&quot;&gt;created JPEGs using coverage feedback&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with no well-formed starting samples. In essence, most poorly-formed inputs are rejected early. When a mutated input passes a validation check, the input is saved. Then that input can be mutated until it manages to pass the second validation check, and so on. This &lt;/span&gt;&lt;span&gt;hill climbing algorithm&lt;/span&gt;&lt;span&gt;&amp;nbsp;has no problem generating dependent sequences of API calls, in this case to interleave syscalls with &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip_input&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip6_input&lt;/span&gt;&lt;span&gt;. Random syscalls can get the kernel into some state where it&amp;rsquo;s expecting a packet. Later, when libFuzzer guesses a packet that gets the kernel into some new state, the hill climbing algorithm will record a new test case when it sees new coverage. Dependent sequences of syscalls and packets are brute-forced in a linear fashion, one call at a time.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.eby3d6n6dnx2&quot;&gt;&lt;span class=&quot;c7 c2&quot;&gt;Designing for (Development) Speed&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Now that we know where to attack this code base, it&amp;rsquo;s a matter of building out the fuzzing research platform. I like thinking of it this way because it emphasizes that this fuzzer is a powerful assistant to a researcher, but it can&amp;rsquo;t do all the work. Like any other test framework, it empowers the researcher to make hypotheses and run experiments over code that looks buggy. For the platform to be helpful, it needs to be comfortable and fun to work with and get out of the way.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;When it comes to standard practice for kernel fuzzing, there&amp;rsquo;s a pretty simple spectrum for strategies. On one end, you fuzz self-contained functions that are security-critical, e.g., OSUnserializeBinary. These are easy to write and manage and are generally quite performant. On the other end, you have &amp;ldquo;end to end&amp;rdquo; kernel testing that performs random syscalls against a real kernel instance. These heavyweight fuzzers have the advantage of producing issues that you know are actionable right away, but setup and iterative development are slower. I wanted to try a hybrid approach that could preserve some of the benefits of each style. To do so, I would port the networking stack of XNU out of the kernel and into userland while preserving as much of the original code as possible. Kernel code can be surprisingly portable and amenable to unit testing, even when run outside its natural environment.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;There has been a push to add more user-mode unit testing to Linux. If you look at the documentation for Linux&amp;rsquo;s &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://www.kernel.org/doc/html/latest/dev-tools/kunit/index.html&quot;&gt;KUnit project&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;, there&amp;rsquo;s an excellent quote from Linus Torvalds: &amp;ldquo;&amp;hellip; a lot of people seem to think that performance is about doing the same thing, just doing it faster, and that is not true. That is not what performance is all about. If you can do something really fast, really well, people will start using it differently.&amp;rdquo; This statement echoes the experience I had writing targeted fuzzers for code in Chrome&amp;rsquo;s browser process. Due to extensive unit testing, Chrome code is already well-factored for fuzzing. In a day&amp;rsquo;s work, I could try out many iterations of a fuzz target and the edit/build/run cycle. I didn&amp;rsquo;t have a similar mechanism out of the box with XNU. In order to perform a unit test, I would need to rebuild the kernel. And despite XNU being considerably smaller than Chrome, incremental builds were slower due to the older kmk build system. I wanted to try bridging this gap for XNU.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.9elbs1tajoqo&quot;&gt;&lt;span&gt;Setting up the Scaffolding&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&amp;ldquo;Unit&amp;rdquo; testing a kernel up through the syscall layer sounds like a big task, but it&amp;rsquo;s easier than you&amp;rsquo;d expect if you forgo some complexity. &lt;/span&gt;&lt;span&gt;We&amp;rsquo;ll start by building all of the individual kernel&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;object files from source using the original build flags. But instead of linking everything together to produce the final kernel binary, we link in only the subset of objects containing code in our target attack surface. We then stub or fake the rest of the functionality. Thanks to the recon in the previous section, we already know which functions we want to call from our fuzzer. I used that information to prepare a minimal list of source objects to include in our userland port.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Before we dive in, let&amp;rsquo;s define the overall structure of the project as pictured below. There&amp;rsquo;s going to be a fuzz target implemented in C++ that translates fuzzed inputs into interactions with the userland XNU library. The target code, &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;libxnu&lt;/span&gt;&lt;span&gt;, exposes a few wrapper symbols for syscalls and &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip_input&lt;/span&gt;&lt;span&gt;&amp;nbsp;as mentioned in the attack surface review section. The fuzz target also exposes its random sequence of bytes to kernel APIs such as &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;copyin&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;copyout&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;, whose implementations have been replaced with fakes that use fuzzed input data.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhd7HxZOpEaZ0zOKXMwVP0f3hRjwuUrChoR3_v_y91gddRnq4T-t7FCJt5mmG3EGwaK3-HT_hibQyi-0CgwigF9hGZBfNaJhssUQG0KBYoyVGpXRHWgtVAUhC1EOgHgyb_vfiqdYGWxZE7N9y0ysw-0ikT-Kj_ljONiFGGMUPagiidn4dzLgSP8EvX-/s1051/image1%283%29.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhd7HxZOpEaZ0zOKXMwVP0f3hRjwuUrChoR3_v_y91gddRnq4T-t7FCJt5mmG3EGwaK3-HT_hibQyi-0CgwigF9hGZBfNaJhssUQG0KBYoyVGpXRHWgtVAUhC1EOgHgyb_vfiqdYGWxZE7N9y0ysw-0ikT-Kj_ljONiFGGMUPagiidn4dzLgSP8EvX-/s1051/image1%283%29.png&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;To make development more manageable, I decided to create a new build system using CMake, as it supported Ninja for fast rebuilds. One drawback here is the original build system has to be run every time upstream is updated to deal with generated sources, but this is worth it to get a faster development loop. I captured all of the compiler invocations during a normal kernel build and used those to reconstruct the flags passed to build the various kernel subsystems. Here&amp;rsquo;s what that first pass looks like:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.509a56bc4ddc72babc39c522f6fca5af9dbff3f9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.1&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;XNU_DEFINES&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;DAPPLE&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;DKERNEL&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;# ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;XNU_SOURCES&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_asl&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;netinet&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ip_input&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;# ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;add_library&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;xnu SHARED $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;XNU_SOURCES&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;$&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;FUZZER_FILES&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;$&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;XNU_HEADERS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;})&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;protobuf_generate_cpp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;NET_PROTO_SRCS NET_PROTO_HDRS fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;add_executable&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;cc $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;NET_PROTO_SRCS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;$&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;NET_PROTO_HDRS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;})&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;target_include_directories&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer PRIVATE libprotobuf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mutator&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;target_compile_options&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer PRIVATE $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;FUZZER_CXX_FLAGS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;})&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;br&gt;Of course, without the rest of the kernel, we see tons of missing symbols.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.c5de84d30da6bb237fe5cdc6ee881ad5d422b21a&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.2&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;_zdestroy&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;referenced &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _if_clone_detach &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;_zfree&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;referenced &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _kqueue_destroy &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_event&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _knote_free &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_event&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _kqworkloop_get_or_create &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_event&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _kev_delete &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_event&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _pipepair_alloc &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;sys_pipe&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _pipepair_destroy_pipe &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;sys_pipe&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _so_cache_timer &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;uipc_socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;_zinit&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;referenced &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _knote_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_event&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _kern_event_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_event&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _pipeinit &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;sys_pipe&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _socketinit &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;uipc_socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _unp_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;uipc_usrreq&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _cfil_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;content_filter&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _tcp_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;tcp_subr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;_zone_change&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;referenced &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _knote_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_event&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _kern_event_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_event&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _socketinit &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;uipc_socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _cfil_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;content_filter&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _tcp_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;tcp_subr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _ifa_init &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _if_clone_attach &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;libxnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;ld&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;symbol&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;found &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;architecture x86_64&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;clang&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;error&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;linker command failed &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;code &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;v to see invocation&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;ninja&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;build stopped&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;subcommand failed&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;br&gt;To get our initial targeted fuzzer working, we can do a simple trick by linking against a file containing stubbed implementations of all of these. We take advantage of C&amp;rsquo;s weak type system here. For each function we need to implement, we can link an implementation &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;void func() { assert(false); }&lt;/span&gt;&lt;span&gt;. The arguments passed to the function are simply ignored, and a crash will occur whenever the target code attempts to call it. This goal can be achieved with linker flags, but it was a simple enough solution that allowed me to get nice backtraces when I hit an unimplemented function.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b8228357b6d205653ae1179c620e72df885cb433&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.3&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;// Unimplemented stub functions&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;// These should be replaced with real or mock impls.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#include&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;lt;kern/assert.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#include&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;lt;stdbool.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;printf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;format&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;...);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Assert&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;file&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;line&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;expression&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; printf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;%s: assert failed on line %d: %s\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;file&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;line&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;expression&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; __builtin_trap&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;IOBSDGetPlatformUUID&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;IOMapperInsertPage&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;// ...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;br&gt;Then we just link this file into the XNU library we&amp;rsquo;re building by adding it to the source list:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.534c83683172ba6897a00c87407d33404b429f6e&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.4&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;XNU_SOURCES&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kern_asl&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;# ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;syscall_wrappers&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ioctl&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;backend&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;stubs&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;c&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fake_impls&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;br&gt;As you can see, there are some other files I included in the XNU library that represent faked implementations and helper code to expose some internal kernel APIs. To make sure our fuzz target will call code in the linked library, and not some other host functions (syscalls) with a clashing name, we hide all of the symbols in &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;libxnu&lt;/span&gt;&lt;span&gt;&amp;nbsp;by default and then expose a set of wrappers that call those functions on our behalf. I hide all the names by default using a CMake setting &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;set_target_properties(xnu PROPERTIES C_VISIBILITY_PRESET hidden)&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. Then we can link in a file (fuzz/syscall_wrappers.c) containing wrappers like the following:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e0503b6026972fa7d7dd9fa845e61836b2ed21ca&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.5&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;__attribute__&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;accept_wrapper&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;s&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;caddr_t name&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; socklen_t&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;anamelen&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;retval&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;accept_args uap &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;s &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;s&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;name &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;name&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;anamelen &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;anamelen&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;};&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;accept&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kernproc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;uap&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;retval&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Note the visibility attribute that explicitly exports the symbol from the library. Due to the simplicity of these wrappers I created a script to automate this called generate_fuzzer.py using &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;syscalls.master&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;.&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;With the stubs in place, we can start writing a fuzz target now and come back to deal with implementing them later. We will see a crash every time the target code attempts to use one of the functions we initially left out. Then we get to decide to either include the real implementation (and perhaps recursively require even more stubbed function implementations) or to fake the functionality.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;A bonus of getting a build working with CMake was to create multiple targets with different instrumentation. Doing so allows me to generate coverage reports using clang-coverage:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e3e5dbef0102c66c9a42aebd0535293cd5f2fcba&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.6&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;target_compile_options&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;xnu&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;cov PRIVATE $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;XNU_C_FLAGS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;DLIBXNU_BUILD&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;D_FORTIFY_SOURCE&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fprofile&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;instr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;generate &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fcoverage&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mapping&lt;/span&gt;&lt;span class=&quot;c1 c2&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;br&gt;With that, we just add a fuzz target file and a protobuf file to use with protobuf-mutator and we&amp;rsquo;re ready to get started:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.94984d9cd1732c1405481ef4bebbc7ba7e4bcac5&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.7&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;protobuf_generate_cpp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;NET_PROTO_SRCS NET_PROTO_HDRS fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;add_executable&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer fuzz&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;cc $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;NET_PROTO_SRCS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;$&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;NET_PROTO_HDRS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;})&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;target_include_directories&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer PRIVATE libprotobuf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mutator&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;target_compile_options&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;net_fuzzer&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PRIVATE &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;g&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;11&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Werror&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Wno&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;packed&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;member&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;$&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;FUZZER_CXX_FLAGS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;})&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;APPLE&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;target_link_libraries&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;FUZZER_LD_FLAGS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;xnu fuzzer protobuf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mutator $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Protobuf_LIBRARIES&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;})&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;target_link_libraries&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;net_fuzzer $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;FUZZER_LD_FLAGS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;xnu fuzzer protobuf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mutator $&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Protobuf_LIBRARIES&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;pthread&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;APPLE&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.pu0xkfwwxrzi&quot;&gt;&lt;span class=&quot;c7 c2&quot;&gt;Writing a Fuzz Target&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;At this point, we&amp;rsquo;ve assembled a chunk of XNU into a convenient library, but we still need to interact with it by writing a fuzz target. At first, I thought I might write many targets for different features, but I decided to write one monolithic target for this project. I&amp;rsquo;m sure fine-grained targets could do a better job for functionality that&amp;rsquo;s harder to fuzz, e.g., the TCP state machine, but we will stick to one for simplicity.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;We&amp;rsquo;ll start by specifying an input grammar using protobuf, part of which is depicted below. This grammar is completely arbitrary and will be used by a corresponding C++ harness that we will write next. LibFuzzer has a plugin called libprotobuf-mutator that knows how to mutate protobuf messages. This will enable us to do grammar-based mutational fuzzing efficiently, while still leveraging coverage guided feedback. This is a very powerful combination.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.9d16a9b39fd12c4bd200524ebbec29df78b7c54e&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.8&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Domain&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;domain &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;SoType&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;so_type &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Protocol&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;protocol &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// TODO: options, e.g. SO_ACCEPTCONN&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;FileDescriptor&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fd &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;SetSocketOpt&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; optional &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Protocol&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;level &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; optional &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;SocketOptName&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;name &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// TODO(nedwill): structure for val&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; optional bytes val &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; optional &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;FileDescriptor&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fd &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; oneof command &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Packet&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ip_input &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;SetSocketOpt&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;set_sock_opt &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Socket&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;socket &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;close &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; repeated &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required bytes data_provider &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;I left some TODO comments intact so you can see how the grammar can always be improved. As I&amp;rsquo;ve done in similar fuzzing projects, I have a top-level message called &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;Session&lt;/span&gt;&lt;span&gt;&amp;nbsp;that encapsulates a single fuzzer iteration or test case. This session contains a sequence of &amp;ldquo;commands&amp;rdquo; and a sequence of bytes that can be used when random, unstructured data is needed (e.g., when doing a &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;copyin&lt;/span&gt;&lt;span&gt;). Commands are syscalls or random packets, which in turn are their own messages that have associated data. For example, we might have a session that has a single Command message containing a &amp;ldquo;Socket&amp;rdquo; message. That Socket message has data associated with each argument to the syscall. In our C++-based target, it&amp;rsquo;s our job to translate messages of this custom specification into real syscalls and related API calls. We inform libprotobuf-mutator that our fuzz target expects to receive one &amp;ldquo;Session&amp;rdquo; message at a time via the macro &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;DEFINE_BINARY_PROTO_FUZZER&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;.&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.041bf215fa328f955891b762d77faa759acbf246&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.9&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;DEFINE_BINARY_PROTO_FUZZER&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;// ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; std&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;lt;int&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;open_fds&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;command &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;session&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;retval &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;command_case&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kSocket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fd &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;err &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;socket_wrapper&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;so_type&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;protocol&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;err &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// Make sure we&amp;#39;re tracking fds properly.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;open_fds&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;open_fds&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;Found existing fd %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; open_fds&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kClose&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; open_fds&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;erase&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;());&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; close_wrapper&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;case&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kSetSockOpt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;s &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;set_sock_opt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;level &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;set_sock_opt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;name &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;set_sock_opt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; size_t size &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;set_sock_opt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; std&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;unique_ptr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[]&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;val&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;]);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; memcpy&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;command&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;set_sock_opt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setsockopt_wrapper&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;level&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;name&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;val&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;nullptr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;While syscalls are typically a straightforward translation of the protobuf message, other commands are more complex. In order to improve the structure of randomly generated packets, I added custom message types that I then converted into the relevant on-the-wire structure before passing it into ip_input. Here&amp;rsquo;s how this looks for TCP:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.06a48b27c70500af6666b579bb650d3a174e966c&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.10&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Packet&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; oneof packet &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;TcpPacket&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;tcp_packet &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;TcpPacket&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;IpHdr&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ip_hdr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;TcpHdr&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;tcp_hdr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; optional bytes data &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;IpHdr&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 ip_hl &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;IpVersion&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ip_v &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 ip_tos &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 ip_len &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 ip_id &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 ip_off &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 ip_ttl &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Protocol&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ip_p &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;InAddr&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ip_src &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;InAddr&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ip_dst &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;message &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;TcpHdr&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Port&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th_sport &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;Port&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th_dport &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;TcpSeq&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th_seq &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;TcpSeq&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th_ack &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 th_off &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; repeated &lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;TcpFlag&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th_flags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 th_win &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 th_sum &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required uint32 th_urp &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// Ned&amp;#39;s extensions&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;is_pure_syn &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; required &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;is_pure_ack &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c15 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Unfortunately, protobuf doesn&amp;rsquo;t support a uint8 type, so I had to use uint32 for some fields. That&amp;rsquo;s some lost fuzzing performance. You can also see some synthetic TCP header flags I added to make certain flag combinations more likely: &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;is_pure_syn&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;is_pure_ack&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. Now I have to write some code to stitch together a valid packet from these nested fields. Shown below is the code to handle just the TCP header.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b04bea361f4572715c957400db3964f6b12a92e1&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.11&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;get_tcp_hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;TcpHdr&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;tcphdr tcphdr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_sport &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_sport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_dport &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_dport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_seq &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;__builtin_bswap32&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_seq&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_ack &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;__builtin_bswap32&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_ack&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_off &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_off&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_flags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_win &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_win&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_sum &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// TODO(nedwill): calculate the checksum instead of skipping it&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_urp &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;unsigned&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;short&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_urp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;};&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;flag &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; tcphdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_flags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;^=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;flag&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// Prefer pure syn&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;is_pure_syn&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; tcphdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_flags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;~(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;TH_RST &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;TH_ACK&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; tcphdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_flags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;TH_SYN&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;is_pure_ack&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; tcphdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_flags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;~(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;TH_RST &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;TH_SYN&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; tcphdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_flags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;|=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;TH_ACK&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; std&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;dat&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;tcphdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;tcphdr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;tcphdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;));&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;dat&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;br&gt;As you can see, I make liberal use of a custom grammar to enable better quality fuzzing. These efforts are worth it, as randomizing high level structure is more efficient. It will also be easier for us to interpret crashing test cases later as they will have the same high level representation.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.91xkgwarn2ge&quot;&gt;&lt;span class=&quot;c2 c7&quot;&gt;High-Level Emulation&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Now that we have the code building and an initial fuzz target running, we begin the first pass at implementing all of the stubbed code that is reachable by our fuzz target. Because we have a fuzz target that builds and runs, we now get instant feedback about which functions our target hits. Some core functionality has to be supported before we can find any bugs, so the first attempt to run the fuzzer deserves its own development phase. For example, until dynamic memory allocation is supported, almost no kernel code we try to cover will work considering how heavily such code is used.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;We&amp;rsquo;ll be implementing our stubbed functions with fake variants that attempt to have the same semantics. For example, when testing code that uses an external database library, you could replace the database with a simple in-memory implementation. If you don&amp;rsquo;t care about finding database bugs, this often makes fuzzing simpler and more robust. For some kernel subsystems unrelated to networking we can use entirely different or null implementations. This process is reminiscent of high-level emulation, an idea used in game console emulation. Rather than aiming to emulate hardware, you can try to preserve the semantics but use a custom implementation of the API. Because we only care about testing networking, this is how we approach faking subsystems in this project.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;I always start by looking at the original function implementation. If it&amp;rsquo;s possible, I just link in that code as well. But some functionality isn&amp;rsquo;t compatible with our fuzzer and must be faked. For example, &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;zalloc&lt;/span&gt;&lt;span&gt;&amp;nbsp;should call the userland malloc since virtual memory is already managed by our host kernel and we have allocator facilities available. Similarly, &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;copyin&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;copyout&lt;/span&gt;&lt;span&gt;&amp;nbsp;need to be faked as they no longer serve to copy data between user and kernel pages. Sometimes we also just &amp;ldquo;nop&amp;rdquo; out functionality that we don&amp;rsquo;t care about. We&amp;rsquo;ll cover these decisions in more detail later in the &amp;ldquo;High-Level Emulation&amp;rdquo; phase. Note that by implementing these stubs lazily whenever our fuzz target hits them, we immediately reduce the work in handling all the unrelated functions by an order of magnitude. It&amp;rsquo;s easier to stay motivated when you only implement fakes for functions that are used by the target code. &lt;/span&gt;&lt;span&gt;This approach successfully saved me a lot of time&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;and I&amp;rsquo;ve used it on subsequent projects as well. At the time of writing, I have 398 stubbed functions, about 250 functions that are trivially faked (return 0 or void functions that do nothing), and about 25 functions that I faked myself (almost all related to porting the memory allocation systems to userland).&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;c20 c18&quot; id=&quot;h.ltz0op6gg9n7&quot;&gt;&lt;span class=&quot;c27 c2&quot;&gt;Booting Up&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;As soon as we start running the fuzzer, we&amp;rsquo;ll run into a snag: many resources require a one-time initialization that happens on boot. The BSD half of the kernel is mostly initialized by calling the &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;bsd_init&lt;/span&gt;&lt;span&gt;&amp;nbsp;function. That function, in turn, calls several subsystem-specific initialization functions. Keeping with the theme of supporting a minimally necessary subset of the kernel, rather than call &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;bsd_init&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;, we create a new function that only initializes parts of the kernel as needed.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Here&amp;rsquo;s an example crash that occurs without the one time kernel bootup initialization:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.7dee2e6aabb2ca9a391d0f364d5d1fcd8b821d76&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.12&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#7 0x7effbc464ad0 in zalloc /source/build3/../fuzz/zalloc.c:35:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#8 0x7effbb62eab4 in pipepair_alloc /source/build3/../bsd/kern/sys_pipe.c:634:24&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#9 0x7effbb62ded5 in pipe /source/build3/../bsd/kern/sys_pipe.c:425:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#10 0x7effbc4588ab in pipe_wrapper /source/build3/../fuzz/syscall_wrappers.c:216:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#11 0x4ee1a4 in TestOneProtoInput(Session const&amp;amp;) /source/build3/../fuzz/net_fuzzer.cc:979:19&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Our zalloc implementation (covered in the next section) failed because the pipe zone wasn&amp;rsquo;t yet initialized:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.28d23a3828667c4eb9bd8e3032e358cb84291c9e&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.13&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;pipepair_alloc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;pipe &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;rp_out&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;pipe &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;wp_out&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;pipepair &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;pp &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zalloc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;pipe_zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Scrolling up in sys_pipe.c, we see where that zone is initialized:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.6cb4ba0329612fe0bfce12d0efd46322d7f90626&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.14&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;pipeinit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; nbigpipe &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; vm_size_t zone_size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; zone_size &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;8192&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;pipepair&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pipe_zone &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zinit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;pipepair&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone_size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;4096&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;pipe zone&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Sure enough, this function is called by &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;bsd_init&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. By adding that to our initial setup function the zone works as expected. After some development cycles spent supporting all the needed bsd_init function calls, we have the following:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.c36531451445cbd3070043535c88b4e9f6dc8668&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.15&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;__attribute__&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;visibility&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;initialize_network&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; mcache_init&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; mbinit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; eventhandler_init&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; pipeinit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; dlil_init&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; socketinit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; domaininit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; loopattach&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; ether_family_init&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; tcp_cc_init&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; net_init_run&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;res &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;necp_init&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;();&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;&lt;br&gt;The original &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;bsd_init&lt;/span&gt;&lt;span&gt;&amp;nbsp;is 683 lines long, but our &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;initialize_network&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;clone is the preceding short snippet. I want to remark how cool I found it that you could &amp;ldquo;boot&amp;rdquo; a kernel like this and have everything work so long as you implemented all the relevant stubs. It just goes to show a surprising fact: a significant amount of kernel code is portable, and simple steps can be taken to make it testable. These codebases can be modernized without being fully rewritten. As this &amp;ldquo;boot&amp;rdquo; relies on dynamic allocation, let&amp;rsquo;s look at how I implemented that next.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;c18 c20&quot; id=&quot;h.9dofj4t03k0j&quot;&gt;&lt;span class=&quot;c27 c2&quot;&gt;Dynamic Memory Allocation&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Providing a virtual memory abstraction is a fundamental goal of most kernels, but the good news is this is out of scope for this project (this is left as an exercise for the reader). Because networking already assumes working virtual memory, the network stack functions almost entirely on top of high-level allocator APIs. This makes the subsystem amenable to &amp;ldquo;high-level emulation&amp;rdquo;. We can create a thin shim layer that intercepts XNU specific allocator calls and translates them to the relevant host APIs.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;In practice, we have to handle three types of allocations for this project: &amp;ldquo;classic&amp;rdquo; allocations (malloc/calloc/free), zone allocations (zalloc), and mbuf (memory buffers). The first two types are more fundamental allocation types used across XNU, while mbufs are a common data structure used in low-level networking code.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;The zone allocator is reasonably complicated, but we use a simplified model for our purposes: we just track the size assigned to a zone when it is created and make sure we malloc that size when zalloc is later called using the initialized zone. This could undoubtedly be modeled better, but this initial model worked quite well for the types of bugs I was looking for. In practice, this simplification affects exploitability, but we aren&amp;rsquo;t worried about that for a fuzzing project as we can assess that manually once we discover an issue. As you can see below, I created a custom zone type that simply stored the configured size, knowing that my zinit would return an opaque pointer that would be passed to my zalloc implementation, which could then use &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;calloc&lt;/span&gt;&lt;span&gt;&amp;nbsp;to service the request. &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;zfree&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;simply freed the requested bytes and ignored the zone, as allocation sizes are tracked by the host malloc already.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.7e8e3471c54f0a0758208cb59ca503fca5b8d03b&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.16&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; uintptr_t size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;};&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zinit&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;uintptr_t size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;uintptr_t max&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;uintptr_t alloc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;name&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;calloc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;));&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;size &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zalloc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;zone &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;calloc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zfree&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;dat&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;zone&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; free&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;dat&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Kalloc, kfree, and related functions were passed through to malloc and free as well. You can see fuzz/zalloc.c for their implementations. Mbufs (memory buffers) are more work to implement because they contain considerable metadata that is exposed to the &amp;ldquo;client&amp;rdquo; networking code.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.3cadcc6e539811e51cc5416c071def6b93755bc1&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.17&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;m_hdr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mbuf &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mh_next&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* next buffer in chain */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mbuf &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mh_nextpkt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* next chain in queue/record */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; caddr_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mh_data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* location of data */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int32_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mh_len&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* amount of data in this mbuf */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; u_int16_t &amp;nbsp; &amp;nbsp; &amp;nbsp; mh_type&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* type of data in this mbuf */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; u_int16_t &amp;nbsp; &amp;nbsp; &amp;nbsp; mh_flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* flags; see below */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;};&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;&amp;nbsp;* The mbuf object&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mbuf &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;m_hdr m_hdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;union&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;pkthdr MH_pkthdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* M_PKTHDR set */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;union&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;m_ext MH_ext&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* M_EXT set */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;MH_databuf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;_MHLEN&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;];&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;MH_dat&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;MH&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;M_databuf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;_MLEN&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* !M_PKTHDR, !M_EXT */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;M_dat&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;br&gt;I didn&amp;rsquo;t include the &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;pkthdr&lt;/span&gt;&lt;span&gt;&amp;nbsp;nor &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;m_ext&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure definitions, but they are nontrivial (you can see for yourself in bsd/sys/mbuf.h). A lot of trial and error was needed to create a simplified mbuf format that would work. In practice, I use an inline buffer when possible and, when necessary, locate the data in one large external buffer and set the &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;M_EXT&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag. As these allocations must be aligned, I use &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;posix_memalign&lt;/span&gt;&lt;span&gt;&amp;nbsp;to create them, rather than &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;malloc&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. Fortunately ASAN can help manage these allocations, so we can detect some bugs with this modification.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Two bugs I reported via the &lt;/span&gt;&lt;span&gt;Project Z&lt;/span&gt;&lt;span&gt;ero tracker highlight the benefit of the heap-based mbuf implementation&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;In the &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=1981&quot;&gt;first report&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I detected an mbuf double free using ASAN. While the &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;m_free&lt;/span&gt;&lt;span&gt;&amp;nbsp;implementation tries to detect double frees by checking the state of the allocation, ASAN goes even further by quarantining recently freed allocations to detect the bug. In this case, it looks like the fuzzer would have found the bug either way, but it was impressive. The &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=1976&quot;&gt;second issue&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c2 c8&quot;&gt;&amp;nbsp;linked is much subtler and requires some instrumentation to detect the bug, as it is a use after free read of an mbuf:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.a88ece0e2c57e078b87f3bf379cfbeb8837c55ed&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.18&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;22568&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;AddressSanitizer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;heap&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;after&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;free on address &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x61500026afe5&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;at pc &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x7ff60f95cace&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;bp &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x7ffd4d5617b0&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;sp &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x7ffd4d5617a8&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;READ of size &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;at &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x61500026afe5&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;thread T0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#0 0x7ff60f95cacd in tcp_input bsd/netinet/tcp_input.c:5029:25&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#1 0x7ff60f949321 in tcp6_input bsd/netinet/tcp_input.c:1062:2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#2 0x7ff60fa9263c in ip6_input bsd/netinet6/ip6_input.c:1277:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c3&quot;&gt;0x61500026afe5&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;located &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;229&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;bytes inside of &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;region &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x61500026af00&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x61500026b000&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;freed &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;thread T0 here&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#0 0x4a158d in free /b/swarming/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp:123:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#1 0x7ff60fb7444d in m_free fuzz/zalloc.c:220:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#2 0x7ff60f4e3527 in m_freem bsd/kern/uipc_mbuf.c:4842:7&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#3 0x7ff60f5334c9 in sbappendstream_rcvdemux bsd/kern/uipc_socket2.c:1472:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#4 0x7ff60f95821d in tcp_input bsd/netinet/tcp_input.c:5019:8&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#5 0x7ff60f949321 in tcp6_input bsd/netinet/tcp_input.c:1062:2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#6 0x7ff60fa9263c in ip6_input bsd/netinet6/ip6_input.c:1277:10&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;br&gt;Apple managed to catch this issue before I reported it, fixing it in iOS 13. I believe Apple has added some internal hardening or testing for mbufs that caught this bug. It could be anything from a hardened mbuf allocator like &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://llvm.org/docs/GwpAsan.html&quot;&gt;GWP-ASAN&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;, to an internal ARM MTE test, to simple auditing, but it was really cool to see this issue detected in this way, and also that Apple was proactive enough to find this themselves.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;c20 c18&quot; id=&quot;h.d95bqayxtdtc&quot;&gt;&lt;span class=&quot;c2 c27&quot;&gt;Accessing User Memory&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;When talking about this project with a fellow attendee at a fuzzing conference, their biggest question was how I handled user memory access. Kernels are never supposed to trust pointers provided by user-space, so whenever the kernel wants to access memory-mapped in userspace, it goes through intermediate functions &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;copyin&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;copyout&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. By replacing these functions with our fake implementations, we can supply fuzzer-provided input to the tested code. The real kernel would have done the relevant copies from user to kernel pages. Because these copies are driven by the target code and not our testcase, I added a buffer in the protobuf specification to be used to service these requests.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Here&amp;rsquo;s a backtrace from our stub before we implement `copyin`&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;As you can see, when calling the `recvfrom` syscall, our fuzzer passed in a pointer as an argument.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.95cfad74e7fc7217ee4a1ac5e48dea5ca2a33f6a&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.19&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#6 0x7fe1176952f3 in Assert /source/build3/../fuzz/stubs.c:21:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#7 0x7fe11769a110 in copyin /source/build3/../fuzz/fake_impls.c:408:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#8 0x7fe116951a18 in __copyin_chk /source/build3/../bsd/libkern/copyio.h:47:9&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#9 0x7fe116951a18 in recvfrom_nocancel /source/build3/../bsd/kern/uipc_syscalls.c:2056:11&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#10 0x7fe117691a86 in recvfrom_nocancel_wrapper /source/build3/../fuzz/syscall_wrappers.c:244:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#11 0x4e933a in TestOneProtoInput(Session const&amp;amp;) /source/build3/../fuzz/net_fuzzer.cc:936:9&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#12 0x4e43b8 in LLVMFuzzerTestOneInput /source/build3/../fuzz/net_fuzzer.cc:631:1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;I&amp;rsquo;ve extended the copyin specification with my fuzzer-specific semantics: when the pointer &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(void*)1&lt;/span&gt;&lt;span&gt;&amp;nbsp;is passed as an address, we interpret this as a request to fetch arbitrary bytes. Otherwise, we copy directly from that virtual memory address. This way, we can begin by passing &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(void*)1&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;everywhere in the fuzz target to get as much cheap coverage as possible. Later, as we want to construct well-formed data to pass into syscalls, we build the data in the protobuf test case handler and pass a real pointer to it, allowing it to be copied. This flexibility saves us time while permitting the construction of highly-structured data inputs as we see fit.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e72a3ef67035e7b412dce9ccdc54b3659668a297&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.20&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;__attribute__&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;warn_unused_result&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;copyin&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;user_addr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;kernel_addr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;size_t nbytes&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// Address 1 means use fuzzed bytes, otherwise use real bytes.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// NOTE: this does not support nested useraddr.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;user_addr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; memcpy&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kernel_addr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;user_addr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;nbytes&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;get_fuzzed_bool&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; get_fuzzed_bytes&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kernel_addr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;nbytes&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Copyout is designed similarly. We often don&amp;rsquo;t care about the data copied out; we just care about the safety of the accesses. For that reason, we make sure to memcpy from the source buffer in all cases, using a temporary buffer when a copy to &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(void*)1&lt;/span&gt;&lt;span&gt;&amp;nbsp;occurs. If the kernel copies out of bounds or from freed memory, for example, ASAN will catch it and inform us about a memory disclosure vulnerability.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;c20 c18&quot; id=&quot;h.bydr5qowo002&quot;&gt;&lt;span class=&quot;c27 c2&quot;&gt;Synchronization and Threads&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Among the many changes made to XNU&amp;rsquo;s behavior to support this project, perhaps the most extensive and invasive are the changes I made to the synchronization and threading model. Before beginning this project, I had spent over a year working on Chrome browser process research, where high level &amp;ldquo;sequences&amp;rdquo; are &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/threading_and_tasks.md#prefer-sequences-to-physical-threads&quot;&gt;preferred to using physical threads&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Despite a paucity of data races, Chrome still had sequence-related bugs that were triggered by randomly servicing some of the pending work in between performing synchronous IPC calls. In an exploit for a bug found by the &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://source.chromium.org/chromium/chromium/src/+/master:content/browser/appcache/appcache_fuzzer.cc;l=275;drc=db9ae7941adc1d95c943accce9e0151d265fd640&quot;&gt;AppCache fuzzer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;sleep calls were needed to get the asynchronous work to be completed before queueing up some more work synchronously. So I already knew that asynchronous continuation-passing style concurrency could have exploitable bugs that are easy to discover with this fuzzing approach.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;I suspected I could find similar bugs if I used a similar model for sockfuzzer. Because XNU uses multiple kernel threads in its networking stack, I would have to port it to a cooperative style. To do this, I provided no-op implementations for all of the thread management functions and sync primitives, and instead randomly called the work functions that would have been called by the real threads. This involved modifying code: most worker threads run in a loop, processing new work as it comes in. I modified these infinitely looping helper functions to do one iteration of work and exposed them to the fuzzer frontend. Then I called them randomly as part of the protobuf message. The main benefit of doing the project this way was improved performance and determinism. Places where the kernel could block the fuzzer were modified to return early. Overall, it was a lot simpler and easier to manage a single-threaded process. But this decision did not end up yielding as many bugs as I had hoped. For example, I suspected that interleaving garbage collection of various network-related structures with syscalls would be more effective. It did achieve the goal of removing threading-related headaches from deploying the fuzzer, but this is a serious weakness that I would like to address in future fuzzer revisions.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;c20 c18&quot; id=&quot;h.kmj0lqsi4gzm&quot;&gt;&lt;span class=&quot;c27 c2&quot;&gt;Randomness&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Randomness is another service provided by kernels to userland (e.g. /dev/random) and in-kernel services requiring it. This is easy to emulate: we can just return as many bytes as were requested from the current test case&amp;rsquo;s &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;data_provider&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;field.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;c20 c18&quot; id=&quot;h.uqavuzi2havy&quot;&gt;&lt;span class=&quot;c27 c2&quot;&gt;Authentication&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;XNU features some mechanisms (KAuth, mac checks, user checks) to determine whether a given syscall is permissible. Because of the importance and relative rarity of bugs in XNU, and my willingness to triage false positives, I decided to allow all actions by default. For example, the TCP multipath code requires a special entitlement, but disabling this functionality precludes us from finding Ian&amp;rsquo;s multipath vulnerability. Rather than fuzz only code accessible inside the app sandbox, I figured I would just triage whatever comes up and report it with the appropriate severity in mind.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;For example, when we create a socket, the kernel checks whether the running process is allowed to make a socket of the given domain, type, and protocol provided their KAuth credentials:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.18282f1e8a60e62e63d117b754876dbe5736c0c5&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.21&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;socket_common&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;proc &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;domain&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;type&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;protocol&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; pid_t epid&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; int32_t &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;retval&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;delegate&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;socket &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;so&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fileproc &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;error&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AUDIT_ARG&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;domain&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;type&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;protocol&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#if CONFIG_MACF_SOCKET_SUBSET&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;error &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mac_socket_check_create&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;kauth_cred_get&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;domain&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; type&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;protocol&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;error&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#endif&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* MAC_SOCKET_SUBSET */&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;When we reach this function in our fuzzer, we trigger an assert crash as this functionality was &amp;nbsp;stubbed.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.302eee1cbdf895a4dc039cf6ce90b0c2bd2abfd3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.22&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#6 0x7f58f49b53f3 in Assert /source/build3/../fuzz/stubs.c:21:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#7 0x7f58f49ba070 in kauth_cred_get /source/build3/../fuzz/fake_impls.c:272:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#8 0x7f58f3c70889 in socket_common /source/build3/../bsd/kern/uipc_syscalls.c:242:39&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#9 0x7f58f3c7043a in socket /source/build3/../bsd/kern/uipc_syscalls.c:214:9&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#10 0x7f58f49b45e3 in socket_wrapper /source/build3/../fuzz/syscall_wrappers.c:371:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#11 0x4e8598 in TestOneProtoInput(Session const&amp;amp;) /source/build3/../fuzz/net_fuzzer.cc:655:19&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Now, we need to implement &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;kauth_cred_get&lt;/span&gt;&lt;span&gt;. In this case, we return a (void*)1 pointer so that NULL checks on the value will pass (and if it turns out we need to model this correctly, we&amp;rsquo;ll crash again when the pointer is used).&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.5e1e8bf64388f5e50d984d841c5a6696fd7eae46&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.23&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;kauth_cred_get&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*)&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Now we crash actually checking the KAuth permissions.&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.c32adfdc5da002864f42356336383091ed0936f9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.24&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#6 0x7fbe9219a3f3 in Assert /source/build3/../fuzz/stubs.c:21:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#7 0x7fbe9219f100 in mac_socket_check_create /source/build3/../fuzz/fake_impls.c:312:33&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#8 0x7fbe914558a3 in socket_common /source/build3/../bsd/kern/uipc_syscalls.c:242:15&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#9 0x7fbe9145543a in socket /source/build3/../bsd/kern/uipc_syscalls.c:214:9&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#10 0x7fbe921995e3 in socket_wrapper /source/build3/../fuzz/syscall_wrappers.c:371:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#11 0x4e8598 in TestOneProtoInput(Session const&amp;amp;) /source/build3/../fuzz/net_fuzzer.cc:655:19&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#12 0x4e76c2 in LLVMFuzzerTestOneInput /source/build3/../fuzz/net_fuzzer.cc:631:1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Now we simply return 0 and move on.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.0d0274614707b5c947a1eb6e9d303107416a6c97&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.25&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mac_socket_check_create&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;As you can see, we don&amp;rsquo;t always need to do a lot of work to fake functionality. We can opt for a much simpler model that still gets us the results we want.&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.nu1k8a1bgzhy&quot;&gt;&lt;span&gt;Coverage Guided Development&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;We&amp;rsquo;ve paid a sizable initial cost to implement this fuzz target, but we&amp;rsquo;re now entering the longest and most fun stage of the project: iterating and maintaining the fuzzer. We begin by running the fuzzer continuously (in my case, I ensured it could run on ClusterFuzz). A day of work then consists of fetching the latest corpus, running a clang-coverage visualization pass over it, and viewing the report. While initially most of the work involved fixing assertion failures to get the fuzzer working, we now look for silent implementation deficiencies only visible in the coverage reports. A snippet from the report looks like the following:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;/p&gt;

 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjypy5nffIIMxqcIAkEku-SJldrsLbyXhU-th0AbxjTCf8e8hM-L4hpsxAJUbibDeaTMsiHpirbmlNqKqSa3eIdd1bJYm9HtfDoVTNbItsbu7xdZDq5gG9eK5l8qHEblS7LoyglGzTqzn_1l5XXNIBf9YOdT2JiJ2_6wiE9_Yd7KrDaM-MhERHw4myg/s658/image4.png&quot; style=&quot;display: block; padding: 1em 0;text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjypy5nffIIMxqcIAkEku-SJldrsLbyXhU-th0AbxjTCf8e8hM-L4hpsxAJUbibDeaTMsiHpirbmlNqKqSa3eIdd1bJYm9HtfDoVTNbItsbu7xdZDq5gG9eK5l8qHEblS7LoyglGzTqzn_1l5XXNIBf9YOdT2JiJ2_6wiE9_Yd7KrDaM-MhERHw4myg/s658/image4.png&quot; border=&quot;0&quot; alt=&quot;Several lines of code have a column indicating that they have been covered tens of thousands of times. Below them, you can see a switch statement for handling the parsing of IP options. Only the default case is covered approximately fifty thousand times, while the routing record options are covered 0 times.&quot; style=&quot;max-height: 750px; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;This excerpt from IP option handling shows that we don&amp;rsquo;t support the various packets well with the current version of the fuzzer and grammar. Having this visualization is enormously helpful and necessary to succeed, as it is a source of truth about your fuzz target. By directing development work around these reports, it&amp;rsquo;s relatively easy to plan actionable and high-value tasks around the fuzzer.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;I like to think about improving a fuzz target by either improving &amp;ldquo;soundness&amp;rdquo; or &amp;ldquo;completeness.&amp;rdquo; Logicians probably wouldn&amp;rsquo;t be happy with how I&amp;rsquo;m loosely using these terms, but they are a good metaphor for the task. To start with, we can improve the completeness of a given fuzz target by helping it reach code that we know to be reachable based on manual review. In the above example, I would suspect very strongly that the uncovered option handling code is reachable. But despite a long fuzzing campaign, these lines are uncovered, and therefore our fuzz target is incomplete, somehow unable to generate inputs reaching these lines. There are two ways to get this needed coverage: in a top-down or bottom-up fashion. Each has its tradeoffs. The top-down way to cover this code is to improve the existing grammar or C++ code to make it possible or more likely. The bottom-up way is to modify the code in question. For example, we could replace &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;switch (opt)&lt;/span&gt;&lt;span&gt;&amp;nbsp;with something like &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;switch (global_fuzzed_data-&amp;gt;ConsumeRandomEnum(valid_enums)&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. This bottom-up approach introduces unsoundness, as maybe these enums could never have been selected at this point. But this approach has often led to interesting-looking crashes that encouraged me to revert the change and proceed with the more expensive top-down implementation. When it&amp;rsquo;s one researcher working against potentially hundreds of thousands of lines, you need tricks to prioritize your work. By placing many cheap bets, you can revert later for free and focus on the most fruitful areas.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Improving soundness is the other side of the coin here. I&amp;rsquo;ve just mentioned reverting unsound changes and moving those changes out of the target code and into the grammar. But our fake objects are also simple models for how their real implementations behave. If those models are too simple or directly inaccurate, we may either miss bugs or introduce them. I&amp;rsquo;m comfortable missing some bugs as I think these simple fakes enable better coverage, and it&amp;rsquo;s a net win. But sometimes, I&amp;rsquo;ll observe a crash or failure to cover some code because of a faulty model. So improvements can often come in the form of making these fakes better.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;All in all, there is plenty of work that can be done at any given point. Fuzzing isn&amp;rsquo;t an all or nothing one-shot endeavor for large targets like this. This is a continuous process, and as time goes on, easy gains become harder to achieve as most bugs detectable with this approach are found, and eventually, there comes a natural stopping point. But despite working on this project for several months, it&amp;rsquo;s remarkably far from the finish line despite producing several useful bug reports. The cool thing about fuzzing in this way is that it is a bit like excavating a fossil. Each target is different; we make small changes to the fuzzer, tapping away at the target with a chisel each day and letting our coverage metrics, not our biases, reveal the path forward.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=&quot;c26 c23&quot; id=&quot;h.rxgvq2murgo6&quot;&gt;&lt;span class=&quot;c27 c2&quot;&gt;Packet Delivery&lt;/span&gt;&lt;/h1&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;I&amp;rsquo;d like to cover one example to demonstrate the value of the &amp;ldquo;bottom-up&amp;rdquo; unsound modification, as in some cases, the unsound modification is dramatically cheaper than the grammar-based one. Disabling hash checks is a well-known fuzzer-only modification when fuzzer-authors know that checksums could be trivially generated by hand. But it can also be applied in other places, such as packet delivery.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;When an mbuf containing a TCP packet arrives, it is handled by &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;tcp_input&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. In order for almost anything meaningful to occur with this packet, it must be matched by IP address and port to an existing process control block (PCB) for that connection, as seen below.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.59f43b4f2ff0c1f12bb616ac7f9a7c91aabcf10b&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.26&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;void&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;tcp_input&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mbuf &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;off0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;// ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;isipv6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inp &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;in6_pcblookup_hash&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;tcbinfo&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ip6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ip6_src&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_sport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ip6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ip6_dst&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_dport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; m&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;m_pkthdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;rcvif&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;else&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#endif&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;/* INET6 */&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inp &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;in_pcblookup_hash&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;tcbinfo&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ip&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ip_src&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_sport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ip_dst&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;th&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;th_dport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;m&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;m_pkthdr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;rcvif&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Here&amp;rsquo;s the IPv4 lookup code. Note that &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;faddr&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;fport_arg&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;laddr&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;lport_arg&lt;/span&gt;&lt;span&gt;&amp;nbsp;are all taken directly from the packet and are checked against the list of PCBs, one at a time. This means that we must guess two 4-byte integers and two 2-byte shorts to match the packet to the relevant PCB. Even coverage-guided fuzzing is going to have a hard time guessing its way through these comparisons. While eventually a match will be found, we can radically improve the odds of covering meaningful code by just flipping a coin instead of doing the comparisons. This change is extremely easy to make, as we can fetch a random boolean from the fuzzer at runtime. Looking up existing PCBs and fixing up the IP/TCP headers before sending the packets is a sounder solution, but in my testing this change didn&amp;rsquo;t introduce any regressions. Now when a vulnerability is discovered, it&amp;rsquo;s just a matter of fixing up headers to match packets to the appropriate PCB. That&amp;rsquo;s light work for a vulnerability researcher looking for a remote memory corruption bug.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.927b886dd5a32d7f9b647faf078857d678f6d1bf&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.27&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;/*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;&amp;nbsp;* Lookup PCB in hash list.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;inpcb &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;in_pcblookup_hash&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;inpcbinfo &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;pcbinfo&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;in_addr faddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; u_int fport_arg&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;in_addr laddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;u_int lport_arg&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;wildcard&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ifnet &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ifp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;// ...&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; head &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;pcbinfo&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ipi_hashbase&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;INP_PCBHASH&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;faddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;s_addr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;lport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pcbinfo&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ipi_hashmask&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)];&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; LIST_FOREACH&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;inp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;head&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;inp_hash&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;inp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;inp_faddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;s_addr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;faddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;s_addr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;inp_laddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;s_addr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;laddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;s_addr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;inp_fport &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fport &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;inp_lport &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;lport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;get_fuzzed_bool&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;in_pcb_checkstate&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;inp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;WNT_ACQUIRE&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;!=&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; WNT_STOPUSING&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; lck_rw_done&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;pcbinfo&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ipi_lock&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;inp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;br&gt;Astute readers may have noticed that the PCBs are fetched from a hash table, so it&amp;rsquo;s not enough just to replace the check. The 4 values used in the linear search are used to calculate a PCB hash, so we have to make sure all PCBs share a single bucket, as seen in the diff below. The real kernel shouldn&amp;rsquo;t do this as lookups become O(n), but we only create a few sockets, so it&amp;rsquo;s acceptable.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.ff85c5d49936d74a427dd2c77dc5b4f6949346c9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.28&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;diff &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;git a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;netinet&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;in_pcb&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;h b&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;netinet&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;in_pcb&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;h&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;index a5ec42ab&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;37f6ee50&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;100644&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;---&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;a&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;netinet&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;in_pcb&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;h&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+++&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;b&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;bsd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;netinet&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;in_pcb&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;h&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;611&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;611&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;@@&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;inpcbinfo &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; u_int32_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipi_flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;};&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#define&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;INP_PCBHASH&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;faddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;lport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mask&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;faddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;faddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;ntohs&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;lport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#define&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;INP_PCBPORTHASH&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;lport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mask&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ntohs&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;lport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;))&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// nedwill: let all pcbs share the same hash&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#define&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; INP_PCBHASH&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;faddr&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;lport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mask&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#define&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; INP_PCBPORTHASH&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;lport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;mask&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#define&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;INP_IS_FLOW_CONTROLLED&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;_inp_&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;\&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;_inp_&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;inp_flags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;INP_FLOW_CONTROLLED&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.14k82770mpb&quot;&gt;&lt;span class=&quot;c7 c2&quot;&gt;Checking Our Work: Reproducing the Sample Bugs&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;With most of the necessary supporting code implemented, we can fuzz for a while without hitting any assertions due to unimplemented stubbed functions. At this stage, I reverted the fixes for the two inspiration bugs I mentioned at the beginning of this article. Here&amp;rsquo;s what we see shortly after we run the fuzzer with those fixes reverted:&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b2722f59e62293fbbc44bd59d6442b0f062757f2&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.29&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1633983&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;AddressSanitizer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;heap&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;overflow on address &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x61d00029f474&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;at pc &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x00000049fcb7&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;bp &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x7ffcddc88590&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;sp &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x7ffcddc87d58&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;WRITE of size &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;at &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x61d00029f474&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;thread T0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#0 0x49fcb6 in __asan_memmove /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:30:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#1 0x7ff64bd83bd9 in __asan_bcopy fuzz/san.c:37:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#2 0x7ff64ba9e62f in icmp_error bsd/netinet/ip_icmp.c:362:2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#3 0x7ff64baaff9b in ip_dooptions bsd/netinet/ip_input.c:3577:2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#4 0x7ff64baa921b in ip_input bsd/netinet/ip_input.c:2230:34&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#5 0x7ff64bd7d440 in ip_input_wrapper fuzz/backend.c:132:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#6 0x4dbe29 in DoIpInput fuzz/net_fuzzer.cc:610:7&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#7 0x4de0ef in TestOneProtoInput(Session const&amp;amp;) fuzz/net_fuzzer.cc:720:9&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c3&quot;&gt;0x61d00029f474&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;located &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;bytes to the left of &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;2048&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;region &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x61d00029f480&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x61d00029fc80&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;allocated &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;thread T0 here&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#0 0x4a0479 in calloc /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp:154:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#1 0x7ff64bd82b20 in mbuf_create fuzz/zalloc.c:157:45&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#2 0x7ff64bd8319e in mcache_alloc fuzz/zalloc.c:187:12&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#3 0x7ff64b69ae84 in m_getcl bsd/kern/uipc_mbuf.c:3962:6&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#4 0x7ff64ba9e15c in icmp_error bsd/netinet/ip_icmp.c:296:7&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#5 0x7ff64baaff9b in ip_dooptions bsd/netinet/ip_input.c:3577:2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#6 0x7ff64baa921b in ip_input bsd/netinet/ip_input.c:2230:34&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#7 0x7ff64bd7d440 in ip_input_wrapper fuzz/backend.c:132:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#8 0x4dbe29 in DoIpInput fuzz/net_fuzzer.cc:610:7&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#9 0x4de0ef in TestOneProtoInput(Session const&amp;amp;) fuzz/net_fuzzer.cc:720:9&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;When we inspect the test case, we see that a single raw IPv4 packet was generated to trigger this bug. This is to be expected, as the bug doesn&amp;rsquo;t require an existing connection, and looking at the stack, we can see that the test case triggered the bug in the IPv4-specific &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;ip_input&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;path.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e5f0cef3123c406738ed1868e0c2fa3f334081f3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.30&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; ip_input &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; raw_ip4&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;M\001\000I\001\000\000\000\000\000\000\000III\333\333\333\333\333\333\333\333\333\333IIIIIIIIIIIIII\000\000\000\000\000III\333\333\333\333\333\333\333\333\333\333\333\333IIIIIIIIIIIIII&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;data_provider&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;br&gt;If we fix that issue and fuzz a bit longer, we soon see another crash, this time in the MPTCP stack. This is Ian&amp;rsquo;s MPTCP vulnerability. The ASAN report looks strange though. Why is it crashing during garbage collection in &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;mptcp_session_destroy&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;? The original vulnerability was an OOB write, but ASAN couldn&amp;rsquo;t catch it because it corrupted memory within a struct. This is a well-known shortcoming of ASAN and similar mitigations, importantly the upcoming MTE. This means we don&amp;rsquo;t catch the bug until later, when a randomly corrupted pointer is accessed.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.38f4e091ebe11281f4c9363d7093c9f69ad01412&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.31&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1640571&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;AddressSanitizer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;attempting free on address which was &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;not&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;malloc&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()-&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;ed&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x6190000079dc&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;thread T0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#0 0x4a0094 in free /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp:123:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#1 0x7fbdfc7a16b0 in _FREE fuzz/zalloc.c:293:36&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#2 0x7fbdfc52b624 in mptcp_session_destroy bsd/netinet/mptcp_subr.c:742:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#3 0x7fbdfc50c419 in mptcp_gc bsd/netinet/mptcp_subr.c:4615:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#4 0x7fbdfc4ee052 in mp_timeout bsd/netinet/mp_pcb.c:118:16&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#5 0x7fbdfc79b232 in clear_all fuzz/backend.c:83:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#6 0x4dfd5c in TestOneProtoInput(Session const&amp;amp;) fuzz/net_fuzzer.cc:1010:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c3&quot;&gt;0x6190000079dc&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;located &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;348&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;bytes inside of &lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;920&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;region &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x619000007880&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0x619000007c18&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;allocated &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;thread T0 here&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#0 0x4a0479 in calloc /b/s/w/ir/cache/builder/src/third_party/llvm/compiler-rt/lib/asan/asan_malloc_linux.cpp:154:3&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#1 0x7fbdfc7a03d4 in zalloc fuzz/zalloc.c:37:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#2 0x7fbdfc4ee710 in mp_pcballoc bsd/netinet/mp_pcb.c:222:8&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#3 0x7fbdfc53cf8a in mptcp_attach bsd/netinet/mptcp_usrreq.c:211:15&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#4 0x7fbdfc53699e in mptcp_usr_attach bsd/netinet/mptcp_usrreq.c:128:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#5 0x7fbdfc0e1647 in socreate_internal bsd/kern/uipc_socket.c:784:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#6 0x7fbdfc0e23a4 in socreate bsd/kern/uipc_socket.c:871:9&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#7 0x7fbdfc118695 in socket_common bsd/kern/uipc_syscalls.c:266:11&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#8 0x7fbdfc1182d1 in socket bsd/kern/uipc_syscalls.c:214:9&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#9 0x7fbdfc79a26e in socket_wrapper fuzz/syscall_wrappers.c:371:10&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;#10 0x4dd275 in TestOneProtoInput(Session const&amp;amp;) fuzz/net_fuzzer.cc:655:19&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Here&amp;rsquo;s the protobuf input for the crashing testcase:&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.f691b70570e755735734b5e1a4200a505811568b&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.32&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; socket &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; domain&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; so_type&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;SOCK_STREAM&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; protocol&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IPPROTO_IP&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; connectx &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;FD_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; endpoints &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_srcif&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IFIDX_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_srcaddr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sockaddr_generic &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_family&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quotamp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_dstaddr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sockaddr_generic &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_family&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; associd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;ASSOCID_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;CONNECT_DATA_IDEMPOTENT&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;CONNECT_DATA_IDEMPOTENT&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;CONNECT_DATA_IDEMPOTENT&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; connectx &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;FD_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; endpoints &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_srcif&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IFIDX_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_dstaddr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sockaddr_generic &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_family&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; associd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;ASSOCID_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;CONNECT_DATA_IDEMPOTENT&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; connectx &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;FD_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; endpoints &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_srcif&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IFIDX_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_srcaddr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sockaddr_generic &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_family&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_dstaddr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sockaddr_generic &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_family&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quotamp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; associd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;ASSOCID_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;CONNECT_DATA_IDEMPOTENT&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;CONNECT_DATA_IDEMPOTENT&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;CONNECT_DATA_AUTHENTICATED&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; connectx &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;FD_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; endpoints &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_srcif&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IFIDX_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_dstaddr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sockaddr_generic &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_family&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; associd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;ASSOCID_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;CONNECT_DATA_IDEMPOTENT&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; close &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;FD_8&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; ioctl_real &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; siocsifflags &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ifr_name&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;LO0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IFF_LINK1&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; close &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;FD_8&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;data_provider&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Hmm, that&amp;rsquo;s quite large and hard to follow. Is the bug really that complicated? We can use libFuzzer&amp;rsquo;s crash minimization feature to find out. Protobuf-based test cases simplify nicely because even large test cases are already structured, so we can randomly edit and remove nodes from the message. After about a minute of automated minimization, we end up with the test shown below.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.9fd2c563e2b8930f35bbddc2b12b872cadc2745a&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.33&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; socket &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; domain&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; so_type&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;SOCK_STREAM&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; protocol&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IPPROTO_IP&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; connectx &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;FD_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; endpoints &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_srcif&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IFIDX_CASE_1&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sae_dstaddr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sockaddr_generic &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_family&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_MULTIPATH&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sa_data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;bugmbuf_debutoeloListen_dedeloListen_dedebuloListete_debugmbuf_debutoeloListen_dedeloListen_dedebuloListeListen_dedebuloListe_dtrte&amp;quot;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;# string length 131&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; associd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;ASSOCID_CASE_0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;data_provider&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;&lt;br&gt;This is a lot easier to read! It appears that SockFuzzer managed to open a socket from the &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;AF_MULTIPATH&lt;/span&gt;&lt;span&gt;&amp;nbsp;domain and called &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;connectx&lt;/span&gt;&lt;span&gt;&amp;nbsp;on it with a sockaddr using an unexpected &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;sa_family&lt;/span&gt;&lt;span&gt;, in this case &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;AF_MULTIPATH&lt;/span&gt;&lt;span&gt;. Then the large &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;sa_data&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;field was used to overwrite memory. You can see some artifacts of heuristics used by the fuzzer to guess strings as &amp;ldquo;listen&amp;rdquo; and &amp;ldquo;mbuf&amp;rdquo; appear in the input. This testcase could be further simplified by modifying the sa_data to a repeated character, but I left it as is so you can see exactly what it&amp;rsquo;s like to work with the output of this fuzzer.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;In my experience, t&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;he protobuf-formatted syscalls and packet descriptions were highly useful for reproducing crashes and tended to work on the first attempt. I didn&amp;rsquo;t have an excellent setup for debugging on-device, so I tried to lean on the fuzzing framework as much as I could to understand issues before proceeding with the expensive process of reproducing them.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;In &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://googleprojectzero.blogspot.com/2019/12/sockpuppet-walkthrough-of-kernel.html&quot;&gt;my &lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://googleprojectzero.blogspot.com/2019/12/sockpuppet-walkthrough-of-kernel.html&quot;&gt;previous post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;describing the &amp;ldquo;SockPuppet&amp;rdquo; vulnerability&lt;/span&gt;&lt;span&gt;, I walked through one of the newly discovered vulnerabilities, from protobuf to exploit. I&amp;rsquo;d like to share another original protobuf bug report for a remotely-triggered vulnerability I reported &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=1976&quot;&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.eac5bf4a152226018135f44cd838ea6f45dde5ec&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.34&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; socket &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; domain&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;AF_INET6&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; so_type&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;SOCK_RAW&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; protocol&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IPPROTO_IP&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; set_sock_opt &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; level&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;SOL_SOCKET&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; name&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;SO_RCVBUF&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; val&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;\021\000\000\000&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; set_sock_opt &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; level&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IPPROTO_IPV6&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; name&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IP_FW_ZERO&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; val&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;\377\377\377\377&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;commands &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; ip_input &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; tcp6_packet &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ip6_hdr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip6_hdrctl &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip6_un1_flow&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip6_un1_plen&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip6_un1_nxt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IPPROTO_ICMPV6&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip6_un1_hlim&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip6_src&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IN6_ADDR_LOOPBACK&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip6_dst&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;IN6_ADDR_ANY&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; tcp_hdr &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th_sport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;PORT_2&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th_dport&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;PORT_1&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th_seq&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;SEQ_1&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th_ack&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;SEQ_1&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th_off&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th_win&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th_sum&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th_urp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; is_pure_syn&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;false&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; is_pure_ack&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;false&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; data&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;\377\377\377\377\377\377\377\377\377\377\377\377q\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377&amp;quot;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;data_provider&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;This automatically minimized test case requires some human translation to a report that&amp;rsquo;s actionable by developers who don&amp;rsquo;t have access to our fuzzing framework. The test creates a socket and sets some options before delivering a crafted ICMPv6 packet. You can see how the packet grammar we specified comes in handy. I started by transcribing the first three syscall messages directly by writing the following C program.&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.c9d8fb90175071c7e24d3ed9cb5e3b8cad7693a3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.35&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#include&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#define&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;__APPLE_USE_RFC_3542&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#include&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#include&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c17&quot;&gt;#include&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;main&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;fd &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;socket&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;AF_INET6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;SOCK_RAW&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;IPPROTO_IP&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;failed\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;res&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// This is not needed to cause a crash on macOS 10.14.6, but you can&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// try setting this option if you can&amp;#39;t reproduce the issue.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// int space = 1;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// res = setsockopt(fd, SOL_SOCKET, SO_RCVBUF, &amp;amp;space, sizeof(space));&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// printf(&amp;quot;res1: %d\n&amp;quot;, res);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;enable &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; res &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;setsockopt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;IPPROTO_IPV6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;IPV6_RECVPATHMTU&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;));&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; printf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;res2: %d\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;res&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17&quot;&gt;// Keep the socket open without terminating.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;{&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sleep&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; close&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;);&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c1&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;With the socket open, it&amp;rsquo;s now a matter of sending a special ICMPv6 packet to trigger the bug. Using the original crash as a guide, I reviewed the code around the crashing instruction to understand which parts of the input were relevant. I discovered that sending a &amp;ldquo;packet too big&amp;rdquo; notification would reach the buggy code, so I used the &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://scapy.net/&quot;&gt;scapy&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;library for Python to send the buggy packet locally. My kernel panicked, confirming the double free vulnerability.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.5835bc8393a6afa2b0624af9b70d27f9f4b58fd4&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.36&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c5&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c10&quot;&gt;&lt;td class=&quot;c16&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;scapy&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;all &lt;/span&gt;&lt;span class=&quot;c6&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;sr1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;IPv6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;ICMPv6PacketTooBig&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c0 c2&quot;&gt;&amp;nbsp;raw&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;outer &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;IPv6&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;dst&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;::1&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c13&quot;&gt;ICMPv6PacketTooBig&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c19&quot;&gt;&amp;quot;\x41&amp;quot;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c3&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c15&quot;&gt;&lt;span class=&quot;c0 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;outer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;())&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;p &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;sr1&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;outer&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;)&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c6&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp;p&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;:&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4&quot;&gt;&lt;span class=&quot;c0&quot;&gt;&amp;nbsp; &amp;nbsp; p&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c0&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;()&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Creating a working PoC from the crashing protobuf input took about an hour, thanks to the straightforward mapping from grammar to syscalls/network input and the utility of being able to debug the local crashing &amp;ldquo;kernel&amp;rdquo; using gdb.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.3b7k7e45aqfc&quot;&gt;&lt;span class=&quot;c7 c2&quot;&gt;Drawbacks&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Any fuzzing project of this size will require design decisions that have some tradeoffs. The most obvious issue is the inability to detect race conditions. Threading bugs can be found with fuzzing but are still best left to static analysis and manual review as fuzzers can&amp;rsquo;t currently deal with the state space of interleaving threads. Maybe this will change in the future, but today it&amp;rsquo;s an issue. I accepted this problem and removed threading completely from the fuzzer; some bugs were missed by this, such as a race condition &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://youtu.be/8cOx7vfszZU?t=366&quot;&gt;in the bind syscall&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Another issue lies in the fact that by replacing so much functionality by hand, it&amp;rsquo;s hard to extend the fuzzer trivially to support additional attack surfaces. This is evidenced by another issue I missed in &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://twitter.com/WangTielei/status/1246376070367965184&quot;&gt;packet filtering&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. I don&amp;rsquo;t support VFS at the moment, so I can&amp;rsquo;t access the bpf device. A syzkaller-like project would have less trouble with supporting this code since VFS would already be working. I made an explicit decision to build a simple tool that works very effectively and meticulously, but this can mean missing some low hanging fruit due to the effort involved.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Per-test case determinism is an issue that I&amp;rsquo;ve solved only partially. If test cases aren&amp;rsquo;t deterministic, libFuzzer becomes less efficient as it thinks some tests are finding new coverage when they really depend on one that was run previously. To mitigate this problem, I track open file descriptors manually and run all of the garbage collection thread functions after each test case. Unfortunately, there are many ioctls that change state in the background. It&amp;rsquo;s hard to keep track of them to clean up properly but they are important enough that it&amp;rsquo;s not worth disabling them just to improve determinism. If I were working on a long-term well-resourced overhaul of the XNU network stack, I would probably make sure there&amp;rsquo;s a way to cleanly tear down the whole stack to prevent this problem.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;Perhaps the largest caveat of this project is its reliance on source code. Without the efficiency and productivity losses that come with binary-only research, I can study the problem more closely to the source. But I humbly admit that this approach ignores many targets and doesn&amp;rsquo;t necessarily match real attackers&amp;rsquo; workflows. Real attackers take the shortest path they can to find an exploitable vulnerability, and often that path is through bugs found via binary-based fuzzing or reverse engineering and auditing. I intend to discover some of the best practices for fuzzing with the source and then migrate this approach to work with binaries. &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://github.com/googleprojectzero/TinyInst&quot;&gt;Binary instrumentation&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;&amp;nbsp;can assist in coverage guided fuzzing, but some of my tricks around substituting fake implementations or changing behavior to be more fuzz-friendly is a more significant burden when working with binaries. But I believe these are tractable problems, and I expect researchers can adapt some of these techniques to binary-only fuzzing efforts, even if there is additional overhead.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11 c23 title&quot; id=&quot;h.vb3z86pd31px&quot;&gt;&lt;span class=&quot;c7 c2&quot;&gt;Open Sourcing and Future Work&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span&gt;This fuzzer is now open source on &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://github.com/googleprojectzero/SockFuzzer&quot;&gt;GitHub&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;. I invite you to study the code and improve it! I&amp;rsquo;d like to continue the development of this fuzzer semi-publicly. Some modifications that yield new vulnerabilities may need to be embargoed until relevant patches go out. Still, I hope that I can be as transparent as possible in my research. By working publicly, it may be possible to bring the original XNU project and this fuzzer closer together by sharing the efforts. I&amp;rsquo;m hoping the upstream developers can make use of this project to perform their own testing and perhaps make their own improvements to XNU to make this type of testing more accessible. There&amp;rsquo;s plenty of remaining work to improve the existing grammar, add support for new subsystems, and deal with some high-level design improvements such as adding proper threading support.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;An interesting property of the current fuzzer is that despite reaching coverage saturation on ClusterFuzz after many months, there is still reachable but uncovered code due to the enormous search space. This means that improvements in coverage-guided fuzzing could find new bugs. I&amp;rsquo;d like to encourage teams who perform fuzzing engine research to use this project as a baseline. If you find a bug, you can take the credit for it! I simply hope you share your improvements with me and the rest of the community.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c18 c23 c25 title&quot; id=&quot;h.n705fp4we09t&quot;&gt;&lt;span class=&quot;c7 c2&quot;&gt;Conclusion&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span&gt;Modern kernel development has some catching up to do. XNU and Linux suffer from some process failures that lead to &lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://www.synacktiv.com/en/publications/return-of-the-ios-sandbox-escape-lightspeeds-back-in-the-race.html&quot;&gt;shipping&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://www.theguardian.com/technology/2019/aug/20/apple-reopens-security-flaw-ios-iphone&quot;&gt;security&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c14&quot;&gt;&lt;a class=&quot;c121&quot; href=&quot;https://git.kernel.org/pub/scm/linux/kernel/git/netdev/net.git/commit/?id=c6c9fee35dc27362b7bac34b2fc9f5b8ace2e22c&quot;&gt;regressions&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Kernels, perhaps the most security-critical component of operating systems, are becoming increasingly fragile as memory corruption issues become easier to discover. Implementing better mitigations is half the battle; we need better kernel unit testing to make identifying and fixing (even non-security) &lt;/span&gt;&lt;span&gt;bugs &lt;/span&gt;&lt;span class=&quot;c8 c2&quot;&gt;cheaper.&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p class=&quot;c4 c18&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;Since my last post, Apple has increased the frequency of its open-source releases. This is great for end-user security. The more publicly that Apple can develop XNU, the more that external contributors like myself may have a chance to contribute fixes and improvements directly. Maintaining internal branches for upcoming product launches while keeping most development open has helped Chromium and Android security, and I believe XNU&amp;rsquo;s development could follow this model. As software engineering grows as a field, our experience has shown us that open, shared, and continuous development has a real impact on software quality and stability by improving developer productivity. If you don&amp;rsquo;t invest in CI, unit testing, security reviews, and fuzzing, attackers may do that for you - and users pay the cost whether they recognize it or not.&lt;/span&gt;&lt;/p&gt;&lt;div&gt;
 &lt;p class=&quot;c4 c18 c15&quot;&gt;&lt;span class=&quot;c8 c2&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='https://googleprojectzero.blogspot.com/feeds/2714099021755665939/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://googleprojectzero.blogspot.com/2021/04/designing-sockfuzzer-network-syscall.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/2714099021755665939'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/2714099021755665939'/><link rel='alternate' type='text/html' href='https://googleprojectzero.blogspot.com/2021/04/designing-sockfuzzer-network-syscall.html' title='Designing sockfuzzer, a network syscall fuzzer for XNU'/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/blank.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixaqhrlPJxgqVridccvdElpi6yxaoJCSUXDp5q8hm_F66e5WHW3NRaFwmy-OWQvCKz661k3LEfi4A4r2sa1LkgMb8pu8CEVjKbzTkblc8SZZYcOsKkw7u0uG2qo5KzCdjbxixJ-CplQI2nohuVE1_t07PiNW-xRxnW-3e4WtILcCE6CoYjbN1D6UPi/s72-c/image3%282%29.png" height="72" width="72"/><thr:total>0</thr:total></entry>