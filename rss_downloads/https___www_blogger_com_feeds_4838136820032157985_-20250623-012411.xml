<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><entry xmlns='http://www.w3.org/2005/Atom' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-4838136820032157985.post-7224812645464338214</id><published>2021-01-14T09:04:00.002-08:00</published><updated>2022-08-24T11:34:20.676-07:00</updated><title type='text'>Hunting for Bugs in Windows Mini-Filter Drivers</title><content type='html'>&lt;style type=&quot;text/css&quot;&gt;ul.lst-kix_j703njnsekbb-2{list-style-type:none}ul.lst-kix_j703njnsekbb-3{list-style-type:none}ul.lst-kix_j703njnsekbb-4{list-style-type:none}ul.lst-kix_j703njnsekbb-5{list-style-type:none}ul.lst-kix_j703njnsekbb-6{list-style-type:none}ul.lst-kix_j703njnsekbb-7{list-style-type:none}ul.lst-kix_j703njnsekbb-8{list-style-type:none}.lst-kix_j703njnsekbb-8&gt;li:before{content:&quot;\0025a0  &quot;}ul.lst-kix_j703njnsekbb-0{list-style-type:none}ul.lst-kix_j703njnsekbb-1{list-style-type:none}ul.lst-kix_itnic84mr100-8{list-style-type:none}.lst-kix_itnic84mr100-0&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_itnic84mr100-6{list-style-type:none}ul.lst-kix_itnic84mr100-7{list-style-type:none}ul.lst-kix_itnic84mr100-4{list-style-type:none}.lst-kix_itnic84mr100-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_itnic84mr100-3&gt;li:before{content:&quot;\0025cf  &quot;}ul.lst-kix_itnic84mr100-5{list-style-type:none}ul.lst-kix_itnic84mr100-2{list-style-type:none}ul.lst-kix_itnic84mr100-3{list-style-type:none}ul.lst-kix_itnic84mr100-0{list-style-type:none}.lst-kix_itnic84mr100-1&gt;li:before{content:&quot;\0025cb  &quot;}ul.lst-kix_itnic84mr100-1{list-style-type:none}.lst-kix_itnic84mr100-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_itnic84mr100-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_itnic84mr100-4&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_itnic84mr100-8&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_j703njnsekbb-1&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_itnic84mr100-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_j703njnsekbb-0&gt;li:before{content:&quot;\0025cf  &quot;}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_j703njnsekbb-6&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_j703njnsekbb-7&gt;li:before{content:&quot;\0025cb  &quot;}.lst-kix_j703njnsekbb-5&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_j703njnsekbb-2&gt;li:before{content:&quot;\0025a0  &quot;}.lst-kix_j703njnsekbb-3&gt;li:before{content:&quot;\0025cf  &quot;}.lst-kix_j703njnsekbb-4&gt;li:before{content:&quot;\0025cb  &quot;}ol{margin:0;padding:0}table td,table th{padding:0}.c18{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#dd7e6b;border-left-style:solid;border-bottom-width:1pt;width:132pt;border-top-color:#000000;border-bottom-style:solid}.c39{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#d9d9d9;border-left-style:solid;border-bottom-width:1pt;width:130.5pt;border-top-color:#000000;border-bottom-style:solid}.c46{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#ffe599;border-left-style:solid;border-bottom-width:1pt;width:16.5pt;border-top-color:#000000;border-bottom-style:solid}.c63{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#ffe599;border-left-style:solid;border-bottom-width:1pt;width:191.2pt;border-top-color:#000000;border-bottom-style:solid}.c22{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#efefef;border-left-style:solid;border-bottom-width:1pt;width:41.2pt;border-top-color:#000000;border-bottom-style:solid}.c29{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#dd7e6b;border-left-style:solid;border-bottom-width:1pt;width:70.5pt;border-top-color:#000000;border-bottom-style:solid}.c65{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#d9d9d9;border-left-style:solid;border-bottom-width:1pt;width:69pt;border-top-color:#000000;border-bottom-style:solid}.c61{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#efefef;border-left-style:solid;border-bottom-width:1pt;width:156pt;border-top-color:#000000;border-bottom-style:solid}.c59{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:270.8pt;border-top-color:#000000;border-bottom-style:solid}.c78{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:69pt;border-top-color:#000000;border-bottom-style:solid}.c38{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:15.8pt;border-top-color:#000000;border-bottom-style:solid}.c37{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:238.5pt;border-top-color:#000000;border-bottom-style:solid}.c26{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:42pt;border-top-color:#000000;border-bottom-style:solid}.c68{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:191.2pt;border-top-color:#000000;border-bottom-style:solid}.c51{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:16.5pt;border-top-color:#000000;border-bottom-style:solid}.c44{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c28{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:187.5pt;border-top-color:#000000;border-bottom-style:solid}.c81{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:41.2pt;border-top-color:#000000;border-bottom-style:solid}.c41{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:132pt;border-top-color:#000000;border-bottom-style:solid}.c13{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:59.2pt;border-top-color:#000000;border-bottom-style:solid}.c72{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:70.5pt;border-top-color:#000000;border-bottom-style:solid}.c34{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:61.5pt;border-top-color:#000000;border-bottom-style:solid}.c58{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:130.5pt;border-top-color:#000000;border-bottom-style:solid}.c62{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:156pt;border-top-color:#000000;border-bottom-style:solid}.c53{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:bottom;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:189.8pt;border-top-color:#000000;border-bottom-style:solid}.c5{color:#434343;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:&quot;Arial&quot;;font-style:normal}.c47{padding-top:16pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c12{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Courier New&quot;;font-style:normal}.c6{color:#000000;font-weight:700;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;;font-style:normal}.c1{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;;font-style:normal}.c55{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c14{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:&quot;Arial&quot;;font-style:normal}.c24{color:#000000;font-weight:700;text-decoration:none;vertical-align:baseline;font-family:&quot;Arial&quot;;font-style:normal}.c25{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-family:&quot;Arial&quot;;font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c19{padding-top:0pt;padding-bottom:0pt;line-height:1.500000000000001;orphans:2;widows:2;text-align:left}.c52{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:&quot;Arial&quot;}.c9{background-color:#ffffff;font-size:10pt;font-family:&quot;Courier New&quot;;color:#000080;font-weight:700}.c2{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c30{color:#000000;text-decoration:none;vertical-align:baseline;font-style:normal}.c4{background-color:#ffffff;font-size:10pt;font-family:&quot;Courier New&quot;;font-weight:400}.c7{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c16{font-size:10pt;font-family:&quot;Courier New&quot;;color:#8b0000;font-weight:400}.c15{border-spacing:0;border-collapse:collapse;margin-right:auto}.c32{background-color:#ffffff;font-family:&quot;Courier New&quot;;color:#0000ff;font-weight:700}.c11{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.c84{background-color:#ffffff;font-family:&quot;Courier New&quot;;font-weight:700}.c40{text-decoration:none;vertical-align:baseline;font-style:normal}.c71{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c31{background-color:#ffffff;font-size:10.5pt;color:#171717}.c50{font-weight:700;font-size:11pt;font-family:&quot;Courier New&quot;}.c10{color:inherit;text-decoration:inherit}.c27{margin-left:36pt;padding-left:0pt}.c70{padding:0;margin:0}.c17{font-weight:400;font-family:&quot;Courier New&quot;}.c56{border:1px solid black;margin:5px}.c60{color:#0000ff}.c75{background-color:#efefef}.c8{height:11pt}.c79{color:#006161}.c80{color:#008000}.c49{background-color:#f4cccc}.c82{height:20.1pt}.c21{font-style:italic}.c69{background-color:#d9d9d9}.c74{color:#6aa84f}.c43{color:#800080}.c76{color:#808080}.c64{background-color:#ffe599}.c42{color:#a82d00}.c66{color:#804000}.c36{color:#ff8000}.c67{background-color:#a4c2f4}.c20{height:0pt}.c83{color:#006400}.c35{color:#696969}.c77{background-color:#ffd966}.c48{color:#8a2be2}.c73{background-color:#b6d7a8}.c45{color:#000080}.c54{color:#8000ff}.c33{background-color:#dd7e6b}.c85{height:27pt}.c57{color:#00008b}.c3{height:15.8pt}.c23{font-size:10pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}p{margin:0;color:#000000;font-size:11pt;font-family:&quot;Arial&quot;}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:&quot;Arial&quot;;line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=&quot;c71&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Posted by James Forshaw, Project Zero&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;In December Microsoft fixed 4 issues in Windows in the Cloud Filter and Windows Overlay Filter (WOF) drivers (&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2086&quot;&gt;CVE-2020-17103&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2084&quot;&gt;CVE-2020-17134&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2082&quot;&gt;CVE-2020-17136&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2088&quot;&gt;CVE-2020-17139&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;). These 4 issues were 3 local privilege escalations and a security feature bypass, and they were all present in Windows file system filter drivers. I&amp;rsquo;ve found a number of issues in filter drivers previously, including 6 in the LUAFV driver which implements UAC file virtualization.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;&amp;nbsp;The purpose of a file system filter driver according to &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/about-file-system-filter-drivers&quot;&gt;Microsoft&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;is:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c52 c21&quot;&gt;&amp;ldquo;A file system filter driver can filter I/O operations for one or more file systems or file system volumes. Depending on the nature of the driver, filter can mean log, observe, modify, or even prevent. Typical applications for file system filter drivers include antivirus utilities, encryption programs, and hierarchical storage management systems.&amp;rdquo;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;What this boils down to is the filter driver can inspect and modify almost any IO request sent to a file system. This power comes with many responsibilities, and considering the complexity of the IO model on Windows it can be hard to avoid introducing subtle bugs.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;With the issues being fixed I thought would be a good opportunity to go into a bit more detail on how you can research file system filter drivers, specifically the kind of things I looked at to find my security vulnerabilities. I&amp;rsquo;m going to give an overview of how filter drivers work, how you communicate with them, some hints on reverse engineering and some of the common security issues you might discover. I&amp;rsquo;ll also provide some basic example code to give you a basic idea of some common coding patterns. The goal is to allow you to do your own research in this area.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;I&amp;rsquo;m assuming you have some prior knowledge on how the IO Manager works and have experience in finding security issues in non-filter drivers. Also I&amp;rsquo;m not claiming this to be an exhaustive description of bug hunting in filter drivers as the topic is very deep and complex. With this in mind let&amp;rsquo;s start with an overview of how a filter driver works.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c55&quot; id=&quot;h.xkk5cafwn49p&quot;&gt;&lt;span class=&quot;c14&quot;&gt;Filter Driver Implementation&lt;/span&gt;&lt;/h2&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;A filter driver exploits the way the Windows IO Manager implements file system drivers. When you make a request to access a file, such as calling the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;NtCreateFile &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;system call the IO Manager allocates an IO Request Packet (IRP) structure which contains the operation type and all the parameters for the operation. The IRP is then dispatched to the top of the device stack associated with the request.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEicWXAXSsjJNUw14eN7KqFg3CR7-TJq0tyc_fSFWOzrn2g0MOHXO8-xn1SAFMf_7RJKYuC-EIZkZ5KDcSTlEXc7tq-B7lKLYWHlD8rC1z6HyVcjR5K5SFu0ig2gKx38wnm9VJtED4h6-Qm3RoTOlx3Cyh1hJ_13gMtUTnNMCq9MAqR01iGfjTl3mVx8/s653/Device%20Stack.png&quot; style=&quot;display: block; padding: 1em 0; text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEicWXAXSsjJNUw14eN7KqFg3CR7-TJq0tyc_fSFWOzrn2g0MOHXO8-xn1SAFMf_7RJKYuC-EIZkZ5KDcSTlEXc7tq-B7lKLYWHlD8rC1z6HyVcjR5K5SFu0ig2gKx38wnm9VJtED4h6-Qm3RoTOlx3Cyh1hJ_13gMtUTnNMCq9MAqR01iGfjTl3mVx8/s653/Device%20Stack.png&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;A filter driver registers for the IO requests it supports with a callback function which is invoked when a specific IO request type IRP is queued in the device stack. The driver callback can then do a number of different things to the IRP.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=&#39;padding: 0;&#39; class=&quot;c70 lst-kix_itnic84mr100-0 start&quot;&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Pass the IRP unmodified directly to the next driver in the stack.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Modify the IRP then pass to the next driver.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Modify the IRP response.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Complete the IRP operation with a success result.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Complete the IRP operation with an error result.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Pass the IRP to a different device stack.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;This is the basics of how a filter driver works, the driver is attached at a suitable point of a device stack and handles IO requests. When an IRP of interest is received it can perform one of the operations to filter requests. If it wants to inspect or modify the response it can register for the completion routine and handle the operation in the callback.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;It&amp;rsquo;s important to note that the IRP doesn&amp;rsquo;t automatically propagate down the stack. A driver can choose to complete the IRP which means it&amp;rsquo;ll not be processed by any other driver down the stack. If the driver passes on the IRP the driver must register a completion routine otherwise it&amp;rsquo;ll not be notified when the IRP has been processed by the lower drivers in the stack. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;For a file system filter the insertion point would typically be on top of the file system device object which is exposed by a file system driver such as NTFS. However, the driver can insert itself almost anywhere, allowing it to filter not just file system requests but also change data such as disk sectors. For example the Bitlocker Full Disk Encryption driver is a filter which is attached to the top of a volume block device. Any sectors passed in a write IRP are encrypted before passing to the lower driver. Read IRPs are handled in a completion routine and the sectors are decrypted before returning to the caller.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c55&quot; id=&quot;h.x7y7f8zle74&quot;&gt;&lt;span class=&quot;c14&quot;&gt;The Filter Manager and Mini-Filters&lt;/span&gt;&lt;/h2&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Implementing a filter driver from scratch is quite complicated. You have to handle every single IO request type, even if you don&amp;rsquo;t care about it, so that it can be forwarded to the next driver in the stack. You also have to find the correct point to insert your filter driver into the device stack. It&amp;rsquo;s easy to attach a driver to the top of the stack but trying to insert in the middle of an existing stack can be a recipe for disaster, for example the ordering of the filter drivers in the stack might differ depending on load order.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;To make it easier to write a filter driver Windows comes with the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/filter-manager-concepts#:~:text=The%20filter%20manager%20is%20a,in%20file%20system%20filter%20drivers.&amp;text=The%20filter%20manager%20is%20installed,a%20minifilter%20driver%20is%20loaded.&quot;&gt;Filter Manager Driver&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;which takes care of handling IO requests and device stacks. This allows a developer to write what&amp;rsquo;s called a mini-filter driver instead of a, now named, legacy filter driver. The following diagram shows how the architecture changes when you introduce the filter manager.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;/p&gt;

&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjmrRocvIgCSQtgENI4S5x5GP1WneiZY3bCv60_81X7_fHsOEZCD_edvvkjxfvLde8RBsdV_h1K_fdX0an2n8r3mfjlFBnEtLgFJafR0q8s0lBNIfutO4cfGuYbQgpCbUksOdb5MUDPm3wpOeaX31W4zp60Oz4x1-0ZyneOgfme08NEd8GhcO8tGGYR/s820/Mini-Filter%20Driver.png&quot; style=&quot;display: block; padding: 1em 0; text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjmrRocvIgCSQtgENI4S5x5GP1WneiZY3bCv60_81X7_fHsOEZCD_edvvkjxfvLde8RBsdV_h1K_fdX0an2n8r3mfjlFBnEtLgFJafR0q8s0lBNIfutO4cfGuYbQgpCbUksOdb5MUDPm3wpOeaX31W4zp60Oz4x1-0ZyneOgfme08NEd8GhcO8tGGYR/s820/Mini-Filter%20Driver.png&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;As you can see the mini-filters don&amp;rsquo;t add their own device objects to the stack. Instead they are registered with the filter manager and it&amp;rsquo;s the filter manager which inserts its own device. The filter manager handles the IO requests and calls registered mini-filters to process the request. If your mini-filter doesn&amp;rsquo;t support a certain IO request then the filter manager implements a default which handles passing the IRP on to the next driver in the stack.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;Another useful feature is the filter manager implements a mechanism for ordering the mini-filters, through an altitude value. The higher the altitude value the higher the priority. For example, a filter at altitude 10000 will be called before a filter at altitude 5000 when making a IO request. When handling responses the altitudes processed in reverse order, so the filter at 5000 will be called first then the one at 10000. Officially the altitude values must be &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/minifilter-altitude-request&quot;&gt;registered&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with Microsoft. MSDN contains a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/allocated-altitudes&quot;&gt;list of the currently registered altitudes&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;. However, there&amp;rsquo;s nothing to stop a driver from registering itself with a different altitude except it&amp;rsquo;ll likely draw the ire of Microsoft and might fail certification. By formalizing the altitude values you avoid the risk that a filter driver&amp;rsquo;s ordering may change depending on load order.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c55&quot; id=&quot;h.t0ykfnsx6rw0&quot;&gt;&lt;span class=&quot;c14&quot;&gt;Mini-Filter Registration&lt;/span&gt;&lt;/h2&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;A mini-filter driver registers its presence by calling the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltregisterfilter&quot;&gt;FltRegisterFilter&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;filter manager API, normally during the driver&amp;rsquo;s entry point. The main parameter is a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/ns-fltkernel-_flt_registration&quot;&gt;FLT_REGISTRATION&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure which defines all the various callbacks for handling IO requests and bookkeeping. The important fields are the callbacks which a driver can register to respond to events from the filter manager. You can view what filters are registered with the filter manager using the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;fltmc &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;command line tool (must be run as an administrator).&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.013f8fb81fa603dd07a7256d23386722aba151c3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.0&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c17&quot;&gt;C:\&amp;gt; &lt;/span&gt;&lt;span class=&quot;c30 c50&quot;&gt;fltmc&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;Filter Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Num Instances &amp;nbsp; &amp;nbsp;Altitude &amp;nbsp; &amp;nbsp;Frame&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;------------------------------ &amp;nbsp;------------- &amp;nbsp;------------ &amp;nbsp;-----&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;bindflt &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1 &amp;nbsp; &amp;nbsp; &amp;nbsp; 409800 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;WdFilter &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 17 &amp;nbsp; &amp;nbsp; &amp;nbsp; 328010 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;storqosflt &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;1 &amp;nbsp; &amp;nbsp; &amp;nbsp; 244000 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;wcifs &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0 &amp;nbsp; &amp;nbsp; &amp;nbsp; 189900 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;CldFlt &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0 &amp;nbsp; &amp;nbsp; &amp;nbsp; 180451 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;FileCrypt &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0 &amp;nbsp; &amp;nbsp; &amp;nbsp; 141100 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;luafv &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1 &amp;nbsp; &amp;nbsp; &amp;nbsp; 135000 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;npsvctrig &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;46000 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;Wof &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;14 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;40700 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;FileInfo &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 17 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;40500 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;We can see all the mini-filters registered, the number of instances which indicates the number of volumes that&amp;rsquo;s been attached and the altitude. There are 19 volumes available for filtering in the system I tested on (according to running &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;fltmc volumes&lt;/span&gt;&lt;span&gt;) so no filter is attached to everything. A driver can select and decide what volumes it wants to attach to by assigning an &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nc-fltkernel-pflt_instance_setup_callback&quot;&gt;instance setup callback&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;InstanceSetupCallback &lt;/span&gt;&lt;span&gt;field in the filter registration structure. This callback is invoked for every volume on the system, including new ones added after the filter starts. The callback can return the status code &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;STATUS_FLT_DO_NOT_ATTACH&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;to block attachment. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;You can view what volumes a filter is attached to using &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;fltmc &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;again:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.1dc2eb5eb209606302750e4e5786f0e39d755507&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.1&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17&quot;&gt;C:\&amp;gt; &lt;/span&gt;&lt;span class=&quot;c30 c50&quot;&gt;fltmc instances -f luafv&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7 c8&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;Instances for luafv filter:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7 c8&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;Volume Name &amp;nbsp; &amp;nbsp; Altitude &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Instance Name &amp;nbsp; &amp;nbsp; &amp;nbsp; Frame &amp;nbsp;VlStatus&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;------------- ------------ &amp;nbsp;---------------------- &amp;nbsp;----- &amp;nbsp;--------&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17&quot;&gt;C: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 135000 &amp;nbsp; &amp;nbsp; luafv &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;This just shows the volume that LUAFV is attached to. As UAC virtualization only makes sense in the context of the system drive then it&amp;rsquo;s only attached to &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;C:&lt;/span&gt;&lt;span&gt;. You can manually attach and detach filters on volumes using the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;fltmc &lt;/span&gt;&lt;span&gt;tool with the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;attach &lt;/span&gt;&lt;span&gt;and &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;detach&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;commands, we&amp;rsquo;ll show an example of using these commands later.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c21 c52&quot;&gt;NOTE: Just because a filter driver is attached to a volume it doesn&amp;rsquo;t mean it&amp;rsquo;ll filter any IO requests for that volume. For example, the WOF driver is attached to all NTFS volumes, however it&amp;rsquo;ll only enable itself if there&amp;rsquo;s at least one file in the volume which is registered to be handled by WOF. Otherwise it ignores the IO request, letting it complete normally.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c52 c21&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;Most mini-filters only attach to file system volumes. However, the filter manager also supports attaching to the named pipe and mailslot devices. The filter driver indicates support by setting the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLTFL_REGISTRATION_SUPPORT_NPFS_MSFS&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_REGISTRATION&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c55&quot; id=&quot;h.u6ec30oappt0&quot;&gt;&lt;span&gt;Mini-Filter IO Request Operation Callbacks&lt;/span&gt;&lt;/h2&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;By far the most important field in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_REGISTRATION&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure is &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;OperationRegistration&lt;/span&gt;&lt;span&gt;&amp;nbsp;which references a list of &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/ns-fltkernel-_flt_operation_registration&quot;&gt;FLT_OPERATION_REGISTRATION&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structures defining the IO request callbacks. Each entry contains the IRP major code for the operation (such as &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IRP_MJ_CREATE&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IRP_MJ_FILE_SYSTEM_CONTROL&lt;/span&gt;&lt;span&gt;) and can have a pre-request and post-request callback. The driver doesn&amp;rsquo;t need to specify both if it doesn&amp;rsquo;t need both. The list is &lt;/span&gt;&lt;span&gt;a variable length &lt;/span&gt;&lt;span&gt;array, terminated with the major code being set to &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IRP_MJ_OPERATION_END&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;(0x80). Any operation not in the list is handled by the filter manager which typically just ignores it and continues to the next filter in the list. A basic example of what you might see in C code is shown below.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.cc28d7dd0ec24da816c16ef2cb99fd8edd02c625&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.2&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4 c54&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FLT_OPERATION_REGISTRATION Callbacks&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;IRP_MJ_CREATE&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c4 c36&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PreCreateOperation&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PostCreateOperation &lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;},&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;IRP_MJ_OPERATION_END &lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;A &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nc-fltkernel-pflt_pre_operation_callback&quot;&gt;pre-request callback&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;accepts three parameters:&lt;/span&gt;&lt;/p&gt;&lt;ul style=&#39;padding: 0;&#39; class=&quot;c70 lst-kix_j703njnsekbb-0 start&quot;&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span&gt;The parameters for the operation, specified in a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/ns-fltkernel-_flt_callback_data&quot;&gt;FLT_CALLBACK_DATA&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span&gt;Related kernel objects, in a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/ns-fltkernel-_flt_related_objects&quot;&gt;FLT_RELATED_OBJECTS&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;An output pointer which can be assigned a callback context.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The prototype of the callback function pointer is:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.8c5b0e7083051bb7cfeeb4d3608e79d073d26ab9&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.3&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c32 c23&quot;&gt;typedef&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;FLT_PREOP_CALLBACK_STATUS&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;(*&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;PFLT_PRE_OPERATION_CALLBACK&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PFLT_CALLBACK_DATA Data&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PCFLT_RELATED_OBJECTS FltObjects&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PVOID &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;CompletionContext&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The parameters for the IO request are accessible in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_CALLBACK_DATA&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure&amp;rsquo;s &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Iopb&lt;/span&gt;&lt;span&gt;&amp;nbsp;field which is an &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/ns-fltkernel-_flt_io_parameter_block&quot;&gt;FLT_IO_PARAMETER_BLOCK&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure. The parameters are similar to the ones exposed through the IRP&amp;rsquo;s current &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_stack_location&quot;&gt;IO_STACK_LOCATION&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure. The data parameter also contains the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_status_block&quot;&gt;IO_STATUS_BLOCK&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for the request and the caller&amp;rsquo;s requestor mode (either &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;KernelMode &lt;/span&gt;&lt;span&gt;or &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;UserMode&lt;/span&gt;&lt;span&gt;). The return code from the pre-request callback function determines what the filter driver wants to do with the request. The return type &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_PREOP_CALLBACK_STATUS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;can be one of the following:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.59c99c373b3896c8783a9b10b4154ac9babbf1b7&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.4&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c37 c75&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c6&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c26 c75&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c6&quot;&gt;Value&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28 c75&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c6&quot;&gt;Description&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c37&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_PREOP_SUCCESS_WITH_CALLBACK&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c26&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The callback was successful. Pass on the IO request and get a post-operation callback after completion.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c37&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_PREOP_SUCCESS_NO_CALLBACK&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c26&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The callback was successful. Pass on the IO request. No callback required.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c37&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_PREOP_PENDING&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c26&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Mark the IO operation as pending.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c37&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_PREOP_DISALLOW_FASTIO&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c26&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;If handling a Fast IO operation, fail it to force the operation as a normal IO Request.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c37&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_PREOP_COMPLETE&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c26&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The operation has been completed. Do not pass on the IO request to any other drivers, even other filters in the stack.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c37&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_PREOP_SYNCHRONIZE&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c26&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;5&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Synchronize the post-operation callback in the same thread.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c37&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c31&quot;&gt;FLT_PREOP_DISALLOW_FSFILTER_IO&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c26&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c28&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Disallow FastIO file creation.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;A &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nc-fltkernel-pflt_post_operation_callback&quot;&gt;post-request callback&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;accepts four parameters:&lt;/span&gt;&lt;/p&gt;&lt;ul style=&#39;padding: 0;&#39; class=&quot;c70 lst-kix_j703njnsekbb-0&quot;&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span&gt;The parameters for the operation, specified in a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/ns-fltkernel-_flt_callback_data&quot;&gt;FLT_CALLBACK_DATA&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span&gt;Related kernel objects, in a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/ns-fltkernel-_flt_related_objects&quot;&gt;FLT_RELATED_OBJECTS&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;A context pointer which could have been assigned by the pre-operation callback.&lt;/span&gt;&lt;/li&gt;&lt;li style=&#39;margin-left: 46pt;&#39; class=&quot;c0 c27 li-bullet-0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Additional flags.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;For post-operation callbacks the prototype is as follows:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.fabf9378be1538d9055ef14c3362b4744b65cf48&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.5&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c82&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c32 c23&quot;&gt;typedef&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;FLT_POSTOP_CALLBACK_STATUS&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;(*&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;PFLT_POST_OPERATION_CALLBACK&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PFLT_CALLBACK_DATA Data&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PCFLT_RELATED_OBJECTS FltObjects&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PVOID CompletionContext&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp; &amp;nbsp; FLT_POST_OPERATION_FLAGS Flags&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The parameters are more or less the same as for the pre-operation callback. The &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;CompletionContext &lt;/span&gt;&lt;span&gt;parameter is the same one assigned in the pre-operation callback. If this value was allocated the post-operation callback needs to free the memory buffer to prevent leaking memory. The &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_POSTOP_CALLBACK_STATUS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;return type can be one of the following values.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.e43b35613e6365457ddfbb46de9dba688a557d53&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.6&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c59 c75&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c6&quot;&gt;Name&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c22&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c6&quot;&gt;Value&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c61&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c6&quot;&gt;Description&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c59&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_POSTOP_FINISHED_PROCESSING&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c81&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c62&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The callback was successful. No further processing required.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c59&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_POSTOP_MORE_PROCESSING_REQUIRED&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c81&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c62&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Halts completion of the IO request. The operation will be pending until the filter driver completes it.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c59&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;FLT_POSTOP_DISALLOW_FSFILTER_IO&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c81&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c62&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Disallow FastIO file creation.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=&quot;c55&quot; id=&quot;h.yo7abx97tose&quot;&gt;&lt;span class=&quot;c14&quot;&gt;Handling IO Requests&lt;/span&gt;&lt;/h2&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;Now that we&amp;rsquo;ve described registration of the mini-filter and its callbacks let&amp;#39;s go through a few examples of how IO requests are handled inside the pre and post operation callbacks. We&amp;rsquo;ll use the six operations I mentioned earlier as a base for this discussion. Any examples are to demonstrate the likely code you&amp;rsquo;ll find in a driver but omits security checks and other unimportant details. &lt;/span&gt;&lt;span&gt;This isn&amp;rsquo;t Stack Overflow, so please don&amp;rsquo;t copy and paste them into real drivers.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.nd4qjwvf1f&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Pass the IO request unmodified&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The simplest way of not modifying an IO request is to not specify a pre-operation callback. Of course we&amp;rsquo;re assuming the driver wants to handle an IO request selectively based on certain criteria so it must implement the callback. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The easiest way to ignore the IO request is to return the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_PREOP_SUCCESS_NO_CALLBACK&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;status code from the pre-operation callback. That indicates to the filter manager that the mini-filter has completed its processing and is no longer interested in the IO request.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;To give an example the following pre-create operation callback will ignore any open requests where the desired access does not request the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FILE_WRITE_DATA&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;access right. If the request doesn&amp;rsquo;t contain the access then the request is completed with no callback.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b910f4dca3da3ba25f4d3b7b14e184b4501ecf5d&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.7&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;FLT_PREOP_CALLBACK_STATUS&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;PreCreateOperation&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PFLT_CALLBACK_DATA Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PCFLT_RELATED_OBJECTS FltObjects&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PVOID&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c4 c30&quot;&gt;&amp;nbsp;CompletionContext&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PFLT_IO_PARAMETER_BLOCK ps &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Iopb&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Parameters&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; DWORD access &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;ps&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;SecurityContext&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;DesiredAccess&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;access &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FILE_WRITE_DATA&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c4 c36&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FLT_PREOP_SUCCESS_NO_CALLBACK&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19 c8&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c4 c40 c80&quot;&gt;// Perform some operation...&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The example extracts the desired access from the creation parameters. If the FILE_WRITE_DATA access right is not set then the filter driver will ignore the IO request entirely by returning the no callback status code.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;Of course depending on the purpose of the filter driver it might still want the post-operation callback to be called. For example if the filter driver is monitoring file access then the post-operation callback will contain valuable information such as the success or failure of opening the file or the data read from the file. In this case it makes sense to return &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_PREOP_SUCCESS_WITH_CALLBACK&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;When the driver specified it wants a post-operation callback it can configure the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;CompletionContext&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;with any value it likes. This context can then be used in the post-operation callback. This can be used to pass additional data between the callbacks so that it can perform its operation correctly.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.dl4q78rczjd4&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Modify the IO request&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;During a pre-operation callback the driver can modify the contents of the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_CALLBACK_DATA&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure. For example the driver could change the security context used to open the file or it could even change the name of the file itself. The driver must indicate to the filter manager that the data has been modified by setting the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLTFL_CALLBACK_DATA_DIRTY&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Flags&lt;/span&gt;&lt;span&gt;&amp;nbsp;field before returning. The correct way of setting the flag is to call the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltsetcallbackdatadirty&quot;&gt;FltSetCallbackDataDirty&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;API however all that currently does is set the flag.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.ry5ns1lqqp2e&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Modify the IO request response&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;As with the request you can modify the response in the post-operation callback which will return the changes to higher mini-filters and the IO manager. One trick I&amp;rsquo;ve commonly seen is to use this to change the target file by modifying the file name and returning the status code &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;STATUS_REPARSE&lt;/span&gt;&lt;span&gt;&amp;nbsp;as if the file system hand encountered a symbolic link.&lt;/span&gt;&lt;span&gt;&amp;nbsp;The following is the basic approach that the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;LUAFV &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;driver uses to perform the reparse operation to an arbitrary file path in a post-operation callback.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.5bf6b5d4c63ae4ea06b33a6b530bb842ffc7af1d&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.8&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;FLT_POSTOP_CALLBACK_STATUS LuafvReparse&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;PFLT_CALLBACK_DATA Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PUNICODE_STRING TargetFileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;){&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; LuafvSetEcp&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;TargetFileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; PFILE_OBJECT FileObject &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Iopb&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;TargetFileObject&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; ExFreePool&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;FileObject&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;FileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; FileObject&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;FileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Buffer &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;ExAllocatePool&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;PagedPool&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TargetFileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; FileObject&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;FileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;MaximumLength &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;TargetFileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; RtlCopyUnicodeString&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;FileObject&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;FileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;TargetFileName&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;IoStatus&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Information &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c4 c36&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;IoStatus&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Status &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;STATUS_REPARSE&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; FltSetCallbackDataDirty&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FLT_POSTOP_FINISHED_PROCESSING&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The code deallocates the filename buffer in the target file object and replaces it with its own. It then sets the status code to &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;STATUS_REPARSE&lt;/span&gt;&lt;span&gt;&amp;nbsp;and indicates that processing has finished. In Windows 7 a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-ioreplacefileobjectname&quot;&gt;IoReplaceFileObjectName&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API was introduced which makes this operation much less error prone, however LUAFV was written for Vista where the API didn&amp;rsquo;t exist so it had to make do. An official Microsoft example can be found in the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://github.com/microsoft/Windows-driver-samples/blob/master/filesys/miniFilter/simrep/simrep.c&quot;&gt;SimRep sample driver&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;One quirk of this operation is the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FileName&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the file object is volume relative, e.g. if you opened &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;c:\windows\notepad.exe&lt;/span&gt;&lt;span&gt;&amp;nbsp;then &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FileName &lt;/span&gt;&lt;span&gt;is set to &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;\windows\notepad.exe&lt;/span&gt;&lt;span&gt;. However, you can replace that with an absolute path such as &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;\??\d:\abc.txt&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;and that still works. Also the driver doesn&amp;rsquo;t need to create a real mount point or symbolic link reparse point buffer for this to work. The IO manager will just take the path from the file object and restart the create request with the new path.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.jxnbxukjqp77&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Complete the IO request with a success result&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The driver can immediately complete an IO request by returning&lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&amp;nbsp;FLT_PREOP_COMPLETE&lt;/span&gt;&lt;span&gt;&amp;nbsp;from a pre-operation callback and updating the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IO_STATUS_BLOCK&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_CALLBACK_DATA&lt;/span&gt;&lt;span&gt;&amp;nbsp;parameter. The previous reparse example shows how that update works. If you&amp;rsquo;re only updating the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IO_STATUS_BLOCK&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;you don&amp;rsquo;t need to mark the data as dirty.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Higher level filter drivers will still get their post-operation callbacks invoked if they&amp;rsquo;re registered for them, however no lower altitude drivers will be called with the IO request.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.nzniy7tr7tkz&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Complete the IO request with an error result.&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;This is basically the same as for a success code, just specifying a different NT status. There&amp;rsquo;s nothing stopping a higher level filter driver from ignoring the error code and replacing it with a success. &lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.a0vcy6kng4t0&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Pass the IO request to a different file or device stack&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The filter driver can redirect the operation to another device stack. For example you could implement a driver which redirects file reads and writes to a completely different file on the disk, making it look like the user is modifying the file when they&amp;rsquo;re not.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The most obvious way of achieving this would be to open the new file during the pre-create operation then use that file object as the target for all subsequent operations. There are two potential issues with this approach.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;First, how can a filter driver interact with a file system volume it&amp;rsquo;s attached to without resulting in an infinite loop? For example, if the driver wants to open a file it can call &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-iocreatefile&quot;&gt;IoCreateFile&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;(and variants). However, the IO manager would dispatch the IO request to the top of the device stack, which would get back to the filter manager which could end up calling the filter driver again, ad infinitum. The same would be the case with any exported APIs from the kernel.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;This issue is solved through two mechanisms. The first is the filter manager exposes a set of APIs which mirror the kernel IO APIs but will only dispatch the IO request to filters below the caller. For example you can call &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltcreatefileex&quot;&gt;FltCreateFileEx&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltwritefile&quot;&gt;FltWriteFile&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;and be sure you won&amp;rsquo;t end up in a loop. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;For file creation requests the driver can also employ a second mechanism called &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Extra Create Parameters (ECP)&lt;/span&gt;&lt;span&gt;. An ECP is a GUID along with additional data which can be attached to the create request using the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltinsertextracreateparameter&quot;&gt;FltInsertExtraCreateParameter&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API. The filter driver can attach the ECP to the request, then check for its presence using &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltfindextracreateparameter&quot;&gt;FltFindExtraCreateParameter&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API, allowing it to ignore the request. For example the earlier code which shows how LUAFV implements a reparse operation shows calling &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;LuafvSetEcp&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;which sets an ECP on the request so that the new create request can be ignored by the driver.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The second issue is how do you actually pass on the parameters for the IO request to the new file you&amp;rsquo;ve opened? The naive approach would be to extract the parameters then invoke the corresponding filter manager API. For example, for a write IO request, read out the buffer and length then call FltWriteFile. This is error prone and might introduce subtle security issues.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;A better approach is the driver can change the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;TargetFileObject &lt;/span&gt;&lt;span&gt;field in the pre-operation callback&amp;rsquo;s &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_IO_PARAMETER_BLOCK&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure then return a success code for the IO request to continue. This will cause the filter manager to send the original IO request to the new file object. The following is a simple example which could be in a pre-operation callback which will redirect the request to a file object extracted from the file system context:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.2b78c3fa992590409e0365f91f3b3056b9daaa92&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.9&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;PREDIRECT_CONTEXT context &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4 c74&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c74 c23 c84&quot;&gt;// Get driver&amp;rsquo;s allocated context.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c32 c23&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;FileObject&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Iopb&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;TargetFileObject &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;context&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;FileObject&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; FltSetCallbackDataDirty&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c23 c32&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FLT_PREOP_SUCCESS_NO_CALLBACK&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=&quot;c55&quot; id=&quot;h.1neovsml50sj&quot;&gt;&lt;span class=&quot;c14&quot;&gt;Mini-Filter Communication&lt;/span&gt;&lt;/h2&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;For there to be a security vulnerability the driver must process some untrustworthy data from a malicious user. What makes mini-filter drivers interesting is there&amp;#39;s multiple places where untrusted data can be processed. Let&amp;rsquo;s go through the ways of identifying and analyzing these communication channels.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.sq7pvxyffy0f&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Device Object&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;A mini-filter doesn&amp;rsquo;t need to create any device object to perform its function, the filter manager deals with creating any necessary device objects. That doesn&amp;rsquo;t mean the driver can&amp;rsquo;t create one for its own purposes. A typical attack vector is the malicious user opens a handle to the device object and sends device IO control codes to exercise the vulnerable behavior.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;I&amp;rsquo;m not going to go into details about how to analyze Windows kernel drivers for security issues in the IRP dispatch callbacks, as there&amp;rsquo;s plenty of other resources. For example: Reverse Engineering and Bug Hunting on KMDF Drivers (&lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://www.youtube.com/watch?v=puNkbSTQtXY&quot;&gt;video&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://ioactive.com/wp-content/uploads/2018/09/Reverse_Engineering_and_Bug_Hunting_On_KMDF_Drivers.pdf&quot;&gt;slides&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;).&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.46kxf48l7kwf&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Filter Communication Ports&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;One unique communication mechanism which is implemented by the filter manager is Filter Communication Ports. A port can be created by a mini-filter driver by calling the exported filter manager API &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltcreatecommunicationport&quot;&gt;FltCreateCommunicationPort&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.8bdba4f3314845fcc006a96e87b1e70812f9a12f&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.10&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;PSECURITY_DESCRIPTOR SecurityDescriptor&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c9 c40&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;FltBuildDefaultSecurityDescriptor&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;SecurityDescriptor&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp; FLT_PORT_ALL_ACCESS&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9 c40&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c9 c40&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;UNICODE_STRING Name&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;RtlInitUnicodeString&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c4 c76&quot;&gt;L&amp;quot;\\FilterPortName&amp;quot;&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c9 c40&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;OBJECT_ATTRIBUTES ObjAttr&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;InitializeObjectAttributes&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;ObjAttr&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c4 c36&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;SecurityDescriptor&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c9 c40&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;PFLT_PORT Port&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;FltCreateCommunicationPort&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; Filter&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Port&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;ObjAttr&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; ConnectNotifyCallback&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; DisconnectNotifyCallback&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; MessageNotifyCallback&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c4 c40 c36&quot;&gt;100&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The name of the port is specified using an &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/ntdef/ns-ntdef-_object_attributes&quot;&gt;OBJECT_ATTRIBUTES&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure, in this example the filter port will be called &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;\FilterPortName&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the Object Manager Namespace (OMNS). The driver should also specify the security descriptor to be associated with the port through the OBJECT_ATTRIBUTES. It&amp;rsquo;s most common to call the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltbuilddefaultsecuritydescriptor&quot;&gt;FltBuildDefaultSecurityDescriptor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API to build a security descriptor which only grants administrators access to the port. However, the driver can configure the security any way it likes.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;In &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FltCreateCommunicationPort &lt;/span&gt;&lt;span&gt;the filter manager creates a new named kernel object of type &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FilterConnectionPort&lt;/span&gt;&lt;span&gt;&amp;nbsp;with the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;OBJECT_ATTRIBUTES&lt;/span&gt;&lt;span&gt;&amp;nbsp;and associates it with the callbacks. There&amp;rsquo;s no &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;NtOpenFilterConnectionPort&lt;/span&gt;&lt;span&gt;&amp;nbsp;system call to open a port. Instead when a user wants to access the port it must first open a handle to the filter manager message device object, &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;\FileSystem\Filters\FltMgrMsg,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;passing an extended attributes structure identifying the full OMNS path to the port. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;It is much easier to open a port by calling the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fltuser/nf-fltuser-filterconnectcommunicationport&quot;&gt;FilterConnectCommunicationPort&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API in user-mode, so you don&amp;rsquo;t need to deal with connecting manually. When opening a port you can also specify an arbitrary context buffer to pass to the connect callback. This can be used to configure the open port instance. On connection the connect notification callback passed to &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FltCreateCommunicationPort&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;will be called. The prototype for the callback is as follows:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.cda7dea4e71bdd0516f20f983c060c2db3b5e178&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.11&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c32 c23&quot;&gt;typedef&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;NTSTATUS&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;(*&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;PFLT_CONNECT_NOTIFY&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PFLT_PORT ClientPort&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PVOID ServerPortCookie&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PVOID ConnectionContext&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ULONG SizeOfContext&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; PVOID &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;ConnectionPortCookie&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;ConnectionContext &lt;/span&gt;&lt;span&gt;and &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;SizeOfContext &lt;/span&gt;&lt;span&gt;are values passed from user-mode when calling &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FilterConnectCommunicationPort&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;ConnectionContext&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;has its length verified and copied into kernel memory before use. However, there&amp;rsquo;s no structure for the context so the driver must still carefully verify its contents before using it. The driver can reject a caller by returning an error NT status code. This allows the driver to do things like verify the caller is in a signed binary or similar, which is likely something security products will do. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;If the connection is allowed the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;ConnectionPortCookie &lt;/span&gt;&lt;span&gt;pointer can be updated with a pointer to an allocated structure unique to the client. This pointer will be passed back to the driver in the message and disconnect notification callbacks.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;You can enumerate what ports are currently registered by inspecting the OMNS. For example, to enumerate the ports in the root of the OMNS using my &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://www.powershellgallery.com/packages/NtObjectManager/1.1.29&quot;&gt;NtObjectManager&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;PowerShell module run the following command:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b48730e42b984f8aefd860bab2f83a8648877a83&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.12&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c17&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c23 c48&quot;&gt;NtObject:\&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Where-Object&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c48 c23&quot;&gt;TypeName&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;FilterConnectionPort&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;Name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;TypeName &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;---- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;-------- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;storqosfltport &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;MicrosoftMalwareProtectionRemoteIoPortWD &amp;nbsp;FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;MicrosoftMalwareProtectionVeryLowIoPortWD FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;WcifsPort &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;MicrosoftMalwareProtectionControlPortWD &amp;nbsp; FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;BindFltPort &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;MicrosoftMalwareProtectionAsyncPortWD &amp;nbsp; &amp;nbsp; FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c12&quot;&gt;CLDMSGPORT &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c17&quot;&gt;MicrosoftMalwareProtectionPortWD &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c52 c21&quot;&gt;You might notice there is also a FilterCommunicationPort kernel object type. This is the object used for the client-end where FilterConnectionPort is the mini-filter server end. You should never see a FilterCommunicationPort named object in the OMNS.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;When the port is opened the kernel will check the security descriptor for access. Unfortunately there&amp;rsquo;s no way to directly query the assigned security descriptor for a port from user-mode. The simplest way to test is to just try and open the port and see if it returns an access denied error.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.0c025f7674fa78433d9239a02c6e713a4eb8861d&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.13&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$ports&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c23 c60&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c48 c23&quot;&gt;NtObject:\&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Where-Object&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c48 c23&quot;&gt;TypeName&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;FilterConnectionPort&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c17 c57 c23&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c23 c57&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$ports&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;Name) {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Write-Host&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;\&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Use-NtObject&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$p&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Get-FilterConnectionPort&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;\&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;) {}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;\BindFltPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;Exception: &amp;quot;(0x80070005) - Access is denied.&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7 c8&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;\CLDMSGPORT&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;Exception: &amp;quot;(0x8007017C) - The cloud operation is invalid.&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;We can see two ports output in the previous code snippet. The &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;BindFltPort&lt;/span&gt;&lt;span&gt;&amp;nbsp;port &lt;/span&gt;&lt;span&gt;fails with an access denied error, while the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;CLDMSGPORT&lt;/span&gt;&lt;span&gt;&amp;nbsp;port &lt;/span&gt;&lt;span&gt;(which is part of the Cloud Filter driver) returns &amp;ldquo;The cloud operation is invalid.&amp;rdquo;. The second error indicates that we&amp;rsquo;ve likely opened the port, but you&amp;rsquo;ll need to supply specific parameters in the context buffer when calling the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FilterConnectCommunicationPort&lt;/span&gt;&lt;span&gt;&amp;nbsp;API. You can specify the connection context for the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Get-FilterConnectionPort&lt;/span&gt;&lt;span&gt;&amp;nbsp;command by specifying a byte array to the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;parameter.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.b1274d8821e94eefedfab722442a54dd3fb26c4d&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.14&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Get-FilterConnectionPort&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;\PORT&amp;quot;&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Context&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;@(&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c17 c23 c35&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;We can inspect the security descriptor for a port if you&amp;rsquo;ve got a Windows system with a kernel debugger enabled and a copy of WinDBG.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.a4163d0806a5af0b5d7834b30d5954f0af6d0f60&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.15&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;0: kd&amp;gt; !object \CLDMSGPORT&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;Object: ffffb487447ff8c0 &amp;nbsp;Type: (ffffb4873d67dc40) FilterConnectionPort&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17&quot;&gt;&amp;nbsp; &amp;nbsp; ObjectHeader: &lt;/span&gt;&lt;span class=&quot;c17 c77&quot;&gt;ffffb487447ff890&lt;/span&gt;&lt;span class=&quot;c12&quot;&gt;&amp;nbsp;(new version)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&amp;nbsp; &amp;nbsp; HandleCount: 1 &amp;nbsp;PointerCount: 4&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&amp;nbsp; &amp;nbsp; Directory Object: ffff8a8889a2d4e0 &amp;nbsp;Name: CLDMSGPORT&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7 c8&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17&quot;&gt;0: kd&amp;gt; dx (((nt!_OBJECT_HEADER*)&lt;/span&gt;&lt;span class=&quot;c17 c77&quot;&gt;0xffffb487447ff890&lt;/span&gt;&lt;span class=&quot;c12&quot;&gt;)-&amp;gt;SecurityDescriptor &amp;amp; ~0x7)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17&quot;&gt;(((nt!_OBJECT_HEADER*)0xffffb487447ff890)-&amp;gt;SecurityDescriptor &amp;amp; ~0x7) : &lt;/span&gt;&lt;span class=&quot;c12 c49&quot;&gt;0xffff8a888dccb0a0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17&quot;&gt;0: kd&amp;gt; !sd &lt;/span&gt;&lt;span class=&quot;c17 c49&quot;&gt;0xffff8a888dccb0a0&lt;/span&gt;&lt;span class=&quot;c12&quot;&gt;&amp;nbsp;1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Revision: 0x1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Sbz1 &amp;nbsp; &amp;nbsp;: 0x0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Control : 0x9004&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SE_DACL_PRESENT&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SE_DACL_PROTECTED&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SE_SELF_RELATIVE&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Owner &amp;nbsp; : S-1-5-32-544 (Alias: BUILTIN\Administrators)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Group &amp;nbsp; : S-1-5-18 (Well Known Group: NT AUTHORITY\SYSTEM)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;AclRevision: 0x2&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;Sbz1 &amp;nbsp; &amp;nbsp; &amp;nbsp; : 0x0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;AclSize &amp;nbsp; &amp;nbsp;: 0x1c&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;AceCount &amp;nbsp; : 0x1&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;Sbz2 &amp;nbsp; &amp;nbsp; &amp;nbsp; : 0x0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;Ace[0]: -&amp;gt;AceType: ACCESS_ALLOWED_ACE_TYPE&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;Ace[0]: -&amp;gt;AceFlags: 0x0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;Ace[0]: -&amp;gt;AceSize: 0x14&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;Ace[0]: -&amp;gt;Mask : 0x001f0001&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12 c73&quot;&gt;-&amp;gt;Dacl &amp;nbsp; &amp;nbsp;: -&amp;gt;Ace[0]: -&amp;gt;SID: S-1-5-11 (Well Known Group: NT AUTHORITY\Authenticated Users)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7 c8&quot;&gt;&lt;span class=&quot;c12&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c12&quot;&gt;-&amp;gt;Sacl &amp;nbsp; &amp;nbsp;: &amp;nbsp;is NULL&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;To dump the SD you first query for the object address of the filter communication port using the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;!object&lt;/span&gt;&lt;span&gt;&amp;nbsp;command. From the output you take the address of the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;OBJECT_HEADER&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure and query the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;SecurityDescriptor &lt;/span&gt;&lt;span&gt;field. Note you must clear the lower 3 bits of the address to make a valid security descriptor pointer. Finally we can print the security descriptor using the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;!sd&lt;/span&gt;&lt;span&gt;&amp;nbsp;command. The output shows that the security descriptor grants the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Authenticated Users&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;group access to connect to the port.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;With an open handle to the port you can now send and receive messages. The filter manager supports both user to kernel and kernel to user message directions. For the user to kernel messages you call the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fltuser/nf-fltuser-filtersendmessage&quot;&gt;FilterSendMessage&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;API which sends a raw memory buffer to the filter driver and returns a separate buffer as shown in the following prototype:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.2ecdb1c13e3d0237c1811bddfc9fd48395bd949b&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.16&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;HRESULT FilterSendMessage&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; HANDLE &amp;nbsp;hPort&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; LPVOID &amp;nbsp;lpInBuffer&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; DWORD &amp;nbsp; dwInBufferSize&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; LPVOID &amp;nbsp;lpOutBuffer&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; DWORD &amp;nbsp; dwOutBufferSize&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp; LPDWORD lpBytesReturned&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The message is delivered to the filter driver&amp;rsquo;s message notification callback specified when registering the mini-filter. The callback has the following prototype.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.0de83a2010b3723b476821ce0212872868246ed3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.17&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c32 c23&quot;&gt;typedef&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;NTSTATUS&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;(*&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;PFLT_MESSAGE_NOTIFY&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; IN PVOID PortCookie&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; IN PVOID InputBuffer OPTIONAL&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; IN ULONG InputBufferLength&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; OUT PVOID OutputBuffer OPTIONAL&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; IN ULONG OutputBufferLength&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; OUT PULONG ReturnOutputBufferLength&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The handling of the message is similar to a device IO control call. In fact under the hood it&amp;rsquo;s implemented using the device IO control code 0x8801B. As this code &lt;/span&gt;&lt;span&gt;uses&lt;/span&gt;&lt;span&gt;&amp;nbsp;the METHOD_NEITHER method means the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;InputBuffer &lt;/span&gt;&lt;span&gt;and &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;OutputBuffer &lt;/span&gt;&lt;span&gt;parameters are pointers into user-mode memory. The filter manager does check them before calling the callback with &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;ProbeForRead &lt;/span&gt;&lt;span&gt;and &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;ProbeForWrite &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;calls.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;You can send a message to a filter connection port in PowerShell using the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Send-FilterConnectionPort&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;command specifying the data to send and the maximum size of the output buffer.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.494e7a89167f5cca6c46500fad41517ed82c458f&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.18&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Send-FilterConnectionPort&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Port&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Input&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;@(&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;) &lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-MaximumOutput&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;0x100&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;For the kernel to user messages the user mode application needs to call &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fltuser/nf-fltuser-filtergetmessage&quot;&gt;FilterGetMessage&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to wait for the filter driver to send a message to user-mode. The kernel sends a message to the waiting user mode application using the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltsendmessage&quot;&gt;FltSendMessage&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;API which has the following prototype.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.1d1600d61da7a1cb3cbbf069049ecc8387fcf97f&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.19&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;NTSTATUS FltSendMessage&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; PFLT_FILTER &amp;nbsp; &amp;nbsp;Filter&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; PFLT_PORT &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;ClientPort&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; PVOID &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SenderBuffer&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; ULONG &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;SenderBufferLength&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; PVOID &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ReplyBuffer&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; PULONG &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ReplyLength&lt;/span&gt;&lt;span class=&quot;c9 c40&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp; PLARGE_INTEGER Timeout&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;If there&amp;rsquo;s currently no waiting user mode process the API can wait a specified timeout until the application called &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FilterGetMessage&lt;/span&gt;&lt;span&gt;. The returned buffer from &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FilterGetMessage &lt;/span&gt;&lt;span&gt;contains a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltuserstructures/ns-fltuserstructures-_filter_message_header&quot;&gt;FILTER_MESSAGE_HEADER&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure followed by the data. The header contains the size of the reply requested as well as a message ID which is used to correlate any reply to the kernel&amp;rsquo;s message. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;To reply the user-mode application calls the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/fltuser/nf-fltuser-filterreplymessage&quot;&gt;FilterReplyMessage&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API. The user-mode application needs to append any data to a &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltuserstructures/ns-fltuserstructures-_filter_reply_header&quot;&gt;FILTER_REPLY_HEADER&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure which contains the NT status code of the operation and the correlated message ID. The &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FltSendMessage &lt;/span&gt;&lt;span&gt;API waits for the user-mode application to call &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FilterReplyMessage&lt;/span&gt;&lt;span&gt;&amp;nbsp;with the correct ID&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;, and returns a buffer to the kernel-mode code. The message notification callback is not involved when using kernel to user-mode calls.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.2s8hdhdlvy2k&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Filter Callbacks&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Typically the purpose of the mini-filter callbacks would be to inspect or modify pre-existing IO requests to a file system. Therefore one way of getting untrusted data to the driver is based on how it handles IO requests. &amp;nbsp;However, it&amp;rsquo;s possible to add additional functionality on top of an existing file system to allow for communication between user mode and kernel mode. The filter driver can add a callback for device or file system IO control code requests and check and handle its own control codes. This allows the filter to implement additional functionality on existing files. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The following is a simple example of adding a &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FSCTL_REVERSE_BYTES&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;FS IO control code to an existing file system. This FSCTL is not really supported by any filesystem.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.2b609a381684d9d2c5a2d9833c80ba9125a7a23c&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.20&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4 c40 c66&quot;&gt;#define FSCTL_REVERSE_BYTES CTL_CODE(FILE_DEVICE_FILESYSTEM, &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4 c40 c66&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0x801, &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4 c40 c66&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;METHOD_BUFFERED, &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4 c40 c66&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;FILE_ANY_ACCESS)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19 c8&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;FLT_PREOP_CALLBACK_STATUS&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;PreFsControlOperation&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PFLT_CALLBACK_DATA Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PCFLT_RELATED_OBJECTS FltObjects&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PVOID&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;CompletionContext&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PFLT_PARAMETERS ps &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Iopb&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Parameters&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;DeviceIoControl&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Common&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;IoControlCode &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FSCTL_REVERSE_BYTES&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FLT_PREOP_SUCCESS_NO_CALLBACK&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19 c8&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c4 c54&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;buffer &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;ps&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;DeviceIoControl&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Buffered&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;SystemBuffer&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; ULONG length &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;min&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;DeviceIoControl&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Buffered&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;InputBufferLength&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ps&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;DeviceIoControl&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Buffered&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;OutputBufferLength&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;ULONG i &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c4 c36&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;length&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c4 c54&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;tmp &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;buffer&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buffer&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;buffer&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;length &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c4 c36&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buffer&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;length &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c4 c36&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;tmp&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;IoStatus&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Status &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;STATUS_SUCCESS&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;IoStatus&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Information &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;length&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FLT_PREOP_COMPLETE&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The parameters for the FSCTL or IOCTL are separated based on the method of buffer access. In this case the FSCTL uses &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;METHOD_BUFFERED&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;so the parameters are accessed through the Buffered field. The filter driver needs to ensure it handles correctly all buffer types if it wants to implement its own control codes.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;This technique is used by the Windows Overlay Filter (WOF). For example, the FSCTL code &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/fsctl-set-external-backing&quot;&gt;FSCTL_SET_EXTERNAL_BACKING&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;is not supported by NTFS. Instead it&amp;rsquo;s intercepted by a pre-operation callback in the WOF filter which completes it before it reaches the NTFS driver. The NTFS driver never sees the control code, unless the WOF driver happens to not be enabled.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.bezu0geuqkhr&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Reparse Points&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Reparse point buffers are most commonly known for implementing symbolic link support for NTFS. However the reparse point feature of NTFS can store arbitrary tagged data which is used by filter drivers to store additional offline state information for a file. For example, WOF uses its own reparse buffer, with the tag IO_REPARSE_TAG_WOF to store the location of the real file or status of a compressed file.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;A user-mode application would set, query and delete using FSCTL control codes, such as &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/winioctl/ni-winioctl-fsctl_set_reparse_point&quot;&gt;FSCTL_SET_REPARSE_POINT&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The recommended way a mini-filter driver should set and delete a file&amp;rsquo;s reparse buffer is through the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-flttagfile&quot;&gt;FltTagFile&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(and &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-flttagfileex&quot;&gt;FltTagFileEx&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) and &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltuntagfile&quot;&gt;FltUntagFile&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;APIs to set and remove the reparse buffer. Searching for the driver&amp;rsquo;s imported APIs should quickly show whether the driver uses its own reparse buffer format.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;To open a file with the supported reparse point buffer the driver could register for the post-create callback and wait for any request which returns the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;STATUS_REPARSE&lt;/span&gt;&lt;span&gt;&amp;nbsp;NT status then query for the reparse point data from the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;TagData&lt;/span&gt;&lt;span&gt;&amp;nbsp;field in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_CALLBACK_DATA&lt;/span&gt;&lt;span&gt;&amp;nbsp;parameter. If the reparse tag matches one the filter driver supports it can re-issue the create request but specify the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FILE_OPEN_REPARSE_POINT&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;flag to open the file and ignore the reparse point. There are many problems with this, not least it requires two IO requests for a single creation and the driver would have to process every reparse event.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;To simplify this Windows 10 supports the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;ECP_TYPE_OPEN_REPARSE_GUID&lt;/span&gt;&lt;span&gt;&amp;nbsp;ECP. You add the ECP with a buffer containing an &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/ns-ntifs-_open_reparse_list_entry&quot;&gt;OPEN_REPARSE_LIST_ENTRY&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure which defines the reparse tag the driver handles. When NTFS encounters a reparse point buffer it checks to see if it&amp;rsquo;s in the open reparse list. If so instead of returning STATUS_REPARSE the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;OPEN_REPARSE_POINT_TAG_ENCOUNTERED&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag is set in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;OPEN_REPARSE_LIST_ENTRY&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure, the file is opened and success NT status code is returned. The filter driver can then check for the flag in the post-create callback, if set it can query the reparse tag from the file, for example using &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/winioctl/ni-winioctl-fsctl_get_reparse_point&quot;&gt;FSCTL_GET_REPARSE_POINT&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and handle accordingly.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The filter manager also exposes the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltaddopenreparseentry&quot;&gt;FltAddOpenReparseEntry&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/fltkernel/nf-fltkernel-fltremoveopenreparseentry&quot;&gt;FltRemoveOpenReparseEntry&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;to simplify adding and removing these open reparse list entries. Searching for use of these APIs should give you an idea if the filter driver implements its own reparse point format.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The reason I mention this in the context of communication is that a filter driver will process these reparse buffers when accessing the file system. The NTFS driver only checks for the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;SeCreateSymbolicLinkPrivilege &lt;/span&gt;&lt;span&gt;privilege if a user is writing the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IO_REPARSE_TAG_SYMLINK&lt;/span&gt;&lt;span&gt;&amp;nbsp;tag. NTFS delegates the verification of the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/ns-ntifs-_reparse_data_buffer&quot;&gt;REPARSE_DATA_BUFFER&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure which will be written to the file system by calling the kernel API &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-fsrtlvalidatereparsepointbuffer&quot;&gt;FsRtlValidateReparsePointBuffer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The kernel API only does basic length checks for non-symlink tag types so the arbitrary bytes set in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;DataBuffer &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;field can be completely untrusted, which can allow for security issues during parsing.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c55&quot; id=&quot;h.nvwzy7a65z5f&quot;&gt;&lt;span&gt;Security Bug Classes&lt;/span&gt;&lt;/h2&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;I&amp;rsquo;ve now provided examples of how a mini-filter operates and how you can communicate with it. Let&amp;rsquo;s finish up with an overview of potential bug classes to look for when doing a review. Some of these bug classes are common to any kernel driver, but others are very specifically due to the way mini-filters operate. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Where possible I&amp;rsquo;ll also provide an example of a vulnerability I&amp;rsquo;ve discovered to improve understanding. Note, this is not an exhaustive list, I&amp;rsquo;m sure there are some novel bug classes that I don&amp;rsquo;t know about which are missing from this list. Which is why it&amp;rsquo;s good to describe this process in more detail so others can take advantage of my knowledge and find new and interesting issues.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;To aid in analysis I&amp;rsquo;ve uploaded my header file I use in IDA Pro to populate the filter manager types. You can get it from &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://gist.github.com/tyranid/49d8a1b9e53bba4eac40df32e15d4a98&quot;&gt;github&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;. I&amp;rsquo;ve tried to ensure it&amp;rsquo;s correct and up to date, but there&amp;rsquo;s a chance that it is not. YMMV.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.trfsw8g0jr2u&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Common and garden variety memory safety hazards&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Being native C code you can expect the same sorts of issues you&amp;rsquo;d find in any sizable code base including integer wrapping and incorrect reference counting leading to memory safety hazards. Any of the described communication methods could result in untrusted data being processed and mishandled. I don&amp;rsquo;t think I need to describe this in any detail.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.4m3f2p8i4zvb&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Ignoring the RequestorMode Value&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;All filtered IO requests have an assigned &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;RequestorMode &lt;/span&gt;&lt;span&gt;parameter in the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FLT_CALLBACK_DATA&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure which indicates whether it originated from user or kernel mode code. If an IO request is dispatched from kernel mode code the IO manager and file system drivers typically disable security checks, such as file access checking.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;There are a couple of related bug classes you&amp;rsquo;ll see with regards to &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;RequestorMode&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;. The first class is the filter driver ignoring its value. This can be a problem if the filter driver redirects the IO request to another file either directly or by using a reparse operation during file creation. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;For example, &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=1452&quot;&gt;CVE-2018-0877&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;was an issue I found in the WCIFS driver which provides file system virtualization for Desktop Bridge applications. The root cause was the driver would reparse to a user controllable location if the requested file didn&amp;rsquo;t exist in privileged Windows directories.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;It&amp;rsquo;s common to find kernel code opening files inside privileged directories with &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;RequestorMode &lt;/span&gt;&lt;span&gt;set to the kernel. The kernel code can make the assumption this can&amp;rsquo;t be tampered with as only an administrator can normally modify those directories. The end result was a normal user application could get a file opened in the user controllable location but with access checking disabled. In the &lt;/span&gt;&lt;span&gt;proof-of-concept in the issue tracker&lt;/span&gt;&lt;span&gt;&amp;nbsp;I exploit this to redirect a request for a &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;National Language Support (NLS)&lt;/span&gt;&lt;span&gt;&amp;nbsp;file to ready arbitrary files on disk such as the SAM hive. The technique was described separately in &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://googleprojectzero.blogspot.com/2017/08/windows-exploitation-tricks-arbitrary.html&quot;&gt;this blog post&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.bd8wudoiv5om&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Incorrect RequestorMode Check.&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The second bug class in checking the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;RequestorMode&lt;/span&gt;&lt;span&gt;&amp;nbsp;can occur during a file create operation. Specifically the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;RequestorMode&lt;/span&gt;&lt;span&gt;&amp;nbsp;field is checked but the driver does not verify if access checking has been re-enabled through the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IO_FORCE_ACCESS_CHECK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag passed to &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IoCreateFile&lt;/span&gt;&lt;span&gt;&amp;nbsp;and variants. For a bit more context on this bug class refer &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://googleprojectzero.blogspot.com/2019/03/windows-kernel-logic-bug-class-access.html&quot;&gt;to my blog post&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;from last year where I collaborated with Microsoft on related issues.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.2803cc07482359c63e8d6477930901dc31bec199&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.21&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;FLT_PREOP_CALLBACK_STATUS&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;PreCreateOperation&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PFLT_CALLBACK_DATA Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PCFLT_RELATED_OBJECTS FltObjects&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; PVOID&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;CompletionContext&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;SeSinglePrivilegeCheck&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;SeExports&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;SeTcbPrivilege&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c30 c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;RequestorMode&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Data&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;IoStatus&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;Status &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;STATUS_ACCESS_DENIED&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FLT_PREOP_COMPLETE&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19 c8&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c4 c40 c80&quot;&gt;// Perform some privileged action.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19 c8&quot;&gt;&lt;span class=&quot;c30 c4&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c32 c23&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;c4&quot;&gt;&amp;nbsp;FLT_PREOP_SUCCESS_WITH_CALLBACK&lt;/span&gt;&lt;span class=&quot;c9&quot;&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c9&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The example above shows misuse of the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;RequestorMode &lt;/span&gt;&lt;span&gt;field. It passes it directly to &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntddk/nf-ntddk-sesingleprivilegecheck&quot;&gt;SeSinglePrivilegeCheck&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, if it indicates the call came from the kernel then the privilege check will always return TRUE meaning the privileged action will be taken. If you read the linked blog post, this can happen if the file is opened through calling &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IoCreateFileEx&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;or similar APIs with incorrect flags.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;To guard against this issue the driver needs to check if the &lt;/span&gt;&lt;span class=&quot;c21 c31&quot;&gt;SL_FORCE_ACCESS_CHECK&lt;/span&gt;&lt;span class=&quot;c31&quot;&gt;&amp;nbsp;flag has been set in the &lt;/span&gt;&lt;span class=&quot;c31 c21&quot;&gt;OperationFlags&lt;/span&gt;&lt;span class=&quot;c31&quot;&gt;&amp;nbsp;field of the&lt;/span&gt;&lt;span class=&quot;c31 c21&quot;&gt;&amp;nbsp;FLT_IO_PARAMETER_BLOCK&lt;/span&gt;&lt;span class=&quot;c31&quot;&gt;&amp;nbsp;structure. If that flag is set the value of &lt;/span&gt;&lt;span class=&quot;c31 c21&quot;&gt;RequestorMode&lt;/span&gt;&lt;span class=&quot;c31&quot;&gt;&amp;nbsp;should always be assumed to be from user mode.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.ph0s82u73nia&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Driver and Kernel IO Operation Mismatch&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The Windows platform is constantly iterating new features, this is even more true since the release of Windows 10 and its six month release cycles. This can introduce new features to the IO stack such as new information classes or IO control codes or additional functionality to existing features.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;For the most part the mini-filter driver can just ignore operations it doesn&amp;rsquo;t care about. However, if it does process an IO operation it needs to match with what&amp;rsquo;s implemented in the rest of the OS, which can be difficult if the OS changes around the driver.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;An example of this issue is the WOF driver&amp;rsquo;s handling of &lt;/span&gt;&lt;span&gt;reparse&lt;/span&gt;&lt;span&gt;&amp;nbsp;points. To prevent applications from setting arbitrary reparse points with the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IO_REPARSE_TAG_WOF&lt;/span&gt;&lt;span&gt;&amp;nbsp;tag it handles the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FSCTL_SET_REPARSE_POINT&lt;/span&gt;&lt;span&gt;&amp;nbsp;IO control code and rejects any attempt to set a reparse point buffer with that tag. To complete the trick the driver also hides a file&amp;rsquo;s reparse point from being queried or removed if it&amp;rsquo;s set to &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;IO_REPARSE_TAG_WOF&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The issue &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=2088&quot;&gt;CVE-2020-17139&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;resulted from the OS adding a new &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/fsctl-set-reparse-point-ex&quot;&gt;FSCTL_SET_REPARSE_POINT_EX&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;IO control code which the WOF driver didn&amp;rsquo;t handle. This allowed an application to add or remove the WOF IO tag which resulted in a way of getting an arbitrary file to have a cached code signature to bypass mechanisms such as &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/windows-defender-application-control&quot;&gt;Windows Defender Application Control&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;. &lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.kum3osj0oza0&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Altitude sickness.&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;Sorry, I couldn&amp;rsquo;t resist the pun. This is a bug class which is caused by the ordering of filter operations based on the assigned altitudes of the driver. For example, if you look at the list of filters from the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;fltmc&lt;/span&gt;&lt;span&gt;&amp;nbsp;command shown earlier in this blog post you&amp;rsquo;ll notice that &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;WdFilter &lt;/span&gt;&lt;span&gt;which is the real-time scanner for Windows Defender is at a much higher altitude than &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;LUAFV &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;which is the UAC file virtualization driver. &lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;What this means is if &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;LUAFV &lt;/span&gt;&lt;span&gt;performs some operations, such as calling &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FltCreateFileEx&lt;/span&gt;&lt;span&gt;&amp;nbsp;which only dispatches the IO request to filters below &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;LUAFV &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;then Windows Defender will miss the file operations and not be able to act on them. Let&amp;rsquo;s show this in action with a simple PowerShell script.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.73914d6ff290dc52f17ef098eb708704aa2582ec&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.22&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c57 c23&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c48 c23&quot;&gt;Write-EICAR&lt;/span&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;&amp;nbsp;{&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17 c57 c23&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c17 c23 c79&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$Path&lt;/span&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19 c8&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17 c23 c83&quot;&gt;# Replace with a real EICAR string.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$eicar&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c17 c79 c23&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;GetBytes(&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;&amp;lt;EICAR&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Use-NtObject&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;c17 c23 c42&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;New-NtFile&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Win32Path&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$Path&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c23 c45&quot;&gt;-Disposition&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c48 c23&quot;&gt;OpenIf&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Access&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c48 c23&quot;&gt;ReadData&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c48 c23&quot;&gt;WriteData&lt;/span&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;) {&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $f&lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;Length &lt;/span&gt;&lt;span class=&quot;c17 c35 c23&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c43 c23&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Write-NtFile&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$eicar&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Offset&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c23 c43&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19 c8&quot;&gt;&lt;span class=&quot;c30 c17 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Write-EICAR&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$env:TEMP&lt;/span&gt;&lt;span class=&quot;c16 c40&quot;&gt;\eicar.txt&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Enable-NtTokenVirtualization&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c19&quot;&gt;&lt;span class=&quot;c17 c23&quot;&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=&quot;c17 c60 c23&quot;&gt;Write-EICAR&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c17 c45 c23&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;c17 c23&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;c17 c42 c23&quot;&gt;$env:windir&lt;/span&gt;&lt;span class=&quot;c16&quot;&gt;\system32\license.rtf&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Write-EICAR&lt;/span&gt;&lt;span&gt;&amp;nbsp;function opens or creates a new file at a specified path, truncates the file to a zero length, writes the EICAR string then closes the file. Note I&amp;rsquo;ve replaced the EICAR string with the dummy &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;&amp;lt;EICAR&amp;gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;. You&amp;rsquo;ll need to look up the real string online and replace it before running the test. I did this to prevent some overzealous AV detecting the EICAR string and quarantining this web page.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;We create an EICAR file in the temporary folder. Once the file has been closed Windows Defender&amp;rsquo;s real-time scanner should scan it and warn the user that it has quarantined the file.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;/p&gt;

&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0hRF3e64bJ9otyJXTfJfmj4H2Ey2jlJGTtnNeLEaEvjXxfamjtqDHHsJ-SrPotzWgvb7kBllLJ3wA8ZYD3txbj48xDAw1xKc2LbFL75ELj6NwCj-6ExPKfNmxHgyAUsV7rmSoqVNV05OIQNGr1YatVdWTxLpsHmCF3v7kxY48byVUjF23Cp9gLSl2/s462/eicar_quarantine.png&quot; style=&quot;display: block; padding: 1em 0; text-align: center;&quot;&gt;&lt;img src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0hRF3e64bJ9otyJXTfJfmj4H2Ey2jlJGTtnNeLEaEvjXxfamjtqDHHsJ-SrPotzWgvb7kBllLJ3wA8ZYD3txbj48xDAw1xKc2LbFL75ELj6NwCj-6ExPKfNmxHgyAUsV7rmSoqVNV05OIQNGr1YatVdWTxLpsHmCF3v7kxY48byVUjF23Cp9gLSl2/s462/eicar_quarantine.png&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;max-height: 750; max-width: 600px;&quot; /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;However, once we enable virtualization using &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;Enable-NtTokenVirtualization&lt;/span&gt;&lt;span&gt;&amp;nbsp;and write to an existing system file the file processing is handled inside the LUAFV driver after &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;WdFilter&lt;/span&gt;&lt;span&gt;&amp;nbsp;has done its checking. Therefore the second command will succeed, although the file which is actually created is in the user&amp;rsquo;s virtual store, we&amp;rsquo;ve not overwritten &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;license.rtf&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Worth pointing out that this only allows you to create the file on disk. The instant that virtualized file is used by any application Windows Defender will see it and quarantine it. Therefore it provides no real value to bypass Windows Defender&amp;rsquo;s signature checks. However, I think this is an interesting demonstration of the types of issues you could find due to the differing altitudes.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c52 c21&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The mismatch with the filter altitude is also a potential reason you&amp;rsquo;ll miss file events in &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/procmon&quot;&gt;Process Monitor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Process Monitor&lt;/span&gt;&lt;span&gt;&amp;nbsp;runs its mini-filter to capture file events at altitude 385200 which is above &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;LUAFV&lt;/span&gt;&lt;span&gt;. You will not see most direct virtualization events. However we can do something about this, we can use &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;fltmc &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;to detach the Process Monitor filter from a volume and reattach at a much lower altitude. Start Process Monitor then run the following commands to reattach to the C: drive.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.d9a74de1921758cf3079034ad1a819586deefbc3&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.23&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c20&quot;&gt;&lt;td class=&quot;c44&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17&quot;&gt;C:\&amp;gt; &lt;/span&gt;&lt;span class=&quot;c30 c50&quot;&gt;fltmc detach PROCMON24 C:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c7&quot;&gt;&lt;span class=&quot;c17&quot;&gt;C:\&amp;gt; &lt;/span&gt;&lt;span class=&quot;c30 c50&quot;&gt;fltmc attach PROCMON24 C: -i &amp;quot;Process Monitor 24 Instance&amp;quot; -a 100&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;You might need to replace &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;24 &lt;/span&gt;&lt;span&gt;with an appropriate version number for your version of Process Monitor. You should start seeing more events which were previously hidden by &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;LUAFV &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;and other filter drivers at lower altitudes. This should help you monitor file access for any interesting behavior. Sadly even though you can try and attach the Process Monitor filter to the named pipe device it won&amp;rsquo;t work as the driver doesn&amp;rsquo;t indicate support for that device.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c21&quot;&gt;Note, that stopping and starting the Process Monitor capture will reset the volume instances for the filter driver and remove the low altitude instance. If you create the new instance without the instance name (the string after -i) then it won&amp;rsquo;t get deleted, however Process Monitor will show duplicate entries for any IO request which is the same at both altitudes. The Process Monitor driver does not support attaching at a different altitude through any command line options, this would be one of those cases where it&amp;rsquo;d be useful for this tooling to be &lt;/span&gt;&lt;span class=&quot;c2 c21&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://twitter.com/tiraniddo/status/1284139369788563456&quot;&gt;open source&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c52 c21&quot;&gt;&amp;nbsp;so that this feature could be added.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;As an example before adding the low altitude instance if you create the EICAR test file you&amp;rsquo;ll see the following events:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.5cc59b8216ebb22552ebe7a80f49457d9b8699df&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.24&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c38 c69&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;ID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c68 c69&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;Path&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c65&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;Operation&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c34 c69&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;Result&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c39&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c23 c24&quot;&gt;Detail&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c38 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c63&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c78 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CreateFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c34 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c58 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Desired Access: Read Data, Write Data&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c33 c38&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c68 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c78 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SetEndOfFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c34 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c33 c58&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;EndOfFile: 0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c38 c67&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c67 c68&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c67 c78&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;WriteFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c34 c67&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c58 c67&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Offset: 0, Length: 68&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c38&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c68&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c78&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CloseFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c34&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c58&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;I&amp;rsquo;ve added an ID column which indicates the event taking place. The events match the code for creating the EICAR file, we open the file for read and write access, set the length to 0, write the EICAR string and then close the file. Note that in event ID 2 the path to the file has changed from the original one in system32 to the virtual store. This is because the file is &amp;ldquo;delay virtualized&amp;rdquo; so it&amp;rsquo;ll only be created if a write IO request, such as changing the file length, is dispatched to the file.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Now let&amp;rsquo;s compare the events when the altitude is set to 100:&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=&quot;t.0d6396351a2232cf22def463e5b7da75b343156e&quot;&gt;&lt;/a&gt;&lt;a id=&quot;t.25&quot;&gt;&lt;/a&gt;&lt;table class=&quot;c15&quot;&gt;&lt;tbody&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c69&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;ID&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c69&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;Path&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c69 c72&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;Operation&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c69&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;Result&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c41 c69&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c24 c23&quot;&gt;Detail&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c85&quot;&gt;&lt;td class=&quot;c46&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c72 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CreateFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;ACCESS DENIED&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c41 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Desired Access: Read Data, Write Data&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c46&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c72 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CreateFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c41 c64&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Desired Access: Read Data&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CreateFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Desired Access: Read Data, Read Attributes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c23 c25&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CreateFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Desired Access: Write Data, Write Attributes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SetEndOfFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;EndOfFile: 538&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;ReadFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Offset: 0, Length: 538&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;WriteFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Offset: 0, Length: 538&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;ReadFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;END OF FILE&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Offset: 538, Length: 16,384&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CloseFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CloseFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CreateFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Desired Access: Read Data, Write Data&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c33 c53&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c29&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SetEndOfFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c33&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c18&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;EndOfFile: 0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51 c67&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53 c67&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c72 c67&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;WriteFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13 c67&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c41 c67&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;Offset: 0, Length: 68, Priority: Normal&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c72&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CloseFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c41&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=&quot;c3&quot;&gt;&lt;td class=&quot;c51&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c53&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;C:\Users\admin\AppData\Local\VirtualStore\Windows\System32\license.rtf&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c72&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;CloseFile&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c13&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;SUCCESS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=&quot;c41&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot;&gt;&lt;p class=&quot;c11 c8&quot;&gt;&lt;span class=&quot;c25 c23&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;You can see that the list of events is much longer in the second case (I&amp;rsquo;ve even removed some for brevity). For event 0 it&amp;rsquo;s no longer a single create IO request for the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;license.rtf&lt;/span&gt;&lt;span&gt;&amp;nbsp;file. As the user doesn&amp;rsquo;t have write access when the create call is made to the file system it results in an ACCESS DENIED error. The &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;LUAFV &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;driver sees the error in its post-create callback and as virtualization is enabled it makes a second create for only read access. This second create succeeds. Due to the altitude of LUAFV this process is normally hidden from the Process Monitor.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;In the first table event ID 2 we saw the caller setting the file length to 0. However in the second table we now see that the virtual file needs to be created and the contents of the original file are copied into the new virtual file. Only after that operation has been completed will the length of the file be set to 0. The last 2 events are more or less the same.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;I hope this is a clear demonstration both of how the altitude directly affects the operation of mini-filter drivers as well as how much file information you might be missing in Process Monitor without realizing it.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.f1fhx5giwpkb&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Concurrency and Reentrancy&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The IO manager is designed to operate asynchronously. It&amp;rsquo;s possible that multiple threads could be calling into the same IO driver at the same time and the filter manager is no different. There&amp;rsquo;s no explicit locking in the filter manager which would prevent multiple IO requests being dispatched at the same time to the same file object. This can lead to concurrency and reentrancy issues.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;The filter driver can assign shared state based on the file stream or file object. This can be extracted in the filter when operating on the file and used to store and retrieve the current state information. If you dispatch multiple IO requests to the same file it can result in an invalid state or memory corruption issues.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;An example of this kind of issue is &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://bugs.chromium.org/p/project-zero/issues/detail?id=1774&quot;&gt;CVE-2019-0836&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which was a race condition in the LUAFV driver related to handling of the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_section_object_pointers&quot;&gt;SECTION_OBJECT_POINTERS&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure in the file object. Basically by racing a read against a write IO request on the same file it was possible to get the wrong &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;SECTION_OBJECT_POINTERS&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;structure assigned to the virtual file allowing a normal user to bypass access checks and map a read-only file as writable.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;To solve this problem the driver needs to not maintain complex state between pre and post operation callbacks or over any calls out to any API which could be trapped by a user-mode application. &lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;c47&quot; id=&quot;h.wiz3rbkjh9m3&quot;&gt;&lt;span class=&quot;c5&quot;&gt;Incorrect Forwarding of IO Operations&lt;/span&gt;&lt;/h3&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;We showed earlier how to retarget an IO operation to another file object by switching the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;TargetFileObject &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;pointer. This needs to be done very carefully as when working with file object pointers directly almost any operation can be performed on them. For example, if a file is opened read-only a write operation can still be dispatched to the file object itself and it&amp;rsquo;ll succeed.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The only thing which prevents a user-mode application from doing this is the kernel checks that the handle passed by the application to the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;NtWriteFile&lt;/span&gt;&lt;span&gt;&amp;nbsp;system call has the &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;FILE_WRITE_DATA&lt;/span&gt;&lt;span&gt;&amp;nbsp;access right set. If not the system call can return &lt;/span&gt;&lt;span class=&quot;c21&quot;&gt;STATUS_ACCESS_DENIED&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;. However, if the handle has write access to a file object, but the filter driver redirects that operation to a read-only file then the check is bypassed and the user can write to a file they don&amp;rsquo;t necessarily control.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;Another place this can happen is the dispatch of IO control codes. Each control code has a flag which indicates if the file handle requires read and/or write access to be dispatched. This check is performed in the IO manager before the request ever makes it to the file system. If the filter drivers blindly forward IO control codes to a separate file it could send a code which normally requires write access on the handle bypassing security checks.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;The LUAFV driver is a good example of a mini-filter driver where this forwarding takes place. The previously mentioned issue, &lt;/span&gt;&lt;span&gt;CVE-2019-0836 while it&amp;rsquo;s a concurrency issue also relies on the fact that the file object can be written to even though it was opened read-only.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;c55&quot; id=&quot;h.f0bqmkr3x5up&quot;&gt;&lt;span class=&quot;c14&quot;&gt;Summary&lt;/span&gt;&lt;/h2&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span class=&quot;c1&quot;&gt;In summary I think that mini-filter drivers are an under-appreciated source of privilege escalation bugs on Windows. In part that&amp;rsquo;s because they&amp;rsquo;re not easy to understand. They have complex interactions with the rest of the IO system which makes understanding difficult but can introduce really subtle and interesting issues. I hope I&amp;rsquo;ve given you enough information to better understand how mini-filter drivers function, how you communicate with them and what sorts of unique bug classes you might discover.&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0 c8&quot;&gt;&lt;span class=&quot;c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;c0&quot;&gt;&lt;span&gt;If you want some more information a good blog on the inner workings of filters drivers is &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;http://fsfilters.blogspot.com/&quot;&gt;Of Filesystems and Other Demons&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. It&amp;rsquo;s not been updated in a long while but it still contains some valuable information. You can also refer to &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/filter-manager-concepts&quot;&gt;MSDN&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which has a fairly comprehensive section on mini-filters as well as the &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://github.com/microsoft/Windows-driver-samples/tree/master/filesys/miniFilter&quot;&gt;Windows Driver Kit sample code&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Finally as a reminder I&amp;rsquo;ve uploaded a filter manager &lt;/span&gt;&lt;span class=&quot;c2&quot;&gt;&lt;a class=&quot;c101&quot; href=&quot;https://gist.github.com/tyranid/49d8a1b9e53bba4eac40df32e15d4a98&quot;&gt;header file&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;&amp;nbsp;for use in reverse engineering tools such as IDA Pro.&lt;/span&gt;&lt;/p&gt;</content><link rel='replies' type='application/atom+xml' href='https://googleprojectzero.blogspot.com/feeds/7224812645464338214/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='https://googleprojectzero.blogspot.com/2021/01/hunting-for-bugs-in-windows-mini-filter.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/7224812645464338214'/><link rel='self' type='application/atom+xml' href='https://www.blogger.com/feeds/4838136820032157985/posts/default/7224812645464338214'/><link rel='alternate' type='text/html' href='https://googleprojectzero.blogspot.com/2021/01/hunting-for-bugs-in-windows-mini-filter.html' title='Hunting for Bugs in Windows Mini-Filter Drivers'/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/blank.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEicWXAXSsjJNUw14eN7KqFg3CR7-TJq0tyc_fSFWOzrn2g0MOHXO8-xn1SAFMf_7RJKYuC-EIZkZ5KDcSTlEXc7tq-B7lKLYWHlD8rC1z6HyVcjR5K5SFu0ig2gKx38wnm9VJtED4h6-Qm3RoTOlx3Cyh1hJ_13gMtUTnNMCq9MAqR01iGfjTl3mVx8/s72-c/Device%20Stack.png" height="72" width="72"/><thr:total>0</thr:total></entry>