<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><entry xmlns='http://www.w3.org/2005/Atom' xmlns:blogger='http://schemas.google.com/blogger/2008' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-1176949257541686127.post-5264948080671210292</id><published>2022-04-28T12:05:00.009-04:00</published><updated>2022-12-01T20:55:37.735-05:00</updated><title type='text'>The Package Analysis Project: Scalable detection of malicious open source packages </title><content type='html'>&lt;span class=&quot;byline-author&quot;&gt;Posted by Caleb Brown, Open Source Security Team&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span class=&quot;byline-author&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;Despite open source software’s essential role in all software built today, it’s far too easy for bad actors to circulate malicious packages that attack the systems and users running that software. Unlike mobile app stores that can scan for and reject malicious contributions, package repositories have limited resources to review the thousands of daily updates and must maintain an open model where anyone can freely contribute. As a result, malicious packages like &lt;a href=&quot;https://github.com/advisories/GHSA-pjwm-rvh2-c87w&quot;&gt;ua-parser-js&lt;/a&gt;, and &lt;a href=&quot;https://snyk.io/blog/peacenotwar-malicious-npm-node-ipc-package-vulnerability/&quot;&gt;node-ipc&lt;/a&gt; are regularly uploaded to popular repositories despite their best efforts, with sometimes devastating consequences for users. &lt;br /&gt;&lt;br /&gt;Google, a member of the &lt;a href=&quot;https://openssf.org/&quot;&gt;Open Source Security Foundation&lt;/a&gt; (OpenSSF), is proud to support the OpenSSF’s &lt;a href=&quot;https://openssf.org/blog/2022/04/28/introducing-package-analysis-scanning-open-source-packages-for-malicious-behavior&quot;&gt;Package Analysis project,&lt;/a&gt; which is a welcome step toward helping secure the open source packages we all depend on. The Package Analysis program performs dynamic analysis of all packages uploaded to popular open source repositories and catalogs the results in a BigQuery table. By detecting malicious activities and alerting consumers to suspicious behavior before they select packages, this program contributes to a more secure software supply chain and greater trust in open source software. The program also gives insight into the types of malicious packages that are most common at any given time, which can guide decisions about how to better protect the ecosystem. &lt;br /&gt;&lt;br /&gt;To better understand how the Package Analysis program is contributing to supply chain security, we analyzed the nearly 200 malicious packages it captured over a one-month period. Here’s what we discovered:&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Results&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All signals collected are published in our &lt;a href=&quot;https://console.cloud.google.com/bigquery?d=packages&amp;amp;p=ossf-malware-analysis&amp;amp;t=analysis&amp;amp;page=table&quot;&gt;BigQuery table&lt;/a&gt;. Using simple queries on this table, we found around 200 meaningful results from the packages uploaded to NPM and PyPI in a period of just over a month. Here are some notable examples, with &lt;a href=&quot;https://github.com/ossf/package-analysis/blob/main/docs/case_studies.md&quot;&gt;more available in the repository&lt;/a&gt;.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;PyPI: discordcmd&lt;/b&gt;&lt;/div&gt;&lt;div&gt;This Python package will attack the desktop client for Discord on Windows. It was found by spotting the unusual requests to raw.githubusercontent.com, Discord API, and ipinfo.io.&lt;br /&gt;&lt;br /&gt;First, it downloaded a backdoor from GitHub and installed it into the Discord electron client.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;span class=&quot;byline-author&quot;&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEir73vRVQDjYoVlB1v6_gWvPMKQp-jUwDdt5KbkOOwq6e8D63U-q9BWcSBl3f6U3Lw5r1EQsfYUPXfQZMu8aqgtlU8Pw3EbSfQcLq_sWYj98Jhwf_hVIF5Fp4-3rK4XrUIaSGeJxnjwKm1bt-oDUqvt-iL99GKYft_9GKeK-d9hbx5sTyL3NwAV1wAS/s594/PA1.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;221&quot; data-original-width=&quot;594&quot; height=&quot;238&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEir73vRVQDjYoVlB1v6_gWvPMKQp-jUwDdt5KbkOOwq6e8D63U-q9BWcSBl3f6U3Lw5r1EQsfYUPXfQZMu8aqgtlU8Pw3EbSfQcLq_sWYj98Jhwf_hVIF5Fp4-3rK4XrUIaSGeJxnjwKm1bt-oDUqvt-iL99GKYft_9GKeK-d9hbx5sTyL3NwAV1wAS/w640-h238/PA1.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/span&gt;Next, it looked through various local databases for the user&#39;s Discord token.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEghwH4jvlfQjlVqNDZAa30Gz30W8RzJIJv_rahMysL_w8-fKIvG9mt_ATqa8zdaBDxXDGeo7jXpoHi6bqJLq0B5A5lSXBE8oEwi9SVILf27URuXzi7amXPIS9PVN-CnrEzLIRlE_1Z_fooWw78sjZSciOVwpi-pmpDcrAdD2Pd_NxG74h82WIWF1orb/s681/PA2.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;250&quot; data-original-width=&quot;681&quot; height=&quot;234&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEghwH4jvlfQjlVqNDZAa30Gz30W8RzJIJv_rahMysL_w8-fKIvG9mt_ATqa8zdaBDxXDGeo7jXpoHi6bqJLq0B5A5lSXBE8oEwi9SVILf27URuXzi7amXPIS9PVN-CnrEzLIRlE_1Z_fooWw78sjZSciOVwpi-pmpDcrAdD2Pd_NxG74h82WIWF1orb/w640-h234/PA2.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Finally, it grabbed the data associated with the token from the Discord API and exfiltrated it back to a Discord server controlled by the attacker.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;NPM: @roku-web-core/ajax&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;During install, this NPM package exfiltrates details of the machine it is running on and then opens a reverse shell, allowing the remote execution of commands.&lt;/div&gt;&lt;div&gt;&lt;span class=&quot;byline-author&quot;&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgfUdj6W-Bo8AQWxUjIMmP8h4exfsFNz-HMVSY1OR6hmffmiW6S3ijEynHY-h74sOXRhiWwejuYGRHkf5bY0t-pfkpawhy9s-kOKryZQYdGbPA9Lz0gGBgZ8bQ4XbnBalTaNbF9GvQuZE1W0Sp_PMPQE2K_eOZi__wV7fww8noRL-6pL7LyMIyPT_q1/s468/PA3.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;325&quot; data-original-width=&quot;468&quot; height=&quot;444&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgfUdj6W-Bo8AQWxUjIMmP8h4exfsFNz-HMVSY1OR6hmffmiW6S3ijEynHY-h74sOXRhiWwejuYGRHkf5bY0t-pfkpawhy9s-kOKryZQYdGbPA9Lz0gGBgZ8bQ4XbnBalTaNbF9GvQuZE1W0Sp_PMPQE2K_eOZi__wV7fww8noRL-6pL7LyMIyPT_q1/w640-h444/PA3.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/span&gt;This package was discovered from its requests to an attacker-controlled address.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Dependency Confusion / Typosquatting&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The vast majority of the malicious packages we detected are dependency confusion and &lt;a href=&quot;https://www.darkreading.com/vulnerabilities-threats/beware-the-package-typosquatting-supply-chain-attack&quot;&gt;typosquatting attacks&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;The packages we found usually contain a simple script that runs during an install and calls home with a few details about the host. These packages are most likely the work of security researchers looking for bug bounties, since most are not exfiltrating meaningful data except the name of the machine or a username, and they make no attempt to disguise their behavior.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;These dependency confusion attacks were discovered through the domains they used, such as burpcollaborator.net, pipedream.com, interact.sh, which are commonly used for reporting back attacks. The same domains appear across unrelated packages and have no apparent connection to the packages themselves. Many packages also used unusual version numbers that were high (e.g. v5.0.0, v99.10.9) for a package with no previous versions.&lt;span class=&quot;byline-author&quot;&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;span style=&quot;font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8m1coKcAmZyyGB89MHpvAgR58ADIMn2-Bj-kS_vav_Rt6kOuAgiCI45gXXTpWr00I3NDH1j1jCNzKt1RJarzlMi4XTQkfv541jHaMB4WBiBh1oY__BZok8tjxHuEvI4GL6R3NXFO9agQrZlkbqNMh07cWvbTGcWF4sgYnLhfuKdZXDbq71TLvNEVI/s792/PA4.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; data-original-height=&quot;286&quot; data-original-width=&quot;792&quot; height=&quot;232&quot; src=&quot;https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8m1coKcAmZyyGB89MHpvAgR58ADIMn2-Bj-kS_vav_Rt6kOuAgiCI45gXXTpWr00I3NDH1j1jCNzKt1RJarzlMi4XTQkfv541jHaMB4WBiBh1oY__BZok8tjxHuEvI4GL6R3NXFO9agQrZlkbqNMh07cWvbTGcWF4sgYnLhfuKdZXDbq71TLvNEVI/w640-h232/PA4.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;p dir=&quot;ltr&quot; style=&quot;line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/span&gt;&lt;b&gt;Conclusions&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;The short time frame and low sophistication needed for finding the results above underscore the challenge facing open source package repositories. While many of the results above were likely the work of security researchers, any one of these packages could have done far more to hurt the unfortunate victims who installed them.&lt;br /&gt;&lt;br /&gt;These results show the clear need for more investment in vetting packages being published in order to keep users safe. This is a growing space, and having an open standard for reporting would help centralize analysis results and offer consumers a trusted place to assess the packages they’re considering using. Creating an open standard should also foster healthy competition, promote integration, and raise the overall security of open source packages.&lt;/div&gt;&lt;div&gt;&amp;nbsp; &lt;br /&gt;Over time we hope that the Package Analysis program will offer comprehensive knowledge about the behavior and capabilities of packages across open source software, and help guide the future efforts needed to make the ecosystem more secure for everyone. To get involved, please check out the &lt;a href=&quot;https://github.com/ossf/package-analysis&quot;&gt;GitHub Project&lt;/a&gt; and &lt;a href=&quot;https://github.com/ossf/package-analysis/milestones&quot;&gt;Milestones&lt;/a&gt; for opportunities to contribute. &lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://security.googleblog.com/feeds/5264948080671210292/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://www.blogger.com/comment/fullpage/post/1176949257541686127/5264948080671210292?isPopup=true' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/1176949257541686127/posts/default/5264948080671210292'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/1176949257541686127/posts/default/5264948080671210292'/><link rel='alternate' type='text/html' href='http://security.googleblog.com/2022/04/the-package-analysis-project-scalable.html' title='The Package Analysis Project: Scalable detection of malicious open source packages '/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='https://img1.blogblog.com/img/blank.gif'/></author><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEir73vRVQDjYoVlB1v6_gWvPMKQp-jUwDdt5KbkOOwq6e8D63U-q9BWcSBl3f6U3Lw5r1EQsfYUPXfQZMu8aqgtlU8Pw3EbSfQcLq_sWYj98Jhwf_hVIF5Fp4-3rK4XrUIaSGeJxnjwKm1bt-oDUqvt-iL99GKYft_9GKeK-d9hbx5sTyL3NwAV1wAS/s72-w640-h238-c/PA1.png" height="72" width="72"/><thr:total>0</thr:total></entry>