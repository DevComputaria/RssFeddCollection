{"?xml":{"@version":"1.0","@encoding":"UTF-8"},"rss":{"@version":"2.0","@xmlns:content":"http://purl.org/rss/1.0/modules/content/","@xmlns:wfw":"http://wellformedweb.org/CommentAPI/","@xmlns:dc":"http://purl.org/dc/elements/1.1/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:sy":"http://purl.org/rss/1.0/modules/syndication/","@xmlns:slash":"http://purl.org/rss/1.0/modules/slash/","channel":{"title":"Invicti","atom:link":{"@href":"https://www.invicti.com/blog/feed/","@rel":"self","@type":"application/rss+xml"},"link":"https://www.invicti.com/","description":"Web Application Security For Enterprise","lastBuildDate":"Fri, 19 Jan 2024 16:54:02 +0000","language":"en-US","sy:updatePeriod":"\n\thourly\t","sy:updateFrequency":"\n\t1\t","image":{"url":"https://cdn.invicti.com/app/uploads/2022/03/08125959/cropped-favicon-32x32.png","title":"Invicti","link":"https://www.invicti.com/","width":"32","height":"32"},"item":[{"title":"3 ways that security tool sprawl can hurt application security testing","link":"https://www.invicti.com/blog/web-security/3-ways-security-tool-sprawl-hurts-application-security-testing/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Fri, 19 Jan 2024 12:52:10 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"dast"},{"#cdata-section":"web-security-tools"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=49448"},"description":{"#cdata-section":"<p>When you have multiple uncoordinated security products being run by different teams, you likely have security tool sprawl in your organization. This post focuses on tool sprawl in application security testing, with examples from the world of DAST and recommendations for getting a grip on your cybersecurity tooling.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/3-ways-security-tool-sprawl-hurts-application-security-testing/\">3 ways that security tool sprawl can hurt application security testing</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>Tool sprawl is a problem in all walks of the technology industry but can hit especially hard in cybersecurity. Losing track of the security toolset in your organization introduces inefficiencies that can hurt not only your security operations and incident response but also your application development and overall company performance.</p>\n\n\n\n<p>There are many examples of tool sprawl in the wide world of IT security, with a common scenario related to endpoint protection involving adding ever more security software to end-user devices. Without careful planning, testing, oversight, and reevaluation, this can have a serious performance impact, compromise usability, or even require more powerful and expensive hardware without necessarily improving security.</p>\n\n\n\n<p>For this post, we’ll focus specifically on how tool sprawl can affect application security testing. While most examples will come from Invicti’s area of expertise, namely <a href=\"https://www.invicti.com/learn/dynamic-application-security-testing-dast/\">dynamic application security testing (DAST)</a>, many of the same challenges apply in other areas of cybersecurity.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">Sprawling problem #1: Workflow inefficiencies and security gaps</h2>\n\n\n\n<p>Wherever you have multiple point solutions used in isolation, the lack of integration and automation can result in inefficient manual processes and needlessly duplicated functionality. This is especially true with subpar quality results and false positives in the mix, with each tool consuming additional time and effort every time it runs.</p>\n\n\n\n<p>Taking a fairly typical example from the DAST world, engineering might be using a basic vulnerability scanner that was bundled with their <a href=\"https://www.invicti.com/learn/static-application-security-testing-sast/https://www.invicti.com/learn/static-application-security-testing-sast/\">SAST</a> tool. At the same time, the application security team might be using a commercial DAST to run vulnerability scans in QA, and the corporate IT security team might be paying an external provider to run periodic vulnerability scans on the production environment. That means three DAST tool processes to maintain, operate, and finance.</p>\n\n\n\n<p>Running multiple disjointed and uncoordinated security testing tools is inefficient and can slow down all processes that rely on them, including development pipelines. It can also give a false sense of security by leaving gaps and gray areas in your overall security posture—which neatly brings us to problems with visibility.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Sprawling problem #2: Lack of centralized visibility and control</h2>\n\n\n\n<p>To repeat a well-worn truth, attackers only need one gap, but defenders have to close them all. Tool sprawl can lead to data silos that hinder visibility and make it harder to see the big picture, including any weak spots. If they don’t know about all the security tools used in the organization and its many environments, CISOs can’t get the most out of the data they generate nor ensure that they’re the best tools for the job. Crucially, sprawling security tools are tough to integrate and automate, making it that much harder to quickly react to security threats.</p>\n\n\n\n<p>Continuing with the sprawling DAST example, it’s possible to have the same vulnerability in an existing application being found three times by three different tools at different stages of the DevOps process. The DAST-lite used by engineering might flag the issue but be ignored because most of its reports for this vulnerability type are not actionable. The security team running a dedicated scanner in QA might find the issue and submit a developer ticket to get it fixed in the next release. And finally, the external scanning provider might find the same flaw in production and include it in their report to IT security, who then need to decide whether to block it on the <a href=\"https://www.invicti.com/learn/web-application-firewall-waf/\">web application firewall (WAF)</a>.</p>\n\n\n\n<p>In effect, you could have three teams independently and manually evaluating three vulnerabilities without knowing they are the same underlying issue. And that’s only a simplified example that doesn’t consider the complexity of development and deployment in cloud environments, where you also have to factor in a mix of provider-operated security measures and any cybersecurity tools you run on your own. Centralized visibility is a must for effective application security, both preventive and reactive—and tool sprawl obscures that picture.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Sprawling problem #3: Zombie tooling</h2>\n\n\n\n<p>Tools don’t run and maintain themselves, so a common consequence of sprawl is zombie security tools and workflows that have been completely abandoned or relegated to a meaningless checkbox. Especially with open-source or bundled tools, it can be tempting to just add a new process because you don’t need separate purchasing approval.</p>\n\n\n\n<p>In our sprawling DAST scenario, the engineering team has a lightweight vulnerability scanner that was added to the pipeline mostly because it came bundled with their SAST. The scanner doesn’t find much, and what it finds is mostly ignored, but it’s not costing us extra, so why not use it, right? Such lip-service tooling clutters up workflows and gives a false sense of security because it ticks a box without really making a difference. It can also give security tools a bad name, strengthening the developer misconception that application security is mostly meaningless bureaucracy.</p>\n\n\n\n<p>With no upfront cost, it’s easy enough to add and forget a tool—but the same thing can happen with commercial products. All too often, point solutions are bought without looking at the wider security picture or considering factors like setup and maintenance requirements, integration, or vendor support. Teams might then realize that nobody has time to configure, run, and maintain the new tool, and a new full-time role is not on the cards. The product is then written off as a waste of time and money, leaving the organization with zero, if not negative, <a href=\"https://www.invicti.com/blog/web-security/time-to-value-web-application-security/\">ROI on their security solution</a>.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Dealing with tool sprawl in application security testing</h2>\n\n\n\n<p>Security doesn’t happen in a vacuum but is a cross-cutting concern that touches all areas of an organization, so centralized control and visibility is a must. Application security, in particular, is deeply woven into the wider cybersecurity picture, and relying on ad-hoc point solutions is never a good long-term strategy. To reduce tool sprawl and see real security improvements and ROI in application security, follow these overarching principles:&nbsp;</p>\n\n\n\n<ul>\n<li>Tool consolidation and integration: Aim to minimize the number of tools overall and ensure that everything you use is integrated into your overall security strategy and makes a difference to your organization’s security posture.</li>\n\n\n\n<li>Centralized visibility: Ensure you’re always looking at the big picture by centralizing as much security reporting and monitoring as possible, which may include consolidating or eliminating isolated security products and workflows.</li>\n\n\n\n<li>Automation and efficiency: Automate everything you can based on accurate data to speed up security response and optimize costs by minimizing manual work and duplication of effort.</li>\n</ul>\n\n\n\n<p>Invicti provides one answer to inefficiencies in application security testing, taking a DAST-first approach to cracking down on tool sprawl for web application and API security. Building on the foundation of a mature DAST engine with <a href=\"https://www.invicti.com/blog/web-security/proof-based-scanning-game-changer-reasons/\">evidence-based verification</a>, the Invicti platform also incorporates IAST, dynamic SCA, tech stack version checking, and web discovery, with a wide choice of out-of-the-box and custom workflow integrations. Invicti customers also get onboarding services and technical support to ensure they’re getting the most out of their investment—and seeing solid security improvements from day one.</p>\n\n\n\n<p><a href=\"https://www.invicti.com/blog/web-security/sast-vs-dast-vs-iast-everything-you-always-wanted-to-know/\">Learn more about the differences between DAST, SAST, and IAST</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/3-ways-security-tool-sprawl-hurts-application-security-testing/\">3 ways that security tool sprawl can hurt application security testing</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"About that vulnerability… Are you sure it’s fixed?","link":"https://www.invicti.com/blog/web-security/are-you-sure-that-vulnerability-is-fixed-continuous-security-testing/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Fri, 12 Jan 2024 16:24:58 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"dast-tools"},{"#cdata-section":"vulnerability-testing"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=49398"},"description":{"#cdata-section":"<p>When someone tells you a vulnerability has been fixed or a product patched, how can you be sure? I mean really sure? The answer is testing everything and then testing it again. From ineffectual fixes to delayed or sidestepped patches, too many things can go wrong to take your security posture on faith.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/are-you-sure-that-vulnerability-is-fixed-continuous-security-testing/\">About that vulnerability&#8230; Are you sure it’s fixed?</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>It’s tempting to speak about security in binary terms: fixed or not fixed, patched or unpatched, secure or insecure. Reality, though, is more about shades of gray and probabilities than absolutes. It’s also about limited resources and endless prioritization—always with the awareness that the stakes are high and any security gaps you fail to address could potentially allow for a successful attack with any number of consequences.</p>\n\n\n\n<p>Knowing for a fact whether something is fixed or not is especially important for high-level decision-making. Whether it’s a critical vulnerability holding up a new release, a zero-day in production causing a flood of questions from anxious customers, or an old issue that resulted in a data breach now being investigated, a lot can ride on having trustworthy vulnerability status information. At the same time, a lot can go wrong along the way, and unless your decisions are based on reliable and regular testing, arriving at a resolution is like building a house of cards.</p>\n\n\n\n<p>Before you can say “it’s fixed,” there are two things you need to know: what exactly you are fixing and how to tell if it’s fixed. Whether patching a third-party product or implementing a fix in your own code, plenty of pitfalls await along the way to eliminating a vulnerability.</p>\n\n\n\n<h2 class=\"wp-block-heading\">A partial fix is no fix</h2>\n\n\n\n<p>Incomplete or ineffective fixes are the first cause of false hopes in security. All too often, a fix is done to make an error go away, stop a build failing, or simply close the ticket and get on with work rather than address the root cause of a vulnerability. Ideally, a security fix should receive as much QA attention as any other commit (if not more). The catch is that while you might have well-defined suites of unit and regression tests for your application, security testing is a very different story that requires specialist skills to perform manually and specialist tools to automate.</p>\n\n\n\n<p>Taking <a href=\"https://www.invicti.com/learn/sql-injection-sqli/\">SQL injection</a> as an example, a superficial fix for a vulnerability report that says “SQLi on page XYZ” might be to filter the inputs of a form for SQL special characters. Without exhaustive testing, that may seem good enough to close the ticket or even pass a basic automated test—but there are many more ways to inject SQL into the same parameter, and there might also be other vulnerable parameters on the page. Worse, a quick-and-dirty fix might plug one vulnerability only to introduce another.</p>\n\n\n\n<p>The only way to confidently approve security fixes is to put every single change through a full battery of up-to-date automated tests and don’t push code to production until these pass. To learn how this works in practice, see our <a href=\"https://www.invicti.com/blog/docs-and-faqs/hunting-down-vulnerabilities-invicti-dast-iast-approach/\">post on hunting down vulnerabilities</a> that includes a video demo showing how automatic testing and retesting can catch a superficial SQLi fix and enforce a proper resolution.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">Temporary measures live the longest</h2>\n\n\n\n<p>For production systems, remediation often starts (and ends) by blocking a known attack vector using a <a href=\"https://www.invicti.com/learn/web-application-firewall-waf/\">web application firewall (WAF)</a>. Ideally, this should only be temporary until a fix is deployed to remove the vulnerability that makes the attack possible. All too often, though, blocking a single attack ends up being the permanent solution, with the underlying vulnerability still in place and ripe for exploitation using a different attack.</p>\n\n\n\n<p>Relying solely on blocking is a type of superficial remediation that presents a major risk. Bypassing firewall rules is a fundamental skill for penetration testers and malicious hackers alike, so it’s pretty likely that a different attack against the same vulnerability will arrive sooner or later. Granted, there are legitimate situations where you can’t fully fix or patch a product, like when no patch is available or testing has shown that fixing one vulnerability would break something else—but these should be the exception, not the rule.</p>\n\n\n\n<p>The best practice should always be to fix the underlying vulnerability as soon as possible and automatically retest to make sure the issue is truly gone. Runtime blocking is fast but fragile while fixing in the app is slower but more robust. You really need both, with accurate automation at all levels.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Patch that patch before you patch</h2>\n\n\n\n<p>Patching third-party software might seem easier than fixing your own code because somebody else has done the dirty work and you “only” need to deploy the patch. But even assuming that a patch is available, can be deployed, and won’t break anything (and these are already big assumptions), patched doesn’t always mean fixed.</p>\n\n\n\n<p>Especially for widespread and high-impact vulnerabilities, it’s common to have a whole succession of patches (the <a href=\"https://www.invicti.com/blog/web-security/moveit-transfer-sql-injection-global-data-breaches/\">MOVEit Transfer hack</a> sprouted three in just first month). Apart from incomplete fixes rushed out under time pressure, this can also be the result of increased scrutiny. As the vulnerable product is suddenly being probed and examined by more researchers and attackers than ever, new vulnerabilities or attack avenues are often discovered, resulting in cascading patches.</p>\n\n\n\n<p>Seeing as every patch should be tested before deployment in production, and you first need to actually find out that you need to deploy it, it’s often hard to confidently say you have “everything” patched. For example, you may just have finished patching a high-profile vulnerability when you learn there’s already a new patch that may or may not apply to your specific installation. What do you say when somebody asks you if your company is vulnerable to CVE such-and-such? Ideally, you should have a way of quickly testing your entire environment to check if an attack is possible. This should be done independently of verifying and deploying patches, not to mention maintaining a product and dependency inventory to check if you’re affected in the first place.</p>\n\n\n\n<h2 class=\"wp-block-heading\">If you don’t fix them, even the known knowns can get you hacked</h2>\n\n\n\n<p>2023 saw several <a href=\"https://www.invicti.com/blog/web-security/solarwinds-sec-ciso-who-is-legally-responsible-for-security/\">high-profile</a> <a href=\"https://www.justice.gov/usao-ndca/pr/former-chief-security-officer-uber-sentenced-three-years-probation-covering-data\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">reports</a> of CISOs being held legally responsible for security breaches. Putting aside the specifics of each case, these stories serve as a reminder of the importance of accurate security information for CISOs to act upon. What if everything indicates a vulnerability has been fixed, but the company gets hacked anyway? Was the patch ineffective? Was it misreported as applied when it really wasn’t? Was it applied everywhere except one forgotten instance? Was it still in the queue for proper fixing when attackers found a WAF bypass?</p>\n\n\n\n<p>Cybersecurity may be complicated and notoriously fuzzy around the edges, but when it comes to testifying in court that you did everything right, you can’t beat a paper trail with solid test results.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Fix but verify: Test, retest, and automate</h2>\n\n\n\n<p>Vulnerability testing using a good quality <a href=\"https://www.invicti.com/learn/dynamic-application-security-testing-dast/\">DAST</a> tool is a non-negotiable part of any effective application security program. By automating testing in a continuous process integrated into the development pipeline, you can keep an eye on your current external security posture while also testing and retesting in pre-production. You can even automatically retest internal fixes to make doubly sure they are doing their job. That way, you have an unavoidable extra layer of security checks to catch exploitable issues before they get you into trouble.</p>\n\n\n\n<p><a href=\"https://www.invicti.com/white-papers/security-at-the-speed-of-software-dast-in-the-sdlc/\">Read how Invicti can integrate vulnerability testing into your SDLC in a continuous process</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/are-you-sure-that-vulnerability-is-fixed-continuous-security-testing/\">About that vulnerability&#8230; Are you sure it’s fixed?</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"The HHS outlines vital new pillars of action for cybersecurity in healthcare","link":"https://www.invicti.com/blog/web-security/hhs-guidelines-cybersecurity-in-healthcare/","dc:creator":{"#cdata-section":"Meaghan McBee"},"pubDate":"Thu, 04 Jan 2024 13:00:00 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"cybersecurity"},{"#cdata-section":"healthcare"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=49305"},"description":{"#cdata-section":"<p>A new paper from the Department of Health and Human Services (HHS) presents four pillars of action for critical healthcare cybersecurity measures, targeting processes and procedures that will make communities, hospitals, and patients more secure.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/hhs-guidelines-cybersecurity-in-healthcare/\">The HHS outlines vital new pillars of action for cybersecurity in healthcare</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>In early December 2023, the U.S. Department of Health and Human Services <a href=\"https://aspr.hhs.gov/cyber/Documents/Health-Care-Sector-Cybersecurity-Dec2023-508.pdf\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">published a concept paper</a> outlining imperative new guidelines for healthcare organizations tackling cybersecurity. The publication comes on the tailwind of the Biden-Harris administration’s <a href=\"https://www.invicti.com/blog/web-security/us-national-cybersecurity-strategy-five-pillars-to-bolster-software-security/\">National Cybersecurity Strategy</a>, building off of that momentum with a renewed focus on one of the nation’s most high-risk sectors. </p>\n\n\n\n<p>“Since entering office, the Biden-Harris Administration has worked to strengthen the nation’s defenses against cyberattacks,” HHS Secretary Xavier Becerra said in a <a href=\"https://www.hhs.gov/about/news/2023/12/06/hhs-announces-next-steps-ongoing-work-enhance-cybersecurity-health-care-public-health-sectors.html\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">press release</a>. “The healthcare sector is particularly vulnerable, and the stakes are especially high. Our commitment to this work reflects that urgency and importance.” </p>\n\n\n\n<p>Why is cybersecurity important in healthcare as we move into the new year? Sensitive data exposure from health records can lead to identity theft and more serious attacks, painting a glaring target on the entire industry. <a href=\"https://aspr.hhs.gov/cyber/Documents/Health-Care-Sector-Cybersecurity-Dec2023-508.pdf\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Information collected from the HHS</a> and its Office for Civil Rights (OCR) shows an astounding 278% increase in large breaches involving ransomware from 2018 to 2022 and a 93% increase in large breaches reported overall. </p>\n\n\n\n<p>Preventing these precisely targeted and unrelenting attacks requires more than just a few security scans a month; organizations in the health sector need a consistent and holistic approach to securing the many web applications they use to share and receive sensitive information every day.&nbsp;&nbsp;&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">Critical actions from the HHS aim to bolster cybersecurity in healthcare</h2>\n\n\n\n<p>As the healthcare sector moves to adopt more strategically impactful cybersecurity policies, the concept paper outlines four key actions that should happen concurrently to reduce the number of cyber incidents and data breaches impacting healthcare:</p>\n\n\n\n<ul>\n<li><strong>Establish voluntary cybersecurity performance goals for the healthcare sector.</strong> Healthcare and Public Health Sector-specific Cybersecurity Performance Goals (HPH CPGs) provide a way to help healthcare organizations prioritize their security practices so they can implement the most high-impact tactics first. The HPH CPGs proposed by HHS will set a clear direction for the entire industry and inform future regulatory needs. </li>\n\n\n\n<li><strong>Drive cybersecurity best practice adoption in healthcare through incentives and upfront investments.</strong> The HHS is dedicated to working with Congress on sourcing funding and authority to administer financial assistance for domestic hospitals investing in cybersecurity. The HHS hopes to establish two new programs for this effort: one with upfront investments to help high-need organizations (for example, hospitals with low resources) and the other with incentives to encourage all hospitals in the United States to invest in cybersecurity practices and utilize HPH CPGs. </li>\n\n\n\n<li><strong>Implement an HHS-wide strategy to support greater enforcement and accountability.</strong> The HHS understands that mere voluntary goals will not result in adequate change in the healthcare sector and proposes that HPH GPGs be incorporated into existing regulations and programs to establish new cybersecurity standards that are more enforceable. Implementation should incorporate increased civil monetary penalties for HIPAA violations, proactive audits, and increased assistance for low-resourced entities. </li>\n\n\n\n<li><strong>Expand and mature the HHS as a one-stop shop for healthcare sector cybersecurity.</strong> One of the ultimate goals is for the HHS to mature to a “one-stop shop” for cybersecurity support in the healthcare sector within the Administration of Strategic Preparedness Response (ASPR). This will enable more effective coordination between HHS and the Federal Government while also improving the incident response capabilities of the HHS and providing critical security resources like vulnerability scanning.  </li>\n</ul>\n\n\n\n<p>The concept paper states: “HHS believes these goals, supports, and accountability measures can comprehensively and systematically advance the healthcare sector along the spectrum of cyber resiliency to better meet the growing threat of cyber incidents, especially for high-risk targets like hospitals.” Taking action on these priorities will help the sector move toward better security and enhanced privacy for all seeking safe access to healthcare technology.&nbsp;</p>\n\n\n\n<p>In addition to these new guidelines and supporting initiatives, the HHS OCR plans to update the Health Insurance Portability and Accountability Act (HIPAA) Security Rule in 2024 to include new vital cybersecurity requirements. As they also intend to implement additional Medicare and Medicaid security requirements, organizations in healthcare need to keep an eye on these changes in order to implement the right processes and tools to help them succeed.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">Selecting effective healthcare cybersecurity solutions&nbsp;</h2>\n\n\n\n<p>Basic web application attacks were one of the top three patterns resulting in breaches for healthcare in 2022, according to Verizon’s <a href=\"https://www.verizon.com/business/resources/reports/dbir/2023/industries-intro/healthcare-data-breaches/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">2023 Data Breach Investigations Report</a>. There were 525 incidents in all, of which 436 were confirmed to involve data disclosure—with 67% of the compromised data containing personal information and 54% containing medical information. </p>\n\n\n\n<p>As healthcare organizations move to keep sensitive information secure and comply with these new HHS directives, there is ample opportunity for streamlining web app security without disrupting development or user experience. Mature scanning tools are available that offer flexible deployment options and come equipped with built-in checks for <a href=\"https://www.invicti.com/support/hipaa-compliance-report/\">HIPAA compliance</a> so that organizations can hit their <a href=\"https://www.invicti.com/features/dashboards-reporting-compliance/\">reporting</a> goals with ease. </p>\n\n\n\n<p>When time is of the essence (which it always is in software development), modern scanning tools like Invicti’s solutions keep healthcare organizations on schedule by eliminating hours of manual work and reducing tedious false positives. Seamless workflows take center stage: integrations and a full-featured REST API make automating security tasks a reality so that teams save time—and sanity—as they build innovative solutions for hospitals, patients, and their communities.</p>\n\n\n\n<p>When reviewing solutions that get the job done, organizations in the healthcare sector should look for security tools that can:</p>\n\n\n\n<ul>\n<li>Scan every corner of each app for maximum coverage and more visibility into lost, forgotten, or hidden assets.&nbsp;</li>\n\n\n\n<li>Scan web apps, web services, and web APIs regardless of framework, technology, or language.&nbsp;</li>\n\n\n\n<li>Combine dynamic application security testing (<a href=\"https://www.invicti.com/learn/dynamic-application-security-testing-dast/\">DAST</a>) with the capabilities of interactive application security testing (<a href=\"https://www.invicti.com/learn/interactive-application-security-testing-iast/\">IAST</a>) for an inside-out and outside-in look. </li>\n\n\n\n<li>Provide evidence-based verification to save time on manual security checks and present developers with detailed documentation of vulnerabilities for faster remediation.&nbsp;</li>\n\n\n\n<li>Integrate into the software development lifecycle (SDLC) to minimize costly post-release security hurdles and eliminate bottlenecks in DevSecOps.&nbsp;</li>\n</ul>\n\n\n\n<p>At Invicti, we do all of that and then some. Looking ahead to future guidelines and regulations from the government, <a href=\"https://www.invicti.com/get-demo/\">see how Invicti</a> can help your hospital or healthcare organization stay secure 24/7, protect sensitive patient information, and maintain compliance.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/hhs-guidelines-cybersecurity-in-healthcare/\">The HHS outlines vital new pillars of action for cybersecurity in healthcare</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"3 big reasons why 2024 will be a fierce and noisy year for cybersecurity","link":"https://www.invicti.com/blog/web-security/3-reasons-2024-will-be-a-year-of-cybersecurity-noise/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Fri, 22 Dec 2023 14:03:04 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"cybersecurity"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=49228"},"description":{"#cdata-section":"<p>Prediction posts are notoriously unreliable, but this time we’re drawing on the insights of Invicti experts Frank Catucci and Dan Murphy. Based on the major technological and geopolitical trends of 2023, we can extrapolate rather than guess that 2024 will be a year of alert noise at all levels and from all directions. This post unpacks the three main reasons.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/3-reasons-2024-will-be-a-year-of-cybersecurity-noise/\">3 big reasons why 2024 will be a fierce and noisy year for cybersecurity</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>As the saying goes, it’s tough to make predictions, especially about the future. And yet everyone tries—whether for planning or in the naive hope of not getting caught off-guard this time. While we do have our own modest tradition of end-of-year prediction posts on this blog, we look to the experts to help us make informed guesses about what’s coming.</p>\n\n\n\n<p>This year, Invicti’s CTO and Head of Security Research, Frank Catucci, and Invicti Chief Architect, Dan Murphy, sat down for a retrospective fireside chat about the ending year and the trends they could see continuing on into 2024. They covered a lot of ground in their typical casual style and the full recording is well worth checking out (see below), but three main trends kept cropping up again and again as things that will shape security in 2024. If even half of these predictions come to pass, we’re in for a busy and noisy year.</p>\n\n\n\n<figure class=\"wp-block-embed aligncenter\"><div class=\"wp-block-embed__wrapper\">\n<iframe title=\"Reflecting on 2023 in Application Security and Peering Into the Future\" src=\"https://player.vimeo.com/video/892158020?dnt=1&amp;app_id=122963\" width=\"500\" height=\"281\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\"></iframe>\n</div></figure>\n\n\n\n<h2 class=\"wp-block-heading\">Reason #1: Yes, it’s AI (but not in the way you might think)</h2>\n\n\n\n<p>Nobody doubts that the generative AI explosion in 2023 was a technological game-changer. Yet behind the “make it more” cat posts and the increasingly surreal LLM prompt injection methods, a less visible but far more impactful AI revolution is going on: supercharged application development. With integrated AI coding assistants like Copilot, developers can become far more productive, adding yet another accelerator to agile application development that’s already moving faster than ever—often much faster than security.</p>\n\n\n\n<p>While AI assistants can and do directly contribute to vulnerabilities by generating <a href=\"https://www.invicti.com/blog/web-security/analyzing-security-github-copilot-suggestions/\">insecure code suggestions</a>, the prospect of suddenly pumping, say, five times more code into the same pipeline is a far greater security headache. If a new feature gets implemented much quicker than before, you can bet there will be business pressure to release it faster and make money faster, leaving less time for QA and security testing. All the testing tools you use to automate the process will now have to handle more code, generating more results to review and address in a shorter time frame. And if the AI-generated code is buggier or less secure than expected, you may have to deal with yet more bugs and vulnerabilities on top of the sheer volume increase.</p>\n\n\n\n<p>There’s a very real risk that in 2024, application security will feel the strain of AI-boosted development—and not just because your own devs are now moving faster. The same AI tools are available to malicious hackers and malware and exploit writers, allowing them to work faster and better evade signature-based detection. Combined with the bad guys usually having more resources and fewer limitations, we can expect shorter times to compromise, a greater variety of attacks, and more unfamiliar signals for SOC personnel to investigate.</p>\n\n\n\n<p>In testing and detection, 2024 may well see security tools generating more alerts from more inputs than ever, making alert noise the top challenge for security professionals and developers alike.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Reason #2: New model attacks combining all the buzzwords</h2>\n\n\n\n<p>The MOVEit Transfer hack and subsequent data breaches affected several thousand organizations and hundreds of thousands of individuals whose data was leaked. We have dissected the <a href=\"https://www.invicti.com/blog/web-security/moveit-transfer-sql-injection-global-data-breaches/\">inner workings of the attacks</a> and discussed the <a href=\"https://www.invicti.com/blog/web-security/moveit-transfer-breaches-perfect-storm-of-application-security/\">broader implications</a> of the breaches as they unfolded. Apart from its sheer scale, the attack was notable for combining many techniques and vectors in a way that reads like an A to Z of cybersecurity and shows a likely direction for future mass breaches.</p>\n\n\n\n<p>For starters, the MOVEit Transfer attacks targeted a third-party application for secure file transfer that was widely used by enterprises and government organizations. Living on the boundary between public and protected systems, such software is the gatekeeper of sensitive data, making it a high-profile target. To compromise the app, attackers cleverly chained together several relatively simple vulnerabilities that, taken in isolation, wouldn’t pose a risk: <a href=\"https://www.invicti.com/learn/sql-injection-sqli/\">SQL injection</a>, insecure deserialization, and insecure access to an internal API. While the vast majority of database operations in the application were secure, the attackers managed to find and target one of the few places vulnerable to SQL injection.</p>\n\n\n\n<p>Putting all the pieces together allowed for <a href=\"https://www.invicti.com/learn/remote-code-execution-rce/\">remote code execution (RCE)</a> and the deployment of a web shell for remote access. The attack was a perfect storm of application security risks: a third-party app trusted with sensitive data, innocuous vulnerabilities chained into a devastating RCE attack, a single piece of software being used to compromise thousands of organizations, just one insecure place in the code giving attackers a way in, an insecure API endpoint… The list goes on, not to mention the financially motivated attackers threatening to publicly release sensitive data rather than encrypt or delete it, as with more traditional ransomware operations.</p>\n\n\n\n<p>Cybercriminals are looking for maximum returns from their attack investments, so it’s likely that 2024 will see more attacks on widely used third-party applications (like MOVEit Transfer or SolarWinds Orion) or software components (like Log4j). APIs are fast becoming the main attack surface, and RCE continues to be the ultimate prize. Let’s prepare some headline templates for 2024: “Thousands breached through RCE via insecure API endpoint in popular **** app.” Replace “app” with “library” as applicable and season to taste with AI. There, 2024 blog sorted.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Reason #3: A year of elections and mounting geopolitical tensions</h2>\n\n\n\n<p>At the risk of stating the obvious, the intensity of cyberattacks is strongly correlated with conflicts in the physical world, and while 2023 was already a hectic year in geopolitics, it was only setting the stage for 2024. With the globalization and global cooperation lever now firmly stuck in reverse gear and multiple economic, military, and social conflicts coming to a head or already in progress, cyberwarfare will be high on the agenda, as will opportunistic cybercrime.&nbsp;</p>\n\n\n\n<p>By a trick of the calendar, 2024 will see elections in dozens of countries across the globe, including the US. This will mean months of heated electoral campaigns, tense and often contested elections, and equally nervous transfers of power—all this on top of cyberwarfare and hacktivism related to ongoing and upcoming conflicts. Probes and attack attempts are likely to increase drastically, bombarding security staff with yet more real and false alerts. Considering that the vast majority of initial attack traffic is automated, the noise will affect all applications and, by proxy, all the organizations that run them.</p>\n\n\n\n<p>Apart from attacks against specific applications like MOVEit Transfer, 2023 also saw several of the most intense distributed denial of service (DDoS) ever recorded. Exploiting the <a href=\"https://www.invicti.com/blog/web-security/rapid-reset-http2-vulnerability-when-streaming-leads-to-flooding/\">Rapid Reset HTTP/2</a> vulnerability, attackers were able to generate unprecedented volumes of DoS traffic from relatively small botnets. Thanks to cooperation between major cloud service operators and their quick response, these attacks passed unnoticed for most Internet users—but what if the attackers were just watching and learning? The underlying vulnerability in HTTP/2 cannot be fixed without redesigning the entire protocol, so remediation was focused on patching and reconfiguring web servers, load balancers, and other appliances.</p>\n\n\n\n<p>Any site or service running without the Rapid Reset fixes and outside the protective umbrella of a handful of big infrastructure providers could be DoSed into oblivion in a matter of seconds. As the global situation unfolds, threat actors motivated by financial, political, military, or ideological reasons may well weaponize this and other vulnerabilities against specific organizations, groups, or even states. Meaning, once again, more probes, more late-night incident response scrambles, and more daily security alert noise.</p>\n\n\n\n<h2 class=\"wp-block-heading\">AI to the rescue? Sure, once it stops making its own noise</h2>\n\n\n\n<p>Reading through all this doom and gloom, you may be wondering if there’s any positive outlook at all for 2024—maybe AI can save the day? After all, if AI can generate a lot more work for security teams, then surely AI can also help them do some of that work? Well… Yes and no. The problem with generative AI (which is what the current boom is all about) is that you can never be quite certain of the results. In other words, it is inherently noisy and of limited use whenever you need exact data to make quick and accurate decisions.</p>\n\n\n\n<p>Without spreading too much FUD, 2024 will likely be a year of security alert noise rising to new levels for all the reasons listed above and more. Even more so than today, the main challenge will be deciding what is real and what to prioritize. For its part, Invicti helps to cut down on the noise in application security testing with its proof-based scanning, but the approaching flood of probes and attacks will affect everyone in all areas of cybersecurity.</p>\n\n\n\n<p>If you haven’t already, be sure to check out <a href=\"https://vimeo.com/892158020\">Frank and Dan’s review of 2023</a> for even more insights and expectations for 2024. Tl;dr: It’s gonna get loud.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/3-reasons-2024-will-be-a-year-of-cybersecurity-noise/\">3 big reasons why 2024 will be a fierce and noisy year for cybersecurity</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"CVSS 4.0 is here. Will it make vulnerability scores more useful?","link":"https://www.invicti.com/blog/web-security/cvss-4-0-more-useful-vulnerability-scoring/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Thu, 14 Dec 2023 17:33:48 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"cvss"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=49104"},"description":{"#cdata-section":"<p>Version 4 of the Common Vulnerability Scoring System (CVSS) redefines and removes several v3.1 metrics and adds new ones, notably the supplemental metric group. Most importantly, v4.0 makes it clear from the outset that the base score is only a starting point for calculating the real-life impact and risk for a vulnerability. Invicti is among the first DAST vendors to add CVSS 4.0 support to its products.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/cvss-4-0-more-useful-vulnerability-scoring/\">CVSS 4.0 is here. Will it make vulnerability scores more useful?</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>The Common Vulnerability Scoring System (CVSS) has long been due for an overhaul, and November 2023 saw the official publication of CVSS v4.0. Designed to address the shortcomings of CVSS v3.1 and bring the system in line with current cybersecurity realities, version 4.0 includes major changes, notably adding new supplemental metrics for more customizable vulnerability management.</p>\n\n\n\n<p>Invicti is among the first <a href=\"https://www.invicti.com/learn/dynamic-application-security-testing-dast/\">dynamic application security testing (DAST)</a> solution vendors to add CVSS 4.0 vulnerability scores into its products. This post presents an overview of CVSS 4.0 and highlights how the new metrics appear in Invicti and Acunetix vulnerability scan results.</p>\n\n\n\n<h2 class=\"wp-block-heading\">What is CVSS?</h2>\n\n\n\n<p>In dealing with security issues, it’s helpful to have a number that indicates the severity and helps you prioritize your vulnerability response efforts. When faced with hundreds of reports across automated systems, those severity scores become indispensable for vulnerability assessment and prioritization—but how do you calculate them? After all, the severity of any security vulnerability depends on many factors and means different things to different people and for different systems.</p>\n\n\n\n<p>Already in 2005, the US National Infrastructure Advisory Council (NIAC) created the unsuccessful CVSS version&nbsp;1, with the Forum of Incident Response and Security Teams (FIRST) soon being put in charge of developing and maintaining a more practical vulnerability scoring system. CVSSv2 followed in 2007, v3.0 in 2015, v3.1 in 2019, and finally v4.0 in 2023. Each iteration has incorporated industry feedback, observed usage practices, and changes to the threat landscape.</p>\n\n\n\n<p>The fundamental thing about any CVSS base score is that it only reflects the technical severity of a vulnerability when considered in isolation. Usually, this value alone is not enough to determine the risk and therefore the remediation priority, yet CVSS scores have frequently been confused with risk scores. One of the main goals for CVSS 4.0 was to redesign the whole scoring system to incorporate additional metrics that could provide a broader picture of each vulnerability in a specific context, resulting in more useful inputs for risk analysis.</p>\n\n\n\n<h2 class=\"wp-block-heading\">What’s new in CVSSv4.0 compared to CVSS v3.1</h2>\n\n\n\n<p>To make it clear that the base score is only the starting point for building a full picture, version 4.0 also defines a threat score and environmental score, with separate names for each combination of component scores (note that temporal metrics from v3.1 are now called threat metrics):</p>\n\n\n\n<ul>\n<li>CVSS-B: Base</li>\n\n\n\n<li>CVSS-BT: Base+Threat</li>\n\n\n\n<li>CVSS-BE: Base+Environmental</li>\n\n\n\n<li>CVSS-BTE: Base+Threat+Environmental</li>\n</ul>\n\n\n\n<p>The new nomenclature makes it clear whether you’re dealing only with a raw base score or other metrics have also been incorporated—and the more metrics you include, the better your picture of the resulting risk. If systematically and correctly implemented, the extended CVSS-BTE score may allow organizations to determine risk with an accuracy comparable to proprietary risk scoring methods. In theory, you should be able to calculate your own unique CVSS-BTE value by taking the base score from an information provider, the environmental metric values from your asset management database, and the threat score from your threat intelligence data.</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-tips\">\n<h3 class=\"wp-block-heading\">CVSS numerical score vs. CVSS vector</h3>\n\n\n\n<p>Each CVSS score consists of a numerical score and a vector string that encodes all the CVSS metrics and values supplied by a provider using a set of abbreviations. In simple terms, the numerical score provides a quick view of the overall severity, while the vector describes the vulnerability in detail by listing specific metrics and values using their abbreviations. For example, <em>AV:N</em> in the example below means <em>Attack Vector: Network</em>.</p>\n\n\n\n<p>&nbsp;</p>\n\n\n\n<p>As more metrics are added, the vector string gets longer. Here’s an <a href=\"https://www.first.org/cvss/v4.0/examples\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">example from the CVSS 4.0 specification docs</a>, illustrating how the infamous <a href=\"https://www.invicti.com/blog/web-security/the-heartbleed-bug/\">Heartbleed vulnerability</a> (CVE-2014-0160) would be described in version 4.0 as compared to 3.1:</p>\n\n\n\n<p>&nbsp;</p>\n\n\n\n<ul>\n<li>CVSS 3.1: Base score 7.5, vector CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N</li>\n\n\n\n<li>CVSS 4.0: Base+Threat score 8.7, vector CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:H/VI:N/VA:N/SC:N/SI:N/SA:N/E:A</li>\n</ul>\n</blockquote>\n\n\n\n<h3 class=\"wp-block-heading\">New, changed, and retired base metrics</h3>\n\n\n\n<p>Starting with the biggest departure, the unloved and ambiguous <em>SCOPE (S)</em> has been removed from the base metric set since it caused scoring inconsistencies depending on how a specific provider interpreted it. Instead of a single vague metric, scope is now defined in terms of the impact on confidentiality, integrity, and availability for both the vulnerable system and any subsequent systems, giving a total of six detailed impact metrics. Other retired metrics include <em>Remediation Level (RL)</em> and <em>Report Confidence (RC)</em>.</p>\n\n\n\n<p>An important change is that the single <em>Attack Complexity (AC)</em> metric, which in CVSS3.1 was limited to a low or high value, has been redefined and split into two more specific metrics. The new version redefines <em>Attack Complexity (AC)</em> to mean the attacker effort required to overcome any defensive measures. It also adds <em>Attack Requirements</em> (<em>AT</em> because <em>AR</em> was already taken) to specify any prerequisites for a component to be vulnerable.</p>\n\n\n\n<p>To account for the growing complexity and diversity of applications and user interfaces, the <em>User Interaction (UI)</em> base metric has been redefined to provide finer granularity than a simple yes/no. With version 4.0, you can specify three levels of user interaction: <em>None</em>, <em>Passive</em> (requires limited and involuntary user interaction), or <em>Active</em> (vulnerability exploitation requires deliberate and specific user actions).</p>\n\n\n\n<h3 class=\"wp-block-heading\">New supplemental metric group</h3>\n\n\n\n<p>CVSS4.0 adds a whole new set of optional supplemental metrics that, when provided, can allow organizations to define and measure context-dependent vulnerability attributes. Information providers have the option to use these metrics to convey additional information, but it’s up to the information consumer if and how these metrics should affect the final score. Six main supplemental metrics have been added:</p>\n\n\n\n<ul>\n<li><em>Automatable (A)</em>: Indicates whether the provider believes attackers could automatically exploit the vulnerability across multiple targets (<em>Yes</em>/<em>No</em>).</li>\n\n\n\n<li><em>Recovery (R)</em>: Describes how an attacked system will be able to recover from an attack on the vulnerability. Possible values are <em>Automatic</em> (meaning that fully automatic recovery is possible), <em>User</em> (if recovery requires manual intervention), or <em>Irrecoverable</em>.</li>\n\n\n\n<li><em>Value Density (V)</em>: Indicates the value of a single exploitation to an attacker. Possible values are <em>Diffuse</em> (exploiting a single vulnerability provides relatively little value or few system resources) or <em>Concentrated</em> (a single attack can yield lots of resources to the attacker).</li>\n\n\n\n<li><em>Vulnerability Response Effort (RE)</em>: Indicates how difficult it will be for a consumer to respond to a successful attack, with possible effort values of <em>Low</em>, <em>Moderate</em>, or <em>High</em>.</li>\n\n\n\n<li><em>Provider Urgency (U)</em>: Allows information providers to recommend an urgency rating using an alert signal code of <em>Red</em> (highest), <em>Amber</em> (moderate), <em>Green</em> (reduced), or <em>Clear</em> (informational only).</li>\n\n\n\n<li><em>Safety (S)</em>: CVSS versions were limited to computer systems and logical impacts on those systems but provided no way of indicating potential consequences in the physical world. The new <em>Safety</em> metric now allows providers to flag vulnerabilities that could lead to death or injury if exploited—especially important for industrial control systems, healthcare, and high-risk IoT systems. Possible values indicate the presence of physical safety risks: <em>Present</em>, <em>Negligible</em>, or <em>Not Defined</em>.</li>\n\n\n\n<li>Related to the main <em>Safety</em> metric are two additional metrics for subsequent systems: <em>Modified Integrity of Subsequent System: Safety</em> (<em>MSI:S</em>) and <em>Modified Availability of Subsequent System: Safety</em> (<em>MSA:S</em>). The information consumer can supply these to indicate whether a successful attack can impact the integrity or availability of a related system in a way that threatens safety.</li>\n</ul>\n\n\n\n<p>Again, all the supplemental metrics are purely optional and can be supplied or omitted by providers as needed for a specific vulnerability.</p>\n\n\n\n<h2 class=\"wp-block-heading\">CVSSv4.0 support in Invicti and Acunetix</h2>\n\n\n\n<p>As a CVSS information provider both for CVEs and for newly identified application vulnerabilities, Invicti is leading the way among DAST vendors by adding CVSS 4.0 support to its Invicti and Acunetix products. The CVSS scores and vectors for v4.0 will now appear in vulnerability reports alongside existing CVSS 3.0 and 3.1 information to provide Invicti customers with multiple options to use as inputs for their risk management and vulnerability mitigation efforts.</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-info\">\n<p>As of December 2023, CVSS 4.0 support is available in all Invicti and Acunetix products except for Invicti Enterprise on-premises and Acunetix 360 on-premises—for these, the functionality will be added in January 2024.</p>\n</blockquote>\n\n\n\n<h2 class=\"wp-block-heading\">Conclusion</h2>\n\n\n\n<p>The changes made to CVSS 4.0 address the most criticized shortcomings of 3.1 and bring the standard up to date with current technologies and threats, though at the cost of making the whole system even more complex. Compared to its predecessor, version 4.0 promises more realistic, granular, and customizable vulnerability scoring that incorporates real-world impacts where applicable. Assuming they are correctly and consistently used, CVSS-BTE scores could, in theory, replace many existing proprietary risk calculation methods with a standardized system.</p>\n\n\n\n<p>The elephant in the room is that a new standard doesn’t implement itself, so each organization (whether an information provider or consumer) will still need to work to get the most out of it. In fact, as soon as CVSS 4.0 hit public preview, <a href=\"https://www.csoonline.com/article/648607/will-cvss-4-0-be-a-vulnerability-scoring-breakthrough-or-is-it-broken.html\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">some critical voices</a> were saying that the whole concept of centralized vulnerability scoring and reporting is fundamentally flawed and, despite welcome updates, version 4.0 can do nothing to fix it.</p>\n\n\n\n<p>Until the industry comes up with a better alternative, the new CVSS 4.0 will at least allow vulnerability databases like NVD to provide more accurate and informative vulnerability scores for CVEs—and vulnerability information providers like Invicti to supply richer data in their application vulnerability reports.</p>\n\n\n\n<p>To learn more about CVSS 4.0, see the <a href=\"https://www.first.org/cvss/v4.0/specification-document\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">full specification document</a> on the <a href=\"https://www.first.org/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">first.org</a> site.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/cvss-4-0-more-useful-vulnerability-scoring/\">CVSS 4.0 is here. Will it make vulnerability scores more useful?</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"The DevSecOps benefits of cloud-native security","link":"https://www.invicti.com/blog/web-security/cloud-native-security-devsecops-benefits/","dc:creator":{"#cdata-section":"Meaghan McBee"},"pubDate":"Fri, 08 Dec 2023 16:36:09 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"devsecops"},{"#cdata-section":"cloud-security"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=48959"},"description":{"#cdata-section":"<p>Cloud-native architectures have very different security requirements compared to on-premises deployments. Integrating cloud-native security at every level of your cloud model and making it part of your overall cybersecurity has many advantages, from fortified business continuity and more dynamic threat intelligence to lower operating costs and faster software innovation.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/cloud-native-security-devsecops-benefits/\">The DevSecOps benefits of cloud-native security</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>According to a <a href=\"https://resources.foundryco.com/download/cloud-computing-executive-summary\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">2023 Cloud Computing Study</a>, 92% of organizations already host a portion of their IT environment in the cloud, with 66% expected to increase spending on cloud computing over the next year. With an emphasis on building and deploying applications that leverage all the advantages of the cloud, cloud-native security can be an effective approach to designing applications built of independently deployable microservices that can scale dynamically based on demand. </p>\n\n\n\n<h2 class=\"wp-block-heading\">What is cloud native security, anyway?</h2>\n\n\n\n<p>Cloud-native security is a way to fold critical security measures into an organization’s overall cybersecurity strategy, providing the foundation of secure development and operations for cloud-based assets. Effective cloud security merges multiple technologies like identity and access management, encryption, and firewalls to protect more than just the perimeter, ensuring that resources and data are secured at every layer of cloud deployments—from the cloud platform through clusters and container images to application code.&nbsp;</p>\n\n\n\n<p>In web application development, cloud-native architecture is based on containerization technologies like Docker, which, combined with orchestration tools like Kubernetes, help ensure consistent and scalable deployments while reducing the risk of misconfigurations. With cloud-native web apps often developed in agile DevOps workflows, application security commonly relies on <a href=\"https://www.invicti.com/blog/web-security/what-is-devsecops/\">DevSecOps</a> practices, where security best practices and checks are integrated throughout the software development lifecycle (SDLC) for a more secure development process.&nbsp;</p>\n\n\n\n<p>Embedding security throughout cloud-native environments can also provide the flexibility and agility to enable enterprises to respond to critical vulnerabilities faster and with more effective rapid response protocols. With a layered and systematic approach to access control, security becomes less of an afterthought and more of an inherent part of the development and operations process, reducing the risk of security incidents and downtime in the face of constantly increasing cyber threats.&nbsp;</p>\n\n\n\n<p>The advantages of cloud-native application security are extensive, affecting the organization in ways that can positively influence everything from security posture to talent retention and accelerated software innovation. Read on for a breakdown of what you can expect if security in the cloud becomes a reality for your organization.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">Easier vulnerability management</h2>\n\n\n\n<p>To automate or not to automate? That is no longer the question. Automation is now an integral part of web application development, so application security, by extension, also needs to be automated through frequent and consistent scans as well as accurate data from your scanning and monitoring tools. Cloud-native security technologies can combine previously separate domains like network security, container security, and application security, enabling teams to simplify vulnerability identification and remediation across their entire cloud infrastructure. SecOps and DevOps both become easier, paving the way for effective DevSecOps in the cloud.</p>\n\n\n\n<p>By centralizing security data collection and employing analytics in the cloud, you can more easily correlate vulnerabilities in your cloud environment. Security teams can detect patterns and links between security events, which is critical for understanding the full scope of an incoming threat and launching the appropriate response. This information can also be used to define security policies that are implemented throughout the entire cloud infrastructure, allowing routine security chores and compliance checks to be automated and efficient. Ultimately, the security testing process is sped up while adhering to stringent security regulations and reducing the possibility of human error.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Improved clarity and dynamic threat intelligence for more effective prioritization&nbsp;</h2>\n\n\n\n<p>Cloud-native security improves insight into your security posture by delivering a holistic, cross-dimensional view of risk. It gives a uniform and clear picture of the risks associated with the workloads you are running so that security teams can understand the scope more completely. Cloud-native web application security also covers open-source components, which are critical for modern applications that rely on third-party dependencies for much of their internal scaffolding. Finding potentially threatening components and misconfigurations within cloud infrastructure is crucial for reducing the risk of security emergencies, especially with infrastructure as code blurring the traditional lines between software and hardware.</p>\n\n\n\n<p>Cloud-native security technologies also excel at providing the visibility required for runtime workloads, monitoring dynamic apps as they execute actions in real time so that security teams can gain a comprehensive view of their environment. With this visibility, they can more effectively prioritize and remediate risks in various architectures, including virtual machines, serverless architectures, and container clusters. Using a cloud-native security framework ensures that vulnerabilities are recognized and mitigated in a timely manner, with threats prioritized based on severity and possible impact.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">Time and money savings for comprehensive DevSecOps&nbsp;</h2>\n\n\n\n<p>Playing a pivotal role in providing more complete web application coverage, cloud-native application security aligns with agile development practices for more rapid deployment. By enabling earlier detection and mitigation in the software development lifecycle, teams can deploy more secure code without breaking step. Applying DevSecOps processes to cloud-native application protection combines the power of accurate scanning tools with tried-and-true security approaches so that teams don’t have to spend unnecessary time on manual tasks.&nbsp;</p>\n\n\n\n<p>As the <a href=\"https://www.invicti.com/blog/web-security/biden-harris-national-cyber-workforce-strategy-for-cybersecurity-skills-gap/\">cyber workforce shortage still looms</a>, it’s more important than ever that security and development teams have tools they trust, processes they can rely on, and solutions that do not interfere with their day-to-day work. Because it simplifies monitoring and acting on potential threats, the integration of cloud security throughout CI/CD pipelines minimizes complexity and opens the door to a more seamless transition of DevOps into DevSecOps practices.</p>\n\n\n\n<p>Lower costs—the original driver of cloud adoption—are still a major part of the cloud-native equation, allowing software to be built, operated, and secured far more cheaply than with more traditional on-premises deployments. Less spending on maintenance and upgrades for physical hardware and security appliances can allow security teams to focus their budget on more versatile and better-quality solutions. Centralizing in the cloud also brings the bonus of unification and scalability for remote teams that need access to the same tools, systems, and data without sacrificing security.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Cloud native security tools help you work smarter, not harder</h2>\n\n\n\n<p>Effective security management takes time, whether it is leading a team of hardworking DevSecOps professionals or digging into a backlog of vulnerabilities and security issues. By making deliberate decisions about tooling and security strategies that reach deep into every corner of your application landscape—both in cloud and on-premises environments—you will gain strategic advantages such as increased efficiency, faster mitigation, and the adoption of critical best practices in the development process.&nbsp;</p>\n\n\n\n<p>As the distinctions between cloud security and application security blur, we’ll likely see more cloud-native security solutions and security platforms with features that extend coverage across the entire attack surface.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/cloud-native-security-devsecops-benefits/\">The DevSecOps benefits of cloud-native security</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Never mind the buzzwords: Here’s the straight deal on application security","link":"https://www.invicti.com/blog/web-security/never-mind-the-buzzwords-straight-deal-on-application-security/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Wed, 29 Nov 2023 16:06:35 +0000","category":{"#cdata-section":"Web Security"},"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=48658"},"description":{"#cdata-section":"<p>The shifting tides of security hype and buzzwords move with the seasons, yet the fundamental challenges remain the same. We sat down with seasoned CTOs Ken Schirrmacher of Park ‘N Fly and Frank Catucci of Invicti Security to discuss best practices for web application and API security, roughing up more than one security buzzword along the way.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/never-mind-the-buzzwords-straight-deal-on-application-security/\">Never mind the buzzwords: Here’s the straight deal on application security</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>Buzzwords are a fact of life in the tech industry, especially in its more nebulous corners like cybersecurity. As the name implies, they crop up whenever buzz builds around the Next Big Thing. After a while many get overused, bleached out, watered down, or stretched to breaking point until they morph into the next buzzword. Yet, while they last and are understood, they provide a crucial shorthand for talking about complex topics. Is it even possible to discuss application security without them?</p>\n\n\n\n<p>In a recent Invicti panel discussion, two seasoned CTOs hammered away at the buzzwords to expose the real core of application security: knowing and applying best practices. Ken Schirrmacher of Park ‘N Fly joined Invicti’s Frank Catucci to tackle the key security questions facing development leaders today, stopping along the way to deflate some AI hype. This post zooms in on their discussion of trends and best practices in securing web apps and APIs—away from all the buzzwords. Watch the full panel session for many more AppSec insights:</p>\n\n\n\n<figure class=\"wp-block-embed aligncenter is-provider-vimeo wp-block-embed-vimeo\"><div class=\"wp-block-embed__wrapper\">\n<iframe title=\"Panel Discussion with Park ‘N Fly\" src=\"https://player.vimeo.com/video/884301492?dnt=1&amp;app_id=122963\" width=\"500\" height=\"230\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\"></iframe>\n</div></figure>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-info\">\n<p>DISCLAIMER: No buzzwords were (permanently) harmed during the making of this article.</p>\n</blockquote>\n\n\n\n<h2 class=\"wp-block-heading\">Shifting away from shifting left: It’s all about testing early (when you can)</h2>\n\n\n\n<p>Shift left is probably the oldest buzzword in application security. Depending on the year, company, and product, shifting left could mean introducing security testing into development, testing earlier than before, or extending staging-level testing to kick off earlier. The phrase originated at a time when security testing lived only on the right of the software development process and timeline—if it was done at all. Today, when most development pipelines incorporate some form of security testing (most often <a href=\"https://www.invicti.com/learn/static-application-security-testing-sast/\">SAST</a>), shifting left is a more ambiguous concept: what are you shifting, how far are you shifting it, and is there even anything left to shift?</p>\n\n\n\n<p>The related concept of shifting right was coined in reaction to some organizations doing security testing in development (on the left) but not in staging or production (on the right). In practice, this boils down to doing security testing everywhere you can, as Ken Schirrmacher is quick to point out: “If you’re in IT, you already know the best points at which to implement security best practices in your development lifecycle,” he says.&nbsp;</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-primary\">\n<p>Some marketing person created the shift left and shift right terms, and it became a buzzword in the industry. But, realistically, you know when you should be scanning, it’s just not always what is done.</p>\n<cite>— Ken Schirrmacher, CTO and Senior Director of IT, Park ‘N Fly, Inc.</cite></blockquote>\n\n\n\n<p>At the same time, Schirrmacher has no doubt that there are real advantages to bringing in security as early as possible: “The prize for getting it right is you get better software quality overall, and you don’t risk having to back and redo everything because you only found a security issue at the very end.”</p>\n\n\n\n<p>Beyond improving security, following security best practices already during development (i.e. shifting left) can also have cost and compliance benefits. “It’s cheaper and easier to fix vulnerabilities before they make it to production than to back it all out and rerun it through the pipeline,” explains Frank Catucci.</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-primary\">\n<p>There are also things that you simply can’t test for earlier, like vulnerabilities caused by the deployment configuration or issues involving APIs, and that’s the shift right.</p>\n<cite>— Frank Catucci, CTO and Head of Security Research, Invicti Security</cite></blockquote>\n\n\n\n<p>When it comes to compliance, you often need to pick the most efficient route: “For the compliance itself, it doesn’t matter what you’re doing on the left,” says Catucci. “But if you can minimize the vulnerabilities that make it into production and also quickly fix any that are found, you’re saving a lot of time and money for yourself.”</p>\n\n\n\n<h2 class=\"wp-block-heading\">Cutting AI down to size: Come back when you have reliable results</h2>\n\n\n\n<p>When user-friendly generative AI rapidly inflated an unprecedented bubble of hype and expectations, AI immediately became a tier-one buzzword thrown around by anyone and everyone in the tech industry, cybersecurity included. At one point, it seemed like a race between tech vendors to cram an “AI” feature into their offering and announce it as soon as possible. In security, many “AI-powered” products sprung up overnight among startups and established players alike.</p>\n\n\n\n<p>Amidst the AI feeding frenzy, CTOs are urging caution, restraint, and informed decision-making when finding use cases for generative AI or building it into live products. This is especially true for software development and testing, as Ken Schirrmacher points out:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-primary\">\n<p>We talk about testing and standards that go through our entire process, but AI throws the biggest monkey wrench of all into all of this because you can ask it the exact same question five times and get five different answers. How do I develop a product that will perform well if I get different answers every time and I can’t methodically know how it will perform?</p>\n<cite>— Ken Schirrmacher, CTO and Senior Director of IT, Park ‘N Fly, Inc.</cite></blockquote>\n\n\n\n<p>When it comes to AI-powered security products, the stakes are even higher. “Don’t point me and my development team at something that doesn’t exist, doesn’t happen, or is incorrect in general,” says Schirrmacher, noting that, while promising, generative AI is still nowhere near mature enough to rely on in production.</p>\n\n\n\n<p>As the CTO and Head of Security Research for a <a href=\"https://www.invicti.com/product/\">DAST vendor</a>, Frank Catucci is even more skeptical of AI hype in cybersecurity, especially with the “AI-powered” label now also being misapplied to machine learning (ML). “We as Invicti don’t want to jump on the AI bandwagon to sell anything,” he explains.</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-primary\">\n<p>Internally, we’re looking at ways to use AI for improved risk profiling and scoring to give users a more focused and less noisy view of security priorities for their finite resources. But we don’t want to say anything like ‘hey buy this, it has AI,’ though a lot of companies are doing that.</p>\n<cite>— Frank Catucci, CTO and Head of Security Research, Invicti Security</cite></blockquote>\n\n\n\n<p>In practice, extracting reliable information from large data sets is far better served by established and mature ML methods than fashionable LLM-based tools, so this AI/ML approach is where Invicti focuses its work on risk profiling.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Dividing by zero (noise): Agile teams don’t have time for security busywork</h2>\n\n\n\n<p>Automating application security testing is always a balancing act to find as much as you can without raising false alarms. Every vendor has always claimed to have fewer false positives than the competition until this too became something of a buzzword. Instead of misleading and technically incorrect claims of zero false positives anywhere, Invicti uses the term “zero noise” to describe its approach, which is based on <a href=\"https://www.invicti.com/blog/web-security/proof-based-scanning-game-changer-reasons/\">proof-based scanning</a> to show which vulnerabilities are exploitable and thus definitely real. That’s a big deal for automating security testing because, in Catucci’s words, “Automation is crucial, but so is accuracy to ensure we’re not wasting people’s time.”</p>\n\n\n\n<p>Nobody is in any doubt that automated security testing is now a necessity, if only to keep up with the changing threat landscape. “The level of knowledge that would be required to intelligently talk about every vulnerability that exists out there—I don’t have any full-time resources that have that level of knowledge. And I don’t think there’s any one person that does,” says Schirrmacher. Provided they are regularly updated, high-quality tools can encapsulate the current state of the art in application security testing and take the burden of manual investigation off internal security resources and development teams.</p>\n\n\n\n<p>Far from being a hollow buzzword, ensuring zero noise from security tools is a prerequisite for using them in productive development. “It’s not just about having finite security resources,” Catucci explains.&nbsp;</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-primary\">\n<p>Developers also have finite hours to build software and complete tasks and deliver the code that they’re getting paid to deliver. Their core job is to develop software that functions, meets requirements, and works for the customer.</p>\n<cite>— Frank Catucci, CTO and Head of Security Research, Invicti Security</cite></blockquote>\n\n\n\n<p>Taking the example of Invicti as a security tool <a href=\"https://www.invicti.com/case-studies/park-n-fly-case-study/\">integrated into the CI/CD pipeline at Park ‘N Fly</a>, Schirrmacher agrees that getting accurate and actionable vulnerability information to developers is a major time-saver: “The developer doesn’t have to sit there and google to try to figure out how to resolve this vulnerability—it’s already there in the reports.”</p>\n\n\n\n<h2 class=\"wp-block-heading\">Easier said than done: Get the basics right</h2>\n\n\n\n<p>Buzzwords may make it easier to discuss new trends and technologies but, when overused and misapplied, they can obscure the bigger picture. Though challenging to implement, securing your web applications and APIs ultimately boils down to always keeping the fundamentals in mind. “If I want to enhance the security posture of my apps and APIs, it’s all about understanding where they are, how they’re being developed, what needs to be there to protect them, and having all those steps done in an automated, continuous process,” concludes Catucci.</p>\n\n\n\n<p>“When you’re in the IT industry, you hear these buzzwords created by marketing people, but it’s really just following best practices, and that’s what the security mindset is about,” agrees Schirrmacher. And his advice on making those best practices a reality? “Know who the leaders in the field are and make sure they’re on your team to build your security-first posture,” he says. “For a department that’s rushing aggressively to a lot of technology goals, we can’t be doubling back and second-guessing ourselves. With Invicti, I get tangible results, and I count on the results that I get, and I drive forward with my developers and continue to focus more on innovation and less on tracking down wayward security issues.”</p>\n\n\n\n<p>At the end of the day, application security is all about building better applications, no matter what comes up on this month’s buzzword bingo.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/never-mind-the-buzzwords-straight-deal-on-application-security/\">Never mind the buzzwords: Here’s the straight deal on application security</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Invicti on Microsoft Azure Marketplace: Easier access to the best in DAST","link":"https://www.invicti.com/blog/news/invicti-on-microsoft-azure-marketplace-easier-access-to-best-in-dast/","dc:creator":{"#cdata-section":"Kate Bachman"},"pubDate":"Tue, 28 Nov 2023 14:00:00 +0000","category":[{"#cdata-section":"News"},{"#cdata-section":"azure"},{"#cdata-section":"azure-marketplace"},{"#cdata-section":"dast"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=48641"},"description":{"#cdata-section":"<p>Azure users can now get Invicti’s application security testing solutions directly from the Microsoft Azure Marketplace to optimize their cloud spending. With its out-of-the-box CI/CD integration with Azure Pipelines, Invicti is also a perfect fit for Azure-based development.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/news/invicti-on-microsoft-azure-marketplace-easier-access-to-best-in-dast/\">Invicti on Microsoft Azure Marketplace: Easier access to the best in DAST</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>With its dynamic application security testing (DAST) products now available on the Microsoft Azure Marketplace, Invicti is adding yet another way for customers to acquire industry-leading application security testing solutions for their operational and development needs. The addition allows Azure users to optimize their cloud spend while also getting easy access to application security testing that integrates out-of-the-box with Azure Pipelines CI/CD workflows.</p>\n\n\n\n<p><a href=\"https://azuremarketplace.microsoft.com/en-us/marketplace/apps/invictisecurity1685101689905.invicti_security_invicti_and_acunetix\">See the Invicti listing on Microsoft Azure Marketplace</a></p>\n\n\n\n<h2 class=\"wp-block-heading\">The shortest route to continuous DAST in Azure</h2>\n\n\n\n<p>Dynamic application security testing (DAST) is the easiest and most versatile approach to testing web application security. Because DAST products are technology-agnostic and can test any web application that runs in a modern browser regardless of the underlying technology stack, they are quick to set up and can start reporting your first issues within hours, if not minutes. By offering its DAST-first solutions on the Azure Marketplace, Invicti is bringing the same speed and convenience to the purchasing process.</p>\n\n\n\n<p>Any Azure customer can now purchase Invicti as part of their existing Azure cloud agreement, which greatly simplifies the procurement process and can also count toward their contracted annual spend. The option to purchase through the Azure Marketplace gives customers the added convenience of consolidated billing as well as access to flexible funding sources to support their cloud migration, deployment, and security efforts.</p>\n\n\n\n<p>“This opportunity opens doors for customers that need to acquire and integrate their DAST solution quickly and efficiently, but who also have a spending commitment to Microsoft that they need to fulfill,” said Alvaro Warden, Invicti’s Worldwide Director, Global Channels &amp; Partnerships. “With less complexity and simplified procurement in Microsoft’s ecosystem, customers can begin scanning quickly using Invicti’s automated, accurate, and continuous solutions. That means a faster return on investment and a more secure digital landscape.”</p>\n\n\n\n<h2 class=\"wp-block-heading\">Enterprise-grade AppSec for your organization—and your Azure Pipelines</h2>\n\n\n\n<p>Taking Invicti’s DAST-first approach to integrated application security allows customers to use the same mature solution for their operational vulnerability scanning and for DAST in the development pipeline. Accurate and safe vulnerability scanning across entire application environments makes it possible to run scheduled, fully automatic tests as often as needed to identify any exploitable issues in production in a continuous process. Uniquely, the Invicti platform can also be used for dynamic security testing at multiple points across the software development lifecycle (SDLC), using out-of-the-box integrations with popular CI/CD platforms and issue trackers to deliver vulnerability reports directly into existing development workflows.</p>\n\n\n\n<p>If you’re building applications in Azure cloud environments, there’s a good chance you’re using Azure Pipelines as your CI/CD tool. Invicti comes with built-in Azure Pipelines integration, making it a natural fit for Azure-based workflows. The ability to get Invicti solutions from the Azure Marketplace removes yet another obstacle on the journey toward making integrated and efficient application security testing a reality.</p>\n\n\n\n<p>Yet even with integration and automation in place, the key to moving the needle on web application security is getting actionable issues to the right people, complete with everything needed for an effective fix. As a DAST tool, Invicti examines running applications from the outside and probes them for weaknesses that malicious actors could exploit. Unlike most other DAST solutions, Invicti uses proprietary automated verification to safely exploit major vulnerabilities and deliver proof that they are real issues and not false positives. This allows teams to prioritize efficiently and focus their limited resources where they make the biggest difference.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Streamlined cloud security spending for Azure users</h2>\n\n\n\n<p>Getting Invicti products from the Azure Marketplace can bring additional benefits for organizations looking to streamline their overall cloud spending, especially around security. Because purchases can count toward the contracted annual Azure spend, eligible Azure customers may be able to incorporate them into their Microsoft Azure Consumption Commitment (MACC). This allows them to save on industry-leading application security testing with accelerated procurement and consolidated billing via Azure—and get a solution that does double duty in their information security and application security workflows.</p>\n\n\n\n<p><a href=\"https://azuremarketplace.microsoft.com/en-us/marketplace/apps/invictisecurity1685101689905.invicti_security_invicti_and_acunetix\">See Invicti solutions available through Microsoft Azure Marketplace</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/news/invicti-on-microsoft-azure-marketplace-easier-access-to-best-in-dast/\">Invicti on Microsoft Azure Marketplace: Easier access to the best in DAST</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Looking for the best in DAST: How to select DAST tools for DevSecOps","link":"https://www.invicti.com/blog/web-security/best-in-dast-how-to-select-dast-tools-for-devsecops/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Fri, 10 Nov 2023 14:11:59 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"dast"},{"#cdata-section":"dast-tools"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=48485"},"description":{"#cdata-section":"<p>DAST is a natural match for DevOps workflows, but picking the right tool for your teams and your organization can get confusing. Will any vulnerability scanner work? Does it replace your SAST? Will it drown your developers in false positives? Here’s a quick guide to evaluating DAST products when building a DevSecOps process.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/best-in-dast-how-to-select-dast-tools-for-devsecops/\">Looking for the best in DAST: How to select DAST tools for DevSecOps</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>Web application security testing tools come in a variety of flavors depending on what you’re testing and how, but for a holistic look at the security status of your running apps, <a href=\"https://www.invicti.com/learn/dynamic-application-security-testing-dast/\">dynamic application security testing (DAST)</a> is the way to go. Designed to test websites and applications by mimicking real attacks and locating runtime security flaws from the outside, DAST provides an invaluable look at how malicious actors might try to find a way in.</p>\n\n\n\n<p>Vulnerability scanning is vital to securing your production environments, so selecting the right DAST tool for the job is a serious undertaking. But DAST can also be used for security scanning in the development process – so do you need separate DAST tools for vulnerability management in production and for building secure software? Knowing what to look for in a DAST solution can make the difference between having one or many subpar tools that only tick boxes and getting an industrial-grade product that helps you take control of all your AppSec.</p>\n\n\n\n<h2 class=\"wp-block-heading\">What are dynamic application security testing tools?</h2>\n\n\n\n<p>DAST tools (also called vulnerability scanners) perform security tests on a running application. They automate many of the steps of manual penetration testing and – if they’re accurate and reliable enough – can provide a security baseline in between manual tests. With a good DAST tool, security teams don’t have to wait for external test results or spend days manually investigating and confirming scan results. As part of a broader cybersecurity program, DAST tools complement other testing methods to maximize visibility into your security posture.&nbsp;</p>\n\n\n\n<p>Apart from identifying security vulnerabilities, a good DAST scanner will also report the location of each issue and technical details of how the application responded to its test payload. This additional information is crucial to speed up prioritization and remediation. Some DAST tools also integrate into the software development lifecycle (SDLC), making them dual-purpose: for scanning in production and for early testing during development.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">DAST strengths to ask about that make a difference in DevSecOps</h2>\n\n\n\n<p>Out of all the benefits that DAST brings, several capabilities are crucial for vendor and product selection, especially when looking for DevSecOps tools that will work in your CI/CD pipeline. If your vendor of choice falls short in these areas or fails to deliver clear information when pressed, it’s a warning sign that their DAST tool might not help you accomplish your application security goals. Here’s a quick overview of DAST essentials – and if you want to dive deeper, our free <a href=\"https://www.invicti.com/clp/resources/buyers-guide/\">web application security buyer’s guide</a> is a good place to go next.</p>\n\n\n\n<h3 class=\"wp-block-heading\">SDLC integration</h3>\n\n\n\n<p>Any security tool that’s supposed to work in a DevOps setting to build DevSecOps has to integrate with automated workflows. This is especially important for DAST as the one type of security testing you can use at several points in the development and operations process.</p>\n\n\n\n<p>From issue trackers to continuous integration and deployment tools and web application firewalls (WAFs), a DAST solution for DevSecOps needs to integrate and interact with multiple systems for both manual and automated use. To cut down on manual integration work and deployment times, look for solutions with built-in workflow integrations with software you already use in your SDLC. And because customized or completely bespoke systems are a fact of life, also ask your DAST vendor about an internal API, no matter what integrations come in the box.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Automated efficiency</h3>\n\n\n\n<p>DAST tools take a real-world threat approach to security by safely performing simulated attacks on running applications. Doing this allows a scanner to test the app from the point of view of a malicious hacker, looking for entry points and vulnerabilities that might have gone unnoticed during code reviews – or weren’t even there until deployment.</p>\n\n\n\n<p>An efficient tool can scan and rescan any subset of assets as often as you need, whether launching automatically in a workflow, running on schedule, or doing a one-off test. Because DAST scanners can <a href=\"https://www.invicti.com/blog/web-security/what-automation-means-in-application-scanning-tools/\">automate testing</a> and deliver feedback quickly, they can cut down on the time teams need to spend manually gathering and checking security results.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Accuracy and depth&nbsp;</h3>\n\n\n\n<p>Modern web applications are often very complex and dynamic. A winning DAST tool needs to do more than scratch the surface by looking for patterns in server responses – it has to include a full web browser engine to interact with the application and access and test every last parameter. Always look for a DAST tool that comes with comprehensive scanning and crawling capabilities, including support for authenticated scanning, so you don’t risk missing any security gaps.</p>\n\n\n\n<p>Some DAST scanners not only identify vulnerabilities but also provide additional features for a more accurate view of your risk landscape. Depending on the product, these can include web asset discovery, web technology stack detection, dynamic software composition analysis (SCA) to identify vulnerable open-source dependencies, and even <a href=\"https://www.invicti.com/white-papers/changing-the-dast-game-with-invicti-iast-white-paper/\">interactive application security testing (IAST) functionality</a>.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Technology-agnostic testing</h3>\n\n\n\n<p>One of the main strengths of DAST scanners is that you can (in principle) use them to test any website or application, regardless of the technology stack and programming languages used under the hood. This is because DAST tools don’t need source code access to scan an application – if it has a web interface, a good scanner should be able to test it.</p>\n\n\n\n<p>Some older vulnerability scanners were designed for mostly static pages and had very limited support for JavaScript. Any serious modern tool needs to run, crawl, and fully test scripting-heavy apps, including single-page applications (SPAs), so make sure you specifically ask about this.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Taking control of false positives</h3>\n\n\n\n<p>Probing an app with automated mock attacks runs the risk of getting noisy, so the most effective DAST tools are explicitly designed to weed out false positives – those pesky false alarms that DevSecOps teams and developers have to evaluate manually.</p>\n\n\n\n<p>Even though DAST scanners tend to have lower false positive rates than tools for <a href=\"https://www.invicti.com/learn/static-application-security-testing-sast/\">static application security testing (SAST)</a>, they still have to find ways to maximize the testing scope without overreporting. When evaluating DAST solutions, keep an eye out for automated verification technologies like <a href=\"https://www.invicti.com/features/proof-based-scanning/\">proof-based scanning</a> that can immediately show which results are directly exploitable, giving your team more confidence in the scan results.&nbsp;</p>\n\n\n\n<h3 class=\"wp-block-heading\">Streamlined security compliance</h3>\n\n\n\n<p>Meeting regulatory requirements related to security risks can become difficult for organizations that don’t have accurate, reliable tools. That’s especially true in industries like healthcare and the public sector, where compliance with specific regulations needs to be controlled on a daily basis, not only when the audit rolls around.</p>\n\n\n\n<p>With a high-quality DAST tool that includes compliance reporting for accepted standards like HIPAA or <a href=\"https://www.invicti.com/blog/web-security/pci-dss-v4-update/\">PCI DSS</a>, preparing for and maintaining compliance with application security requirements becomes far easier and more cost-efficient.&nbsp;</p>\n\n\n\n<h3 class=\"wp-block-heading\">API security testing</h3>\n\n\n\n<p>Modern web applications rely on APIs for everything from accessing and exchanging data to internal communication between app components. With an estimated <a href=\"https://securityboulevard.com/2023/03/api-attacks-rise-400-in-last-six-months/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">400% rise in API attacks</a> from the end of 2022 to the beginning of 2023, it is vital to make API security an integral part of the broader cybersecurity program.</p>\n\n\n\n<p>Many API security efforts focus on gateways and other ways to restrict access, with API vulnerability testing being limited to manual tests. A quality DAST scanner should be able to cover APIs as well as GUI apps, supporting the most common API types (especially REST), API specification file formats, and authentication methods to help you scan your APIs for vulnerabilities in the same way as your websites and applications.</p>\n\n\n\n<h2 class=\"wp-block-heading\">A recipe for success: What are the best DAST tools for DevSecOps?</h2>\n\n\n\n<p>Finding and selecting the best DAST tool for your needs is a process that requires thoughtful consideration not only of your security and IT needs but also of your business goals and development and security workflows. Security is a process, not a one-off purchase. Any vendor worth their salt should go far beyond trying to sell you a product and aim to become a trusted partner and advisor in your application security journey.</p>\n\n\n\n<p>At Invicti, expert <a href=\"https://www.invicti.com/blog/web-security/dast-tool-setup-support/\">setup and support</a> resources help ensure you’re getting the most out of your investment in DAST. That way, you can embed automated security best practices into development and let your teams focus on what matters most: building innovative applications for your employees and customers.</p>\n\n\n\n<p>Want to see Invicti’s best-in-DAST solution in action? <a href=\"https://www.invicti.com/get-demo/\">Book a demo</a></p>\n\n\n\n<h2 class=\"wp-block-heading\">Frequently asked questions</h2>\n\n\n<div class=\"invicti-block accordion style-one\" id=\"accordion_65b5e5bb8e663\">\n      <div class=\"accordion-section\">\n      <h4 class=\"accordion-heading\">Can you use DAST in DevSecOps?</h4>\n      <div class=\"accordion-text-holder\">\n        <div class=\"accordion-text\"><p>You can and you should use DAST in DevSecOps, since automated dynamic testing is a perfect match for DevOps workflows. It is the only approach to automated application security testing that doesn’t require source code access and can be used both during development and in production. However, not all DAST tools can easily integrate into DevOps processes, and not all can provide the accuracy required to prevent clogging your development teams’ issue trackers with false positives or non-actionable results.<br />\n&nbsp;<br />\n<a href=\"https://www.invicti.com/white-papers/security-at-the-speed-of-software-dast-in-the-sdlc/\">Learn more about using DAST in the SDLC</a></p>\n</div>\n      </div>\n    </div>\n      <div class=\"accordion-section\">\n      <h4 class=\"accordion-heading\">Is DAST or SAST better for DevSecOps?</h4>\n      <div class=\"accordion-text-holder\">\n        <div class=\"accordion-text\"><p>DevSecOps should incorporate security testing into the entire development and operations cycle. While they are useful to flag security issues as early as possible, static analysis (SAST) tools work on the source code, so they can only be used during development and only when the source code is available. DAST tools can be used at multiple points of the DevOps pipeline and test any runnable web application, from early builds to final production deployments – regardless of whether you have the source code.<br />\n&nbsp;<br />\n<a href=\"https://www.invicti.com/blog/web-security/sast-vs-dast-vs-iast-everything-you-always-wanted-to-know/\">Learn more about DAST vs. SAST vs. IAST</a></p>\n</div>\n      </div>\n    </div>\n      <div class=\"accordion-section\">\n      <h4 class=\"accordion-heading\">What’s the difference between doing DevOps plus security and doing DevSecOps?</h4>\n      <div class=\"accordion-text-holder\">\n        <div class=\"accordion-text\"><p>An agile DevOps process relies on maximum automation for rapid development and frequent deployment in short release cycles. If security testing and remediation are not automated to the same level, security will hold development back, leading to delays and internal tensions. The DevSecOps approach aims to make security testing a routine and efficient part of the DevOps pipeline by integrating tools such as accurate and automated DAST.<br />\n&nbsp;<br />\n<a href=\"https://www.invicti.com/blog/web-security/agile-development-waterfall-appsec/\">Learn more about the shortcomings of traditional security testing in agile development</a></p>\n</div>\n      </div>\n    </div>\n  </div>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/best-in-dast-how-to-select-dast-tools-for-devsecops/\">Looking for the best in DAST: How to select DAST tools for DevSecOps</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"SolarWinds, the SEC, and the CISO: Who is legally responsible for security?","link":"https://www.invicti.com/blog/web-security/solarwinds-sec-ciso-who-is-legally-responsible-for-security/","dc:creator":{"#cdata-section":"Meaghan McBee"},"pubDate":"Thu, 02 Nov 2023 18:02:56 +0000","category":{"#cdata-section":"Web Security"},"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=48208"},"description":{"#cdata-section":"<p>Lessons learned from the 2020 SolarWinds hack have had lasting effects on the industry’s approach to supply chain security. Yet even as best practices and regulations for preventing and mitigating critical supply chain issues are being introduced, a complaint filed by the SEC against SolarWinds and its CISO Timothy Brown has added a new chapter to the saga and reignited a crucial debate: who takes the fall when things go wrong?</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/solarwinds-sec-ciso-who-is-legally-responsible-for-security/\">SolarWinds, the SEC, and the CISO: Who is legally responsible for security?</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<blockquote class=\"wp-block-quote is-style-default\">\n<p><strong>What you need to know</strong></p>\n\n\n\n<p>&nbsp;</p>\n\n\n\n<ul>\n<li>The Securities and Exchange Commission is accusing SolarWinds and its CISO of misrepresenting the company’s security situation before and after the 2020 SolarWinds Orion hack.</li>\n\n\n\n<li>The SEC’s action could set a precedent for holding security officers personally liable for security incidents and their consequences.</li>\n\n\n\n<li>The case has sparked a lively debate over who truly owns cybersecurity in organizations, who can be held responsible for breaches, and whether CISOs should have the same legal protections as other top executives.</li>\n</ul>\n</blockquote>\n\n\n\n<p>According to a <a href=\"https://www.sec.gov/files/litigation/complaints/2023/comp-pr2023-227.pdf\">new complaint</a> filed by the Securities and Exchange Commission (SEC), blame for the <a href=\"https://www.invicti.com/blog/web-security/solarwinds-hack-cybersecurity-lessons/\">2020 SolarWinds incident</a>, which exposed many government agencies and Fortune 500 organizations to state-sponsored infiltration, rests on the shoulders not only of the company itself but also its Chief Information Security Officer (CISO), Timothy Brown. The SEC’s lawsuit alleges that SolarWinds and Brown failed to disclose critical weaknesses that led to the breach of its network monitoring software Orion, ultimately leading to an estimated 18,000 SolarWinds customers unwittingly installing compromised software. </p>\n\n\n\n<p>In the civil complaint, the SEC alleges that SolarWinds misled investors when it disclosed hypothetical risks and inaccurate data about how many Orion customers were impacted. Alongside the organization itself, it specifically calls out Brown for his alleged role in fraud and control failures. The complaint states that all of this occurred “at a time when the company and Brown knew of specific deficiencies in SolarWinds’ cybersecurity practices as well as the increasingly elevated risks the company faced at the same time.”&nbsp;</p>\n\n\n\n<p>In a <a href=\"https://www.sec.gov/news/press-release/2023-227\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">statement</a> from the SEC, these allegations suggest that Brown acted negligently when he failed to resolve security issues or raise them to the right teams within the organization. In a <a href=\"https://www.techtarget.com/searchsecurity/news/366557697/SEC-charges-SolarWinds-for-security-failures-fraud\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">response shared with the media</a>, SolarWinds not-so-subtly accused the SEC of overreaching in a way that should “&#8230;alarm all public companies and committed cybersecurity professionals across the country.” </p>\n\n\n\n<p>With this news ricocheting through the industry, some are questioning whether or not the SEC is overstepping boundaries by painting a target on Brown’s back. While fellow security leaders <a href=\"https://www.securityweek.com/cisos-spooked-by-sec-lawsuit-against-solarwinds-ciso/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">brace for impact</a> to all CISO roles in the US, <a href=\"https://twitter.com/EricaZelic/status/1719391793387606167\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">some voices</a> suggest that holding CISOs accountable for security failures could be a way to finally highlight the importance of security. </p>\n\n\n\n<h2 class=\"wp-block-heading\">Is pointing the finger at a security scapegoat risky?</h2>\n\n\n\n<p>The debate over regulatory overreach is prompting concerns that placing responsibility on one person might cast a negative light on critical security roles and make them less appealing to professionals. Should the ruling be in the SEC’s favor, it could set the precedent of security leaders taking the legal fall in the aftermath of a major system compromise or data breach. It will undoubtedly fuel deeper discussions about how we get leadership – <a href=\"https://www.invicti.com/blog/web-security/invicti-insights-getting-the-board-on-board-with-cybersecurity/\">including the board</a> – aligned about cybersecurity to prioritize best practices and make meaningful security investments. And at a time when there’s an overwhelming <a href=\"https://www.invicti.com/blog/web-security/key-trends-seriousness-cybersecurity-skills-gap/\">skill shortage in cybersecurity</a>, scaring away potential talent by deprioritizing security or forcing one person to own security entirely is not a recipe for success.&nbsp;</p>\n\n\n\n<p>“Security ownership cannot sit on the shoulders of one role or person,” explains Frank Catucci, Invicti’s Chief Technology Officer and Head of Security Research. “That is especially true if they do not have the authority or power to make the necessary decisions and take action to protect company assets. Where does responsibility factor in for the board of directors and the CEO if they have the ultimate decision about security or the final power of action? Scapegoats may provide a convenient distraction to camouflage and divert responsibility, but the underlying problem remains. Liability for security is holistic and needs to be formally and legally accepted as such.”</p>\n\n\n\n<p>Before placing the onus squarely on a CISO as a scapegoat for security failings, organizations need to step back and look at the bigger picture of their processes, best practices, and chain of command. Various roadblocks and silos disrupt security professionals’ workflows every day and can easily contribute to unfortunate scenarios where security fails or is overlooked. For example, if development unilaterally decides to move to an agile process with frequent code changes and deployments, security won’t be able to keep up without an accompanying cultural and organizational shift.</p>\n\n\n\n<p>Coupled with these challenges is the fact that developers constantly feel the pressure to innovate fast, even as cybersecurity programs often fall victim to budget cuts as a nice-to-have for more comfortable times. In this light, it shouldn’t come as a shock that critical security steps can be skipped and guidance from leadership sidestepped in the name of business agility. It’s a symptom of a broader issue, and one that requires some serious discussions around responsibility.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Embracing security at every level is the only way to protect an organization</h2>\n\n\n\n<p>Even as the SolarWinds legal story unfolds, organizations need to reevaluate their entire approach to cybersecurity and look at the problem holistically – including the steps taken to protect employees and the organization itself when things go awry. For example, the current allegations of fraud and internal failures are raising questions and concerns over the liability of software vendors for breaches, and the dire need for insurance to help cover legal bases. Soon, companies may find themselves redefining the role of the CISO altogether, redrawing lines in the sand over who ultimately bears responsibility for security failures.&nbsp;</p>\n\n\n\n<p>If CISOs are to be legally responsible for the security of their entire company, it’s imperative to guarantee they have the influence and power required to embed and enforce security as a ubiquitous part of organization culture. When they get the means to foster security-minded practices that start with the leadership and extend down to every single employee, CISOs will be able to implement more effective security strategies without fear of being sidelined or overruled by business pressures. At the same time, having a clear regulatory environment is a must not only for long-term strategy planning but also for defining the future of the CISO role.</p>\n\n\n\n<p>While it’s far too early to say what may have led to Brown and SolarWinds failing to disclose critical information before and after the breach (or even if the SEC’s charges are valid), the whole story is a sobering reminder that there are a multitude of factors that can negatively impact security and contribute to an incident – including failures at the leadership level. Having this awareness is a starting point for work to strike a balance between innovation in development and integrity in security.</p>\n\n\n\n<p>In the security industry, we often repeat that security is everyone’s responsibility. The SEC’s current action will, quite literally, put that statement to the test.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/solarwinds-sec-ciso-who-is-legally-responsible-for-security/\">SolarWinds, the SEC, and the CISO: Who is legally responsible for security?</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}}]}}}