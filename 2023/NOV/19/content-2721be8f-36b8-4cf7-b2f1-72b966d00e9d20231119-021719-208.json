{"?xml":{"@version":"1.0","@encoding":"UTF-8"},"rss":{"@version":"2.0","@xmlns:content":"http://purl.org/rss/1.0/modules/content/","@xmlns:wfw":"http://wellformedweb.org/CommentAPI/","@xmlns:dc":"http://purl.org/dc/elements/1.1/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:sy":"http://purl.org/rss/1.0/modules/syndication/","@xmlns:slash":"http://purl.org/rss/1.0/modules/slash/","channel":{"title":"Invicti","atom:link":{"@href":"https://www.invicti.com/blog/feed/","@rel":"self","@type":"application/rss+xml"},"link":"https://www.invicti.com/","description":"Web Application Security For Enterprise","lastBuildDate":"Fri, 10 Nov 2023 14:12:02 +0000","language":"en-US","sy:updatePeriod":"\n\thourly\t","sy:updateFrequency":"\n\t1\t","image":{"url":"https://cdn.invicti.com/app/uploads/2022/03/08125959/cropped-favicon-32x32.png","title":"Invicti","link":"https://www.invicti.com/","width":"32","height":"32"},"item":[{"title":"Looking for the best in DAST: How to select DAST tools for DevSecOps","link":"https://www.invicti.com/blog/web-security/best-in-dast-how-to-select-dast-tools-for-devsecops/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Fri, 10 Nov 2023 14:11:59 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"dast-tools"},{"#cdata-section":"dast"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=48485"},"description":{"#cdata-section":"<p>DAST is a natural match for DevOps workflows, but picking the right tool for your teams and your organization can get confusing. Will any vulnerability scanner work? Does it replace your SAST? Will it drown your developers in false positives? Here’s a quick guide to evaluating DAST products when building a DevSecOps process.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/best-in-dast-how-to-select-dast-tools-for-devsecops/\">Looking for the best in DAST: How to select DAST tools for DevSecOps</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>Web application security testing tools come in a variety of flavors depending on what you’re testing and how, but for a holistic look at the security status of your running apps, <a href=\"https://www.invicti.com/learn/dynamic-application-security-testing-dast/\">dynamic application security testing (DAST)</a> is the way to go. Designed to test websites and applications by mimicking real attacks and locating runtime security flaws from the outside, DAST provides an invaluable look at how malicious actors might try to find a way in.</p>\n\n\n\n<p>Vulnerability scanning is vital to securing your production environments, so selecting the right DAST tool for the job is a serious undertaking. But DAST can also be used for security scanning in the development process – so do you need separate DAST tools for vulnerability management in production and for building secure software? Knowing what to look for in a DAST solution can make the difference between having one or many subpar tools that only tick boxes and getting an industrial-grade product that helps you take control of all your AppSec.</p>\n\n\n\n<h2 class=\"wp-block-heading\">What are dynamic application security testing tools?</h2>\n\n\n\n<p>DAST tools (also called vulnerability scanners) perform security tests on a running application. They automate many of the steps of manual penetration testing and – if they’re accurate and reliable enough – can provide a security baseline in between manual tests. With a good DAST tool, security teams don’t have to wait for external test results or spend days manually investigating and confirming scan results. As part of a broader cybersecurity program, DAST tools complement other testing methods to maximize visibility into your security posture.&nbsp;</p>\n\n\n\n<p>Apart from identifying security vulnerabilities, a good DAST scanner will also report the location of each issue and technical details of how the application responded to its test payload. This additional information is crucial to speed up prioritization and remediation. Some DAST tools also integrate into the software development lifecycle (SDLC), making them dual-purpose: for scanning in production and for early testing during development.&nbsp;</p>\n\n\n\n<h2 class=\"wp-block-heading\">DAST strengths to ask about that make a difference in DevSecOps</h2>\n\n\n\n<p>Out of all the benefits that DAST brings, several capabilities are crucial for vendor and product selection, especially when looking for DevSecOps tools that will work in your CI/CD pipeline. If your vendor of choice falls short in these areas or fails to deliver clear information when pressed, it’s a warning sign that their DAST tool might not help you accomplish your application security goals. Here’s a quick overview of DAST essentials – and if you want to dive deeper, our free <a href=\"https://www.invicti.com/clp/resources/buyers-guide/\">web application security buyer’s guide</a> is a good place to go next.</p>\n\n\n\n<h3 class=\"wp-block-heading\">SDLC integration</h3>\n\n\n\n<p>Any security tool that’s supposed to work in a DevOps setting to build DevSecOps has to integrate with automated workflows. This is especially important for DAST as the one type of security testing you can use at several points in the development and operations process.</p>\n\n\n\n<p>From issue trackers to continuous integration and deployment tools and web application firewalls (WAFs), a DAST solution for DevSecOps needs to integrate and interact with multiple systems for both manual and automated use. To cut down on manual integration work and deployment times, look for solutions with built-in workflow integrations with software you already use in your SDLC. And because customized or completely bespoke systems are a fact of life, also ask your DAST vendor about an internal API, no matter what integrations come in the box.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Automated efficiency</h3>\n\n\n\n<p>DAST tools take a real-world threat approach to security by safely performing simulated attacks on running applications. Doing this allows a scanner to test the app from the point of view of a malicious hacker, looking for entry points and vulnerabilities that might have gone unnoticed during code reviews – or weren’t even there until deployment.</p>\n\n\n\n<p>An efficient tool can scan and rescan any subset of assets as often as you need, whether launching automatically in a workflow, running on schedule, or doing a one-off test. Because DAST scanners can <a href=\"https://www.invicti.com/blog/web-security/what-automation-means-in-application-scanning-tools/\">automate testing</a> and deliver feedback quickly, they can cut down on the time teams need to spend manually gathering and checking security results.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Accuracy and depth&nbsp;</h3>\n\n\n\n<p>Modern web applications are often very complex and dynamic. A winning DAST tool needs to do more than scratch the surface by looking for patterns in server responses – it has to include a full web browser engine to interact with the application and access and test every last parameter. Always look for a DAST tool that comes with comprehensive scanning and crawling capabilities, including support for authenticated scanning, so you don’t risk missing any security gaps.</p>\n\n\n\n<p>Some DAST scanners not only identify vulnerabilities but also provide additional features for a more accurate view of your risk landscape. Depending on the product, these can include web asset discovery, web technology stack detection, dynamic software composition analysis (SCA) to identify vulnerable open-source dependencies, and even <a href=\"https://www.invicti.com/white-papers/changing-the-dast-game-with-invicti-iast-white-paper/\">interactive application security testing (IAST) functionality</a>.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Technology-agnostic testing</h3>\n\n\n\n<p>One of the main strengths of DAST scanners is that you can (in principle) use them to test any website or application, regardless of the technology stack and programming languages used under the hood. This is because DAST tools don’t need source code access to scan an application – if it has a web interface, a good scanner should be able to test it.</p>\n\n\n\n<p>Some older vulnerability scanners were designed for mostly static pages and had very limited support for JavaScript. Any serious modern tool needs to run, crawl, and fully test scripting-heavy apps, including single-page applications (SPAs), so make sure you specifically ask about this.</p>\n\n\n\n<h3 class=\"wp-block-heading\">Taking control of false positives</h3>\n\n\n\n<p>Probing an app with automated mock attacks runs the risk of getting noisy, so the most effective DAST tools are explicitly designed to weed out false positives – those pesky false alarms that DevSecOps teams and developers have to evaluate manually.</p>\n\n\n\n<p>Even though DAST scanners tend to have lower false positive rates than tools for <a href=\"https://www.invicti.com/learn/static-application-security-testing-sast/\">static application security testing (SAST)</a>, they still have to find ways to maximize the testing scope without overreporting. When evaluating DAST solutions, keep an eye out for automated verification technologies like <a href=\"https://www.invicti.com/features/proof-based-scanning/\">proof-based scanning</a> that can immediately show which results are directly exploitable, giving your team more confidence in the scan results.&nbsp;</p>\n\n\n\n<h3 class=\"wp-block-heading\">Streamlined security compliance</h3>\n\n\n\n<p>Meeting regulatory requirements related to security risks can become difficult for organizations that don’t have accurate, reliable tools. That’s especially true in industries like healthcare and the public sector, where compliance with specific regulations needs to be controlled on a daily basis, not only when the audit rolls around.</p>\n\n\n\n<p>With a high-quality DAST tool that includes compliance reporting for accepted standards like HIPAA or <a href=\"https://www.invicti.com/blog/web-security/pci-dss-v4-update/\">PCI DSS</a>, preparing for and maintaining compliance with application security requirements becomes far easier and more cost-efficient.&nbsp;</p>\n\n\n\n<h3 class=\"wp-block-heading\">API security testing</h3>\n\n\n\n<p>Modern web applications rely on APIs for everything from accessing and exchanging data to internal communication between app components. With an estimated <a href=\"https://securityboulevard.com/2023/03/api-attacks-rise-400-in-last-six-months/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">400% rise in API attacks</a> from the end of 2022 to the beginning of 2023, it is vital to make API security an integral part of the broader cybersecurity program.</p>\n\n\n\n<p>Many API security efforts focus on gateways and other ways to restrict access, with API vulnerability testing being limited to manual tests. A quality DAST scanner should be able to cover APIs as well as GUI apps, supporting the most common API types (especially REST), API specification file formats, and authentication methods to help you scan your APIs for vulnerabilities in the same way as your websites and applications.</p>\n\n\n\n<h2 class=\"wp-block-heading\">A recipe for success: What are the best DAST tools for DevSecOps?</h2>\n\n\n\n<p>Finding and selecting the best DAST tool for your needs is a process that requires thoughtful consideration not only of your security and IT needs but also of your business goals and development and security workflows. Security is a process, not a one-off purchase. Any vendor worth their salt should go far beyond trying to sell you a product and aim to become a trusted partner and advisor in your application security journey.</p>\n\n\n\n<p>At Invicti, expert <a href=\"https://www.invicti.com/blog/web-security/dast-tool-setup-support/\">setup and support</a> resources help ensure you’re getting the most out of your investment in DAST. That way, you can embed automated security best practices into development and let your teams focus on what matters most: building innovative applications for your employees and customers.</p>\n\n\n\n<p>Want to see Invicti’s best-in-DAST solution in action? <a href=\"https://www.invicti.com/get-demo/\">Book a demo</a></p>\n\n\n\n<h2 class=\"wp-block-heading\">Frequently asked questions</h2>\n\n\n<div class=\"invicti-block accordion style-one\" id=\"accordion_65599a5f1b0df\">\n      <div class=\"accordion-section\">\n      <h4 class=\"accordion-heading\">Can you use DAST in DevSecOps?</h4>\n      <div class=\"accordion-text-holder\">\n        <div class=\"accordion-text\"><p>You can and you should use DAST in DevSecOps, since automated dynamic testing is a perfect match for DevOps workflows. It is the only approach to automated application security testing that doesn’t require source code access and can be used both during development and in production. However, not all DAST tools can easily integrate into DevOps processes, and not all can provide the accuracy required to prevent clogging your development teams’ issue trackers with false positives or non-actionable results.<br />\n&nbsp;<br />\n<a href=\"https://www.invicti.com/white-papers/security-at-the-speed-of-software-dast-in-the-sdlc/\">Learn more about using DAST in the SDLC</a></p>\n</div>\n      </div>\n    </div>\n      <div class=\"accordion-section\">\n      <h4 class=\"accordion-heading\">Is DAST or SAST better for DevSecOps?</h4>\n      <div class=\"accordion-text-holder\">\n        <div class=\"accordion-text\"><p>DevSecOps should incorporate security testing into the entire development and operations cycle. While they are useful to flag security issues as early as possible, static analysis (SAST) tools work on the source code, so they can only be used during development and only when the source code is available. DAST tools can be used at multiple points of the DevOps pipeline and test any runnable web application, from early builds to final production deployments – regardless of whether you have the source code.<br />\n&nbsp;<br />\n<a href=\"https://www.invicti.com/blog/web-security/sast-vs-dast-vs-iast-everything-you-always-wanted-to-know/\">Learn more about DAST vs. SAST vs. IAST</a></p>\n</div>\n      </div>\n    </div>\n      <div class=\"accordion-section\">\n      <h4 class=\"accordion-heading\">What’s the difference between doing DevOps plus security and doing DevSecOps?</h4>\n      <div class=\"accordion-text-holder\">\n        <div class=\"accordion-text\"><p>An agile DevOps process relies on maximum automation for rapid development and frequent deployment in short release cycles. If security testing and remediation are not automated to the same level, security will hold development back, leading to delays and internal tensions. The DevSecOps approach aims to make security testing a routine and efficient part of the DevOps pipeline by integrating tools such as accurate and automated DAST.<br />\n&nbsp;<br />\n<a href=\"https://www.invicti.com/blog/web-security/agile-development-waterfall-appsec/\">Learn more about the shortcomings of traditional security testing in agile development</a></p>\n</div>\n      </div>\n    </div>\n  </div>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/best-in-dast-how-to-select-dast-tools-for-devsecops/\">Looking for the best in DAST: How to select DAST tools for DevSecOps</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"SolarWinds, the SEC, and the CISO: Who is legally responsible for security?","link":"https://www.invicti.com/blog/web-security/solarwinds-sec-ciso-who-is-legally-responsible-for-security/","dc:creator":{"#cdata-section":"Meaghan McBee"},"pubDate":"Thu, 02 Nov 2023 18:02:56 +0000","category":{"#cdata-section":"Web Security"},"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=48208"},"description":{"#cdata-section":"<p>Lessons learned from the 2020 SolarWinds hack have had lasting effects on the industry’s approach to supply chain security. Yet even as best practices and regulations for preventing and mitigating critical supply chain issues are being introduced, a complaint filed by the SEC against SolarWinds and its CISO Timothy Brown has added a new chapter to the saga and reignited a crucial debate: who takes the fall when things go wrong?</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/solarwinds-sec-ciso-who-is-legally-responsible-for-security/\">SolarWinds, the SEC, and the CISO: Who is legally responsible for security?</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<blockquote class=\"wp-block-quote is-style-default\">\n<p><strong>What you need to know</strong></p>\n\n\n\n<p>&nbsp;</p>\n\n\n\n<ul>\n<li>The Securities and Exchange Commission is accusing SolarWinds and its CISO of misrepresenting the company’s security situation before and after the 2020 SolarWinds Orion hack.</li>\n\n\n\n<li>The SEC’s action could set a precedent for holding security officers personally liable for security incidents and their consequences.</li>\n\n\n\n<li>The case has sparked a lively debate over who truly owns cybersecurity in organizations, who can be held responsible for breaches, and whether CISOs should have the same legal protections as other top executives.</li>\n</ul>\n</blockquote>\n\n\n\n<p>According to a <a href=\"https://www.sec.gov/files/litigation/complaints/2023/comp-pr2023-227.pdf\">new complaint</a> filed by the Securities and Exchange Commission (SEC), blame for the <a href=\"https://www.invicti.com/blog/web-security/solarwinds-hack-cybersecurity-lessons/\">2020 SolarWinds incident</a>, which exposed many government agencies and Fortune 500 organizations to state-sponsored infiltration, rests on the shoulders not only of the company itself but also its Chief Information Security Officer (CISO), Timothy Brown. The SEC’s lawsuit alleges that SolarWinds and Brown failed to disclose critical weaknesses that led to the breach of its network monitoring software Orion, ultimately leading to an estimated 18,000 SolarWinds customers unwittingly installing compromised software. </p>\n\n\n\n<p>In the civil complaint, the SEC alleges that SolarWinds misled investors when it disclosed hypothetical risks and inaccurate data about how many Orion customers were impacted. Alongside the organization itself, it specifically calls out Brown for his alleged role in fraud and control failures. The complaint states that all of this occurred “at a time when the company and Brown knew of specific deficiencies in SolarWinds’ cybersecurity practices as well as the increasingly elevated risks the company faced at the same time.”&nbsp;</p>\n\n\n\n<p>In a <a href=\"https://www.sec.gov/news/press-release/2023-227\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">statement</a> from the SEC, these allegations suggest that Brown acted negligently when he failed to resolve security issues or raise them to the right teams within the organization. In a <a href=\"https://www.techtarget.com/searchsecurity/news/366557697/SEC-charges-SolarWinds-for-security-failures-fraud\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">response shared with the media</a>, SolarWinds not-so-subtly accused the SEC of overreaching in a way that should “&#8230;alarm all public companies and committed cybersecurity professionals across the country.” </p>\n\n\n\n<p>With this news ricocheting through the industry, some are questioning whether or not the SEC is overstepping boundaries by painting a target on Brown’s back. While fellow security leaders <a href=\"https://www.securityweek.com/cisos-spooked-by-sec-lawsuit-against-solarwinds-ciso/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">brace for impact</a> to all CISO roles in the US, <a href=\"https://twitter.com/EricaZelic/status/1719391793387606167\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">some voices</a> suggest that holding CISOs accountable for security failures could be a way to finally highlight the importance of security. </p>\n\n\n\n<h2 class=\"wp-block-heading\">Is pointing the finger at a security scapegoat risky?</h2>\n\n\n\n<p>The debate over regulatory overreach is prompting concerns that placing responsibility on one person might cast a negative light on critical security roles and make them less appealing to professionals. Should the ruling be in the SEC’s favor, it could set the precedent of security leaders taking the legal fall in the aftermath of a major system compromise or data breach. It will undoubtedly fuel deeper discussions about how we get leadership – <a href=\"https://www.invicti.com/blog/web-security/invicti-insights-getting-the-board-on-board-with-cybersecurity/\">including the board</a> – aligned about cybersecurity to prioritize best practices and make meaningful security investments. And at a time when there’s an overwhelming <a href=\"https://www.invicti.com/blog/web-security/key-trends-seriousness-cybersecurity-skills-gap/\">skill shortage in cybersecurity</a>, scaring away potential talent by deprioritizing security or forcing one person to own security entirely is not a recipe for success.&nbsp;</p>\n\n\n\n<p>“Security ownership cannot sit on the shoulders of one role or person,” explains Frank Catucci, Invicti’s Chief Technology Officer and Head of Security Research. “That is especially true if they do not have the authority or power to make the necessary decisions and take action to protect company assets. Where does responsibility factor in for the board of directors and the CEO if they have the ultimate decision about security or the final power of action? Scapegoats may provide a convenient distraction to camouflage and divert responsibility, but the underlying problem remains. Liability for security is holistic and needs to be formally and legally accepted as such.”</p>\n\n\n\n<p>Before placing the onus squarely on a CISO as a scapegoat for security failings, organizations need to step back and look at the bigger picture of their processes, best practices, and chain of command. Various roadblocks and silos disrupt security professionals’ workflows every day and can easily contribute to unfortunate scenarios where security fails or is overlooked. For example, if development unilaterally decides to move to an agile process with frequent code changes and deployments, security won’t be able to keep up without an accompanying cultural and organizational shift.</p>\n\n\n\n<p>Coupled with these challenges is the fact that developers constantly feel the pressure to innovate fast, even as cybersecurity programs often fall victim to budget cuts as a nice-to-have for more comfortable times. In this light, it shouldn’t come as a shock that critical security steps can be skipped and guidance from leadership sidestepped in the name of business agility. It’s a symptom of a broader issue, and one that requires some serious discussions around responsibility.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Embracing security at every level is the only way to protect an organization</h2>\n\n\n\n<p>Even as the SolarWinds legal story unfolds, organizations need to reevaluate their entire approach to cybersecurity and look at the problem holistically – including the steps taken to protect employees and the organization itself when things go awry. For example, the current allegations of fraud and internal failures are raising questions and concerns over the liability of software vendors for breaches, and the dire need for insurance to help cover legal bases. Soon, companies may find themselves redefining the role of the CISO altogether, redrawing lines in the sand over who ultimately bears responsibility for security failures.&nbsp;</p>\n\n\n\n<p>If CISOs are to be legally responsible for the security of their entire company, it’s imperative to guarantee they have the influence and power required to embed and enforce security as a ubiquitous part of organization culture. When they get the means to foster security-minded practices that start with the leadership and extend down to every single employee, CISOs will be able to implement more effective security strategies without fear of being sidelined or overruled by business pressures. At the same time, having a clear regulatory environment is a must not only for long-term strategy planning but also for defining the future of the CISO role.</p>\n\n\n\n<p>While it’s far too early to say what may have led to Brown and SolarWinds failing to disclose critical information before and after the breach (or even if the SEC’s charges are valid), the whole story is a sobering reminder that there are a multitude of factors that can negatively impact security and contribute to an incident – including failures at the leadership level. Having this awareness is a starting point for work to strike a balance between innovation in development and integrity in security.</p>\n\n\n\n<p>In the security industry, we often repeat that security is everyone’s responsibility. The SEC’s current action will, quite literally, put that statement to the test.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/solarwinds-sec-ciso-who-is-legally-responsible-for-security/\">SolarWinds, the SEC, and the CISO: Who is legally responsible for security?</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"An abundance of caution: Why the curl buffer overflow is not the next Log4Shell","link":"https://www.invicti.com/blog/web-security/why-curl-buffer-overflow-vulnerability-is-not-next-log4shell/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Tue, 24 Oct 2023 13:59:51 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"cybersecurity"},{"#cdata-section":"vulnerabilities"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=48103"},"description":{"#cdata-section":"<p>A high-severity buffer overflow vulnerability in the widely-used curl tool and library was disclosed and patched on Oct 11, 2023. While it turned out to carry no practical risk of exploitation, the flaw was taken extremely seriously due to the widespread potential impact. This post provides the backstory, a technical summary of the buffer overflow vulnerability, remediation guidance, and thoughts on the future outlook.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/why-curl-buffer-overflow-vulnerability-is-not-next-log4shell/\">An abundance of caution: Why the curl buffer overflow is not the next Log4Shell</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<blockquote class=\"wp-block-quote is-style-default\">\n<p><strong>What you need to know</strong></p>\n\n\n\n<p>&nbsp;</p>\n\n\n\n<ul>\n<li>On October 11, 2023, a high-severity buffer overflow vulnerability in the widely-used curl tool and library was disclosed, and a fix was included in the 8.4.0 release.</li>\n\n\n\n<li><a href=\"https://curl.se/docs/CVE-2023-38545.html\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">CVE-2023-38545</a> affects all versions of curl since 7.69.0 but requires very specific conditions to exploit. No practical attack has been discovered so far.</li>\n\n\n\n<li>All maintainers of software that ships with the curl tool or includes the libcurl library are urged to patch or update to version 8.4.0 or later. Avoiding the use of SOCKS5 proxies with curl also eliminates exposure to the vulnerability.</li>\n\n\n\n<li>With billions of curl installations worldwide, vulnerable versions will likely remain online for years, posing a long-term risk if the vulnerability is ever weaponized.</li>\n</ul>\n</blockquote>\n\n\n\n<p>When Daniel Stenberg, the maintainer of the ubiquitous curl tool and library, announced that a high-severity vulnerability was found and refused to provide further details until a patch was ready, the security world held its breath. In one form or another, the open-source curl is used in billions of software installations, and a remotely exploitable flaw in it could dwarf the <a href=\"https://www.invicti.com/blog/web-security/lessons-from-log4j-crisis-are-we-ready-for-next-global-vulnerability/\">Log4j crisis</a> in terms of impact. Was this another <a href=\"https://www.invicti.com/blog/web-security/the-heartbleed-bug/\">Heartbleed</a>? Would it break the Internet?</p>\n\n\n\n<p>Luckily, it wasn’t – and it didn’t. When finally disclosed, the flaw turned out to be a buffer overflow vulnerability that only affected a limited subset of curl functionality and only in very specific circumstances. As of this writing, no practical ways to exploit it have been discovered or seen in the wild. The vulnerability was addressed in <a href=\"https://daniel.haxx.se/blog/2023/10/11/curl-8-4-0/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">curl&nbsp;8.4.0</a>, and all curl installations should be patched or updated to at least this version.</p>\n\n\n\n<p>So what’s all the fuss about, you might ask? It’s just another buffer overflow vulnerability that was reported and fixed, so let’s complain about people still not using memory-safe languages in 2023, patch this, and move on, right? Well&#8230; Not quite. While, thankfully, we won’t be dealing with another Log4Shell (along with the inevitable Curl4Shell moniker), this could be something of a slow-burner that may resurface for years to come. The vulnerability also combines several common security headaches and was (somewhat unusually) described in great detail by the developer who introduced and fixed it, so it’s well worth a deeper analysis.</p>\n\n\n\n<h2 class=\"wp-block-heading\">What is curl, and where is it used?</h2>\n\n\n\n<p>Curl (sometimes written cURL) is the fundamental command-line tool and library for programmatically calling URLs and retrieving responses. In essence, if you have a script or C/C++ program that needs to get data from a web page or API, there’s a good chance that curl is involved in some way.</p>\n\n\n\n<p>Most operating systems ship with the tool, and the related libcurl library is called by or included with practically any C/C++ program that communicates over HTTP. Crucially, this includes embedded systems in web-connected devices – which is why Daniel Stenberg estimates that some 20 billion curl installations may exist. Compared to curl, those “Log4j is everywhere” headlines definitely seem overblown.</p>\n\n\n\n<h2 class=\"wp-block-heading\">The heap buffer overflow vulnerability in curl</h2>\n\n\n\n<p>Daniel Stenberg has described the history and technical details of the vulnerability at length <a href=\"https://daniel.haxx.se/blog/2023/10/11/how-i-made-a-heap-overflow-in-curl/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">on his blog</a>, but here’s the simplified one-minute version:</p>\n\n\n\n<ul>\n<li>Curl has many operating modes, including one for communicating via SOCKS5 proxies. The <a href=\"https://en.wikipedia.org/wiki/SOCKS#SOCKS5\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">SOCKS5 protocol</a> can be used for traffic tunneling from an internal network (similar to a VPN) and for circumventing traffic filters. The vulnerability only affects curl if used in SOCKS5 mode.</li>\n\n\n\n<li>When reworking older code to improve performance for SOCKS5 connections, a mistake was made when processing excessively long hostnames (over 255 bytes). Instead of rejecting such a hostname, which would be the expected behavior (DNS only allows 255 bytes, so anything bigger most likely isn’t legitimate), curl switches from remote to local resolution mode and attempts to resolve the hostname again.</li>\n\n\n\n<li>If the SOCKS5 connection isn’t fast enough, curl waits for more data and resumes work. Due to the bug, when curl resumes, it doesn’t remember that it’s supposed to be working in local mode and tries remote hostname resolution again – but this time, it passes on the entire overlong hostname.</li>\n\n\n\n<li>The code writes the hostname to be resolved to the hostname buffer without checking its size. If the target buffer size is between 16kB and 64kB and an extremely long hostname is supplied, a buffer overflow can occur that overwrites adjacent memory. Note that command-line curl defaults to 100kB and is only vulnerable if this default size is changed, but programs using the libcurl library default to 16kB, which makes them vulnerable.</li>\n\n\n\n<li>An attack can only succeed if the operating system doesn’t protect against memory corruption. The attacker also has an additional limitation due to the limited set of characters (more precisely octets) permitted in a hostname.</li>\n</ul>\n\n\n\n<p>If you’re reading this and thinking there are far too many “ifs” along the way, you’re right, and this summary doesn’t even cover all the “ifs” required to trigger the vulnerability. Again, thinking back to Log4Shell where a single line of text sent to a server somewhere on the web could get you code execution, the curl vulnerability seems almost impossibly hard to exploit by comparison. There is also no known payload that would do something more useful than crashing the tool – but sooner or later, somebody might find one, so it was important to quietly fix this before attackers knew what they were looking for.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Vulnerability disclosure, mitigation, and default security panic</h2>\n\n\n\n<p>Despite the low practical risk and no demonstrated way to usefully exploit the vulnerability, Daniel Stenberg took the report extremely seriously and was careful not to reveal any details of the bug (not even the versions affected) until a patch was available. Before it was published, the fix was provided to operating system maintainers so they could update curl in their respective systems. This additional delay extended the period of wild speculation about the potentially devastating impact of the vulnerability.</p>\n\n\n\n<p>The patch and full details of the vulnerability were published on October 11, 2023, to a collective sigh of relief that the issue was far from the Internet-breaking horror everyone had feared. The update fixes the underlying hostname resolution bug, and from version 8.4.0 onwards, curl will reject excessively long hostnames and return an error. This eliminates the resulting overflow vulnerability and makes it safe to use curl in SOCKS5 mode.&nbsp;</p>\n\n\n\n<p>Except that’s only the beginning because, as with all patches to widely-used software, updating everything is easier said than done. Not all curl users can patch immediately, and many might not even know their system or application uses curl. The tool and library are shipped with or built into most operating systems, including embedded systems (e.g. IoT devices and network appliances), as well as software running in virtual machines and containers. So the recommended mitigations are, in order of preference (from the <a href=\"https://curl.se/docs/CVE-2023-38545.html\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">official advisory</a>):</p>\n\n\n\n<ol>\n<li>Upgrade curl to version 8.4.0</li>\n\n\n\n<li>Apply the patch to your local version</li>\n\n\n\n<li>Do not use <code>CURLPROXY_SOCKS5_HOSTNAME</code> proxies with curl</li>\n\n\n\n<li>Do not set a proxy environment variable to <code>socks5h://</code></li>\n</ol>\n\n\n\n<h2 class=\"wp-block-heading\">Another link in the fragile software supply chain</h2>\n\n\n\n<p>As with every high-profile memory-management vulnerability, initial responses immediately included calls for all C/C++ software to be burned at the stake and rewritten in this year’s fashionable memory-safe language so we can finally stop seeing buffer overflows at the top of the <a href=\"https://www.invicti.com/blog/web-security/cwe-top-25-software-weaknesses-2023-analysis-practical-use/\">CWE top 25</a>. As usual, this would be great in theory but is completely unfeasible in practice, especially for a tool such as curl that has been widely used and embedded for over two decades.&nbsp;</p>\n\n\n\n<p>The whole scare could be written off as an abundance of caution on the part of the maintainer. Many other software maintainers, both for open-source and commercial projects, would likely have approached the same issue as a routine low-priority bug fix and buried it somewhere in the release notes for the next scheduled version. But Daniel Stenberg cares deeply about security and feels the burden of responsibility as one of the people thanklessly maintaining the <a href=\"https://xkcd.com/2347/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">foundations of all modern digital infrastructure</a>. As he writes in his blog post: “In hindsight, shipping a heap overflow in code installed in over twenty billion instances is not an experience I would recommend.”</p>\n\n\n\n<p>Even with the patch released, millions of vulnerable curl installations will likely persist for years to come. If an effective attack is ever discovered and weaponized, things could get really ugly. Considering the fragility of the global software supply chain, being obsessive about security is no bad thing.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/why-curl-buffer-overflow-vulnerability-is-not-next-log4shell/\">An abundance of caution: Why the curl buffer overflow is not the next Log4Shell</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Rapid Reset HTTP/2 vulnerability: When streaming leads to flooding","link":"https://www.invicti.com/blog/web-security/rapid-reset-http2-vulnerability-when-streaming-leads-to-flooding/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Mon, 16 Oct 2023 14:43:10 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"cybersecurity"},{"#cdata-section":"vulnerabilities"},{"#cdata-section":"ddos"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=47857"},"description":{"#cdata-section":"<p>The Rapid Reset vulnerability is yet another weakness in the HTTP/2 protocol that allows for DDoS attacks on a massive scale. This post summarizes how the attack works, why it’s possible, what mitigations are available, and why it likely won’t be the last scare related to HTTP/2.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/rapid-reset-http2-vulnerability-when-streaming-leads-to-flooding/\">Rapid Reset HTTP/2 vulnerability: When streaming leads to flooding</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<blockquote class=\"wp-block-quote is-style-default\">\n<p><strong>What you need to know</strong></p>\n\n\n\n<p>&nbsp;</p>\n\n\n\n<ul>\n<li>The Rapid Reset HTTP/2 vulnerability tracked as <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-44487\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">CVE-2023-44487</a> allows distributed denial of service (DDoS) attacks on an unprecedented scale.</li>\n\n\n\n<li>Starting in late August 2023 and continuing through October, the vulnerability has been exploited multiple times in attacks that ranged from 120 million to nearly 400 million requests per second.</li>\n\n\n\n<li>The weakness is in the HTTP/2 protocol itself, making it necessary to patch or reconfigure all web servers, load balancers, proxies, and other appliances that support HTTP/2 connections.</li>\n\n\n\n<li>As of this writing, some attacks are still happening. Google, AWS, Cloudflare, and other major industry players have coordinated a response to minimize the impact of further attacks while patches are rolled out.</li>\n\n\n\n<li>All organizations running services that accept HTTP/2 traffic are advised to follow their internet service provider’s guidance to patch or otherwise mitigate the vulnerability.</li>\n</ul>\n</blockquote>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-info\">\n<p>Invicti’s cloud services, including the on-demand versions of <a href=\"https://www.invicti.com/product/\">Invicti and Acunetix products</a>, are not at risk. Invicti is following all recommended mitigation measures, and no service disruptions are expected.</p>\n</blockquote>\n\n\n\n<p>“Biggest DDoS attack ever” headlines have long stopped catching anyone’s eye – but this time was different. On August 25, 2023, and in the days that followed came a flood of DDoS attacks over HTTP/2 that surpassed anything seen in the past. By abusing a feature of the HTTP/2 protocol that was designed to maximize throughput, relatively small botnets were sending hundreds of millions of requests every second. Only the world’s largest internet and cloud providers could possibly stand up to the intense bombardment – and mitigation wouldn’t be easy.</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-tips\">\n<h3 class=\"wp-block-heading\">What is HTTP/2 and who uses it?</h3>\n\n\n\n<p>The HTTP protocol was created as the backbone of the World Wide Web way back in 1989 and was designed to transmit static, hyperlinked documents. The most widely used and supported version today is HTTP/1.1, which includes some concessions to complex, high-performance modern web use cases like streaming but still imposes serious limitations.</p>\n\n\n\n<p>HTTP/2 was designed to address these shortcomings and incorporate current needs into the protocol to cut down traffic overhead and increase throughout, especially for data streaming. As of this writing, HTTP/2 is supported by just over 35% of all websites (source: <a href=\"https://w3techs.com/technologies/details/ce-http2\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">W3Techs</a>), which may not look like much – but that number includes all the world’s highest-traffic services and applications.</p>\n</blockquote>\n\n\n\n<h2 class=\"wp-block-heading\">What is the Rapid Reset HTTP/2 vulnerability?</h2>\n\n\n\n<p>In a nutshell, attacks that exploit the Rapid Reset HTTP/2 vulnerability flood a server with potentially millions of HTTP/2 requests, immediately followed by request cancellations (resets). Unlike with HTTP/1.1, the client doesn’t have to wait for a response before sending the next request (and next reset). Even though no actual data is sent or received and connections will eventually be abandoned, the server still has to prepare to receive each request and potentially expect further requests from the same client. With huge request volumes arriving from thousands of hosts in a short time, this can rapidly exhaust server resources, resulting in a denial of service.</p>\n\n\n\n<p>The vulnerability is not a typical security flaw in some specific application but the result of a lack of security foresight in the <a href=\"https://datatracker.ietf.org/doc/html/rfc7540\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">HTTP/2 specification</a> itself. One of the major requirements for HTTP/2 was to make streaming easier and more efficient. With HTTP/1.1, only one HTTP request at a time can be processed over a single TCP connection, meaning that the client needs to wait for a response before sending the next request. This is fine when fetching a web page but very inefficient for sending continuous data streams.</p>\n\n\n\n<p>Even though HTTP/1.1 added request pipelining to address this limitation, the feature proved troublesome and unreliable in practice, and dealing with the problem properly was one of the main requirements for HTTP/2. The newer protocol allows clients to open multiple concurrent streams within the same TCP connection, typically up to 100 streams at a time. This multiplexing feature is great for efficient streaming but, if abused, could also allow attackers to send 100 times more malicious requests from a single host – and the protocol specification doesn’t impose any security-minded limitations.</p>\n\n\n\n<p>The HTTP/2 protocol also allows the client to cancel (reset) a connection and carry on without waiting for any server response. Again, the specification doesn’t limit this behavior, and so we get to the vulnerability. By combining multiple streams per connection with the freedom to unilaterally reset any number of requests, attackers can generate massive amounts of malicious traffic using botnets that are much smaller than usual, making them easier to build and deploy. In effect, the attacks abuse the request reset feature at an extreme intensity and then use multiplexing as a force multiplier. As it turns out, when you give great power to all users, you need to remember some of them could be malicious.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Can you test if a system is vulnerable to Rapid Reset HTTP/2?</h2>\n\n\n\n<p>Because the vulnerability is caused by the lack of security guardrails in the protocol and only manifests itself by resource exhaustion, safely testing for it is hard, if not impossible. Whether a specific server is vulnerable depends on a complex combination of rate limit settings on the server and whatever appliances and services stand between it and an attacking botnet. The only thing anyone can be sure of at this stage is that without immediate mitigation, any service that supports HTTP/2 connections could be vulnerable.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Mitigations and the future of HTTP/2</h2>\n\n\n\n<p>If you run an HTTP/2 server, look for product-specific patches and mitigation guidance to configure rate limits that block known malicious traffic patterns by capping the number of concurrent streams. Major providers like Google, AWS, and Cloudflare have also coordinated a response to detect and block attack attempts, as they do for other types of DDoS attacks. Combining such application-layer shielding with patches and configuration updates should be sufficient to keep HTTP/2 servers safe from currently known attacks without a major impact on performance. As a last resort, if you cannot apply suitable patches and use runtime DDoS protection, you may want to consider disabling HTTP/2 altogether – keeping in mind that (to quote <a href=\"https://msrc.microsoft.com/blog/2023/10/microsoft-response-to-distributed-denial-of-service-ddos-attacks-against-http/2/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Microsoft guidance</a>) this can “significantly influence performance and user experience.”  </p>\n\n\n\n<p>HTTP/2 has long attracted criticism for being something of a rushed effort and a missed opportunity to properly address deep underlying issues with request pipelining and multiplexing. Considering that they exploit this very functionality, the Rapid Reset attacks seem to validate these concerns. Many of the shortcomings are addressed by the HTTP/3 protocol, which was published as a proposed standard in 2022 and, though not yet widely used, is already supported by most major web servers and browsers. Seeing as attacks against HTTP/2 are likely to continue and evolve, moving to HTTP/3 definitely seems the way of the future.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/rapid-reset-http2-vulnerability-when-streaming-leads-to-flooding/\">Rapid Reset HTTP/2 vulnerability: When streaming leads to flooding</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Top 5 application security misconfigurations","link":"https://www.invicti.com/blog/web-security/top-5-application-security-misconfigurations/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Thu, 12 Oct 2023 13:04:20 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"appsec"},{"#cdata-section":"application-security"},{"#cdata-section":"cybersecurity-awareness"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=47803"},"description":{"#cdata-section":"<p>Misconfigurations are a major avenue for web application attacks. No matter how secure your code is, a misconfigured runtime environment can still render your app vulnerable. This Cybersecurity Awareness Month, here are the top five categories of application security misconfigurations.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/top-5-application-security-misconfigurations/\">Top 5 application security misconfigurations</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>As part of Cybersecurity Awareness Month, <a href=\"https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-278a\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">CISA has published a list</a> of the top 10 network security misconfigurations found during red and blue team assessments and in actual incident responses. To make sure application security doesn’t get left out, we’ve decided to follow up with our own list of common application security misconfigurations – but since top 10 lists have received some bad press for being little more than clickbait, we’ll stick to just five of the most important categories.</p>\n\n\n\n<p>In broad terms, an <a href=\"https://www.invicti.com/blog/web-security/security-misconfigurations-web-applications/\">application security misconfiguration</a> is any security flaw directly caused by the way an application or its environment is set up, not by any vulnerability in the application itself. For example, if an application is not vulnerable in a development environment but becomes vulnerable once deployed to production, you most likely have a security misconfiguration on your hands. With that definition in place and keeping in mind there is plenty of overlap between the categories, let’s dive into the top 5 application security misconfigurations.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Misconfiguration #1: Vulnerable tech stack components</h2>\n\n\n\n<p>Any web application is merely the outermost layer of a technology stack that goes right down to the operating system. Depending on its vintage and architecture, a web tech stack may include a web server, application server, database server, web framework, dynamic dependencies, and more. Unless all the runtime components are properly maintained, a missing patch or security update may provide attackers with an opening to exploit a known vulnerable product version and potentially compromise your system without touching the application itself (for instance, via <a href=\"https://www.invicti.com/blog/web-security/oracle-weblogic-remote-code-execution-vulnerability-analysis/\">remote code execution by the application server</a>).</p>\n\n\n\n<p><a href=\"https://www.invicti.com/blog/web-security/dangers-outdated-web-technologies/\"><em>Read more about the dangers of outdated web technologies</em></a></p>\n\n\n\n<h2 class=\"wp-block-heading\">Misconfiguration #2: Missing or insufficient access controls</h2>\n\n\n\n<p>Many data breaches happen not because an attacker broke in but because they found something out in the open – exposed cloud storage buckets, sensitive files, and <a href=\"https://www.invicti.com/blog/web-security/zombie-shadow-api-security/\">forgotten APIs</a> are all fair game. While ensuring proper access control at multiple levels is a major requirement for secure application development, it must also be a part of deployment and operations, especially as application components become more and more distributed. For example, a misconfigured web server may allow attackers to download the application source code, revealing intellectual property and making it easier to find vulnerabilities by directly analyzing the code.</p>\n\n\n\n<p><a href=\"https://www.invicti.com/blog/web-security/idor-everywhere-dangers-of-direct-object-references/\"><em>Read more about the dangers of unauthenticated APIs</em></a></p>\n\n\n\n<h2 class=\"wp-block-heading\">Misconfiguration #3: Default or development configurations</h2>\n\n\n\n<p>Development environments have very different requirements compared to production. Getting as much error information as possible is crucial, and security measures will often be disabled for debugging (or they simply won’t exist yet). With this in mind, many components default to less secure but more verbose settings intended to ease development, and locking them down should be a routine part of the deployment process. Unless properly hardened to minimize the attack surface and data exposure, components may leak excessive information to attackers or expose resources or user accounts that shouldn’t be accessible at all.</p>\n\n\n\n<p><a href=\"https://www.invicti.com/blog/web-security/system-hardening-for-your-web-applications/\"><em>Read more about web application hardening</em></a></p>\n\n\n\n<h2 class=\"wp-block-heading\">Misconfiguration #4: Missing or incorrect HTTP security headers</h2>\n\n\n\n<p>We’ve written a lot about <a href=\"https://www.invicti.com/blog/web-security/http-security-headers/\">HTTP security headers</a> in the past, and with good reason, as they are one of the easiest ways to stop entire classes of web attacks without touching a single line of application code. Among several common headers, the two definite must-haves are Content Security Policy (CSP) headers to minimize exposure to cross-site scripting and the HTTP Strict Transport Security (HSTS) header to enforce encrypted communications and thus prevent man-in-the-middle attacks. While setting them is a fundamental best practice, misconfiguring your security headers can be a risk in itself – from a false sense of security when your CSP rules don’t do what you expected, to making your entire domain inaccessible due to a bad HSTS header.</p>\n\n\n\n<p><a href=\"https://www.invicti.com/whitepaper-http-security-headers/\"><em>Read our technical white paper about HTTP security headers</em></a></p>\n\n\n\n<h2 class=\"wp-block-heading\">Misconfiguration #5: Excessive process privileges</h2>\n\n\n\n<p>Privilege escalation is usually the first goal of any attacker who manages to gain an initial foothold on your server. In order to minimize the options available to malicious actors, application hardening should include making sure that all the processes in your stack are running with the minimum necessary privileges and (if possible and appropriate) are separated to reduce the risk of lateral movement. For example, for development on a local machine, it might be quick and easy to run all your servers as root with full file system access – but if done in a production environment, it would allow total system compromise from a single successful <a href=\"https://www.invicti.com/learn/os-command-injection/\">command injection</a>.</p>\n\n\n\n<p><a href=\"https://www.invicti.com/blog/web-security/privilege-escalation/\"><em>Read more about privilege escalation</em></a></p>\n\n\n\n<h2 class=\"wp-block-heading\">Raising awareness of application security fundamentals</h2>\n\n\n\n<p>Preventing application security misconfigurations might not get the same attention as chasing down the latest media-friendly vulnerabilities, yet it is a fundamental part of secure development and operations. If you want to run secure software, you must start with an application that leaves development without known vulnerabilities and then put it in a hardened and tested runtime environment. Having only one or the other won’t work – you need to have both and test both.</p>\n\n\n\n<p><a href=\"https://www.invicti.com/blog/web-security/sast-vs-dast-vs-iast-everything-you-always-wanted-to-know/\"><em>Read more about the scope of different approaches to application security testing</em></a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/top-5-application-security-misconfigurations/\">Top 5 application security misconfigurations</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Invicti Security Achieves ISO 27001:2022 Accreditation, Continuing a Dedicated Commitment to Information Security","link":"https://www.invicti.com/blog/news/invicti-security-achieves-iso-27001-2022-accreditation-for-all-products/","dc:creator":{"#cdata-section":"Kate Bachman"},"pubDate":"Wed, 04 Oct 2023 13:00:00 +0000","category":[{"#cdata-section":"News"},{"#cdata-section":"press-release"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=47722"},"description":{"#cdata-section":"<p>Invicti Security has attained ISO 27001:2022 certification for all of its industry-leading dynamic application security testing (DAST) products. The achievement demonstrates Invicti’s commitment to ensuring information security and data protection across all its systems and products and for all its customers.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/news/invicti-security-achieves-iso-27001-2022-accreditation-for-all-products/\">Invicti Security Achieves ISO 27001:2022 Accreditation, Continuing a Dedicated Commitment to Information Security</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p><strong>AUSTIN, TEXAS (Oct. 4, 2023)</strong> – <a href=\"http://www.invicti.com\">Invicti Security</a>, the leading dynamic application security testing (DAST) company, is proud to announce its<strong> successful attainment of the ISO 27001:2022 certification for all its products</strong>. This achievement demonstrates Invicti’s dedication to information security and data protection, underscoring the organization’s commitment to protecting sensitive information, maintaining data integrity, and providing clients and stakeholders with the highest level of trust.</p>\n\n\n\n<p>The International Organization for Standardization (ISO) is recognized worldwide for setting standards to ensure the quality, safety, and efficiency of products, services, and systems across various industries. ISO 27001:2022 specifically focuses on Information Security Management Systems (ISMS), offering a comprehensive framework for organizations to establish, implement, maintain, and continually improve their information security practices.</p>\n\n\n\n<p>To earn this prestigious accreditation, Invicti underwent a rigorous evaluation process that included comprehensive audits and assessments of its information security management systems, policies, procedures, and controls. The successful certification demonstrates the company’s ability to:</p>\n\n\n\n<ol>\n<li>Identify and assess information security risks</li>\n\n\n\n<li>Implement robust information security controls</li>\n\n\n\n<li>Continually monitor and improve the effectiveness of its ISMS</li>\n\n\n\n<li>Safeguard sensitive data and protect against security breaches</li>\n</ol>\n\n\n\n<p>Matthew Sciberras, CISO and VP of Information Security and IT at Invicti Security, expressed pride in this achievement, stating: “Our team has worked tirelessly to achieve ISO 27001:2022 certification, and this accomplishment reflects our unwavering commitment to safeguarding the sensitive information entrusted to us. This certification reinforces our clients’ trust in our ability to protect their data and reaffirms our position as a leader in the application security sector.”</p>\n\n\n\n<p>The ISO 27001:2022 accreditation aligns with Invicti‘s overarching purpose to propel the world forward by securing every web application and API while upholding the highest ethical standards and ensuring the security and confidentiality of data.</p>\n\n\n\n<p><strong>About Invicti Security</strong></p>\n\n\n\n<p><a href=\"https://www.invicti.com/\">Invicti Security</a> – which acquired and combined DAST leaders Acunetix and Netsparker – is on a mission: application security with zero noise. An AppSec leader for more than 15 years, Invicti provides best-in-DAST solutions that enable DevSecOps teams to continuously scan web applications, shifting security both left and right to identify, prioritize and secure a company’s most important assets. Our commitment to accuracy, coverage, automation, and scalability helps mitigate risks and propel the world forward by securing every web application. Invicti is headquartered in Austin, Texas, and has employees in over 11 countries, serving more than 4,000 organizations around the world. For more information, visit our <a href=\"https://www.invicti.com/\">website</a> or follow us on <a href=\"https://www.linkedin.com/company/invicti-security/\">LinkedIn</a>.</p>\n\n\n\n<p>###</p>\n\n\n\n<p>Media Contact:</p>\n\n\n\n<p>Kate Bachman<br>Invicti Security<br>kate.bachman@invicti.com</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/news/invicti-security-achieves-iso-27001-2022-accreditation-for-all-products/\">Invicti Security Achieves ISO 27001:2022 Accreditation, Continuing a Dedicated Commitment to Information Security</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Hacking the hackers: Borrowing good habits from bad actors","link":"https://www.invicti.com/blog/web-security/borrowing-good-habits-from-bad-actors-announcing-ebook/","dc:creator":{"#cdata-section":"Meaghan McBee"},"pubDate":"Mon, 02 Oct 2023 13:29:42 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"cybersecurity"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=47709"},"description":{"#cdata-section":"<p>Cybercriminals are smart, quick, and relentless. If we want to outsmart them, it’s imperative that we pay attention to their behaviors and use these hacker skills more efficiently than the bad guys do every single day.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/borrowing-good-habits-from-bad-actors-announcing-ebook/\">Hacking the hackers: Borrowing good habits from bad actors</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>In a digitized world where information is both a valuable asset and a potential target, malicious hackers are a constant threat – and often loom larger than life. It’s easy to think of cybercriminals as shadowy supervillains when, in reality, they’re merely highly motivated and unscrupulous people using the specialized tools at their disposal to work smarter, not harder. By combining tools and skills with the habits of a persistent attacker mindset, they can efficiently breach security systems, steal sensitive data, and disrupt critical infrastructures.&nbsp;</p>\n\n\n\n<p>Scaled up to global levels, that efficiency becomes a huge and costly global problem. It’s estimated that by 2025, cybercrime will cost the world economy some <a href=\"https://cybersecurityventures.com/cybercrime-damage-costs-10-trillion-by-2025/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">$10.5 trillion</a> a year – the most significant transfer of wealth in human history. Unless we can all find a way to build security that proactively keeps attackers at bay, threat actors will only escalate their efforts to wreak havoc for enterprises, government organizations, and even entire nations. </p>\n\n\n\n<p>But what if you could turn the tables on cyber adversaries by embracing some of their habits and building them into our own <a href=\"https://www.invicti.com/blog/web-security/what-is-devsecops/\">DevSecOps</a> strategies? If we can understand how bad actors apply their skills and mindset to outsmart us, we can harness the most effective habits to outhack the hackers and protect our digital assets more effectively. Read our free eBook to learn how:</p>\n\n\n<div class=\"wp-block-image is-style-default\">\n<figure class=\"aligncenter size-large is-resized\"><a href=\"https://www.invicti.com/white-papers/good-habits-of-bad-actors-ebook/\"><img decoding=\"async\" fetchpriority=\"high\" src=\"https://cdn.invicti.com/app/uploads/2023/09/26122342/Good-Habits-ebook-WP-banner-1-1024x171.png\" alt=\"\" class=\"wp-image-47550\" width=\"768\" height=\"128\" srcset=\"https://cdn.invicti.com/app/uploads/2023/09/26122342/Good-Habits-ebook-WP-banner-1-1024x171.png 1024w, https://cdn.invicti.com/app/uploads/2023/09/26122342/Good-Habits-ebook-WP-banner-1-300x50.png 300w, https://cdn.invicti.com/app/uploads/2023/09/26122342/Good-Habits-ebook-WP-banner-1-768x128.png 768w, https://cdn.invicti.com/app/uploads/2023/09/26122342/Good-Habits-ebook-WP-banner-1.png 1200w\" sizes=\"(max-width: 768px) 100vw, 768px\" /></a></figure></div>\n\n\n<h2 class=\"wp-block-heading\">Good habits of bad actors that give them an edge</h2>\n\n\n\n<p>Malicious hackers operate in an environment where time and information are precious. Using as much intel as they can gather, they can set up attacks to exploit vulnerabilities swiftly and stealthily within a narrow window of opportunity. They often succeed because they’re relentless, motivated, and resourceful. They will use anything they need to get the job done, from dedicated tools and pre-packaged exploits on the dark web to their own skills and proven operating procedures.&nbsp;</p>\n\n\n\n<p>Here are a few hacker habits that can help the bad guys stay one step ahead – and that you can turn to your advantage:</p>\n\n\n\n<ul>\n<li><strong>They map out, monitor, and understand the entire target environment,</strong> including who has access to what systems and data within an organization, so they can better pinpoint their targets. Attackers also gather every scrap of public and non-public information about the targeted systems, people, and security tools. Armed with this intelligence, they can exploit security flaws to penetrate your systems and then escalate access to go deeper – and cause even more damage.</li>\n</ul>\n\n\n\n<ul>\n<li><strong>They share knowledge and tools to work smarter, not harder.</strong> Knowledge-sharing allows attackers to stay on the technical cutting edge and also serves as a way to train junior cybercrimes on historical knowledge about vulnerabilities, attack techniques, and approaches that have proven successful. Underground communities and marketplaces make it easier for malicious hackers to quickly develop and adapt tools and skills, helping them become experts in specific fields.&nbsp;</li>\n</ul>\n\n\n\n<ul>\n<li><strong>They verify everything to ensure they have the best information.</strong> Outsmarting their victims is a top priority for bad actors, so they strive to question, verify, and improve all the information they have. That way, they know they’re always operating with the best possible intel and the most suitable tools to break or sidestep your existing defenses – a situation you could be oblivious to if you don’t have complete visibility of your attack exposure.</li>\n</ul>\n\n\n\n<p>To counter these battle-tested attacker habits, we need to cultivate our own AppSec hacks. Proactively hacking the hackers by maximizing coverage, efficiency, and accuracy in a continuous process is vital to prevent the bad guys from finding weak spots before you do. It’s the only way to outpace the attackers and get your guard up before they can land the next punch.&nbsp;</p>\n\n\n\n<p>By anticipating their tactics, understanding their motives, and proactively implementing measures to thwart their advances, we can give ourselves a better chance of safeguarding sensitive data and the systems that process it – and make sure we’re the ones staying one step ahead in the ever-evolving cybersecurity landscape.</p>\n\n\n\n<p>Read our new eBook, <a href=\"https://www.invicti.com/white-papers/good-habits-of-bad-actors-ebook/\"><em>Good Habits of Bad Actors</em></a>, for more hacker habits and AppSec practices that you can start using to your advantage right now.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/borrowing-good-habits-from-bad-actors-announcing-ebook/\">Hacking the hackers: Borrowing good habits from bad actors</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Invicti’s VP of Engineering Kalpana Tummala Honored with SC Media’s Women in IT Award","link":"https://www.invicti.com/blog/news/invicti-vp-of-engineering-kalpana-tummala-honored-with-sc-media-women-in-it-award/","dc:creator":{"#cdata-section":"Kate Bachman"},"pubDate":"Wed, 27 Sep 2023 13:00:00 +0000","category":[{"#cdata-section":"News"},{"#cdata-section":"press-release"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=47559"},"description":{"#cdata-section":"<p>Invicti VP of Engineering and Program Management, Kalpana Tummala, has been recognized in the Women to Watch category at SC Media’s annual Women in IT awards.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/news/invicti-vp-of-engineering-kalpana-tummala-honored-with-sc-media-women-in-it-award/\">Invicti’s VP of Engineering Kalpana Tummala Honored with SC Media’s Women in IT Award</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p><strong>AUSTIN, Texas (Sep. 27, 2023)</strong> – SC Media, in partnership with its flagship company CyberRisk Alliance (CRA), unveiled the winners of its annual Women in IT Security program – with <a href=\"http://www.invicti.com\">Invicti</a>’s VP of Engineering and Program Management, Kalpana Tummala, recognized in the <em>Women to Watch</em> category.</p>\n\n\n\n<p>Celebrating its tenth year, SC Media’s Women in IT Security program highlights the need for workforce diversity and underscores the advantages that women can bring to cybersecurity. Candidates are nominated by their peers and then selected by SC Media’s editorial staff, being placed into four categories. In the <em>Women to Watch</em> category, nominees are recognized for positively impacting the community as “drivers of the industry’s next wave of growth and innovation,” according to SC Media.</p>\n\n\n\n<p>“I am honored to be one of the many experienced nominees recognized in the <em>Women to Watch</em> category,” Tummala said. “The gender gap in IT, specifically cybersecurity, has historically sent the message that women are not as capable as men when it comes to big-picture issues and technical problem-solving. In reality, that simply isn’t the case, and we’re just as capable of shaping the future of IT.”</p>\n\n\n\n<p>Women represent just 24% of the global cyber workforce, research from <a href=\"https://www.scmagazine.com/news/forrester-women-represent-24-of-the-cyber-workforce-globally\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">Forrester</a> shows, which presents an urgent need for better representation but also ample opportunity for women to succeed in a typically male-dominated industry. With more than 22 years of experience in engineering and leadership, Tummala has seen first-hand the struggles of this underrepresentation for women in IT – and the many ways that they can bring unique perspectives to the table when given an opportunity to thrive.&nbsp;</p>\n\n\n\n<p>“There is a mountain of untapped potential for <a href=\"https://www.invicti.com/blog/web-security/invicti-insights-women-in-engineering-change-the-game/\">women in cybersecurity, specifically engineers</a>. Women are naturally great problem-solvers and communicators who can think quickly under pressure, which is vital for fast-paced industries,” Tummala commented. “In my experience, women are more risk-averse and capable of architecting strategies that protect their teams and their organizations. Those are invaluable skills that we need more of in cybersecurity.”</p>\n\n\n\n<p>To see the full list of awardees, visit: <a href=\"https://www.scmagazine.com/news/congratulations-to-our-2023-sc-media-women-in-it-security-honorees\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">https://www.scmagazine.com/news/congratulations-to-our-2023-sc-media-women-in-it-security-honorees</a><br></p>\n\n\n\n<p><strong>About Invicti Security</strong></p>\n\n\n\n<p><a href=\"https://www.invicti.com/\">Invicti Security</a> – which acquired and combined DAST leaders Acunetix and Netsparker – is on a mission: application security with zero noise. An AppSec leader for more than 15 years, Invicti provides best-in-DAST solutions that enable DevSecOps teams to continuously scan web applications, shifting security both left and right to identify, prioritize, and secure a company’s most important assets. Our commitment to accuracy, coverage, automation, and scalability helps mitigate risks and propel the world forward by securing every web application. Invicti is headquartered in Austin, Texas, and has employees in over 11 countries serving more than 4,000 organizations around the world. For more information, visit our <a href=\"https://www.invicti.com/\">website</a> or follow us on <a href=\"https://www.linkedin.com/company/invicti-security/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">LinkedIn</a>.</p>\n\n\n\n<p><strong>About SC Media</strong></p>\n\n\n\n<p>SC Media is the essential resource for cybersecurity professionals – the flagship information brand of CyberRisk Alliance and the gateway to content from Security Weekly, CRA Business Intelligence, Infosec World and SC Events. These resources offer an unparalleled range of foresight, learning and collaboration – news-analysis and enterprise reporting; practitioner-led podcasts and videos; research, data and product reviews; events, conferences and training; and much more. Through these resources and our authoritative network of faculty and contributors, we convene and engage the cyber community, to share insight with, by and for security practitioners and leaders.</p>\n\n\n\n<p><strong>About CyberRisk Alliance</strong></p>\n\n\n\n<p>CyberRisk Alliance (CRA) is a business intelligence company serving the high growth, rapidly evolving cybersecurity community with a diversified portfolio of services that inform, educate, build community and inspire an efficient marketplace. Our trusted information leverages a unique network of journalists, analysts and influencers, policymakers and practitioners. CRA’s brands include SC Media, Security Weekly, InfoSec World, Cybersecurity Collaboration Forum, our research unit CRA Business Intelligence, and the peer-to-peer CISO membership network, Cybersecurity Collaborative. More information is available at <a href=\"http://cyberriskalliance.com/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">http://cyberriskalliance.com/</a>.</p>\n\n\n\n<p>###</p>\n\n\n\n<p>Media Contact:</p>\n\n\n\n<p>Kate Bachman<br>Invicti Security<br>kate.bachman@invicti.com</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/news/invicti-vp-of-engineering-kalpana-tummala-honored-with-sc-media-women-in-it-award/\">Invicti’s VP of Engineering Kalpana Tummala Honored with SC Media’s Women in IT Award</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"NIST Cybersecurity Framework gets user-friendly: Upcoming changes in CSF v2.0","link":"https://www.invicti.com/blog/web-security/upcoming-changes-in-nist-cybersecurity-framework-v2/","dc:creator":{"#cdata-section":"Zbigniew Banach"},"pubDate":"Fri, 22 Sep 2023 13:00:00 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"nist"},{"#cdata-section":"cybersecurity-framework"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=47416"},"description":{"#cdata-section":"<p>The NIST CSF is widely used to build security programs in government and business organizations but was not originally intended as a general-purpose cybersecurity framework. We examine the public draft of the upcoming CSF v2.0 to see how NIST is making the framework more universal, user-friendly, and practical.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/upcoming-changes-in-nist-cybersecurity-framework-v2/\">NIST Cybersecurity Framework gets user-friendly: Upcoming changes in CSF v2.0</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>The NIST cybersecurity framework is the de facto standard for building and structuring cybersecurity strategies and activities – but that’s not how it started out, and not what it’s really called. The document in question is the <em>Framework for Improving Critical Infrastructure Cybersecurity</em>, currently at version 1.1. In August 2023, NIST published a draft version of its proposed successor, now simply called <em>The Cybersecurity Framework</em> (CSF) – and unlike the current version, the draft comes with a variety of practical implementation examples.</p>\n\n\n\n<h2 class=\"wp-block-heading\">A framework driven by executive orders</h2>\n\n\n\n<p>Back in 2013, an <a href=\"https://obamawhitehouse.archives.gov/the-press-office/2013/02/12/executive-order-improving-critical-infrastructure-cybersecurity\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">executive order from the Obama administration</a> was issued calling for a standardized cybersecurity framework to describe and structure activities and methodologies related to securing critical infrastructure. In response, the National Institute of Standards and Technology (NIST) developed its <em>Framework for Improving Critical Infrastructure Cybersecurity</em>. While originally intended for organizations managing critical infrastructure services in the US private sector, it became widely used by public and private organizations of all sizes and is commonly known as just the NIST cybersecurity framework.</p>\n\n\n\n<p>Nearly a decade later and hot on the heels of the SolarWinds and Colonial Pipeline attacks, the Biden administration issued its own <a href=\"https://www.invicti.com/blog/web-security/what-president-bidens-executive-order-means-web-application-security/\">executive order on cybersecurity in 2021</a>. Now concerned with the security of all federal systems and their software supply chains, the order (among other things) obligated NIST to prepare and issue suitable guidance. Based on this order and related activities, NIST has revisited its existing framework specifically to make it easier to apply regardless of industry or size of organization.</p>\n\n\n\n<p><a href=\"https://www.nist.gov/news-events/news/2023/08/nist-drafts-major-update-its-widely-used-cybersecurity-framework\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">According to NIST</a>, the stated purpose of the revision is to “reflect current usage of the Cybersecurity Framework, and to anticipate future usage as well.” As part of this effort, the official name is being changed and the language simplified and refocused on practical usability. Most importantly, implementation examples have been added to the previously dry and theoretical document to illustrate how the framework items could translate into real actions.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Governance leads the list of changes</h2>\n\n\n\n<p>Looking at the <a href=\"https://nvlpubs.nist.gov/nistpubs/CSWP/NIST.CSWP.29.ipd.pdf\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">CSF v2.0 public draft</a>, the most prominent change is that we now have six core cybersecurity functions, with the <em>Govern</em> function joining the existing quintet of <em>Identify</em>, <em>Protect</em>, <em>Detect</em>, <em>Respond</em>, and <em>Recover</em>. This is in line with the shift away from protecting critical infrastructure and towards wider applicability, where each organization needs to start by understanding its unique operating context and defining risk management expectations and strategies. Specifically, the <em>Govern</em> function breaks out into the following categories:</p>\n\n\n\n<ul>\n<li>Organizational Context</li>\n\n\n\n<li>Risk Management Strategy</li>\n\n\n\n<li>Cybersecurity Supply Chain Risk Management</li>\n\n\n\n<li>Roles, Responsibilities, and Authorities</li>\n\n\n\n<li>Policies, Processes, and Procedures</li>\n\n\n\n<li>Oversight</li>\n</ul>\n\n\n\n<p>Note that while the <em>Govern</em> function itself is new in v2.0, it mostly incorporates existing outcomes (subcategories) that have been moved out of other functions (mainly <em>Identify</em>) and into a new home that highlights the importance of top-down planning and oversight.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Examples at last</h2>\n\n\n\n<p>The existing NIST CSF is famously dry and theoretical, being originally intended as an aid for creating and managing highly formalized strategies and processes related to securing critical infrastructure. Its popularity as a general-purpose framework saw organizations picking, mixing, and interpreting the abstract outcomes to arrive at actual controls and actions to implement. Based on community feedback and in line with its expanded usage, CSF v2.0 provides implementation examples for each outcome.</p>\n\n\n\n<p>The new examples make it much easier not only to implement outcomes but also just to read the document, helping you understand each outcome and see how it could apply in your specific situation. To illustrate, here’s one of the subcategories in the CSF draft under the new <em>Govern</em> function, category <em>Organizational Context (GV.OC)</em>:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-primary\">\n<p>GV.OC-05: Outcomes, capabilities, and services that the organization depends on are determined and communicated</p>\n</blockquote>\n\n\n\n<p>When read on its own, this is a very generic statement that could be interpreted (and misinterpreted) in many ways. Helpfully, there are now two examples of specific actions that fall under this subcategory:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-quote-primary\">\n<p>Ex1: Create an inventory of the organization’s dependencies on external resources (e.g., facilities, cloud-based hosting providers) and their relationships to organizational assets and business functions<br>&nbsp;</p>\n\n\n\n<p>Ex2: Identify and document external dependencies that are potential points of failure for the organization’s critical capabilities and services</p>\n</blockquote>\n\n\n\n<p>While they only scratch the surface, the examples do make it much easier to start thinking along the right lines to map out your external dependencies and understand their security implications for your specific organization.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Getting familiar with the NIST CSF v2.0 draft</h2>\n\n\n\n<p>The current document is still a public draft and open for community feedback, so there may be more changes before the final version lands in early 2024. Seeing as the implementation examples are both the biggest and the most subjective addition, it’s likely they will see modifications or additions compared to the draft. We will cover the official v2.0 on the blog once it is released, so watch this space for a deeper dive into <a href=\"https://www.invicti.com/blog/web-security/cybersecurity-framework-web-application-security/\">applying the cybersecurity framework to web application security</a>.</p>\n\n\n\n<p>Compared to the current framework, the upcoming NIST CSF v2.0 promises to be much more practical and easier to apply in any organization. Considering its great value for building and maintaining a cybersecurity program, this can only be good news for federal agencies and commercial organizations alike.</p>\n\n\n\n<p>For anyone who wants to get familiar with the new framework without digging through the full document, NIST has prepared a helpful <a href=\"https://csrc.nist.gov/Projects/cybersecurity-framework/Filters#/csf/filters\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">reference tool</a> as an interactive way to browse the updated functions, categories, subcategories, and examples.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/upcoming-changes-in-nist-cybersecurity-framework-v2/\">NIST Cybersecurity Framework gets user-friendly: Upcoming changes in CSF v2.0</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}},{"title":"Surviving the API apocalypse: How to defeat zombie APIs","link":"https://www.invicti.com/blog/web-security/zombie-shadow-api-security/","dc:creator":{"#cdata-section":"Meaghan McBee"},"pubDate":"Thu, 14 Sep 2023 13:00:00 +0000","category":[{"#cdata-section":"Web Security"},{"#cdata-section":"api-security"}],"guid":{"@isPermaLink":"false","#text":"https://www.invicti.com/?p=47296"},"description":{"#cdata-section":"<p>Lurking in the shadowy corners of your environment, zombie APIs can bring unnecessary risk by providing attackers with unseen and untested points of entry. Baking anti-zombie practices into your AppSec strategy is no longer a nice-to-have but a requirement if you want to keep a lid on the risks and headaches that forgotten APIs can bring.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/zombie-shadow-api-security/\">Surviving the API apocalypse: How to defeat zombie APIs</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>In the world of software development, application programming interfaces (APIs) are everywhere. Whether you’re building microservice-based applications or maintaining monolithic architectures, chances are you have services running and you’re exposing and calling their associated APIs in the background. They’re a critical part of software development and nearly two-thirds of developers spend more than 10 hours every week working with APIs – with <a href=\"https://www.postman.com/state-of-api/a-day-week-or-year-in-the-life/#a-day-week-or-year-in-the-life\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">32% spending over 20 hours a week</a>!&nbsp;</p>\n\n\n\n<p>Because APIs are aplenty in web application development and functionality, they’re a prime target for attackers. Palo Alto’s latest report on API security, <a href=\"https://www.paloaltonetworks.com/resources/research/api-security-statistics-report#:~:text=40%25%20of%20organizations%20report%20that,with%20the%20authentication%20of%20APIs.\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"><em>Securing the API Attack Surface</em></a>, found that just 25% of respondents accurately inventory API usages, and 28% lack visibility and control around security during the development of APIs.&nbsp;</p>\n\n\n\n<p>Throwing yet another wrench into the mix, many organizations are plagued by so-called zombie APIs – endpoints or entire APIs that have been forgotten or overlooked, usually after they became outdated. Sitting there unmaintained and exposed to the world without updates, patches, or security testing, such lurking APIs carry significant security risks. And similar to the zombies we see on TV, these forgotten friends-turned-foes can be a serious pain for your DevSecOps teams.</p>\n\n\n\n<h2 class=\"wp-block-heading\">How zombie and shadow APIs bring a plague of risk to your security strategy</h2>\n\n\n\n<p>Zombie APIs are often discussed alongside shadow APIs. While both can lead to similar security headaches, shadow APIs are actively used and often even developed – except they live outside the organization’s best practices and governance. Shadow APIs are often discovered alongside zombie APIs when organizations work to cover more of their attack surface and <a href=\"https://www.invicti.com/learn/web-asset-discovery/\">discover otherwise unknown assets</a>. Together with rogue APIs, they form the unholy trinity of API security:</p>\n\n\n\n<figure class=\"wp-block-table aligncenter ccfg-unique-28bb0c-12 is-style-stripes\"><table class=\"has-fixed-layout\"><thead><tr><th class=\"has-text-align-center\" data-align=\"center\">Shadow API</th><th class=\"has-text-align-center\" data-align=\"center\">Zombie API</th><th class=\"has-text-align-center\" data-align=\"center\">Rogue API</th></tr></thead><tbody><tr><td class=\"has-text-align-center\" data-align=\"center\">Any undocumented and unmonitored API used in your applications (including untracked use of a third-party API)</td><td class=\"has-text-align-center\" data-align=\"center\">Any unmaintained and untracked API that is still accessible in production (often an old version)</td><td class=\"has-text-align-center\" data-align=\"center\">Any API that provides unauthorized access to data or operations (created with malicious intent or caused by security flaws)</td></tr></tbody></table></figure>\n\n\n\n<p>All these types of surprise APIs present a common problem that organizations need to keep an eye on. As more businesses incorporate more APIs into their environments, they can inadvertently contribute to API sprawl that risks leaving behind zombie APIs – and also shadow APIs, if they don’t enforce watertight API inventory procedures.&nbsp;</p>\n\n\n\n<p>The move toward API-first application architectures and the rapid pace of API creation means the sprawl will only worsen for some organizations. Neglecting to maintain and secure APIs can lead to some serious consequences if threat actors get your endpoints in their sights. For example, cybercriminals might use your APIs to:</p>\n\n\n\n<ul>\n<li>Exploit more serious vulnerabilities and gain deeper access to an application.</li>\n\n\n\n<li>Steal sensitive data and use that information to execute other attacks, like phishing.</li>\n\n\n\n<li>Execute full-scale attacks on related services and applications to disrupt service.</li>\n\n\n\n<li>Gain entry to unauthorized administrative areas of a website or application.</li>\n</ul>\n\n\n\n<p>An attack resulting from subpar API security can lead to critical data exposure, financial loss, and lasting damage to customer trust. Fortunately, there are best practices and tools that organizations can implement within their own security strategies to ensure they’re catching those zombie APIs before they snowball into a security apocalypse.</p>\n\n\n\n<h2 class=\"wp-block-heading\">Defeating zombie APIs before the plague can spread&nbsp;</h2>\n\n\n\n<p>When it comes to securing your APIs and API endpoints, it’s important that you first change your mindset around APIs and understand that they’re a critical part of your security posture. If you don’t know how many APIs you have, what endpoints they provide, and what the status is for each one, you can’t possibly understand your full threat exposure and all of the risks you’re facing. You can avoid <a href=\"https://www.invicti.com/blog/web-security/apis-creep-up-on-you-how-to-stay-secure/\">creeping APIs</a> by putting your best foot forward on asset discovery and management while also running regular and consistent scans for deeper intelligence on your environment.&nbsp;</p>\n\n\n\n<p><strong>Follow security best practices around discovery and complete coverage. </strong>It’s critical that as APIs try to sprawl across your digital landscape, you’re staying on top of where everything lives and how secure each asset is:&nbsp;</p>\n\n\n\n<ul>\n<li>Use web asset discovery to find everything you have out in the wild, keeping a running inventory of all your applications and the APIs they expose.</li>\n\n\n\n<li>Conduct regular reviews and audits of your security tools, configurations, and workflows to spot areas for improvement.&nbsp;</li>\n\n\n\n<li>Document everything related to APIs, from development to maintenance to security testing, and ensure DevSecOps teams have access to the documentation.</li>\n</ul>\n\n\n\n<p><strong>Build security into the software development lifecycle with a focus on APIs.</strong> When you ensure that security is a routine part of your development workflow, you can catch more issues before they reach production:&nbsp;</p>\n\n\n\n<ul>\n<li>Use <a href=\"https://www.invicti.com/learn/dynamic-application-security-testing-dast/\">dynamic application security testing (DAST)</a> to cover your entire attack surface (including APIs) regardless of technology or availability of source code.</li>\n\n\n\n<li>Build agile security into the coding process so that scanning in development and production becomes a standard procedure.&nbsp;</li>\n\n\n\n<li>Select security tools that cover all major API types and definitions with accurate and automatic authentication.&nbsp;</li>\n</ul>\n\n\n\n<p>With a thoughtful and efficient combination of the right tools and best practices, zombie APIs don’t have to sneak up on you in the dark. When <a href=\"https://www.invicti.com/white-papers/api-security-vulnerability-testing-real-world-invicti-white-paper/\">API security becomes a routine and automated part of your AppSec program</a>, undead endpoints don’t get a look in anymore – and your development projects don’t have to put the brakes on innovation to let security catch up.</p>\n\n\n\n<p>Watch our on-demand webinar <a href=\"https://www.invicti.com/webinars/api-security-decoded-emerging-trends-effective-appsec-strategies/\"><em>API Security Decoded: Insights into Emerging Trends and Effective AppSec Strategies</em></a> to learn more.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.invicti.com/blog/web-security/zombie-shadow-api-security/\">Surviving the API apocalypse: How to defeat zombie APIs</a> appeared first on <a rel=\"nofollow\" href=\"https://www.invicti.com\">Invicti</a>.</p>\n"}}]}}}