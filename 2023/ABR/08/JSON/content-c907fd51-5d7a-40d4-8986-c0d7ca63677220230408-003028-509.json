{"?xml":{"@version":"1.0","@encoding":"UTF-8"},"rss":{"@version":"2.0","@xmlns:content":"http://purl.org/rss/1.0/modules/content/","@xmlns:wfw":"http://wellformedweb.org/CommentAPI/","@xmlns:dc":"http://purl.org/dc/elements/1.1/","@xmlns:atom":"http://www.w3.org/2005/Atom","@xmlns:sy":"http://purl.org/rss/1.0/modules/syndication/","@xmlns:slash":"http://purl.org/rss/1.0/modules/slash/","channel":{"title":"NowSecure","atom:link":{"@href":"https://www.nowsecure.com/feed/","@rel":"self","@type":"application/rss+xml"},"link":"https://www.nowsecure.com/","description":"Deliver Secure Mobile Apps Faster","lastBuildDate":"Wed, 05 Apr 2023 19:54:14 +0000","language":"en-US","sy:updatePeriod":"\n\thourly\t","sy:updateFrequency":"\n\t1\t","generator":"https://wordpress.org/?v=6.1.1","image":{"url":"https://www.nowsecure.com/wp-content/uploads/2018/12/cropped-Image-from-iOS-32x32.png","title":"NowSecure","link":"https://www.nowsecure.com/","width":"32","height":"32"},"item":[{"title":"High-Tech Mobile Apps Expose Data","link":"https://www.nowsecure.com/blog/2023/03/29/high-tech-mobile-apps-expose-data/","dc:creator":{"#cdata-section":"Ola Alibaloye"},"pubDate":"Wed, 29 Mar 2023 11:30:00 +0000","category":[{"#cdata-section":"Mobile Security Solutions"},{"#cdata-section":"Research & Threat Intel"},{"#cdata-section":"Android"},{"#cdata-section":"Application Development"},{"#cdata-section":"DevSecOps"},{"#cdata-section":"mobile app security"},{"#cdata-section":"mobile app security testing"},{"#cdata-section":"Mobile DevSecOps"},{"#cdata-section":"Research"},{"#cdata-section":"Tools"},{"#cdata-section":"Vulnerabilities"}],"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20978"},"description":{"#cdata-section":"<p>Security and privacy vulnerabilities in popular business software could spill corporate secrets.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/03/29/high-tech-mobile-apps-expose-data/\">High-Tech Mobile Apps Expose Data</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p><em>Security and privacy vulnerabilities in popular business software could spill corporate secrets.</em></p>\n\n\n\n<p></p>\n\n\n<a href=\"https://www.nowsecure.com/wp-content/uploads/2023/03/NowSecureHighTechAppsInfog.pdf\" class=\"pdfemb-viewer\" style=\"\" data-width=\"max\" data-height=\"max\" data-mobile-width=\"500\"  data-scrollbar=\"none\" data-download=\"on\" data-tracking=\"on\" data-newwindow=\"on\" data-pagetextbox=\"off\" data-scrolltotop=\"off\" data-startzoom=\"100\" data-startfpzoom=\"100\" data-toolbar=\"bottom\" data-toolbar-fixed=\"off\">NowSecureHighTechAppsInfog<br/></a>\n<p class=\"wp-block-pdfemb-pdf-embedder-viewer\"></p>\n\n\n<section id=\"featured-resource-block_5a1ba1050192aa4d47cabfcbe8ab2f94\" class=\"featured-resource color- bg- mt-none mb-none\"\n\t>\n    <div class=\"bol-container\">\n        <div class=\"featured-resource-content js-set-min-height d-flex flex-column flex-lg-row justify-content-between align-items-center\">\n\n\t\t\t                <div class=\"featured-image-holder js-featured-image-holder\"\n                     style='background-image: url(\"https://www.nowsecure.com/wp-content/uploads/2017/02/OWASP-Guide-thumbnail-768x480-1-730x400.png\")'\n                ></div>\n\t\t\t\n            <div class=\"content-holder\">\n                <!-- I took the following snippet out for now, I do not believe that it is supposed to be here, Jacob -->\n\t\t\t\t<!--\n                    <span>\n                                            </span>\n\t\t\t\t-->\n                <h4 class=\"card-title text-bold color-\">\n                    <a href=\"https://discover.nowsecure.com/c/manager-guide-owasp?x=9z-j5n#page=1\">\n\t\t\t\t\t\tAn Essential Guide to the OWASP Mobile App Security (MAS) Project                    </a>\n                </h4>\n\n\t\t\t\t\n\t\t\t\t\n        <div class=\"cta-holder d-flex flex-column flex-md-row align-items-center justify-content-start\">\n\t\t\t\t\t\t\t                    <div class=\"mt-sm d-flex 0\">\n\t\t\t\t\t\t<a href='https://discover.nowsecure.com/c/manager-guide-owasp?x=9z-j5n#page=1' target='_self' class='bol-btn-primary'>Download Now</a>                    </div>\n\t\t\t\t\t\t\t        </div>\n\t\t\n            </div>\n        </div>\n    </div>\n</section>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/03/29/high-tech-mobile-apps-expose-data/\">High-Tech Mobile Apps Expose Data</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"Mobile Application Security Assessment","link":"https://www.nowsecure.com/blog/2023/03/15/mobile-application-security-assessment/","dc:creator":{"#cdata-section":"NowSecure Marketing"},"pubDate":"Wed, 15 Mar 2023 11:30:00 +0000","category":{"#cdata-section":"Industry News"},"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20894"},"description":{"#cdata-section":"<p>Without a comprehensive plan for security, cyberattackers can exploit the security bugs in your mobile app and severely damage your company and users. Leveraging a mobile application security assessment can help you establish an effective security plan to increase the resilience of your mobile app, protect data and facilitate compliance with application security standards. Read [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/03/15/mobile-application-security-assessment/\">Mobile Application Security Assessment</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>Without a comprehensive plan for security, cyberattackers can exploit the security bugs in your mobile app and severely damage your company and users. Leveraging a <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-security-testing/\">mobile application security assessment</a> can help you establish an effective security plan to increase the resilience of your mobile app, protect data and facilitate compliance with <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-standards-compliance/\">application security standards</a>. Read on to learn more about the basics of a <strong>mobile application security assessment</strong>, how it works and the top security and privacy risks to avoid.</p>\n\n\n\n<p></p>\n\n\n\n<h2><strong>OWASP Mobile Application Security Verification (MASVS) Standard</strong></h2>\n\n\n\n<p>The <a href=\"https://www.nowsecure.com/owasp-mobile-appsec-testing/\">OWASP Mobile Application Security Verification Standard (MASVS)</a> acts as the industry standard for mobile application security assessments. This standard provides developers with eight categories of crucial security requirements. Following MASVS requirements in development and testing ensures that mobile apps meet a common security standard to guard against weaknesses that can leave mobile apps open to attack.&nbsp; Let’s review the basic mobile app security requirements laid out by MASVS.&nbsp;</p>\n\n\n\n<p></p>\n\n\n\n<h2><strong>Mobile Application Security Requirements</strong></h2>\n\n\n\n<p>The <a href=\"https://discover.nowsecure.com/c/manager-guide-owasp?x=9z-j5n#page=1\">OWASP MASVS 2.0 </a>stipulates eight security requirements:</p>\n\n\n\n<ol>\n<li>Architecture, Design, and Threat Modeling Requirements</li>\n\n\n\n<li>Data Storage and Privacy Requirements</li>\n\n\n\n<li>Cryptography Requirements</li>\n\n\n\n<li>Authentication and Sessions Management Requirements</li>\n\n\n\n<li>Network Communication Requirements</li>\n\n\n\n<li>Platform Interaction Requirements</li>\n\n\n\n<li>Code Quality and Build Setting Requirements</li>\n\n\n\n<li>Resilience Requirements</li>\n</ol>\n\n\n\n<p>These security requirements address the security risks within mobile apps to minimize the mobile attack surface and reduce risk.</p>\n\n\n\n<p></p>\n\n\n\n<h2><strong>How Do You Assess Mobile Application Security?</strong></h2>\n\n\n\n<p>In order to accurately assess <a href=\"https://www.nowsecure.com/blog/2022/05/11/what-is-mobile-application-security/\">mobile app security</a>, you need to understand the potential threat actors (who is most likely to pose a threat to your app), identify sensitive data that needs to be protected (consumer information, intellectual property, etc.), map out the mobile app’s attack surface (custom code, open-source dependencies, containers), find the weaknesses in your security process (miscommunication between departments, development speed vs security, etc.) and perform threat modeling to formulate a security plan to reduce risk (new security measures and automated mobile AppSec testing tools).&nbsp;</p>\n\n\n\n<p><a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-penetration-testing/\">Mobile app penetration testing</a> (pen testing) remains an essential step in identifying weaknesses in high-risk mobile apps that could potentially expose sensitive data.</p>\n\n\n\n<p>Pen testing consists of a simulated attack on a mobile app conducted by ethical hackers, aiming to evaluate the security and uncover security and privacy bugs. Due to the nature of pen testing, businesses that choose to outsource the work should only use the services of a trusted, reliable pen testing provider. <a href=\"https://www.nowsecure.com/products/nowsecure-mobile-app-penetration-testing-services/\">NowSecure</a> is the only pen testing provider to perform explicit OWASP MASVS and MASTG pen testing, ensuring the highest standard in the industry.&nbsp;</p>\n\n\n\n<p>Moreover, there are three different types of <a href=\"https://www.nowsecure.com/blog/2022/12/14/demystifying-mobile-app-pen-testing/\">penetration tests</a> that can be used based on who is most likely to be the threat actor for your app and the kind of information accessible.&nbsp;&nbsp;</p>\n\n\n\n<p><strong>Top 3 Types of Penetration Testing&nbsp;&nbsp;</strong></p>\n\n\n\n<ol>\n<li><strong>Black Box Penetration Testing</strong></li>\n</ol>\n\n\n\n<p>Black box testing simulates how an uninformed attacker would attempt to exploit bugs in a mobile app. In this approach, the tester does not know the internal working structure of the mobile app. While this is the most realistic approach, it can also let some security bugs fall through the cracks due to a lack of information about the mobile app.&nbsp;</p>\n\n\n\n<ol start=\"2\">\n<li><strong>White Box Penetration Testing</strong></li>\n</ol>\n\n\n\n<p>White box testing aims to test a mobile app&#8217;s security from an informed attacker&#8217;s viewpoint. The attacker has access to the internal working structure of the mobile app as well as documents and plans. Due to this access, white box testing expedites timelines compared to black box testing. The attacker also tests the mobile app more comprehensively. However, this simulated attack provides a less realistic scenario than black box testing.&nbsp;</p>\n\n\n\n<ol start=\"3\">\n<li><strong>Gray Box Penetration Testing</strong></li>\n</ol>\n\n\n\n<p>As the third variation of penetration testing, gray box testing combines aspects of both black box and white box testing. In this approach, the tester accesses limited information about the mobile app, such as login credentials. Gray box testing uncovers the potential damage that could be caused by a privileged user with access to the mobile app.&nbsp;</p>\n\n\n\n<p>Now that you understand the different use cases between pen testing methods, let’s review the top security issues that pose a risk to your mobile app.&nbsp;</p>\n\n\n\n<h2><strong>What Are Common Mobile AppSec Issues?</strong></h2>\n\n\n\n<p>The OWASP Mobile Top 10 previously identified the top mobile application security risks to watch for. OWASP has since retired that list and replaced it with <a href=\"https://mas.owasp.org/MASVS/\" target=\"_blank\" rel=\"noreferrer noopener\">MASVS</a>.&nbsp;</p>\n\n\n\n<p>The top mobile AppSec issues NowSecure testing finds include:</p>\n\n\n\n<ul>\n<li>Data stored in an insecure, exposed location</li>\n\n\n\n<li>Improperly coded network calls</li>\n\n\n\n<li>Insecure authentication or authorization&nbsp;</li>\n\n\n\n<li>Insecure coding practices</li>\n\n\n\n<li>Reverse engineering</li>\n</ul>\n\n\n\n<p><strong>Looking to protect your mobile apps from these security risks?</strong></p>\n\n\n\n<p>NowSecure supports the <a href=\"https://www.nowsecure.com/owasp-mobile-appsec-testing/\">OWASP MASVS</a> and embraces <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-standards-compliance/\">standards-based testing</a> to help you&nbsp; identify and easily fix mobile security bugs. <a href=\"https://www.nowsecure.com/products/nowsecure-platform/\">NowSecure Platform</a> provides automated coverage for MASVS in the development pipeline while <a href=\"https://www.nowsecure.com/products/nowsecure-mobile-app-penetration-testing-services/\">NowSecure Pen Testing as a Service</a> gives you a manual assessment that can be used to validate compliance with any level of the OWASP MASVS. In addition, NowSecure can guide you through the App Defense Alliance (ADA) mobile application security assessment<a href=\"https://www.nowsecure.com/products/nowsecure-ada-masa-android-independent-security-review/\"> (MASA) validation</a>. <a href=\"https://info.nowsecure.com/on-demand-continuous-mobile-appsec-testing.html\">Learn more.</a></p>\n\n\n<section id=\"featured-resource-block_4888c4ca8648d975e742008478680fbc\" class=\"featured-resource color- bg- mt-none mb-none\"\n\t>\n    <div class=\"bol-container\">\n        <div class=\"featured-resource-content js-set-min-height d-flex flex-column flex-lg-row justify-content-between align-items-center\">\n\n\t\t\t                <div class=\"featured-image-holder js-featured-image-holder\"\n                     style='background-image: url(\"https://www.nowsecure.com/wp-content/uploads/2017/02/OWASP-Guide-thumbnail-768x480-1-730x400.png\")'\n                ></div>\n\t\t\t\n            <div class=\"content-holder\">\n                <!-- I took the following snippet out for now, I do not believe that it is supposed to be here, Jacob -->\n\t\t\t\t<!--\n                    <span>\n                                            </span>\n\t\t\t\t-->\n                <h4 class=\"card-title text-bold color-\">\n                    <a href=\"https://discover.nowsecure.com/c/manager-guide-owasp?x=9z-j5n#page=1\">\n\t\t\t\t\t\tAn Essential Guide to the OWASP Mobile App Security (MAS) Project                    </a>\n                </h4>\n\n\t\t\t\t\n\t\t\t\t\n        <div class=\"cta-holder d-flex flex-column flex-md-row align-items-center justify-content-start\">\n\t\t\t\t\t\t\t                    <div class=\"mt-sm d-flex 0\">\n\t\t\t\t\t\t<a href='https://discover.nowsecure.com/c/manager-guide-owasp?x=9z-j5n#page=1' target='_self' class='bol-btn-primary'>Download Now</a>                    </div>\n\t\t\t\t\t\t\t        </div>\n\t\t\n            </div>\n        </div>\n    </div>\n</section>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/03/15/mobile-application-security-assessment/\">Mobile Application Security Assessment</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"Reverse Engineering Android Apps to Bypass Root Detection Capabilities","link":"https://www.nowsecure.com/blog/2023/03/01/reverse-engineering-android-apps-to-bypass-root-detection-capabilities/","dc:creator":{"#cdata-section":"Ola Alibaloye"},"pubDate":"Wed, 01 Mar 2023 12:30:00 +0000","category":{"#cdata-section":"Research & Threat Intel"},"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20840"},"description":{"#cdata-section":"<p>Smartphone manufacturers ship Android devices with a strict set of permissions and access control systems to protect users from security risks and prevent them from accidentally damaging their devices. However, these systems may feel restrictive to users who wish to customize their device in a way that was not intended by the manufacturer. In order [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/03/01/reverse-engineering-android-apps-to-bypass-root-detection-capabilities/\">Reverse Engineering Android Apps to Bypass Root Detection Capabilities</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p><style>\n.single-content span[style*=\"color: #FE941A\"], .single-content code {\n    color: #60A876;\n    background: initial;\n</style>\n</p>\n\n\n\n<p>Smartphone manufacturers ship Android devices with a strict set of permissions and access control systems to protect users from security risks and prevent them from accidentally damaging their devices. However, these systems may feel restrictive to users who wish to customize their device in a way that was not intended by the manufacturer.</p>\n\n\n\n<p>In order to gain complete access to an Android device, it must be rooted. Having root access to a device provides the following benefits, among others:&nbsp;</p>\n\n\n\n<ul>\n<li>Installing mobile apps found on third party App Stores</li>\n\n\n\n<li>Sideloading applications</li>\n\n\n\n<li>Applying custom themes/skins for applications and the home screen</li>\n\n\n\n<li>Improving battery life</li>\n\n\n\n<li>Enhancing performance</li>\n\n\n\n<li>Modifying behavior of mobile apps on the device</li>\n</ul>\n\n\n\n<p>Having root access to Android devices is a necessary component of <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-security-testing/\">mobile application security testing</a> at NowSecure. Without it, security researchers would not be able to gain insight into the inner workings of mobile apps as easily.</p>\n\n\n\n<h2>What Is Root Detection?</h2>\n\n\n\n<p>When users have root access, they’re able to tamper with every part of the device. While not every user of a rooted device may have malicious intent, some developers don’t want to allow rooted devices to use their mobile apps. Allowing a mobile app to run on a rooted device opens it up to a wide variety of exploits. Sensitive mobile apps such as <a href=\"https://www.nowsecure.com/blog/2022/11/30/mobile-banking-finance-apps-fall-short-on-security/\">banking</a>, <a href=\"https://www.nowsecure.com/blog/2023/01/25/mhealth-apps-diagnosed-with-poor-security/\">medical</a>, shopping and <a href=\"https://www.nowsecure.com/solutions/by-industry/government/\">government</a> often implement checks that determine if the app is running on a device with root privileges. In most cases, these checks will prevent the mobile app from functioning properly. Sometimes, developers implement strict root detection capabilities that prevent apps from running at all on rooted devices.</p>\n\n\n\n<p>Bypassing root detection is often possible, however the amount of skill that’s required can vary greatly depending on the mobile app. There are many root detection techniques that can be implemented. Some apps use basic checks that can easily be found online, while others may use custom detection methods that have never been seen before. Because most root detection logic runs directly on a device, these techniques can often be uncovered through reverse engineering.</p>\n\n\n\n<p>Through a combination of static and dynamic analysis, you can uncover what the root detection is doing, when it is called, and how to circumvent the checks. The steps will not be exactly the same for every app, however the process to bypass root detection is similar in most cases.</p>\n\n\n\n<h2>Tutorial for Reverse Engineering Android Apps</h2>\n\n\n\n<p>Being able to bypass root detection is an invaluable skill that all mobile security researchers and <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-penetration-testing/\">mobile pen testers</a> should have in their toolkit.</p>\n\n\n\n<p>This tutorial covers the steps to reverse engineer Android apps and bypass three common root detection techniques using <a href=\"https://www.nowsecure.com/frida/\">Frida</a>. This tutorial uses a rudimentary test app, but the same techniques are applicable to real-world mobile apps. You can download the test app <a href=\"https://github.com/nowsecure/NowSecure-Android-Root-Detection-Test-App\">here</a>:</p>\n\n\n\n<h2>Prerequisites</h2>\n\n\n\n<ul>\n<li>A rooted Android device</li>\n\n\n\n<li><a href=\"https://github.com/nowsecure/NowSecure-Android-Root-Detection-Test-App\">An app with root detection </a></li>\n\n\n\n<li>JADX-GUI</li>\n\n\n\n<li>Frida Python Packages (frida, frida-tools)</li>\n\n\n\n<li>Frida Server running on the target device (<a href=\"https://frida.re/docs/android/\" target=\"_blank\" rel=\"noreferrer noopener\">how to</a>)</li>\n\n\n\n<li>Basic Knowledge of Java and Javascript</li>\n</ul>\n\n\n\n<h2>Finding the detection code with static analysis</h2>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" width=\"403\" height=\"807\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_1RootBypass.jpg\" alt=\"\" class=\"wp-image-20841\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_1RootBypass.jpg 403w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_1RootBypass-360x721.jpg 360w\" sizes=\"(max-width: 403px) 100vw, 403px\" /></figure></div>\n\n\n<p>Upon launching the sample mobile app, we can see the three root detection methods that the app is using. Since all three are <code>true</code>, root access has been detected and the “This application appears to be running on a hacked device!” toast appears at the bottom of the screen. Since this toast appears every time the root check fails, we have an idea of where to start looking in the decompiled code.</p>\n\n\n\n<p>To decompile the code, start JADX-GUI, select “Open File” and select the APK to be decompiled. Once the Android app is decompiled, start searching for words or phrases that could be related to root detection. Some helpful phrases could be: root detected, su, magisk, root check, is rooted, jailbreak, etc. Since we have a warning toast that displays when root is detected, we can search for the toast’s content.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"960\" height=\"510\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_2AppDebugjadx-960x510.jpg\" alt=\"\" class=\"wp-image-20842\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_2AppDebugjadx-960x510.jpg 960w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_2AppDebugjadx-360x191.jpg 360w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_2AppDebugjadx-768x408.jpg 768w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_2AppDebugjadx.jpg 1432w\" sizes=\"(max-width: 960px) 100vw, 960px\" /></figure></div>\n\n\n<p>The search results show us the location in the decompiled code where this warning toast is created. By clicking on the search result, we can navigate to the code that is responsible for performing the check and deciding if this toast should be displayed.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"751\" height=\"116\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_3checkforroot.png\" alt=\"\" class=\"wp-image-20844\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_3checkforroot.png 751w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_3checkforroot-360x56.png 360w\" sizes=\"(max-width: 751px) 100vw, 751px\" /></figure></div>\n\n\n<p>The source code shows that a function called <code>checkForRoot</code> is called. If the function returns <code>true</code>, then root access has been detected. Based on this information, the code that we need to bypass must reside inside of this function.</p>\n\n\n\n<h2>Understanding and Bypassing the Detection Code</h2>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"583\" height=\"186\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_4booleanvalues.png\" alt=\"\" class=\"wp-image-20845\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_4booleanvalues.png 583w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_4booleanvalues-360x115.png 360w\" sizes=\"(max-width: 583px) 100vw, 583px\" /></figure></div>\n\n\n<p>Inside the <code>checkForRoot</code> function, we see that three checks are performed. These checks return <code>boolean</code> values and if any of them are <code>true</code>, then root was detected. These three checks correspond to the three values displayed on the app’s home screen, so we will check them out one by one. Our goal will be to manipulate the app’s behavior, so all these checks return <code>false</code>. In order to manipulate the mobile app’s behavior, we will rely on a dynamic analysis tool called <a href=\"https://frida.re/\" target=\"_blank\" rel=\"noreferrer noopener\">Frida</a>. Frida uses various methods to hook into an application’s runtime and provides an interface for researchers to view or manipulate how a program operates while it is running. In this tutorial, we will use Frida’s JavaScript API to implement our hooks.</p>\n\n\n\n<h2>su Binary Check</h2>\n\n\n\n<h4>Understanding the su binary check</h4>\n\n\n\n<p>The first check that the application performs is contained in <code>doesSuBinaryExist</code>.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"615\" height=\"182\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_5doesSuBinaryExist.png\" alt=\"\" class=\"wp-image-20846\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_5doesSuBinaryExist.png 615w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_5doesSuBinaryExist-360x107.png 360w\" sizes=\"(max-width: 615px) 100vw, 615px\" /></figure></div>\n\n\n<p>This function creates an array of file paths where an <code>su</code> binary could potentially be located. The code then initializes a <code>File</code> class for each of these paths and checks if the file can be found using an <code>exists</code> call.This check is commonly used in root detection, because an su binary is used by users or applications to gain <code>sudo</code> or <code>root</code> access to a device.In order to bypass this check, we must trick the app into thinking that the <code>su</code> binary does not exist on the device. Since we know that it uses <code>exists</code> to find the binary, that should be our target.</p>\n\n\n\n<h4>Bypassing the su binary check</h4>\n\n\n\n<p>Since we want to modify the <code>exists</code> method, we first need to hook into the class that calls the method. In this case, <code>exists</code> is being called from inside the File class. By looking at the list of classes imported into the MainActivity class at the top of the <code>file</code>, we can obtain the <code>File</code> class name that we are interested in.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"343\" height=\"157\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_6File.png\" alt=\"\" class=\"wp-image-20847\"/></figure></div>\n\n\n<p>To start writing the hook, we need to open up an empty JavaScript file. We can start hooking the <code>File</code> class with:</p>\n\n\n\n<p><code>const File = Java.use('java.io.File');</code></p>\n\n\n\n<p>Next, we need to state which method we want to modify. We can do this for the <code>exists</code> method like this:</p>\n\n\n\n<p><code>File.exists.implementation = function () {}</code></p>\n\n\n\n<p>This line of code allows us to overwrite the behavior of what should happen when a call is made to <code>exists</code>. Any code that we want to run should be placed inside of the function that we have just defined.</p>\n\n\n\n<p>In order to understand how to implement the bypass, we need to understand how this method works. We can do this by taking a peek at the <a href=\"https://developer.android.com/reference/java/io/File#exists()\" target=\"_blank\" rel=\"noreferrer noopener\">Android documentation</a>. The documentation explains that the <code>exists</code> method returns <code>true</code> if the path exists and <code>false</code> if it doesn’t. In this case, all we need to do is check if the file path being checked ends with <code>su</code>, and if it does, then we force the method to return <code>false</code>. If it is not checking for <code>su</code>, then we can continue the method call as normal using <code>this.exists.</code></p>\n\n\n\n<p>In order to determine what path <code>exists</code> is being called on, we’ll refer once again to the Android documentation and see if the <code>File</code> class can provide access to that information. According to the <a href=\"https://developer.android.com/reference/java/io/File#getPath()\" target=\"_blank\" rel=\"noreferrer noopener\">docs</a>, the <code>File</code> class has a <code>getPath</code> method that returns the file path as a string. We can manually call this method and use the output to check if the call should be bypassed or not.</p>\n\n\n\n<p>The full hook looks like this:</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: jscript; title: ; notranslate\">\nJava.perform(function(){\n   // Su Exists bypass\n   const File = Java.use('java.io.File');\n   File.exists.implementation = function () {\n       const filePath = this.getPath();\n      \n       if (filePath.endsWith(&quot;su&quot;)){\n           console.log(`Bypassing exists() call to: ${filePath}`);\n           return false;\n       }\n       console.log(`Calling exists() on: ${filePath}`);\n       return this.exists();\n   };\n})\n</pre></div>\n\n\n<p><strong>Note</strong>: The hook is wrapped in <code>Java.perform()</code>, because this ensures that the Java Virtual Machine will be initialized before we start loading our hooks. If this call isn’t included, you may experience unexpected behavior.</p>\n\n\n\n<p>Save the JavaScript file and spawn your app with Frida using the following command:</p>\n\n\n\n<p><code>frida -U -f com.example.rootbypass -l root_bypass.js</code></p>\n\n\n\n<p>The behavior of each argument is as follows:</p>\n\n\n\n<ul>\n<li><code>-U</code> = use the device connected via USB</li>\n\n\n\n<li><code>-f </code>= the package name of the application you are testing</li>\n\n\n\n<li><code>-l </code>= the JavaScript file to be loaded</li>\n</ul>\n\n\n\n<p>If the hook was written properly, the target app should spawn and the terminal should output the following:</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"517\" height=\"381\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_7Fridaoutput.png\" alt=\"\" class=\"wp-image-20848\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_7Fridaoutput.png 517w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_7Fridaoutput-360x265.png 360w\" sizes=\"(max-width: 517px) 100vw, 517px\" /></figure></div>\n\n\n<p>The console output shows us that the su checks were successfully bypassed and all other <code>exists</code> calls carried on as normal. We can also verify that the bypass worked by taking a look at the app’s screen.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"403\" height=\"483\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_8RootCheckResults.png\" alt=\"\" class=\"wp-image-20872\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_8RootCheckResults.png 403w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_8RootCheckResults-360x431.png 360w\" sizes=\"(max-width: 403px) 100vw, 403px\" /></figure></div>\n\n\n<p>That’s one down and two to go!</p>\n\n\n\n<h3>which su Check</h3>\n\n\n\n<h4>Understanding the which su check</h4>\n\n\n\n<p>Another way that applications can check if the <code>su</code> binary exists on a device is by using the <code>which</code> command. In our decompiled code, we can see that it runs <code>which su</code> to try to uncover the file path for the binary.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"676\" height=\"303\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_9whichsu.png\" alt=\"\" class=\"wp-image-20850\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_9whichsu.png 676w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_9whichsu-360x161.png 360w\" sizes=\"(max-width: 676px) 100vw, 676px\" /></figure></div>\n\n\n<p>This code executes a <code>which su</code> by using the <code>Runtime</code> class. If the binary is found, the command sends the file path to stdout, but if it finds nothing, nothing will be printed to the screen. The root detection method then returns <code>true</code> if <code>which su</code> sends anything to stdout, otherwise it returns <code>false</code>.</p>\n\n\n\n<blockquote\n        class=\"custom-quote  \">\n\n    <i class=\"fas fa-quote-left\"></i>\n\tBecause most root detection logic runs directly on a device, these techniques can often be uncovered through reverse engineering.    <i class=\"fas fa-quote-right\"></i>\n\n\t\n</blockquote>\n\n\n\n<h4>Bypassing the which su check</h4>\n\n\n\n<p>Once again, we need to refer to the Android documentation, but this time we need to see how the <code>exec</code> method operates. According to the <a href=\"https://developer.android.com/reference/java/lang/Runtime#exec(java.lang.String[])\" target=\"_blank\" rel=\"noreferrer noopener\">docs</a>, it appears that there are multiple versions of <code>exec</code> that can be called, so we need to ensure that we are hooking the version that our target app uses. In this case, the&nbsp; <code>which su</code> command is represented by an array of strings, so we need to craft a hook using the documentation for the overload that takes a single array of strings as a parameter.&nbsp;</p>\n\n\n\n<p>Because&nbsp; we also need access to the argument in our hook, we can hook the argument by adding it to the function signature that we create. The setup for the new hook looks like this:</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: jscript; title: ; notranslate\">\nconst Runtime = Java.use('java.lang.Runtime');\nRuntime.exec.overload('&#91;Ljava.lang.String;').implementation = function(commandArray){}\n</pre></div>\n\n\n<p>Now that the skeleton for our hook has been created, we need to give it functionality. Because we want to bypass commands that reference the <code>su</code> binary, we should loop over all the words in the command and see if we find<code> su</code>. The command is stored as an array of strings, so this can be done with a simple for loop. If <code>su</code> is found, we need to swap that word for a string that does not exist on the device and <code>exec</code> the substituted command. The code to should look like this:</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: jscript; title: ; notranslate\">\nJava.perform(function(){\n   // Shell &quot;which su&quot; Bypass\n   const Runtime = Java.use('java.lang.Runtime');\n   Runtime.exec.overload('&#91;Ljava.lang.String;').implementation = function(commandArray){\n       for (var i = 0; i &lt; commandArray.length; i++) {\n           if (commandArray&#91;i] == &quot;su&quot;) {\n               console.log(&quot;Bypassing command referencing 'su'!&quot;);\n               var clonedArray = commandArray.slice();\n               clonedArray&#91;i] = &quot;NotARealBinary&quot;;\n               return this.exec(clonedArray);\n           }\n       }\n       console.log(`Calling exec() on: ${cmd}`)\n       return this.exec(cmd);\n   }\n})\n</pre></div>\n\n\n<p>This new code can be placed inside the <code>Java.perform()</code> function from the other hook. When the app is launched with frida, the app should now display two bypassed checks:</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"401\" height=\"468\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_10RootDetected.png\" alt=\"\" class=\"wp-image-20852\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_10RootDetected.png 401w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_10RootDetected-360x420.png 360w\" sizes=\"(max-width: 401px) 100vw, 401px\" /></figure></div>\n\n\n<h2>Root Application Check</h2>\n\n\n\n<h4>Understanding the root application check</h4>\n\n\n\n<p>Some apps such as <a href=\"https://github.com/topjohnwu/Magisk\">Magisk</a> are commonly used to assist in the rooting process. Having any of these apps installed on a device indicates that it has likely been rooted.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"677\" height=\"193\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_11isRootAppInstalled.png\" alt=\"\" class=\"wp-image-20853\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_11isRootAppInstalled.png 677w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_11isRootAppInstalled-360x103.png 360w\" sizes=\"(max-width: 677px) 100vw, 677px\" /></figure></div>\n\n\n<p>This method checks if any of the three provided root application package names are installed on the device and, if a package is detected, it returns <code>true</code>.</p>\n\n\n\n<h4>Bypassing the root application check</h4>\n\n\n\n<p>At first glance, this seems like it should be an easy hook to write. All one should have to do is hook the call to <code>getPackageInfo</code> from the <code>PackageManager</code> class and return <code>false</code>. However, if you write a hook for the <code>PackageManager</code> class like this, your hook will never run:</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: jscript; title: ; notranslate\">\nconst PackageManager = Java.use(&quot;android.content.pm.PackageManager&quot;);\nPackageManager.getPackageInfo.overload('java.lang.String', 'int').implementation = function (packageName, flags) {console.log(&quot;test&quot;);}\n</pre></div>\n\n\n<p>This is because the PackageManager is an abstract class. This means that you have to search for a class that extends the <code>PackageManger</code> class and write a hook for that. Luckily, Android is open source, so we can easily see all the classes that extend the <code>PackageManager</code> class! If we pull up the <a href=\"https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/java/android/content/pm/PackageManager.java;l=118;bpv=1;bpt=1\" target=\"_blank\" rel=\"noreferrer noopener\">Android source code</a>, click on <code>PackageManager</code>, and then click “References” at the bottom, we can see a list of classes that extend it!</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"818\" height=\"242\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_12PackageManager.png\" alt=\"\" class=\"wp-image-20854\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_12PackageManager.png 818w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_12PackageManager-360x107.png 360w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_12PackageManager-768x227.png 768w\" sizes=\"(max-width: 818px) 100vw, 818px\" /></figure></div>\n\n\n<p>The first class that extends <code>PackageManager</code> is called <code>ApplicationPackageManager</code>. Using the knowledge gained from the previous bypasses, we need to look up the arguments and return value for <code>getPackageInfo</code> in the Android docs. Once we understand how the method works and have written the skeleton, the bypass must check if the target package matches what we have installed on our device and insert a fake package name. The finished hook should look like this:</p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: jscript; title: ; notranslate\">\nJava.perform(function(){\n   // Root Application bypass\n   const PackageManager = Java.use('android.app.ApplicationPackageManager');\n   PackageManager.getPackageInfo.overload('java.lang.String', 'int').implementation = function (packageName, flags) {\n       if (packageName.includes(&quot;magisk&quot;)){\n           console.log(`Bypassing getPackageInfo() on: ${packageName}`);\n           return this.getPackageInfo(&quot;this.package.does.not.exist&quot;, flags);\n       }\n       console.log(`Calling getPackageInfo() on: ${packageName} with flags=${flags}`);\n       return this.getPackageInfo(packageName, flags);\n   };\n})\n</pre></div>\n\n\n<p>Make sure that the hook takes into account the correct overload of <code>getPackageInfo</code> and the function signature accepts both parameters. When this hook is combined with the previous two, we should see the terminal should look like this:</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"631\" height=\"417\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_13Fridaterminal.png\" alt=\"\" class=\"wp-image-20855\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_13Fridaterminal.png 631w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_13Fridaterminal-360x238.png 360w\" sizes=\"(max-width: 631px) 100vw, 631px\" /></figure></div>\n\n\n<p>And if all the bypasses work as expected, our app won’t be able to detect that it is running on a rooted device!</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-full\"><img decoding=\"async\" loading=\"lazy\" width=\"401\" height=\"489\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_14NoRootDetected-1.png\" alt=\"\" class=\"wp-image-20856\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/image_14NoRootDetected-1.png 401w, https://www.nowsecure.com/wp-content/uploads/2023/02/image_14NoRootDetected-1-360x439.png 360w\" sizes=\"(max-width: 401px) 100vw, 401px\" /></figure></div>\n\n\n<h2>Conclusion</h2>\n\n\n\n<p>While this tutorial only shows three root detection methods, this technique of combining static analysis with dynamic instrumentation can be applied to all methods. As you encounter more root detection techniques and add them to your Frida bypass script, you can create a reliable tool to bypass root detection techniques across a variety of mobile apps.</p>\n\n\n\n<p>To save time analyzing mobile apps, pen testers and others can tap the <a href=\"https://www.nowsecure.com/products/nowsecure-workstation/\">NowSecure Workstation </a>preconfigured hardware and software that compresses mobile app vulnerability assessments down to mere hours and enables repeatable testing. You can also meet the NowSecure experts in our series of Tech Talks —<a href=\"https://info.nowsecure.com/2023-TechTalk-Webinar-Series.html?\"> register</a> today.</p>\n\n\n<section id=\"featured-resource-block_573b962fba20f05de1e826d9bc0e00b4\" class=\"featured-resource color- bg- mt-none mb-none\"\n\t>\n    <div class=\"bol-container\">\n        <div class=\"featured-resource-content js-set-min-height d-flex flex-column flex-lg-row justify-content-between align-items-center\">\n\n\t\t\t                <div class=\"featured-image-holder js-featured-image-holder\"\n                     style='background-image: url(\"https://www.nowsecure.com/wp-content/uploads/2023/02/Screenshot-55.png\")'\n                ></div>\n\t\t\t\n            <div class=\"content-holder\">\n                <!-- I took the following snippet out for now, I do not believe that it is supposed to be here, Jacob -->\n\t\t\t\t<!--\n                    <span>\n                                            </span>\n\t\t\t\t-->\n                <h4 class=\"card-title text-bold color-\">\n                    <a href=\"https://info.nowsecure.com/2023-TechTalk-Webinar-Series.html?\">\n\t\t\t\t\t\tTech Talks- <strong>Meet the Experts</strong>                    </a>\n                </h4>\n\n\t\t\t\t\n\t\t\t\t\n        <div class=\"cta-holder d-flex flex-column flex-md-row align-items-center justify-content-start\">\n\t\t\t\t\t\t\t                    <div class=\"mt-sm d-flex 0\">\n\t\t\t\t\t\t<a href='https://info.nowsecure.com/2023-TechTalk-Webinar-Series.html?' target='_self' class='bol-btn-primary'>Learn more</a>                    </div>\n\t\t\t\t\t\t\t        </div>\n\t\t\n            </div>\n        </div>\n    </div>\n</section>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/03/01/reverse-engineering-android-apps-to-bypass-root-detection-capabilities/\">Reverse Engineering Android Apps to Bypass Root Detection Capabilities</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"13 Mobile App Security Best Practices","link":"https://www.nowsecure.com/blog/2023/02/24/13-mobile-app-security-best-practices/","dc:creator":{"#cdata-section":"NowSecure Marketing"},"pubDate":"Fri, 24 Feb 2023 12:30:00 +0000","category":{"#cdata-section":"Industry News"},"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20828"},"description":{"#cdata-section":"<p>Developing a successful mobile app requires following security best practices. Attackers consistently search for ways to exploit security issues, and breaches in data can negatively impact your customer experience, reputation, and bottom line. By following mobile app security best practices, you’ll be prepared to launch a successful mobile app that keeps both your users&#8217; and [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/02/24/13-mobile-app-security-best-practices/\">&lt;strong&gt;13 Mobile App Security Best Practices&lt;/strong&gt;</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>Developing a successful mobile app requires following security best practices. Attackers consistently search for ways to exploit security issues, and breaches in data can negatively impact your customer experience, reputation, and bottom line. By following <strong>mobile app security best practices</strong>, you’ll be prepared to launch a successful mobile app that keeps both your users&#8217; and the company’s data safe. Read on to learn the top 13 security best practices you can use as a developer to reduce security bugs and defend your mobile app against security breaches.</p>\n\n\n\n<h2>1. <strong>Encrypt Your Source Code</strong></h2>\n\n\n\n<p>When it comes to mobile app security, you need to encrypt your source code. This will help to prevent attackers from accessing and modifying your code, which could potentially lead to them reverse engineering attacks or exploiting security issues. According to <a href=\"https://www.maropost.com/8-best-practices-for-your-mobile-app-security-in-2022/\" target=\"_blank\" rel=\"noreferrer noopener\">industry research</a>, 82% of mobile app security bugs appear in the source code. By encrypting your source code, you can render the code unreadable by attackers and prevent damaging security incidents. As a developer, It’s also considered a best practice to sign your source code during mobile app development.</p>\n\n\n\n<h2>2. <strong>Use a Code-Signing Certificate</strong></h2>\n\n\n\n<p>In addition to encrypting your source code, you should validate the authenticity of the code by using a code-signing certificate. This allows you to digitally sign your code with a private key, while also publishing a public key for users to view. A code-signing certificate signals that your mobile app is genuine, comes from a trusted source, and has not been tampered with. Since malware can be distributed by impersonating legitimate sources, this certificate reassures users about the validity of a mobile app. However, code-signing certificates are only valid for one to three years, so renew your certificate regularly.&nbsp;&nbsp;</p>\n\n\n\n<h2>3. <strong>Implement File-Level &amp; Database Encryption</strong></h2>\n\n\n\n<p>Mobile apps often store unstructured data in a local file system or a database within the device storage. Without encryption, attackers can potentially access the sandbox environment, posing a significant security risk. By encrypting this data, you can reduce your risk. Likewise, to prevent attackers from accessing sensitive information, you can implement mobile app data encryption with SQLite Database Encryption Modules or use file-level encryption across multiple platforms. Whichever method you choose, make sure that you encrypt all sensitive data before storing it on your server or in your database. In addition, always use the latest cryptography techniques and perform penetration testing on your mobile app before it goes live to ensure seamless security.&nbsp;</p>\n\n\n\n<h2>4. <strong>Utilize the Latest Cryptography Techniques</strong></h2>\n\n\n\n<p>In order to keep your mobile app safe from attackers, use the latest security algorithm possible. Since attackers have a habit of trying to break the older versions of encryption, using the latest version of an algorithm helps add an extra layer of security to your mobile app. One of the most popular encryption algorithms is called Advanced Encryption Standard (AES). AES consists of a symmetric key algorithm, which means that the same key encrypts and decrypts the data. Different versions of AES encryption can be used, such as 512-bit encryption, 256-bit encryption and SHA-256 for hashing.&nbsp;</p>\n\n\n\n<h2>5. <strong>Leverage Pen Testing</strong></h2>\n\n\n\n<p>Testing your code for security issues is another important step in securing your mobile app and ensuring compliance with security frameworks. If attackers were to gain access to sensitive customer data or company intellectual property within your mobile app, it could lead to significant and damaging security breaches. By performing regular and thorough penetration tests, you can identify and resolve these security bugs before they wreak havoc on your mobile app and your compliance certifications. To ensure success and take extra work off your plate, leave this critical testing up to experts like NowSecure, a leading provider of <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-penetration-testing/\">successful and repeatable penetration testing</a>.&nbsp;&nbsp;</p>\n\n\n\n<h2>6. <strong>Secure Data in Transit</strong></h2>\n\n\n\n<p>When sending data from a mobile device to server-side endpoints, attackers can potentially intercept the HTTP communication. There are several ways to secure this data in transit, including Transport Layer Security (TLS) and <a href=\"https://www.nowsecure.com/blog/2017/06/15/certificate-pinning-for-android-and-ios-mobile-man-in-the-middle-attack-prevention/\">Certificate Pinning</a>. TLS originally evolved from Secure Socket Layers (SSL), and this technique enables you to encrypt data in transit using public key cryptography. While TLS does not actually secure the data on end systems, it prevents data access during digital transit. Certificate Pinning uses a set of public keys to cross-check whether a digital certificate corresponds with the domain name that it’s claiming. When choosing a method to secure your data in transit, consider the needs of your mobile app, the sensitivity of your data, and potential security issues. </p>\n\n\n\n<h2>7. <strong>Only Use Authorized APIs</strong></h2>\n\n\n\n<p>In the case that you must use third-party services when developing your mobile app, make sure to leverage authorized APIs. <a href=\"https://www.nowsecure.com/blog/2020/09/21/new-nowsecure-api-security-testing-reduces-mobile-app-risk/\">APIs that are not authorized</a> for use on a specific platform, such as Android or ioS, can unintentionally grant an attacker privilege and put your data at risk. Using unauthorized APIs can also get your app rejected and removed from app stores. Likewise, make sure to follow the specific platform guidelines for authorized APIs for maximum security and compliance.&nbsp;&nbsp;</p>\n\n\n\n<h2>8. <strong>Ensure High-Level Authentication</strong></h2>\n\n\n\n<p>With multiple users accessing your mobile app, you need to establish a sound method for authentication. You can do this by updating strong alphanumeric passwords every three to six months, using multi-factor authentication or even biometric authentication. While biometrics are generally more secure than passwords, they are also more expensive and difficult to implement. Regardless of the method chosen initially, regularly review your authentication methods and make changes as needed to keep your app safe.</p>\n\n\n\n<blockquote\n        class=\"custom-quote  \">\n\n    <i class=\"fas fa-quote-left\"></i>\n\tIf you have to store sensitive data, avoid storing the data on the device itself.    <i class=\"fas fa-quote-right\"></i>\n\n\t\n</blockquote>\n\n\n\n<h2>9. <strong>Secure the Backend</strong></h2>\n\n\n\n<p>With all of the sensitive data for your app stored in the backend, you don’t want this data falling into the wrong hands. Encrypting all of your data at rest can help prevent attackers from being able to read the data, even if they were able to gain access to the backend. It’s also important to verify that all of your APIs support the mobile operating system. Lastly, using high-level authentication can protect your app from unwanted users gaining access to your sensitive data and functionality.&nbsp;</p>\n\n\n\n<h2>10. <strong>Be Careful with Third-Party Libraries</strong></h2>\n\n\n\n<p>While third-party libraries can save time and effort by using pre-written code, they can also introduce serious security risks. Since the code was not written by you, it may contain security bugs that can be exploited by attackers. For instance, the communication functionality of Log4j had a security bug that allowed attackers to inject code into the logs. And, this security risk went undiscovered for several years from 2013 to 2021. To prevent this from happening to your mobile app,<a href=\"https://www.nowsecure.com/blog/2022/08/24/4-things-you-can-do-with-a-mobile-sbom/\"> make sure to use code from trusted sources</a>, such as controlled internal repositories, and exercise policy controls during acquisition. Even without using third-party libraries, attackers can potentially gain access to your code. And, that’s where tamper detection comes into play.&nbsp;</p>\n\n\n\n<h2>11. <strong>Deploy Tamper Detection</strong></h2>\n\n\n\n<p>Tamper detection alerts you when someone tries to tamper with your code or inject malicious code. By deploying active tamper detection mechanisms, you can ensure that the code will not function at all if modified. This makes it more difficult for attackers to modify your code and keeps you in the know about any potential attempts at tampering with your code. There are many ways to detect tampering, but some common methods include checksumming, digital signatures and code obfuscation.&nbsp;</p>\n\n\n\n<h2><strong>12. Minimize Storage of Sensitive Data</strong></h2>\n\n\n\n<p>Storing sensitive data always poses a certain level of risk, so try to avoid or at least minimize the amount of sensitive data being stored. If you have to store sensitive data, avoid storing the data on the device itself. Consider using an encrypted data container or key chain rather than storing it locally. Likewise, using an auto-delete feature can also help to confirm the removal of sensitive data as soon as you no longer need the information.&nbsp;</p>\n\n\n\n<h2><strong>13. Practice Continual Testing and Updating</strong></h2>\n\n\n\n<p>Securing your mobile app takes constant vigilance. As new threats emerge, new solutions are needed. While it can be tempting to focus on the aesthetic appeal and usability of the app, guaranteeing ongoing security is a significant differentiating factor for success. Investing in a comprehensive <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-security-testing/\">mobile app testing solution</a> can keep up with these threats for you, automating testing within the CI/CD process. By integrating testing directly into the mobile development pipeline, you can speed your app to market from start to finish in a matter of weeks.&nbsp;</p>\n\n\n\n<p><strong>NowSecure provides best-in-class mobile app security automation, and we offer a free security assessment to help mobile apps like yours.&nbsp;</strong></p>\n\n\n\n<p><a href=\"https://info.nowsecure.com/free-mobile-app-security-report\"><strong>Get your free mobile app assessment now!</strong></a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/02/24/13-mobile-app-security-best-practices/\">&lt;strong&gt;13 Mobile App Security Best Practices&lt;/strong&gt;</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"Q&A: Inside the OWASP Mobile Application Security Project","link":"https://www.nowsecure.com/blog/2023/02/14/qa-inside-the-owasp-mobile-application-security-project/","dc:creator":{"#cdata-section":"Ola Alibaloye"},"pubDate":"Tue, 14 Feb 2023 16:00:00 +0000","category":[{"#cdata-section":"Company News"},{"#cdata-section":"Industry News"}],"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20777"},"description":{"#cdata-section":"<p>Mobile security standards from the Open Web Application Security Project (OWASP) help align mobile application security analysts and mobile app developers’ expectations about what needs to be remediated prior to release. Standards drive consistency, repeatability and speed. NowSecure has long embraced the value of mobile security standards built by industry experts and validated by the [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/02/14/qa-inside-the-owasp-mobile-application-security-project/\">Q&amp;A: Inside the OWASP Mobile Application Security Project</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>Mobile security standards from the <a href=\"https://www.nowsecure.com/owasp-mobile-appsec-testing/\">Open Web Application Security Project (OWASP)</a> help align mobile application security analysts and mobile app developers’ expectations about what needs to be remediated prior to release. Standards drive consistency, repeatability and <a href=\"https://www.nowsecure.com/blog/2022/08/10/how-mobile-appsec-testing-standards-speed-devsecops/\">speed</a>.</p>\n\n\n\n<p>NowSecure has long embraced the value of <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-standards-compliance/\">mobile security standards </a>built by industry experts and validated by the open-source community. The company supports <a href=\"https://www.nowsecure.com/resources/nowsecure-ms/nowsecureowaspcasest-1?x=9z-j5n#page=1\">the work of OWASP</a> in many ways and recently announced full support for OWASP Mobile Application Security Verification Standard (MASVS) V2. Organizations can tap a mix of <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-security-testing/\">automated mobile application security testing</a>, <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-penetration-testing/\">Mobile Pen Testing as a Service (PTaaS)</a> and in-depth <a href=\"https://www.nowsecure.com/products/nowsecure-academy-mobile-appsec-training/\">mobile app security training</a> to meet OWASP MASVS requirements.&nbsp;</p>\n\n\n\n<p>Perhaps nobody knows OWASP MASVS better than one of our own, NowSecure Mobile Security Research Engineer Carlos Holguera. The co-leader of the <a href=\"https://mas.owasp.org/\" target=\"_blank\" rel=\"noreferrer noopener\">OWASP Mobile Application Security (MAS) Project</a> joined NowSecure in 2021 and works full time to advance the organization’s important work. Holguera recently spoke with us about the exciting developments the OWASP community can expect to see in 2023.</p>\n\n\n\n<p><strong>Q: What is the OWASP Mobile Application Security Project?</strong></p>\n\n\n\n<p>A: The <a href=\"https://www.nowsecure.com/owasp-mobile-appsec-testing/\">OWASP MAS</a> project sets the industry standard for mobile app security around the globe. It establishes a common language and a foundation for mobile application security requirements. It aligns security and development teams to speed secure mobile app development. It specifies how to thoroughly test mobile apps against the security standard based on risk level. And it serves as an excellent <a href=\"https://www.nowsecure.com/products/nowsecure-academy-mobile-appsec-training/\">learning resource</a> for beginners and professionals on everything about mobile security.</p>\n\n\n\n<p><strong>Q: Who are key contributors?</strong></p>\n\n\n\n<p>A: The OWASP MAS resources are crafted and are curated by a team of numerous experts and community contributors working voluntarily. The core team includes me and Sven Schleier who lead the project plus a co-author, Jeroen Beckers.</p>\n\n\n\n<p>Community contributors open issues, work on PR and communicate with us via Slack or other channels. Industry contributors such as Android and the App Defense Alliance (ADA) provide continuous, high-value feedback on all OWASP MAS initiatives such as the MASVS refactoring. And MAS advocates — NowSecure is the only one to date — are industry adopters of the OWASP MASVS and MASTG who have invested a significant amount of resources to push the project forward by providing consistent high-impact contributions and continuously spreading the word.</p>\n\n\n\n<p><strong>Q: How did you become an OWASP mobile project leader?</strong></p>\n\n\n\n<p>A:<em> </em>OWASP was organizing a Security Summit 2017 and one of the tracks was focused on mobile security, so I decided to attend. I was so amazed by the team, the topics we discussed and the things we implemented that I started contributing to the project. In 2018 I led my first session &#8220;Diving into Mobile Crypto using BDI with <a href=\"https://www.nowsecure.com/frida/\">Frida</a>&#8221; and became a co-author, and in 2019 I led a major restructuring of several areas of the MASTG so that the Android and iOS chapters mirror each other as much as possible, making it easier for readers to find the content they want to find.</p>\n\n\n\n<p>After work, continuous commitment, and more work, such as proposing and leading major structural changes, I decided to apply for project leadership. I was sure that I wanted to continue to push the project and invest a lot of time to make everything better. I was very happy when I got the approval from OWASP, and I&#8217;m sure it was one of the best decisions I&#8217;ve made in my career.</p>\n\n\n\n<p><strong>Q: What are the renamed OWASP project elements?&nbsp;</strong></p>\n\n\n\n<p>A: Our project was previously called the OWASP Mobile Security Testing Guide (MSTG) project. Unfortunately, this was a source of confusion because we happened to have a resource with the same name, the OWASP MSTG. Not only that, but the name didn’t reflect the full scope and reach of our project. Since we already had the MASVS, have you ever wondered why the MSTG is called MSTG and not MASTG? Both documents are about mobile application security, and we wanted to make that clear.</p>\n\n\n\n<p>In August 2022 we renamed the project to OWASP Mobile App Security (MAS). We also created a new logo and branding including new covers and names for our main resources. All of this was done to reflect all the consistency, structure, and transparency we&#8217;re bringing with our MASVS and MASTG refactoring efforts to bring them up to version 2.0.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"960\" height=\"1246\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSResources-960x1246.png\" alt=\"\" class=\"wp-image-20778\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSResources-960x1246.png 960w, https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSResources-360x467.png 360w, https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSResources-768x997.png 768w, https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSResources.png 1008w\" sizes=\"(max-width: 960px) 100vw, 960px\" /><figcaption class=\"wp-element-caption\"><em>The OWASP MAS Project publishes three major resources that guide secure mobile development and mobile application security testing.</em></figcaption></figure></div>\n\n\n<p>The core resources are:</p>\n\n\n\n<ul>\n<li><strong>OWASP</strong> <strong>Mobile Application Security Verification Standard (MASVS)</strong> is the industry standard for mobile application security. It can be used by mobile software architects and developers who want to build secure mobile applications, as well as by security testers to ensure completeness and consistency of test results.</li>\n\n\n\n<li><strong>OWASP Mobile App Security Testing Guide (MASTG) </strong>is a comprehensive guide to mobile application security testing and reverse engineering. It describes technical procedures for verifying the controls listed in the OWASP MASVS.</li>\n\n\n\n<li><strong>OWASP MAS Checklist</strong>, which combines the MASVS and MASTG to aid security assessments/pen tests and compliance.</li>\n\n\n\n<li><strong>OWASP MAS Crackmes</strong>, a collection of mobile reverse engineering challenges. These challenges are used as examples throughout the OWASP MASTG. Of course, you can solve them just for fun.</li>\n</ul>\n\n\n\n<p><strong>Q: Why did OWASP embark on refactoring MASVS?</strong></p>\n\n\n\n<p>A: Based on our experiences, the following issues often popped up:</p>\n\n\n\n<ul>\n<li>MASVS-ARCH (Architecture, Design and Threat Modeling) contains several controls that cannot be validated from an external perspective. As a result, it is difficult to explain why we can&#8217;t cover the entire MASVS for an external assessment.</li>\n\n\n\n<li>There is a clear overlap with the ASVS, which is much more thorough for various backend vulnerabilities.</li>\n\n\n\n<li>Some controls are very broad and require very broad test cases with multiple parts.</li>\n\n\n\n<li>Some controls overlap (e.g. ‘up-to-date security libraries’ and ‘all third-party components are up-to-date’).</li>\n</ul>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"960\" height=\"720\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolguerar2con-960x720.jpg\" alt=\"\" class=\"wp-image-20781\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolguerar2con-960x720.jpg 960w, https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolguerar2con-360x270.jpg 360w, https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolguerar2con-768x576.jpg 768w, https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolguerar2con-200x150.jpg 200w, https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolguerar2con.jpg 1280w\" sizes=\"(max-width: 960px) 100vw, 960px\" /><figcaption class=\"wp-element-caption\"><em>Carlos Holguera takes the stage at r2con to discuss how radare2 and Frida factor into the OWASP MASTG.</em></figcaption></figure></div>\n\n\n<p>Q: <strong>How did you approach the process and what did the work entail?</strong></p>\n\n\n\n<p>A: We&#8217;ve done a lot of brainstorming, independent thinking, collaboration, and community outreach to get feedback. We set up a few goals:</p>\n\n\n\n<ul>\n<li>Keep abstraction: The MASVS keeps being OS agnostic and high-level. We leave the details to the MASTG.</li>\n\n\n\n<li>Simplify:<strong> </strong>Have fewer controls by removing overlaps and redundancies.</li>\n\n\n\n<li>Bring clarity: Use standard terminology whenever possible to leave no room for ambiguity in language and formulation. This includes terminology from standards such as NIST-SP 800-175B and NIST OSCAL as well as well-known and used sources such as CWEs, Android and Apple Developer Docs.</li>\n\n\n\n<li>Narrow scope: Rely more on other standards including <a href=\"https://owasp.org/www-project-application-security-verification-standard/\">OWASP ASVS</a>, OWASP SAMM and NIST.SP.800-218 SSDF v1.1.</li>\n</ul>\n\n\n\n<p>We started releasing <a href=\"https://github.com/OWASP/owasp-masvs/discussions/categories/big-masvs-refactoring\" target=\"_blank\" rel=\"noreferrer noopener\">one GitHub Discussion per MASVS category</a> including <a href=\"https://docs.google.com/spreadsheets/d/1c3QX6mshfUo31IiuL9z5Efq1asLjMXI0SgupMFCl_e4/edit?usp=sharing\" target=\"_blank\" rel=\"noreferrer noopener\">a spreadsheet</a> with a detailed view of the changes. You can see why each control was removed/moved/reworded, read about the focus of the new controls, see the list of proposed new MASTG tests, and see how the control relates to other standards and resources.</p>\n\n\n\n<p>Here’s what we did so far the second iteration:</p>\n\n\n\n<ul>\n<li>Processed all feedback from each of the beta proposal comments from the community.</li>\n\n\n\n<li>Tried to find overlaps and redundancies (again), e.g. MASVS-NETWORK-1 (beta) vs. MASVS-NETWORK-2 (beta).</li>\n\n\n\n<li>Tried to start all controls with ‘The app…’.</li>\n\n\n\n<li>Tried to formulate all controls with a ‘positive’ formulation.</li>\n\n\n\n<li>Tried negating each control to see if it still covered the same.</li>\n\n\n\n<li>Went through all test cases and double-checked coverage.</li>\n\n\n\n<li>Asked what/how we are protecting in each control.</li>\n</ul>\n\n\n\n<p>In addition to being extremely insightful, this exercise has allowed us to provide you with an even cleaner version of the MASVS, which is designed to remain a timeless baseline for mobile application security, leaving the heavy lifting to the MASTG, which will become more dynamic and allow for more specific and flexible testing.</p>\n\n\n\n<p>We created <a href=\"https://github.com/OWASP/owasp-masvs/discussions/679\" target=\"_blank\" rel=\"noreferrer noopener\">new spreadsheets</a> where you can inspect all the changes and see the mappings from v2 to v1.4.2 and vice versa.</p>\n\n\n\n<p><strong>Q: What are the major changes in MASVS v2.0?</strong></p>\n\n\n\n<p>A: There are many:</p>\n\n\n\n<ul>\n<li>We removed the MASVS-ARCH category because it is covered by NIST.SP.800-218 SSDF v1.1 and OWASP SAMM.</li>\n</ul>\n\n\n\n<ul>\n<li>We decoupled MASVS-AUTH from <a href=\"https://owasp.org/www-project-application-security-verification-standard/\">OWASP ASVS</a>. Users must use the <a href=\"https://owasp.org/www-project-application-security-verification-standard/\">OWASP ASVS</a> on the server side. MASVS is for the client side, i.e. the mobile application.</li>\n\n\n\n<li>We&#8217;ve fixed the scope of many MASVS categories, especially MASVS-STORAGE and MASVS-PLATFORM, which had some overlap.&nbsp;</li>\n\n\n\n<li>We also aligned MASVS-CODE with NIST.SP.800-218 SSDF v1.1 and removed controls that can be addressed through a secure SDLC.</li>\n\n\n\n<li>We&#8217;ve simplified the language and wording of the controls throughout, especially in the Cryptography, Network and Resilience categories. This greatly reduces unnecessary verbosity.</li>\n\n\n\n<li>We&#8217;ve removed the verification levels from the MASVS and will rework them and then apply them to the MASTG test cases.</li>\n</ul>\n\n\n\n<p><strong>Q:</strong><em> </em><strong>How do those changes improve mobile application security for users?</strong></p>\n\n\n\n<p>A:<strong> </strong>One of the things we&#8217;re most proud of is the friendliness of our standard. Its simplicity makes it very accessible, so we tried to make it even friendlier to reach an even wider audience. The new MASVS controls are fewer in number related to v1 and use simpler language and familiar concepts. Any reader, even a beginner or coming from another field (e.g. <a href=\"https://discover.nowsecure.com/c/web-vs-mobile-app-security-testing-tools?x=9z-j5n#page=1\">web application security</a>), will understand what ‘encrypted communication’ or ‘stored encrypted’ means. This way, we ensure that the higher level of the mobile attack surface is well understood.</p>\n\n\n\n<p>With the new MASVS and the upcoming MASTG refactor, we&#8217;re bringing a new dimension to MAS testing; now you can test for compliance to our standard, but also customize it to your needs using profiles.&nbsp;</p>\n\n\n\n<p>We&#8217;re also proud of the synergy between MASVS and MSTG. It&#8217;s unique in the industry and we&#8217;re going to make it even stronger. Until now, we have offered you the <a href=\"https://www.nowsecure.com/blog/2022/02/23/owasp-mobile-security-testing-checklist-aids-compliance/\">checklist</a> as a link between the two. Soon you&#8217;ll get more, you&#8217;ll be able to interact with the standard in ways you never thought possible before.</p>\n\n\n\n<p>The core deliverable will be a machine-readable file, similar to the one we currently use to generate the checklists, but enhanced so that you can use it to feed your own tooling, reporting and documentation tools. This allows you to verify MASVS compliance at newer and deeper levels.</p>\n\n\n\n<p>All of these mechanisms, processes, and automation make us more agile and allow us to focus on what&#8217;s important: continuing to research and deliver the industry standard for mobile applications.</p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"960\" height=\"723\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSHotoffthePress-960x723.jpg\" alt=\"\" class=\"wp-image-20779\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSHotoffthePress-960x723.jpg 960w, https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSHotoffthePress-360x271.jpg 360w, https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSHotoffthePress-768x579.jpg 768w, https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSHotoffthePress-1536x1157.jpg 1536w, https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSHotoffthePress-200x150.jpg 200w, https://www.nowsecure.com/wp-content/uploads/2023/02/MASVSHotoffthePress.jpg 1999w\" sizes=\"(max-width: 960px) 100vw, 960px\" /><figcaption class=\"wp-element-caption\"><em>Not only does Carlos Holguera of NowSecure help write the OWASP MAS standard, but he designed this new cover of the MASTG, too.</em></figcaption></figure></div>\n\n\n<p><strong>Q: What’s next for the MAS project?</strong></p>\n\n\n\n<p><strong>A: </strong>We will publish the final version of the MASVS v2.0 after collecting and reviewing all comments from the Release Candidate. Hopefully this will happen in time for our upcoming presentation at OWASP AppSec Dublin.&nbsp;</p>\n\n\n\n<p>Next, we’ll publish our first proposal for MAS Profiles definitions. The MAS profiles will replace the current MASVS levels, but don&#8217;t worry, our beloved L1, L2, and R aren&#8217;t going away completely. They&#8217;ll be back in a new, better form. They will apply to specific MASTG tests instead of MASVS controls. This will provide a fine-grained view of how an application maps to the overall MAS.</p>\n\n\n\n<p>We’ll kick off the MASTG refactor to v2.0. We&#8217;re in the process of defining the sections for the atomic tests. This is very important so that everyone knows what to do when writing new tests. For each test, we&#8217;ll be answering essential questions:</p>\n\n\n\n<ul>\n<li>Why is the issue at hand bad and why are we testing for it?</li>\n\n\n\n<li>How do we test for the issue?&nbsp;</li>\n\n\n\n<li>How do we fix the issue?</li>\n</ul>\n\n\n\n<p>We will publish the first proposal for MASTG atomic tests. We’ve published a preliminary list of tests (including only titles). Some of them are in the MASTG already and some are completely new. This first proposal will include the list of consolidated titles and a first proposal for profiles (e.g. L1, L2) for each MASTG atomic test.</p>\n\n\n\n<p><strong>Q: Why did you join NowSecure?</strong></p>\n\n\n\n<p>A: I get this question quite often. I say, ‘Have you seen the team?’ It may sound utopian, but imagine if you could assemble all the top talent in the mobile security industry, including the creators of the essential mobile security tools. Well, stop imagining, because here they are. So it was a no-brainer for me.</p>\n\n\n\n<p>Other pluses are the company’s culture, values, and the fact that it already had a dedicated research team. Also, NowSecure is a big supporter of open-source projects such as <a href=\"https://www.nowsecure.com/frida/\">Frida</a> and <a href=\"https://www.nowsecure.com/radare/\">Radare</a>, and of course the <a href=\"https://owasp.org/www-project-application-security-verification-standard/\">OWASP MASVS</a> and MASTG which I get to work on fulltime in my work with the company.&nbsp;</p>\n\n\n\n<p>Another important point is that NowSecure is in line with my own passion for mobile app security. I fell in love with the OWASP mobile project and wanted to do something to save the world from unsafe mobile applications. As it happens, that&#8217;s also a NowSecure goal. So it was a natural next step for me.</p>\n\n\n\n<p><strong>Q: When you’re not immersed in mobile application security, what do you like to do in your free time?</strong></p>\n\n\n\n<p>A: Coffee and Japanese. I love going to coffee shops, whether it&#8217;s in my city or when I visit other places. I have my own espresso machine at home, and I&#8217;ve learned a lot about coffee and latte art over the years. As with mobile security and hacking, you have to be patient, persistent, and willing to accept failure.</p>\n\n\n\n<p></p>\n\n\n<div class=\"wp-block-image\">\n<figure class=\"aligncenter size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"960\" height=\"720\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolgueraEspresso-960x720.jpg\" alt=\"\" class=\"wp-image-20780\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolgueraEspresso-960x720.jpg 960w, https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolgueraEspresso-360x270.jpg 360w, https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolgueraEspresso-768x576.jpg 768w, https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolgueraEspresso-200x150.jpg 200w, https://www.nowsecure.com/wp-content/uploads/2023/02/CarlosHolgueraEspresso.jpg 1280w\" sizes=\"(max-width: 960px) 100vw, 960px\" /><figcaption class=\"wp-element-caption\"><em>The mobile security researcher powers up with espresso.</em></figcaption></figure></div>\n\n\n<p></p>\n\n\n\n<p>When I have some free time and energy left over, I continue to learn Japanese. I&#8217;m in love with the language and I know it may take many years to understand and speak in an acceptable way, but I guess that&#8217;s part of why I like it, it&#8217;s an endless challenge. And I love its calligraphy, eating Japanese food and visiting the country.</p>\n\n\n\n<h2><strong>Where to Learn More</strong></h2>\n\n\n\n<p>Explore OWASP mobile security standards in depth by enrolling in free training from <a href=\"https://www.nowsecure.com/products/nowsecure-academy-mobile-appsec-training/\">NowSecure Academy</a>. The on-demand training includes several <a href=\"https://academy.nowsecure.com/page/owasp-mobile-application-security-mas\" target=\"_blank\" rel=\"noreferrer noopener\">courses about OWASP</a>, including OWASP mobile vs web standards, OWASP MAS updates and the MASVS and MASTG updates.&nbsp;</p>\n\n\n\n<p>In addition, join us from 2 &#8211; 3 p.m. ET on Feb. 21 for a special upcoming NowSecure Tech Talk where you’ll get the chance to meet Holguera and hear him speak about the OWASP MASVS v2 updates. <a href=\"https://info.nowsecure.com/2023-TechTalk-Webinar-Series.html\">Register now</a>.&nbsp;</p>\n\n\n\n<p></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/02/14/qa-inside-the-owasp-mobile-application-security-project/\">Q&amp;A: Inside the OWASP Mobile Application Security Project</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"How to Introduce DevSecOps Practices Into a Mobile CI/CD Pipeline","link":"https://www.nowsecure.com/blog/2023/02/01/how-to-introduce-devsecops-practices-into-a-mobile-ci-cd-pipeline/","dc:creator":{"#cdata-section":"Ola Alibaloye"},"pubDate":"Wed, 01 Feb 2023 12:30:00 +0000","category":[{"#cdata-section":"Best Practices"},{"#cdata-section":"Customer Success"}],"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20747"},"description":{"#cdata-section":"<p>The consequences of a mobile application security issue can be detrimental, and mobile teams must prepare for everything from third-party bugs to cloud security issues and beyond. However, NowSecure MobileRiskTracker data finds that a shocking 85% mobile apps found in the Apple App Store and Google Play contain security and privacy issues.A recent webinar with [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/02/01/how-to-introduce-devsecops-practices-into-a-mobile-ci-cd-pipeline/\">How to Introduce DevSecOps Practices Into a Mobile CI/CD Pipeline</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>The consequences of a mobile application security issue can be detrimental, and mobile teams must prepare for everything from third-party bugs to cloud security issues and beyond. However, <a href=\"https://mobilerisktracker.nowsecure.com/#7992b51e-79d3-437b-80e6-c9f51b6d82b7\">NowSecure MobileRiskTracker</a> data finds that a shocking 85% mobile apps found in the Apple App Store and Google Play contain security and privacy issues.<br>A recent <a href=\"https://yo.bitrise.io/devsecops-webinar-registration.html\" target=\"_blank\" rel=\"noreferrer noopener\">webinar</a> with NowSecure Chief Mobility Officer —<strong> Brian Reed</strong>, <a href=\"https://bitrise.io/\" target=\"_blank\" rel=\"noreferrer noopener\">Bitrise</a> Developer Advocate — <strong>Moataz Nabil</strong>, and Camelot Lottery Solutions Lead Software Engineer in Test — <strong>Panos Megremis</strong> covered how to shift left with security testing, integrate DevSecOps practices into your mobile CI/CD pipeline and more. This post covers the highlights and top lessons we learned from the group.</p>\n\n\n\n<p></p>\n\n\n\n<h2>Work With CI/CD Pipelines for Mobile Apps</h2>\n\n\n\n<p>Before we get into DevSecOps best practices, let’s introduce DevOps and the use of CI/CD&nbsp; (continuous integration/ continuous deployment) pipelines for mobile apps. DevOps best practices help mobile engineers to <strong>optimize workflows</strong> and practices to <strong>improve release cadence</strong>, <strong>optimize development cycles</strong>, and more.&nbsp;</p>\n\n\n\n<p>With <a href=\"https://bitrise.io/why/features/mobile-devops\" target=\"_blank\" rel=\"noreferrer noopener\">Mobile DevOps</a> and mobile CI/CD pipelines, mobile engineers can manage workflows, run mobile builds, and release faster and better mobile apps. A mobile CI/CD pipeline could include <a href=\"https://bitrise.io/why/features/steps-and-workflows\" target=\"_blank\" rel=\"noreferrer noopener\">steps and workflows for mobile engineers</a> to set up environments, perform UI and unit testing, deploy to app stores, and more. The goal of mobile CI/CD pipelines is to provide a frictionless experience for the developers and engineers who build mobile apps, while remaining safe and secure.<br><br>There are platforms like Bitrise — a fully-hosted <a href=\"https://bitrise.io/why/features/mobile-devops\" target=\"_blank\" rel=\"noreferrer noopener\">Mobile DevOps</a> and CI/CD platform — that are <strong>specifically designed for mobile apps</strong>. Bitrise helps mobile engineers build, test, and release <a href=\"https://bitrise.io/why/technologies/ios-continuous-integration\" target=\"_blank\" rel=\"noreferrer noopener\">iOS</a>, <a href=\"https://bitrise.io/why/technologies/android-continuous-integration\" target=\"_blank\" rel=\"noreferrer noopener\">Android</a>, and cross-platform apps with third-party integrations with mobile tooling. These processes are often different and more complex than building traditional web apps.</p>\n\n\n\n<p></p>\n\n\n\n<h2>Think Like a Mobile Attacker</h2>\n\n\n\n<p>In order to address mobile app security, you need to know what you’re protecting against. As Brian mentioned in the webinar, there are five main targets that mobile attackers are interested in:</p>\n\n\n\n<ol>\n<li>Credentials</li>\n\n\n\n<li>Personal data</li>\n\n\n\n<li>Financial account data</li>\n\n\n\n<li>Access to the backend system</li>\n\n\n\n<li>Trade secrets</li>\n</ol>\n\n\n\n<p>“As a mobile app developer, it’s your responsibility to write secure code and test that code to ensure proper protections are in place.” advises Reed.&nbsp;</p>\n\n\n\n<p>When it comes to mobile app security, you need to think like a mobile attacker because <a href=\"https://discover.nowsecure.com/c/web-vs-mobile-app-security-testing-tools?x=9z-j5n#page=1\">mobile apps have unique security challenges</a> that web apps don’t often face. For instance, mobile apps have a broader attack surface than web apps do. And, mobile apps tend to strive for shorter release cycles with speed and frequency in mind, which can introduce security challenges. Getting inside the mind of a mobile attacker allows you to reverse engineer potential threats and prioritize security.&nbsp;</p>\n\n\n\n<p></p>\n\n\n\n<h2>Share the Responsibility for Mobile Security</h2>\n\n\n\n<p>Mobile teams should adopt the <strong>“everyone is responsible for security</strong>” mindset by sharing security responsibilities across teams and injecting security checks earlier in the app lifecycle.</p>\n\n\n\n<h3>Shift-left Testing</h3>\n\n\n\n<p>Mobile apps should be tested <strong>early and often</strong>. It helps mobile teams to fail fast and learn early to save production and development time. <strong>Shift-left testing</strong> involves moving mobile testing to the left in the delivery pipeline — in other words, testing the software earlier in the development lifecycle than is historically typical.</p>\n\n\n\n<p>“It’s really important nowadays to get quick feedback,” says Megremis. “We should add security tests and get a security report in the early stages to understand that code has something that could cause a high-security vulnerability. That’s the whole point of DevOps.”</p>\n\n\n\n<h3>Balance Security and Speed</h3>\n\n\n\n<p><strong>The DevSecOps</strong> framework expands the impact of DevOps by adding security practices to the software development and delivery process. It also resolves the tension between <a href=\"https://bitrise.io/why/features/mobile-devops\" target=\"_blank\" rel=\"noreferrer noopener\">Mobile DevOps</a> teams that want to release software quickly and security teams that prioritize security over all else.</p>\n\n\n\n<p><img decoding=\"async\" loading=\"lazy\" width=\"624\" height=\"351.4493740025793\" src=\"https://lh5.googleusercontent.com/gQIqmLvVjuWIgr3iddigRdvvs_Ax7I3ns131rYH7KJf28UWsjfS8RH1pQ0CdeRMh2n5tDReZEm-ytQf8yUgWK5XNYDBUVODWOMgeWM2hAfYUFC0Bw-CUVQrqkWDM-dyRreTqZJ9MK4Mb1gefvMaiPXU\"></p>\n\n\n\n<p>Alt: Creating a DevSecOps strategy involves finding the right balance between app quality, security, and speed of development. Teams need to iterate quickly while remaining secure.</p>\n\n\n\n<p>“If both security and development teams have a ‘what&#8217;s best for the business’ mindset, then they are more likely to be in sync throughout processes,” says Reed.</p>\n\n\n\n<p></p>\n\n\n\n<h2>Choose a Suitable Security Testing Method</h2>\n\n\n\n<p>A successful mobile testing program includes aspects of the following four security testing methods.:</p>\n\n\n\n<ol>\n<li><strong>Look for coding errors with Static App Security Testing (SAST): </strong>Analyze application source code to test for a range of known security vulnerabilities.</li>\n\n\n\n<li><strong>Run the application and monitor for security defects with Dynamic App Security Testing (DAST): </strong>Analyze by physically running the app to test for a range of known security vulnerabilities.</li>\n\n\n\n<li><strong>Collect security telemetry with Interactive App Security Testing (IAST): </strong>Insert security libraries/services into the app to analyze the application as it runs during dev, test, and/or production.</li>\n\n\n\n<li><strong>Test back-end APIs with API Security Testing (APISec): </strong>Probing backend API endpoints and services to find security vulnerabilities.</li>\n</ol>\n\n\n\n<p></p>\n\n\n\n<blockquote\n        class=\"custom-quote  \">\n\n    <i class=\"fas fa-quote-left\"></i>\n\tThe goal of mobile CI/CD pipelines is to provide a frictionless experience for the developers and engineers who build mobile apps, while remaining safe and secure.    <i class=\"fas fa-quote-right\"></i>\n\n\t\n</blockquote>\n\n\n\n<h2>Introduce DevSecOps Practices in your Mobile CI/CD Pipeline</h2>\n\n\n\n<p>By introducing these DevSecOps best practices into your <a href=\"https://bitrise.io/blog/post/mobile-ci-cd-a-noobs-guide-for-mobile-app-developers\">mob</a><a href=\"https://bitrise.io/blog/post/mobile-ci-cd-a-noobs-guide-for-mobile-app-developers\" target=\"_blank\" rel=\"noreferrer noopener\">i</a><a href=\"https://bitrise.io/blog/post/mobile-ci-cd-a-noobs-guide-for-mobile-app-developers\">le CI/CD</a> pipelines, you address mobile threats while releasing with speed and efficiency.</p>\n\n\n\n<h3>Standardize Policies</h3>\n\n\n\n<p>Establish a set of written policies for security and development teams to follow. These policies should establish SLAs that determine how PMs write, how architects design, how developers code, etc. Follow industry standards like <a href=\"https://owasp.org/www-project-mobile-app-security/\" target=\"_blank\" rel=\"noreferrer noopener\">OWASP MASVS</a> to set policies that meet security requirements.</p>\n\n\n\n<p><strong><img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f4a1.png\" alt=\"💡\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />TIP:</strong> Deploy a policy engine in your mobile pipeline to automate controls. It helps streamline and automate policies, so developers get requirements that are automatically tested based on policy.</p>\n\n\n\n<h3>Provide Security Training for Employees</h3>\n\n\n\n<p>Continuous security training helps developers address app store updates, language updates, and the rapidly changing mobile landscape. Proactive security training helps developers write more secure code. Security training should be role-based and should focus on mobile app security, leveraging OWASP MASVS.</p>\n\n\n\n<h3>Set Security Requirements</h3>\n\n\n\n<p>Security requirements help address vulnerabilities. Make sure to treat security requirements like all other functional and nonfunctional requirements. Use security requirements to address things like data encryption, network usage, data storage, crypto usage, etc.</p>\n\n\n\n<p><strong><strong><img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f4a1.png\" alt=\"💡\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />TIP:</strong></strong> OWASP MASVS has pre-written requirements based on industry standards and best practices that you can copy and paste into your workflows.</p>\n\n\n\n<h3>Facilitate Secure Code Development</h3>\n\n\n\n<p>Third-party code libraries can introduce security vulnerabilities. To mitigate risk, the security team can provide pre-approved libraries for reuse across apps. Additionally, an SCA scan should be done for all third-party libraries before loading it into the repository.</p>\n\n\n\n<h3>Automate Testing for Continuous Security</h3>\n\n\n\n<p>Automating security testing for your mobile application helps to continuously test for security vulnerabilities as the app is built. By testing the binary, you get 100% code coverage of all the code actually included in the application. Teams should run security workflows autonomously in the background to enable developers to release fast, without manual security testing that slows down release cadence.</p>\n\n\n\n<p><strong><img src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f4a1.png\" alt=\"💡\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />TIP: </strong>Don’t forget to leverage a mix of SAST, DAST, IAST, and APISec. This can all be automated using <a href=\"https://www.nowsecure.com/\">NowSecure</a> in your Bitrise CI/CD pipeline.</p>\n\n\n\n<h3>Monitor in Production</h3>\n\n\n\n<p>Continuously monitor the security status and test your mobile apps, even after release. Collect customer feedback about bugs and issues and integrate that feedback into developer workflows. Continuously monitor third-party integrations and updates that may introduce vulnerabilities.</p>\n\n\n\n<p></p>\n\n\n\n<h2>Use NowSecure in Bitrise Mobile DevOps Workflows</h2>\n\n\n\n<p>“The ease of integrating NowSecure Platform, GitHub, and Bitrise and the efficiencies it brings are amazing,” says Megremis.</p>\n\n\n\n<p>NowSecure plugs directly into <a href=\"https://bitrise.io/why/features/continuous-integration\" target=\"_blank\" rel=\"noreferrer noopener\">Bitrise CI/CD pipelines</a>. As developers build apps, Bitrise automatically passes the compiled binary to NowSecure. NowSecure automatically runs a full battery of SAST/DAST/IAST/APISec tests and then feeds the issues back into Github, Jira, or other ticketing systems.&nbsp;</p>\n\n\n\n<p>In this way, developers get the best<a href=\"https://bitrise.io/why/features/continuous-integration\" target=\"_blank\" rel=\"noreferrer noopener\"> mobile-specific CI/CD</a> platform integrated into the best mobile-specific AppSec testing platform for fast feedback loops. Together developers and security teams get high-quality and faster releases with security built in.</p>\n\n\n\n<p></p>\n\n\n\n<h3>How Camelot Lottery Solutions Uses Bitrise and NowSecure to Build a More Secure Mobile App</h3>\n\n\n\n<p><a href=\"https://bitrise.io/customer-stories/camelot\" target=\"_blank\" rel=\"noreferrer noopener\">Camelot Lottery Solutions</a> uses NowSecure in its Bitrise CI/CD pipeline to eliminate delays in mobile releases, address security issues, and more. By integrating <a href=\"https://www.nowsecure.com/wp-content/uploads/2022/04/NowSecureCamelotLSCaseStudy.pdf\">NowSecure into its mobile pipeline </a>with Bitrise for its iOS and Android app, Camelot can now:</p>\n\n\n\n<ul>\n<li>Test the security, privacy, and compliance status of mobile apps in development</li>\n\n\n\n<li>Eliminate delays in security testing and app store blockers to release mobile apps faster</li>\n\n\n\n<li>Drive continuous improvement with accurate developer-friendly findings, remediation instructions, and code samples</li>\n</ul>\n\n\n\n<p><img decoding=\"async\" loading=\"lazy\" width=\"624\" height=\"512\" src=\"https://lh3.googleusercontent.com/b1j4cCosZesszdPJT_HYowW0laGTJmLmfI03qLOeGWdpuqhBDaSBVVBOU2DGn6Udc0Fx6BCv48QjFABlVWv3wbj6jSCVxjo9NdUVlzYICsf6gANQQHy9kLgF-o7xFZ2xhqtKS48-D50O2gFq48eIXMM\"></p>\n\n\n\n<p>Alt: Integrate NowSecure Android or iOS Bitrise Workflows to assess the security status of your mobile workflows.</p>\n\n\n\n<p>Watch the webinar <a href=\"https://yo.bitrise.io/devsecops-webinar-registration.html\">“How to build </a><a href=\"https://yo.bitrise.io/devsecops-webinar-registration.html\" target=\"_blank\" rel=\"noreferrer noopener\">secure</a><a href=\"https://yo.bitrise.io/devsecops-webinar-registration.html\"> mobile apps effectively with DevSecOps”</a> on demand to learn about DevSecOps best practices and see how Bitrise and NowSecure solutions help secure mobile apps from start to finish.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/02/01/how-to-introduce-devsecops-practices-into-a-mobile-ci-cd-pipeline/\">How to Introduce DevSecOps Practices Into a Mobile CI/CD Pipeline</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"mHealth Apps Diagnosed with Poor Security","link":"https://www.nowsecure.com/blog/2023/01/25/mhealth-apps-diagnosed-with-poor-security/","dc:creator":{"#cdata-section":"Ola Alibaloye"},"pubDate":"Wed, 25 Jan 2023 12:30:00 +0000","category":[{"#cdata-section":"Mobile Security Solutions"},{"#cdata-section":"Research & Threat Intel"}],"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20645"},"description":{"#cdata-section":"<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/01/25/mhealth-apps-diagnosed-with-poor-security/\">mHealth Apps Diagnosed with Poor Security</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"<a href=\"https://www.nowsecure.com/wp-content/uploads/2023/01/NowSecuremHealthInfog.pdf\" class=\"pdfemb-viewer\" style=\"\" data-width=\"max\" data-height=\"max\" data-mobile-width=\"500\"  data-scrollbar=\"none\" data-download=\"on\" data-tracking=\"on\" data-newwindow=\"on\" data-pagetextbox=\"off\" data-scrolltotop=\"off\" data-startzoom=\"100\" data-startfpzoom=\"100\" data-toolbar=\"bottom\" data-toolbar-fixed=\"off\">NowSecuremHealthInfog<br/></a>\n<p class=\"wp-block-pdfemb-pdf-embedder-viewer\"></p>\n\n\n\n<p></p>\n\n\n\n<p></p>\n\n\n<section id=\"hero-block_15cdd17f3c142f2749fef2b2a141af87\" class=\"bol-block hero  text-center full-width pt-md pb-md mt-none mb-none bg-image-grey-hero \" >\n\t<div class=\"bg-image-mobile d-block d-lg-none\" >\n\t</div>\n\t<div class=\"bol-block hero\">\n\t\t<div class=\"bol-container d-flex flex-column flex-lg-row align-items-center justify-content-between\">\n\t\t\t\n        <div class=\"section-headings d-flex flex-column text-center\">\n\n            <div class=\"headlines d-flex flex-column\"\n\t\t\t\t                    style=\"max-width: 800px\"\n\t\t\t\t            >\n\t\t\t\t                <h2                class=\"block-headline  text-bold                color-navy\">\n\t\t\t\t\t\t\t\tMobile App Security and Privacy Tracker\t\t\t\t            </h2>\n\t\t\t\n\t\t\t        </div>\n\n\t\t<div class='section-description  color-navy text-regular' style='max-width: 500px'><p>NowSecure continuously monitors the security, privacy and compliance risks of mobile apps in Apple App Store and Google Play performing over 600 tests on each new app release. Choose your industry app data set to see the current risk profile for this group. Return at any time to see how risks change over time.</p>\n</div>\n\t\t\n        <div class=\"cta-holder d-flex flex-column flex-md-row align-items-center justify-content-center\">\n\t\t\t\t\t\t\t                    <div class=\"mt-sm d-flex primary-cta\">\n\t\t\t\t\t\t<a href='https://mobilerisktracker.nowsecure.com/' target='_blank' class='bol-btn-primary'>Mobile Risk Tracker</a>                    </div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t        </div>\n\t\t        </div>\n\n\t\t\n\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\n\t</div>\n</section>\n\n\n\n<p></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/01/25/mhealth-apps-diagnosed-with-poor-security/\">mHealth Apps Diagnosed with Poor Security</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"Upskill with Free Mobile AppSec & Secure Mobile App Dev Training","link":"https://www.nowsecure.com/blog/2023/01/11/upskill-with-free-mobile-appsec-secure-mobile-app-dev-training/","dc:creator":{"#cdata-section":"Ola Alibaloye"},"pubDate":"Wed, 11 Jan 2023 12:30:00 +0000","category":[{"#cdata-section":"Customer Success"},{"#cdata-section":"Industry News"},{"#cdata-section":"Android"},{"#cdata-section":"DevSecOps"},{"#cdata-section":"mobile app security"},{"#cdata-section":"mobile app security testing"},{"#cdata-section":"Mobile DevSecOps"},{"#cdata-section":"NowSecure Academy"},{"#cdata-section":"Research"},{"#cdata-section":"Tools"},{"#cdata-section":"Vulnerabilities"}],"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20620"},"description":{"#cdata-section":"<p>With mobile applications considered an indispensable part of many business strategies, safeguarding them from cyberthreats means more than ever. However, the current developer shortage and lack of specialized mobile app security training makes it difficult to create high-quality mobile apps built with security in mind. For instance, a recent IDC Market Perspective report predicts a [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/01/11/upskill-with-free-mobile-appsec-secure-mobile-app-dev-training/\">Upskill with Free Mobile AppSec &amp; Secure Mobile App Dev Training</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>With mobile applications considered an indispensable part of many business strategies, safeguarding them from cyberthreats means more than ever. However, the current developer shortage and lack of specialized mobile app security training makes it difficult to create high-quality mobile apps built with security in mind.</p>\n\n\n\n<p>For instance, a <a href=\"https://www.idc.com/getdoc.jsp?containerId=US48223621\" target=\"_blank\" rel=\"noreferrer noopener\">recent IDC Market Perspective report </a>predicts a global labor shortfall of 4 million developers by 2025. Additionally, a <a href=\"https://www.zdnet.com/article/bad-news-the-cybersecurity-skills-crisis-is-about-to-get-even-worse/\" target=\"_blank\" rel=\"noreferrer noopener\">Trellix global survey </a>of more than 1,000 cybersecurity professionals found that roughly 30% plan to change professions within two or more years, further emphasizing the struggle for organizations to hire the right employees to maintain proper mobile app security.&nbsp;&nbsp;</p>\n\n\n\n<p><br>Industry data and benchmarks show a massive gap in security skills, which mobile app professionals can easily fill with the right educational resources. Professionals should take advantage of mobile app security-focused training courses and <a href=\"https://www.nowsecure.com/blog/2022/04/27/top-certifications-for-developers-mobile-edition/\">certification programs</a> to enhance their skill set for their current role and improve their skills for <a href=\"https://academy.nowsecure.com/page/mobile-appsec-job-board\">open job opportunities</a> in the field.</p>\n\n\n\n<h2>How Pros Benefit from Mobile AppSec Training</h2>\n\n\n\n<p>Many mobile-first or mobile-enabled organizations have developers, security engineers, architects, analysts and QAs to help build quality mobile apps. But it turns out that even highly experienced workers within these categories have a limited understanding of the techniques, methods, and compliance requirements needed to develop safe and secure mobile apps. Some professionals believe that their <a href=\"https://discover.nowsecure.com/c/web-vs-mobile-app-security-testing-tools?x=9z-j5n#page=1\">web app development</a> knowledge directly translates to mobile app development, but mobile apps require a very specific set of skills and tools to minimize security and privacy risks.</p>\n\n\n\n<p>Additionally, many professionals simply underestimate the security risks of mobile apps in general. In fact, a <a href=\"https://www.securecodewarrior.com/press-releases/secure-code-warrior-survey-finds-86-of-developers-do-not-view-application-security-as-a-top-priority\" target=\"_blank\" rel=\"noreferrer noopener\">2022 survey by Secure Code Warrior found</a> that 86% of devs do not view application security as a top priority when writing code, and only 29% believe the active practice of writing code free of vulnerabilities should be prioritized. Researchers also found that 33% of surveyed devs don’t know what makes their code vulnerable.&nbsp;</p>\n\n\n\n<p>Businesses and government agencies have a vested interest in hiring dev security advocates that understand the significance of building mobile apps with security in mind throughout the entire software development lifecycle. Upskilling with mobile AppSec training courses allow developers to increase their understanding of mobile AppSec terminology and best practices, helping them become <a href=\"https://www.nowsecure.com/blog/2022/09/07/how-to-build-a-mobile-application-security-champion-program/\">security champions for their organization</a>. These courses help professionals showcase their mobile security expertise, increase their earning potential and open doors for promotions and new career opportunities.&nbsp;</p>\n\n\n\n<p>Similarly, security analysts can use mobile AppSec training courses and certifications to demonstrate their unique value to current and new employers. Many security analysts have the skills and knowledge to keep web applications secure, but may be unfamiliar with the specific techniques needed to minimize risk in mobile apps. Mobile AppSec training can help security analysts understand the differences and intricacies of safeguarding mobile apps, helping those with mobile-specific security skills stand out from web-focused competitors.</p>\n\n\n\n<p>Mobile app professionals can boost their productivity with several hours of free courseware, so they can proactively write secure code and test mobile apps for the most common security vulnerabilities. Free mobile AppSec courses also help learners write better code and test faster. In fact, NowSecure internal stats show trained professionals can release up to 30% faster at lower cost, and reduce risk by up to 40%. At the same time, these courses help professionals grow their resume by adding certifications and badges that showcase their understanding of mobile app security.</p>\n\n\n\n<blockquote\n        class=\"custom-quote  \">\n\n    <i class=\"fas fa-quote-left\"></i>\n\tDevelopers and security analysts that want to improve their skill set for their current role or new career opportunities should consider enrolling in mobile AppSec training and certifications with NowSecure Academy.    <i class=\"fas fa-quote-right\"></i>\n\n\t\n</blockquote>\n\n\n\n<h2>Why Mobile App Pros Should Enroll in NowSecure Academy</h2>\n\n\n\n<p>As organizations across the globe continue to leverage mobile apps to support customers and employees, the demand for skilled mobile application security analysts, architects, dev security advocates, QA pros and security engineers will grow in parallel. NowSecure Academy courses and certification programs help professionals upskill in their current positions and showcase their unique skill set for <a href=\"https://www.nowsecure.com/blog/2021/04/07/3-hot-mobile-devsecops-jobs-for-2021/\">new DevSecOps positions</a> as well as mobile AppSec roles.</p>\n\n\n\n<p></p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"960\" height=\"502\" src=\"https://www.nowsecure.com/wp-content/uploads/2023/01/Academy-blog-cert-prog-chart-960x502.png\" alt=\"\" class=\"wp-image-20621\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2023/01/Academy-blog-cert-prog-chart-960x502.png 960w, https://www.nowsecure.com/wp-content/uploads/2023/01/Academy-blog-cert-prog-chart-360x188.png 360w, https://www.nowsecure.com/wp-content/uploads/2023/01/Academy-blog-cert-prog-chart-768x402.png 768w, https://www.nowsecure.com/wp-content/uploads/2023/01/Academy-blog-cert-prog-chart.png 1200w\" sizes=\"(max-width: 960px) 100vw, 960px\" /></figure>\n\n\n\n<p></p>\n\n\n\n<p>The NowSecure services and research teams created a comprehensive online training program designed to help dev security advocates and security engineers understand the intricacies of secure mobile app development. <a href=\"https://academy.nowsecure.com/page/all-courses\">NowSecure Academy courses</a> provide new and experienced mobile app professionals with free training material to build a foundation of knowledge in mobile AppSec at their own pace. These courses include:</p>\n\n\n\n<ul>\n<li><a href=\"https://academy.nowsecure.com/architecture-and-analysis\">Architecture and Analysis</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/standards-and-risk-assessment\">Standards and Risks Assessment&nbsp;</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/lab-tools-and-process\">Lab, Tools and Process</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/weak-cryptography\">Weak Cryptography</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/hardcoded-keys-passwords-and-urls\">Hardcoded Keys, Passwords, and URLs</a></li>\n</ul>\n\n\n\n<p>Mobile AppSec professionals can ensure their mobile apps maintain compliance with the<a href=\"https://owasp.org/\" target=\"_blank\" rel=\"noreferrer noopener\"> Open Web Application Security Project</a> (OWASP) <a href=\"https://mas.owasp.org/\" target=\"_blank\" rel=\"noreferrer noopener\">Mobile Application Security Verification Standards </a>(MASV), as well as <a href=\"https://academy.nowsecure.com/app-defense-alliance-ada-mobile-application-security-assessment\">App Defense Alliance (ADA) Mobile Application Security Assessment</a> (MASA) for Google Play.&nbsp;</p>\n\n\n\n<p>Learners who complete the free courses in secure mobile development may also choose to extend their mobile AppSec education further with the NowSecure Secure Mobile Development Professional Certificate Learning Path. This 8-course, 3.5-hour paid training resource enables devs, architects, QA and security teams to refine their skill portfolio and add certifications to their resume with the help of the following courses:&nbsp;</p>\n\n\n\n<ul>\n<li><a href=\"https://academy.nowsecure.com/path/secure-mobile-development-professional/intro-to-mobile-app-security\">Intro to Mobile App Security&nbsp;</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/authentication-session-management\">Authentication &amp; Session Management</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/code-quality-build-settings\">Code Quality and Build Settings</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/cryptography-course-1\">Cryptography&nbsp;</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/data-storage-privacy-techniques\">Data Storage and Privacy</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/defense-in-depth\">Defense-in-Depth</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/platform-features-interaction\">Platform Features &amp; Interaction</a></li>\n\n\n\n<li><a href=\"https://academy.nowsecure.com/secure-network-communications\">Secure Network Communications</a></li>\n</ul>\n\n\n\n<p><a href=\"https://academy.nowsecure.com/\">NowSecure Academy</a> equips new and experienced professionals with all the information they need to secure the mobile apps they develop. Enroll today to become a mobile AppSec champion and guard against <a href=\"https://www.nowsecure.com/blog/2020/07/22/infographic-the-top-5-mobile-app-security-issues-and-how-developers-can-avoid-them/\">common mobile application security and privacy issues</a>.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2023/01/11/upskill-with-free-mobile-appsec-secure-mobile-app-dev-training/\">Upskill with Free Mobile AppSec &amp; Secure Mobile App Dev Training</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"Top 5 Mobile App Security Breaches of 2022","link":"https://www.nowsecure.com/blog/2022/12/28/top-5-mobile-app-security-breaches-of-2022/","dc:creator":{"#cdata-section":"Ola Alibaloye"},"pubDate":"Wed, 28 Dec 2022 12:30:00 +0000","category":{"#cdata-section":"Industry News"},"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20517"},"description":{"#cdata-section":"<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2022/12/28/top-5-mobile-app-security-breaches-of-2022/\">Top 5 Mobile App Security Breaches of 2022</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p></p>\n\n\n<a href=\"https://www.nowsecure.com/wp-content/uploads/2022/12/Top-5-Mobile-App-Breaches-of-2022.pdf\" class=\"pdfemb-viewer\" style=\"\" data-width=\"max\" data-height=\"max\" data-mobile-width=\"500\"  data-scrollbar=\"none\" data-download=\"on\" data-tracking=\"on\" data-newwindow=\"on\" data-pagetextbox=\"off\" data-scrolltotop=\"off\" data-startzoom=\"100\" data-startfpzoom=\"100\" data-toolbar=\"bottom\" data-toolbar-fixed=\"off\">Top-5-Mobile-App-Breaches-of-2022<br/></a>\n<p class=\"wp-block-pdfemb-pdf-embedder-viewer\"></p>\n\n\n\n<p></p>\n\n\n<section id=\"featured-resource-block_e66b039a72570559e84ac3e88432a08e\" class=\"featured-resource color- bg- mt-none mb-none\"\n\t>\n    <div class=\"bol-container\">\n        <div class=\"featured-resource-content js-set-min-height d-flex flex-column flex-lg-row justify-content-between align-items-center\">\n\n\t\t\t                <div class=\"featured-image-holder js-featured-image-holder\"\n                     style='background-image: url(\"https://www.nowsecure.com/wp-content/uploads/2022/12/iStock-1350268599-730x400.jpg\")'\n                ></div>\n\t\t\t\n            <div class=\"content-holder\">\n                <!-- I took the following snippet out for now, I do not believe that it is supposed to be here, Jacob -->\n\t\t\t\t<!--\n                    <span>\n                                            </span>\n\t\t\t\t-->\n                <h4 class=\"card-title text-bold color-\">\n                    <a href=\"https://www.nowsecure.com/mobile-app-breach-news/\">\n\t\t\t\t\t\tMobile App Security &#038; Privacy Breaches                    </a>\n                </h4>\n\n\t\t\t\t                    <p class=\"resource-subtitle\">\n\t\t\t\t\t\tList of all the latest breach news articles                    </p>\n\t\t\t\t\n\t\t\t\t\n        <div class=\"cta-holder d-flex flex-column flex-md-row align-items-center justify-content-start\">\n\t\t\t\t\t\t\t                    <div class=\"mt-sm d-flex 0\">\n\t\t\t\t\t\t<a href='https://www.nowsecure.com/mobile-app-breach-news/' target='_self' class='bol-btn-primary'>Read More</a>                    </div>\n\t\t\t\t\t\t\t        </div>\n\t\t\n            </div>\n        </div>\n    </div>\n</section>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2022/12/28/top-5-mobile-app-security-breaches-of-2022/\">Top 5 Mobile App Security Breaches of 2022</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}},{"title":"Demystifying Mobile App Pen Testing","link":"https://www.nowsecure.com/blog/2022/12/14/demystifying-mobile-app-pen-testing/","dc:creator":{"#cdata-section":"Ola Alibaloye"},"pubDate":"Wed, 14 Dec 2022 12:30:00 +0000","category":{"#cdata-section":"Mobile Security Solutions"},"guid":{"@isPermaLink":"false","#text":"https://www.nowsecure.com/?p=20464"},"description":{"#cdata-section":"<p>Interest in mobile app pen testing grows as organizations recognize the importance of mitigating security and privacy risks. Less understood and more mysterious to many, though, is how to build the skills needed to conduct manual mobile application security testing. To shed light on the topic, NowSecure convened a virtual panel of its expert mobile [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2022/12/14/demystifying-mobile-app-pen-testing/\">Demystifying Mobile App Pen Testing</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"},"content:encoded":{"#cdata-section":"\n<p>Interest in <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-penetration-testing/\">mobile app pen testing </a>grows as organizations recognize the importance of mitigating security and privacy risks. Less understood and more mysterious to many, though, is how to build the skills needed to conduct manual <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-security-testing/\">mobile application security testing</a>.</p>\n\n\n\n<p>To shed light on the topic, NowSecure convened a virtual panel of its expert mobile pen testers at the <a href=\"https://events.bizzabo.com/NSConnect2022\" target=\"_blank\" rel=\"noreferrer noopener\">NowSecure Connect 2022</a> AppSec and DevSecOps community event. The <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-penetration-testing/\">NowSecure Services</a> team has more than a dozen years pen testing more than 11,000 mobile apps against <a href=\"https://www.nowsecure.com/blog/2022/08/10/how-mobile-appsec-testing-standards-speed-devsecops/\">industry standards</a> and boasts the industry’s broadest collection of the most skilled pen testers. In addition, NowSecure security analysts have helped thousands of organizations establish successful mobile app pen testing programs.</p>\n\n\n\n<p>The panelists include:</p>\n\n\n\n<ul>\n<li>Ben Corbitt, Application Security Analyst, NowSecure</li>\n\n\n\n<li>David Mockler, Senior Application Security Analyst</li>\n\n\n\n<li>Jeremy Murphy, Senior Application Security Analyst, NowSecure</li>\n\n\n\n<li>Devin Price, Lead Application Security Analyst, NowSecure</li>\n</ul>\n\n\n\n<figure class=\"wp-block-image size-large\"><img decoding=\"async\" loading=\"lazy\" width=\"960\" height=\"640\" src=\"https://www.nowsecure.com/wp-content/uploads/2022/12/Pen-testing-blog-panel-screenshot-960x640.png\" alt=\"\" class=\"wp-image-20468\" srcset=\"https://www.nowsecure.com/wp-content/uploads/2022/12/Pen-testing-blog-panel-screenshot-960x640.png 960w, https://www.nowsecure.com/wp-content/uploads/2022/12/Pen-testing-blog-panel-screenshot-360x240.png 360w, https://www.nowsecure.com/wp-content/uploads/2022/12/Pen-testing-blog-panel-screenshot-768x512.png 768w, https://www.nowsecure.com/wp-content/uploads/2022/12/Pen-testing-blog-panel-screenshot-1536x1024.png 1536w, https://www.nowsecure.com/wp-content/uploads/2022/12/Pen-testing-blog-panel-screenshot.png 1921w\" sizes=\"(max-width: 960px) 100vw, 960px\" /></figure>\n\n\n\n<p></p>\n\n\n\n<p>The group discussion highlights how mobile app pen testers got their start and honed their craft, their favorite tools for Android and iOS and <a href=\"https://www.nowsecure.com/blog/2019/06/20/best-practices-for-mobile-app-pen-testing/\">best practices for mobile app pen testing</a>. <em>Their original conversation has been edited for length and clarity.</em></p>\n\n\n\n<p></p>\n\n\n\n<p><strong>[Mockler] Do you need certification or formal education to become a mobile pen tester or break into cybersecurity?</strong></p>\n\n\n\n<p><strong>[Murphy</strong>] “No. There are plenty of free and inexpensive <a href=\"https://www.nowsecure.com/products/nowsecure-academy-mobile-appsec-training/\">resources</a> out there that can teach you everything you need to become a penetration tester. To get hired, though, certifications give potential employers a way to validate your skillset.”</p>\n\n\n\n<p><strong>[Corbitt] </strong>“They&#8217;re not necessarily required, but are great for building your resume and getting your foot in the door. <a href=\"https://academy.nowsecure.com/\">Certifications</a> that include a training class like a weeklong boot camp or lab requirements can be really helpful in forcing you to learn a lot in a short period of time.”</p>\n\n\n\n<p><strong>[Price</strong>] “I would say no. I’ve seen people join bug bounties or do technical write-ups to demonstrate to employers they know how to find security vulnerabilities within mobile applications.”</p>\n\n\n\n<p><strong>[Murphy]</strong> “Have a GitHub of some of your work, a blog or HackTheBox rank to show you have the skills.”</p>\n\n\n\n<p></p>\n\n\n<section id=\"featured-resource-block_c993e7d08a0bc0c758e70c13e75012eb\" class=\"featured-resource color- bg- mt-none mb-none\"\n\t>\n    <div class=\"bol-container\">\n        <div class=\"featured-resource-content js-set-min-height d-flex flex-column flex-lg-row justify-content-between align-items-center\">\n\n\t\t\t                <div class=\"featured-image-holder js-featured-image-holder\"\n                     style='background-image: url(\"https://www.nowsecure.com/wp-content/uploads/2021/08/academy.png\")'\n                ></div>\n\t\t\t\n            <div class=\"content-holder\">\n                <!-- I took the following snippet out for now, I do not believe that it is supposed to be here, Jacob -->\n\t\t\t\t<!--\n                    <span>\n                                            </span>\n\t\t\t\t-->\n                <h4 class=\"card-title text-bold color-\">\n                    <a href=\"https://www.nowsecure.com/products/nowsecure-academy-mobile-appsec-training/\">\n\t\t\t\t\t\tMobile AppSec Training                    </a>\n                </h4>\n\n\t\t\t\t\n\t\t\t\t\n        <div class=\"cta-holder d-flex flex-column flex-md-row align-items-center justify-content-start\">\n\t\t\t\t\t\t\t                    <div class=\"mt-sm d-flex 0\">\n\t\t\t\t\t\t<a href='https://www.nowsecure.com/products/nowsecure-academy-mobile-appsec-training/' target='_self' class='bol-btn-primary'>Read More</a>                    </div>\n\t\t\t\t\t\t\t        </div>\n\t\t\n            </div>\n        </div>\n    </div>\n</section>\n\n\n\n<p><strong>[Mockler] How did each of you gain pen testing skills to get to where you are today?&nbsp;</strong></p>\n\n\n\n<p><strong>[Price] </strong>“The best resource I used first was the more senior pen testers already on my team when I joined NowSecure.<strong> </strong>Early on, I looked through older reports of what my teammates had done to get in the mindset of how to write a detailed assessment report. In my free time, I completed pen testing training courses on TryHackMe and found some security podcasts to help me understand the exploits pen testers are doing and understand the vernacular.”&nbsp;</p>\n\n\n\n<p><strong>[Corbitt]</strong> “I started as a pen tester for web apps. The company also had a mobile app and nobody at the time knew how to test it. I was voluntold to get a mobile security certification and test the app.”</p>\n\n\n\n<p><strong>[Murphy]</strong> “I started at the help desk. One of my coworkers said, ‘Hey dude, you should study for Certified Ethical Hacker (CEH). He told me what it was and I thought it was cool. Then I found a podcast that lit a fire underneath me — shoutout to Jack Rhysider at <a href=\"https://darknetdiaries.com/\" target=\"_blank\" rel=\"noreferrer noopener\"><em>Darknet Diaries</em></a>. It really built my passion for this field. I started on Hack The Box and built a network of pen testers. I started in the trenches and worked my way up.&#8221;</p>\n\n\n\n<p><br><strong>[Mockler]</strong> “Everyone gets there in their own way, but you all took the initiative to go out and learn something new without anyone really telling you to. Curiosity is key to being a pen tester. If you don’t have curiosity, it’s going to be tough.”</p>\n\n\n<section id=\"featured-resource-block_29d94f6725319a2be817dc7c43c1b01a\" class=\"featured-resource color- bg- mt-none mb-none\"\n\t>\n    <div class=\"bol-container\">\n        <div class=\"featured-resource-content js-set-min-height d-flex flex-column flex-lg-row justify-content-between align-items-center\">\n\n\t\t\t                <div class=\"featured-image-holder js-featured-image-holder\"\n                     style='background-image: url(\"https://www.nowsecure.com/wp-content/uploads/2022/06/Hero-Image-1-730x400.png\")'\n                ></div>\n\t\t\t\n            <div class=\"content-holder\">\n                <!-- I took the following snippet out for now, I do not believe that it is supposed to be here, Jacob -->\n\t\t\t\t<!--\n                    <span>\n                                            </span>\n\t\t\t\t-->\n                <h4 class=\"card-title text-bold color-\">\n                    <a href=\"https://www.nowsecure.com/products/nowsecure-mobile-app-penetration-testing-services/\">\n\t\t\t\t\t\tNowSecure Mobile App Penetration Testing Services                    </a>\n                </h4>\n\n\t\t\t\t\n\t\t\t\t\n        <div class=\"cta-holder d-flex flex-column flex-md-row align-items-center justify-content-start\">\n\t\t\t\t\t\t\t                    <div class=\"mt-sm d-flex 0\">\n\t\t\t\t\t\t<a href='https://www.nowsecure.com/products/nowsecure-mobile-app-penetration-testing-services/' target='_self' class='bol-btn-primary'>Read More</a>                    </div>\n\t\t\t\t\t\t\t        </div>\n\t\t\n            </div>\n        </div>\n    </div>\n</section>\n\n\n\n<p><strong>[Mockler]</strong> <strong>Rolling into our next question, what kind of mobile app pen testing tools do you use?</strong></p>\n\n\n\n<p><strong>[Price]</strong> &#8220;For Android, my go-to tool for any type of static analysis or reverse engineering is JADX, a simple Dex to Java decompiler. And for the iOS counterpart, I use Hopper which is a great disassembler that lets you decompile and debug iOS applications.&#8221;</p>\n\n\n\n<p><strong>[Corbitt]</strong> &#8220;I really like Drozer, a tool for Android apps. It’s very outdated and hard to get working sometimes. I really wish there was a more modern supported tool that does the same thing. But it’s a great tool for quickly and easily interacting with the internals of an application.&#8221;</p>\n\n\n\n<p><strong>[Murphy] </strong>&#8220;The correct answer is <a href=\"https://www.nowsecure.com/products/nowsecure-workstation/\">NowSecure Workstation</a>. Some of the key ones are Hopper, Ghidra, Burp Suite, Postman, JADX…reFlutter on GitHub is another good one for poking around those new Flutter apps. Obviously, <a href=\"https://github.com/nowsecure/r2frida\" target=\"_blank\" rel=\"noreferrer noopener\">R2Frida</a> is another good one we use a lot for reverse engineering.&#8221;</p>\n\n\n\n<p><strong>[Mockler]</strong> “We get asked quite a bit what are the best <a href=\"https://www.nowsecure.com/blog/2022/04/13/popular-mobile-app-security-testing-tools/\">mobile app pen testing tools </a>out there. It’s not necessarily what the best tools are — it’s ‘what are you trying to do?’ Depending on what type of exploit you’re going to try, you’re going to use a different tool and there’s a GitHub repo for everything.”</p>\n\n\n\n<p><strong>[Mockler]</strong> <strong>We’ve discussed what tools we use. Let’s go over what we look for with them.&nbsp;</strong></p>\n\n\n\n<p><strong>[Price]</strong> “One of the first things I examine is the Android manifest file, because that&#8217;s going to tell me a lot about the application. For example, has the application been correctly signed with the correct key length? I’ll also look for some of the application’s content providers and look at any broadcast receivers to make sure those have been correctly exported. Has the application enabled a backup of user data? What does the application’s network security configuration look like? What are some of the rulings that have been set up for that? Think of the manifest file as the front door for pentesting when it comes to static analysis for an Android application.”</p>\n\n\n\n<p><strong>[Corbitt]</strong> “Drozer looks at the internals of an Android application — the activities and broadcast receivers and the like. Let’s talk about activities. If you don’t know what an activity is, think of it as a screen. If you open an Android application and it brings up a login screen, that&#8217;s an activity. And when you log in and it brings up your main menu, that&#8217;s another activity. If those activities aren&#8217;t set correctly with the proper permissions, you can directly call some activities that you weren&#8217;t meant to see without logging in first. A few years ago, there was an NFL-related app where you could subscribe to watch NFL games on your phone. There was a bug in the app where using Drozer, you could call an activity out of order to reach the section of the app where you could watch NFL games without having to login to an account or pay. You could run that activity that wasn’t set properly and watch NFL games for free. I find that really interesting, being able to call parts of the app out of order and bypass things that you&#8217;re not supposed to be able to bypass.”</p>\n\n\n\n<p><strong>[Murphy]</strong> “Using Burp Suite for the network side of things, I like to look at what kind of tokens they may be using and if there’s any reuse, make sure it’s properly valid. I like to see if the app has proper sanitizing. We’ve found a lot of mobile apps that aren’t secured against tampering. We’re able to laterally move to places we’re not supposed to. That happens to my favorite part of mobile pen testing; it’s definitely the most fun.”</p>\n\n\n\n<p><strong>[Mockler] </strong>“ API backend is a very important part of the mobile pen testing life cycle. It&#8217;s not 100% solely mobile. Most of the time, mobile apps and web apps use the same backend. I personally love using Burp Suite and tampering with anything&nbsp; that might look like cross-site scripting, SQL injection. If there’s an input, search bar or anything there, I’m going to attack it…If you poke at something long enough, you’ll definitely break it.”</p>\n\n\n\n<p></p>\n\n\n\n<p><strong>[Mockler] Let’s talk about methodology. Let’s say I give you a brand new APK — what’s the starting point, where you end and what’s everything in between?&nbsp;</strong></p>\n\n\n\n<p><strong>[Murphy]</strong> “To be able to properly assess an application, you have to understand what its goal is, what its target audience is and what it&#8217;s supposed to be used for. Research the app, use it for a bit and try to get a full understanding of its purpose. That gets me into a spot where I can start thinking about different attack vectors and ways to abuse the application.&nbsp; I like to go into static analysis right off the bat, open up the binary and poke around to see if I can find any hard-coded strings that shouldn’t be there.”</p>\n\n\n\n<p><strong>[Corbitt]</strong> “I agree, I like to start with static analysis. If I’m given an APK, logging into the app and seeing what’s going on is a good first step. Then decompile the APK with either APK Tool or JADX. I’ve found several hard-coded API keys that have given me access to Amazon accounts. I go to the network and API after that using a proxy with Burp Suite and look at network traffic.&#8221;</p>\n\n\n\n<p><strong>[Price]</strong> “My approach is static code first and then dynamic analysis. Jeremy mentioned a great point. If it’s a brand new app that I have never used before, I’ll try to figure out how it works first and then run a general static analysis scan to get an idea of what types of vulnerabilities the app may be susceptible to. Then I’ll follow that up with data-at-rest analysis, where I try to look for sensitive data in either the device or app’s private storage that is not protected ,but should be. Then I’ll try some reverse engineering to see if I can bypass any controls or uncover sensitive data through that method. After that, I’ll finish with a dynamic analysis of the app.&#8221;&nbsp;</p>\n\n\n\n<p><strong>[Mockler]</strong> “The way a mobile app pen test is supposed to go, you have that research stage and information gathering. Then static analysis and dynamic analysis before report writing. I swap static and dynamic and like to do dynamic first to see if I can find any API keys or client IDs, then go back to static analysis…No matter where you start, you always have to go back to enumeration or information gathering.&#8221;&nbsp;</p>\n\n\n\n<p><strong>[Mockler]</strong> <strong>What’s your favorite vulnerability?&nbsp;</strong></p>\n\n\n\n<p><strong>[Murphy]</strong> “I like the idea of how [SQL injection] works and the things it can do.&#8221;</p>\n\n\n\n<p><strong>[Corbitt]</strong> “I found something very interesting one time using Burp. It turned out it was using an XOR where they were rolling their own encryption. Because of how xor works, it was basically the master key and I could decrypt every password from there on out when I found it.&#8221;</p>\n\n\n\n<p><strong>[Price]</strong> “For me, anytime there are sensitive credentials within a mobile app’s private storage that are unencrypted. I like the simple vulnerabilities that will be really easy for an attacker to exploit if they are not resolved.&#8221;</p>\n\n\n\n<p><strong>[Mockler] </strong>&#8220;We’re out of time here but I want to thank everyone on the panel for talking about mobile app pen testing methodologies.&#8221;</p>\n\n\n\n<p>For those seeking to acquire or advance their mobile pen testing skills, <a href=\"https://www.nowsecure.com/products/nowsecure-academy-mobile-appsec-training/\">NowSecure Academy</a> offers free online training and paid certifications. Check out ‘<a href=\"https://academy.nowsecure.com/crash-course-in-getting-started-with-mobile-app-pentesting\">Crash Course in Getting Started with Mobile App Pen Testing</a>’ and the <a href=\"https://academy.nowsecure.com/plan/mobile-application-security-foundations\">Mobile Application Security Foundations certificate</a> curriculum.</p>\n\n\n\n<blockquote\n        class=\"custom-quote  \">\n\n    <i class=\"fas fa-quote-left\"></i>\n\tTo tackle the pen testing challenges of cost, frequency and coverage, we are seeing a growing trend towards Pen Testing as a Service.    <i class=\"fas fa-quote-right\"></i>\n\n\t\n        <cite>&#8211; Michelle Abraham, IDC Security and Trust Research Director</cite>\n\n\t\n</blockquote>\n\n\n\n<p></p>\n\n\n\n<h2><strong>Mobile App Pen Testing as a Service (PTaaS)</strong></h2>\n\n\n\n<p>Because organizations face difficulties in staffing experienced mobile pen testers and assembling the required <a href=\"https://www.nowsecure.com/blog/2022/04/13/popular-mobile-app-security-testing-tools/\">pen testing tools</a>, they often turn to expert <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-penetration-testing/\">mobile pen testing services</a> such as the NowSecure Services team for a deep bench of talent that includes the security pros featured above. The need for a fast, frequent <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-app-security-testing/\">mobile AppSec testing solution</a> drives demand for Mobile Pen Testing as a Service (PTaaS).&nbsp;</p>\n\n\n\n<p>“Application development and security teams strive to deliver secure software quickly to market, <a href=\"https://discover.nowsecure.com/c/6-ways-secure-mobile-app-development-efficiency?x=LIaYZt#page=1\">balancing speed and managing risk</a>,” said Michelle Abraham, Research Director, Security and Trust at IDC. “To tackle the pen testing challenges of cost, frequency and coverage, we are seeing a growing trend towards Pen Testing as a Service. PTaaS solutions offer a mix of continuous automated security testing and deeper manual pen testing to bring together the best of both worlds.”</p>\n\n\n\n<p>NowSecure <a href=\"https://www.nowsecure.com/press-releases/nowsecure-launches-mobile-pen-testing-as-a-service-ptaas-to-scale-security-more-efficiently/-services.html\">launched NowSecure Mobile Pen Testing as a Service</a> to bridge the gap between automated and manual mobile security assessments for continuous security. Designed to provide mobile app developers and security teams with a more cost-effective, efficient pen testing solution, <a href=\"https://info.nowsecure.com/mobile-app-pen-testing-services.html\">NowSecure PTaaS</a> combines periodic expert manual assessments with the power of <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-devsecops/\">automated continuous testing</a> to deliver full mobile app coverage at a higher frequency, all for less than the cost of a single outsourced pen test.&nbsp;</p>\n\n\n\n<p>Customers can enjoy maximum value by choosing from on-demand and scheduled pen testing complemented by automated continuous testing for DevSecOps pipelines, all accessible from a single portal. NowSecure offers a flexible mix of <a href=\"https://www.nowsecure.com/solutions/by-need/mobile-standards-compliance/\">standards-based </a>pen test options that include embedded developer remediation resources, consultation and retesting to confirm mitigation. Dec&nbsp;Learn more about NowSecure mobile <a href=\"https://www.nowsecure.com/products/nowsecure-mobile-app-penetration-testing-services/\">pen testing</a> and the NowSecure PTaaS offering — sign up for a <a href=\"https://www.nowsecure.com/products/nowsecure-mobile-app-penetration-testing-services/\">personal mobile pen testing consultation</a> to discuss your needs today.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.nowsecure.com/blog/2022/12/14/demystifying-mobile-app-pen-testing/\">Demystifying Mobile App Pen Testing</a> appeared first on <a rel=\"nofollow\" href=\"https://www.nowsecure.com\">NowSecure</a>.</p>\n"}}]}}}