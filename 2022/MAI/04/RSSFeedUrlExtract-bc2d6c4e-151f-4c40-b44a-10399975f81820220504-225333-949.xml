<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
  <channel>
    <title><![CDATA[Stories by Ivan Novikov on Medium]]></title>
    <description><![CDATA[Stories by Ivan Novikov on Medium]]></description>
    <link>https://medium.com/@d0znpp?source=rss-952c3fe8c7c7------2</link>
    <image>
      <url>https://cdn-images-1.medium.com/fit/c/150/150/1*9dpTssG7UxUmo8me1wNRRA.jpeg</url>
      <title>Stories by Ivan Novikov on Medium</title>
      <link>https://medium.com/@d0znpp?source=rss-952c3fe8c7c7------2</link>
    </image>
    <generator>Medium</generator>
    <lastBuildDate>Thu, 05 May 2022 01:53:33 GMT</lastBuildDate>
    <atom:link href="https://medium.com/@d0znpp/feed" rel="self" type="application/rss+xml" />
    <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
    <atom:link href="http://medium.superfeedr.com" rel="hub" />
    <item>
      <title><![CDATA[What is threat modeling ❓ Definition, Methods, Example]]></title>
      <link>https://d0znpp.medium.com/what-is-threat-modeling-definition-methods-example-d0dbc0b1f7f3?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/d0dbc0b1f7f3</guid>
      <category><![CDATA[threat-modeling]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Wed, 02 Feb 2022 06:01:11 GMT</pubDate>
      <atom:updated>2022-02-02T06:01:11.234Z</atom:updated>
      <content:encoded><![CDATA[<p>Threat modeling is a method for upgrading the security of an application, system, or business process by distinguishing objections and weaknesses, just as carrying out countermeasures to stay away from or alleviate the impacts of structure dangers.</p><p>Threat modeling supports recognizing the security prerequisites of a system or association — whatever is basic, touchy, or contains significant information. It’s a nitty-gritty and efficient strategy for recognizing possible dangers and shortcomings with the goal that the danger to IT assets is kept up with to a base. It likewise helps IT chiefs in grasping the effect of dangers, surveying their importance, and executing shields.</p><h3>Threat modeling process</h3><p>Danger displaying’s comprehensive person comes from the way that it includes more than essentially software engineers. You’ll require input from the accompanying partners to make a successful danger model.</p><ul><li><strong>Define safety requirements</strong></li></ul><p>You should initially conclude what you need to accomplish with this movement prior to utilizing danger displaying devices and systems. Objectives are generally made in view of the accompanying measures:</p><p>Privacy is important to shield information from unapproved revelation.</p><p>The ability to keep away from unapproved information changes is known as respectability.</p><p>Regardless of whether the framework is under attack, the ability to offer basic administrations isn’t imperiled.</p><p>Make a rundown of your accessibility and execution administration level arrangements (SLAs). How proprietary advantages and licensed innovation treat need to ensure? The main inquiry now is how long and cash you need to contribute to danger demonstrating.</p><ul><li><strong>Identify the likely threats</strong></li></ul><p>This stage involves ordering a rundown of the multitude of parts that make up your framework. An all around reported framework of your whole application can help with the accelerating of the system. This should be visible being used cases, information streams, information blueprints, and sending charts. There are two sorts of representations you can make.</p><p>Information stream graph: It portrays how your information ought to go through your framework. At the functional level, it shows where information enters and leaves every part, just as information stores, cycles, connections, and trust limits.</p><p>Stream diagram of the cycle: It shows how clients collaborate with each other and progress through different use cases. It’s at the level of the application. PFDs center around client and outsider collaborations with your framework, though DFDs center around the way that your framework works inside. You can use it is possible that one or both simultaneously.</p><p>It’s an ideal opportunity to continue on to danger evaluation since you’ve distinguished the main players and resources in your application.</p><ul><li><strong>Threat Assessment</strong></li></ul><p>You made the charts to fathom your framework in the past stage. To get a handle on the genuine perils, you’ll have to concentrate on these designs in this stage. Now, you should decide the various techniques where your resources can be compromised, just as the personality of any expected assailants. This can be cultivated in an assortment of ways. In the accompanying part, we’ll go through the six most normal danger evaluation demonstrating procedures.</p><ul><li><strong>Mitigating Threats</strong></li></ul><p>You’ll wind up with an expert rundown or library of dangers connected with every resource and its activities, just as a rundown of imminent aggressor profiles, whenever you’ve completed the process of recognizing dangers. You should now figure out which of these perils your application is presented to. Consider the model introduced in the principal part of this article. You’ll see that the danger was ‘beast power secret word hacking,’ while the framework weakness was ‘utilizing MD5 techniques to store passwords.’ After you’ve recognized your weaknesses, you’ll have to evaluate the dangers associated with every one. You can address the weaknesses in the accompanying ways in view of the danger examination:</p><ol><li>Nothing ought to be done (too generally safe or too hard to even consider conveying the related intimidation)</li><li>Eliminate the usefulness that is connected to it.</li><li>Diminish the convenience of the component or turn it off.</li><li>Acquire new code, foundation, or plan upgrades.</li><li>You’ll likewise monitor weaknesses that will be settled in ongoing releases</li></ol><ul><li><strong>Confirmation of threat mitigation</strong></li></ul><p>You check assuming that all weaknesses have been settled during approval. Have each of the risks been killed? Is it conceivable to have a rundown of the leftover dangers? From that point onward, you should settle on the following measures to deal with the dangers that have been distinguished, just as the date for the following danger displaying cycle. Remember that danger displaying is a ceaseless cycle. It should be done at customary stretches or at specific stages during the improvement of the application.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*sD1de0JX2rZBvUKX.jpg" /></figure><h3>Why is it important to do this?</h3><p>Any program or framework should be worked to be impervious to assaults. Notwithstanding, deciding the security norms needed to achieve this may be troublesome. Engineers and clients think and act uniquely in contrast to assailants.</p><p>Danger displaying is an essential way to deal with distinguishing dangers that aren’t typically assessed or found through code surveys or different kinds of reviews. It empowers a task group to conclude the security controls an application need, just as how to execute viable countermeasures against possible dangers and handle issues rapidly. This system brings about extensively safer applications, and assets are appropriately used by focusing on anticipated dangers.</p><p>Danger models are a significant perspective in the production of a viable security framework. Engineers can install security into an undertaking during the turn of events and upkeep stages when danger demonstrating is essential for the <a href="https://www.wallarm.com/what/what-is-devops">DevOps</a> cycle. This takes out continuous oversights including neglecting to really take a look at input, having helpless validation, not taking care of mistakes appropriately, and not encoding information.</p><p>‍</p><h3>What are the popular threat modeling techniques?</h3><ul><li><strong>Stride threat model</strong></li></ul><p>STRIDE has been applied to both digital just and digital actual frameworks with incredible achievement. STRIDE is not generally kept up with by Microsoft, despite the fact that it is as yet utilized as a feature of the Microsoft Security Development Lifecycle (SDL) with the Threat Modeling Tool. Microsoft fostered a comparable system called DREAD (harm potential, reproducibility, exploitability, impacted clients, discoverability), which is likewise a memory aide (harm potential, reproducibility, exploitability, impacted clients, discoverability) however adopts an alternate strategy to assess dangers.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*phUdO3k_5gIk8Hcz.jpg" /></figure><p>STRIDE</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/991/1*d-QocSbDc_ouIujf2oW0gQ.jpeg" /></figure><ul><li><strong>PASTA threat modeling</strong></li></ul><p>In 2012, the Process for Attack Simulation and Threat Analysis (PASTA) was set up as a danger driven danger demonstrating worldview. It is a seven-venture, assault driven technique that considers business sway examination and consistence prerequisites while connecting specialized necessities with business targets.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*XbBy6JivvUKoL1Wb.jpg" /></figure><ul><li><strong>LINDDUN</strong></li></ul><p>The LINDDUN structure (linkability, recognizability, nonrepudiation, perceptibility, exposure of data, ignorance, rebelliousness) is an information security system. LINDDUN is a six-venture framework for assessing protection that follows an orderly methodology.</p><p>The framework DFD, which depicts the information streams, information stores, cycles, and outer elements of the framework, is the initial phase in LINDDUN. Clients of LINDDUN recognize the pertinence of a danger to the framework and produce danger trees by emphasizing over every single model component and breaking down them from the danger classifications’ point of view.</p><ul><li><strong>Attack Trees</strong></li></ul><p>On digital-only frameworks, digital actual frameworks, and simply actual frameworks, utilizing assault trees to reproduce dangers is one of the most seasoned and most widely utilized systems. At first utilized as an independent technique, assault trees have now been combined with different strategies and systems.</p><p>Assault trees are tree-like representations that depict assaults on a framework. The assault’s motivation is to go to the tree root, and the leaves are courses to arrive. Every objective is portrayed just like own tree. Because of the framework danger investigation, a bunch of assault trees is created.</p><ul><li><strong>TRIKE threat model</strong></li></ul><p>Trike is a security reviewing framework that utilizes danger displaying as a strategy. It looks at danger displaying from both a danger the executives and a cautious point of view.</p><p>Trike, in the same way as other different methodologies, starts by characterizing a framework. By listing and appreciating the framework’s entertainers, resources, anticipated activities, and rules, the investigator makes a prerequisite model. This stage assembles an entertainer resource activity framework, with resources in the sections and entertainers in the lines.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*vh3afzIwU4Nye022.jpg" /></figure><p>Every grid cell is isolated into four pieces, one for every CRUD activity (making, perusing, refreshing, and erasing).</p><ul><li><strong>OCTAVE</strong></li></ul><p>The OCTAVE (Operationally Critical Threat, Asset, and Vulnerability Evaluation) procedure is a danger based system for assessing and planning network safety techniques. The SEI’s CERT Division made it in 2003, and it was refreshed in 2005. OCTAVE is a danger evaluation strategy that spotlights on hierarchical rather than mechanical dangers. The three principle parts are functional danger, security rules, and innovation.</p><ol><li>Make resource based danger profiles. (This is an assessment of the organization.)</li><li>Decide the foundation’s weakness. (This is a glance at the information framework.)</li><li>Set up a security methodology and plan. (Dangers to the association’s vital resources and direction are perceived.)</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*cNbT0fMDcT2ylLpL.jpg" /></figure><ul><li><strong>VAST</strong></li></ul><p>ThreatModeler, a mechanized danger displaying stage, is the establishment for the Visual, Agile, and Simple Threat (VAST) Modeling procedure. Its adaptability and convenience empower it to be executed across the full foundation of enormous organizations to produce noteworthy and reliable outcomes for some partners.</p><p>Huge requires the formation of two kinds of models: application danger models and functional danger models, to represent contrasts in tasks and worries among improvement and foundation groups. Process-stream charts are utilized in application danger models to portray the engineering perspective. DFDs are utilized to foster functional danger models according to the assailant’s point of view. This approach permits VAST to be incorporated into the turn of events and DevOps lifecycles of the association.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*_SBU3IrfWThdeDTc.jpg" /></figure><ul><li><strong>Persona non Grata</strong></li></ul><p>Persona non Grata (PnG) is a game with regards to human aggressors’ inspirations and capacities. It marks clients as models who could manhandle the framework, constraining investigators to think about the framework from an accidental utilize point of view. Figure 5 shows a few models.</p><p>PnG can support the perception of dangers according to the foe’s viewpoint, which is valuable in the beginning stages of danger displaying. The intention is to acquaint a specialized master with a potential framework assailant so the aggressor’s capacities, inspirations, and objectives might be analyzed. This study helps the master in understanding the framework’s shortcomings according to the assailant’s point of view. PnG is appropriate to the Agile procedure, which utilizes personas.</p><ul><li><strong>hTMM</strong></li></ul><p>In 2018, the SEI established the Hybrid Threat Modeling Method (hTMM). SQUARE, Security Cards, and PnG exercises are all important for it. No bogus up-sides, no ignored dangers, a predictable result paying little heed to who is doing the danger modelling, and expense adequacy are among the technique’s expected traits.</p><p>The strategy’s principle steps are as per the following:</p><ol><li>Figure out which framework will be danger demonstrated.</li><li>Apply Safety Cards as per engineer advice.</li><li>PnGs that are probably not going to happen ought to be taken out (i.e., there are no sensible assault vectors).</li><li>Make a synopsis of the discoveries with the assistance of the device.</li><li>Keep on utilizing a conventional course of hazard evaluation.</li></ol><ul><li><strong>qTMM</strong></li></ul><p>This crossbreed approach agreeably incorporates assault trees, STRIDE, and CVSS. It endeavors to address a couple of key dangers displaying hardships for digital actual frameworks with complex interdependencies between their constituents.</p><p>For every one of STRIDE’s five danger classes, the Quantitative Threat Modeling Method (Quantitative TMM) begins by creating part assault trees. This movement exhibits the connections between assault sorts and low-level part credits. The CVSS strategy is then used to compute scores for the tree’s parts.‍</p><h3>Benefits of Threat Modeling</h3><p>Danger displaying can assist with legitimizing security endeavors by offering a reasonable view all through a product project when done viably. An organization can utilize the danger demonstrating strategy to record known application security concerns and settle on informed choices regarding how to deal with them. Leaders may somehow or another make rushed ends in light of next to zero proof.</p><p>Overall, a very much recorded danger model gives affirmations that are valuable in clarifying and guarding the security stance of an application or PC framework. Danger demonstrating is the best procedure to do the accompanying when the advancement organization is worried about security:</p><ul><li>Find issues from the get-go in the product advancement life cycle (SDLC)- even before any coding happens.</li><li>Distinguish configuration gives that standard testing and code audits could miss.</li><li>Analyze new sorts of assault that you probably won’t have considered previously.</li><li>Assisting with focusing on testing and code audit can assist you with taking advantage of your testing financial plan.</li><li>Decide the security necessities.</li><li>Forestall exorbitant post-arrangement recoding by settling issues before programming is delivered.</li><li>Think about risks other than ordinary attacks, like security weaknesses explicit to your application.</li><li>Keep systems in front of the inner and outside aggressors who might be a danger to your applications.</li><li>To sort out what parts aggressors will target, feature resources, danger specialists, and controls.</li><li>To find potential assailants in association with the framework engineering, model the situation of danger specialists, intentions, abilities, and capacities.</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*1-7Jsgynb-O9qRHr.jpg" /></figure><h3>Threat modeling tools</h3><p>Danger demonstrating is a troublesome undertaking. There are a limitless number of expected dangers. Regardless of whether the task is little, it’s a good idea to utilize a danger displaying apparatus to set aside time and cash.</p><p>Danger demonstrating devices make the cycle more organized and reproducible by diminishing its intricacy. This eliminates the assets needed to assemble a danger model starting from the earliest stage and keep up with it over the long haul. A decent danger displaying apparatus permits clients to see, plan, plan for, and anticipate different dangers. Coming up next are probably the main characteristics to search for in an apparatus: danger insight stream to guarantee the most up to date distinguished dangers are assessed; danger dashboard with proposed relief arrangements; alleviation dashboard that interfaces with an issue tracker like Jira; and reports for consistence and partners.</p><p>Coming up next are the absolute most frequently utilized danger demonstrating instruments:</p><p><strong>CAIRIS.</strong></p><p>A free programming stage that actions the assault surface and approves plans for realized security defects and potential <a href="https://www.wallarm.com/resources/wallarm-and-gdpr">GDPR</a> consistence issues utilizing insight about expected assaults.</p><p><strong>IriusRisk.</strong></p><p>A theoretical model danger demonstrating apparatus with versatile inquiries that lead the client through the application’s specialized plan, arranged elements, and security setting.</p><p><strong>Microsoft Threat Modeling Tool.</strong></p><p>The Microsoft Threat Modeling Tool is a program that assists you with demonstrating dangers. This free apparatus is planned for the individuals who aren’t security trained professionals. As a feature of Microsoft’s Security Development Lifecycle, it gives assistance on creating and breaking down danger models. It utilizes standard documentation to portray framework parts, information streams, and security zones, conveying it easy to distinguish intimidation types in view of the product’s construction.</p><p><strong>Danger Dragon by OWASP.</strong></p><p>This open source application is accessible as an on the web or work area application. It monitors possible dangers, decides moderation methodologies, and showcases danger model parts and danger surfaces to clients.</p><p><strong>SD Elements.</strong></p><p>This Security Compass apparatus accumulates and arranges framework information relying upon weaknesses, bringing about review prepared reports.</p><p><strong>Threagile</strong>.</p><p>This is a free and open source coordinated advancement climate that incorporates danger demonstrating in the application codebase. It very well may be utilized as an order line application, a Docker holder, or a <a href="https://www.wallarm.com/what/differences-soap-vs-rest#what_is_rest_">REST</a> server.</p><p><strong>ThreatModeler.</strong></p><p>Danger demonstrating is robotized locally, <a href="https://www.wallarm.com/product/cloud-waf">cloud security</a>, and application security versions. Dangers are recognized, anticipated, and characterized, utilizing prebuilt engineering layouts to assist with coordination.</p><h3>End</h3><p>The danger demonstrating interaction should be revamped at whatever point the application, IT framework, or danger climate changes, no matter what whatever instrument is used. As new dangers arise, this keeps up with the danger model current.</p><p>Danger investigation takes time and exertion. It’s anything but an agenda work out, however it’s smarter to reveal and fix a weakness before programmers do, and danger demonstrating procedure is the best way to deal with make it happen.</p><p><em>Originally published at </em><a href="https://www.wallarm.com/what/what-is-threat-modeling"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d0dbc0b1f7f3" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[What is an SSL certificate ❓ Meaning and Types]]></title>
      <link>https://d0znpp.medium.com/what-is-an-ssl-certificate-meaning-and-types-4596b124c3f0?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/4596b124c3f0</guid>
      <category><![CDATA[ssl]]></category>
      <category><![CDATA[ssl-certificate]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Mon, 31 Jan 2022 11:44:03 GMT</pubDate>
      <atom:updated>2022-01-31T11:44:03.129Z</atom:updated>
      <content:encoded><![CDATA[<p><strong>Introduction</strong></p><p>Website/application owners have tons of aspects to look into. However, ensuring end-to-end security ranks top as it is the most crucial factor that an end-user watches out for. Additionally, improved security bags higher ranking, and better SEO.</p><p>SSL certificate is one of the many approaches permitting website/application owners to meet all the security-related requirements. What does it mean and what value does it bring to the table?</p><p>Let’s figure all of it together.</p><h3>What is SSL and Where is it used?</h3><p>SSL standard is a successor of TLS. Technically, Secure Sockets Layers (SSL) works to safeguard the browser-server computing information exchange through encrypting and decrypting it. While it’s commonly used in securing communication taking place via IM, emails, and VoIP, securing HTTPS is what holds the highest value among its functions.</p><p>To attain high-end communication security, the protocol introduces authentication, privacy, and data integrity practices on HTTPS-based information transmission channels.</p><p>While understanding SSL, knowing the dissimilarity between SSL and <a href="https://www.wallarm.com/what/what-is-transport-layer-security">TLS</a> is crucial as these two share great similarities. For example — at SSL, you will connect using a port (e.g., 443) through a handshake, called ‘explicit’. On contrary, TLS uses a protocol to do the handshake, called ‘implicit’.</p><p>TLS, responsible for taking care of the security on the transport layer, was developed in 1999. It replaced SSL very soon, but due to its popularity, the term ‘SSL’ is many times used as a replacement for the term ‘SSL’ by people.</p><h3>The SSL Certificate — A Quick Overview</h3><p>This certificate acts as digital evidence of the deployment of SSL for the application or a URL. Stored on your server, it is formatted as a data file containing details on what an application/website is using to operate. CA (Certificate Authority) is responsible for issuing it.</p><p>It is crucial for products/services using SSL protocol as it has the ability to shield the ecosystem for its end-users.</p><p>Data included in it is enlisted below:</p><ul><li>Identity markers;</li><li>Site or app’s public key;</li><li>Domain name associated with it;</li><li>Linked subdomain details;</li><li>CA’s digital signatures;</li><li>Details of issuing date and validity period.</li></ul><p>As private key details are secret not to be shared with anyone, their details are not included in it.</p><p>To confirm that a website has it, pay attention to certain markers:</p><ul><li>HTTPS in the URL in place of customary HTTP.</li><li>The closed padlock sign before URL. (Padlock is red or open when it is absent)</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*ldsGaijSfoLmCgvP.jpg" /></figure><h3>Why is SSL Certificate Essential and Who needs it?</h3><p>User data safely against dangers in the cyber world must be the first priority of site or app owners. At the same time, they should ensure authorizing the access to users correctly to the site. These two factors are crucial to win the users’ trust and increase popularity.</p><p>By receiving and installing a relevant SSL TLS certificate, a website/application can prove its authenticity at the below-mentioned verticals. It brings reliability at both these, and many more fronts.</p><p><strong>Improved encryption</strong></p><p>One can enjoy levelled-up encryption and protecton with SSL certificate’s deployment as it facilitates the private-public key pairing. Web-browsers and other clients can easily get the public key to enjoying robust and well-encrypted connections.</p><p><strong>Better authentication</strong></p><p>Users visiting the SSL-certified websites are assured of using authorized resources and ecosystem, as the SSS-TLS speaks for your trustworthiness. It also plays a crucial role in preventing domain spoofing and other cyber vulnerabilities.</p><p><strong>Helps you Get HTTPS web address More Easily</strong></p><p>With SSL, moving to <a href="https://www.wallarm.com/what/what-is-http-2-and-how-is-it-different-from-http-1">HTTPS from HTTP</a> is easy. Shifting to HTTPS means offering highly encrypted and safe connectivity to the end-users.</p><p><strong>Dependable user data security</strong></p><p>Websites collecting sensitive user data can promise better security as SSL encryption keeps unauthorized access at bay. The list of such websites includes the ones needing bank information, medical records, payment method data, legal contracts, etc.</p><h3>How does it works?</h3><p>The core feature of SSL is to make communications, happening between two end-points, so secure that no unauthorized resource can interpret it or use it. It makes it happen by implementing encryption algorithms on the in-transit data. The encryption introduction makes data out of the reach of threat actors, as the data in transit becomes unreadable for them.</p><p>The certification moves forward following the ‘SSL handshake’ methodology. On its completion, your website gets HTTPS as its URL-prefix alongside a cerificate. Steps are:</p><ol><li>An SSL-secure link is enabled between the browser/server and server.</li><li>The connecting browser/server requests the identity-validation data from web server.</li><li>Once SSL certificate’s duplicate image is forwarded as an answer.</li><li>This revet forms the basis of decision-making, on whether to trust the web server or not.</li><li>If the browser/server decides finalizes that the server in questoin is trustworthy, a digital acknowledgment (confirmation) is sent back. This marks the beginning of an encrypted plus SSL-backed session.</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*o-qTskXhsWs1Utjy.jpg" /></figure><h3>Types of SSL certificates</h3><p>The type of authority-validation, security level, information shared, and othe such aspects divides these certificates in multiple classes. The list includes:</p><h4>Type #1: Organization Validation</h4><p>Created for confirming the business’s details and helping them to create a trustworthy reputation, this classification is based on a manual vetting technique. Its seekers will upload the CSR to CA, CA will contact the seeker, and will cross-check the details.</p><p>Typically, the data to be crosschecked is the company’s name and address as its components.</p><p><strong>Key Details</strong></p><ul><li>It offers a moderate degree of validation</li><li>It takes a few days to activate it after applying to receive it</li><li>The authentication process involves humans</li><li>Attracts substantial cost as it involves significant resources</li></ul><h4>Type #2: Domain Validation</h4><p>The most fundamental classification, this certificate concerned with affirming the domain’s ownership by the concerned business, individual, or organization. To make this happen, its seekers should alter the domain DNS records. Or, they can simply send an email to the involved CA. This is a fully automated process.</p><p>Speaking of cost, obtaining a Domain Validation SSL certificate is least pocket-pinching and is often a preferred pick for blogging sites, single-page sites, small-business websites, and portfolio sites. With it, your all the online entities can own HTTPS websites quickly and at subsided cost.</p><p><strong>Key Details</strong></p><ul><li>It will be granted within a few minutes</li><li>Least expenses as no human interface are required</li></ul><h4>Type #3: Extended Validation</h4><p>The most extensive SSL certificate among its existing varieties, Extended Validation involves doing a detailed inspection of the certificate seeker. Any website that involves collecting sensitive customer data like credit card credentials, online transaction passwords, and so on should obtain it.</p><p>Though it expands and is complex, it constructs a favorably trusted image of the company. CSR made for validation-extension will be comprehensively checked by the CA wherein the elements like whether or not organization exists are legally registered and are available on provided address.</p><p>As so many details will be verified, obtaining Extended Validation certificate is both costly and time-consuming. But, once obtained, it leverages the market worth and presence of the website in no time. So, its demand iis high in scenarios like global enterprise, online stores, financial or banking bodies, and websites related to news agencies.</p><p><strong>Key Details</strong></p><ul><li>Strict-level validation</li><li>Takes many weeks to be awarded</li><li>High costing as needed too much human involvement</li></ul><h4>Type #4: Single Domain</h4><p>As the name denotes, this classification of the certificate refers to verifying the details of one particular domain. No other subdomains can utilize the Single Domain SSL certificate to verify their existence.</p><p>However, all the pages, uploaded on the main/primary domain, will be backed by the same certificate.</p><p><strong>Key Details</strong></p><ul><li>Limited utility</li><li>Useful for blogs and single page websites</li></ul><h4>Type #5: Multi-domain</h4><p>This variation of the SSL certificate verifies many domains with just 1 certificate. However, it also does not cover subdomains.</p><p><strong>Key Details</strong></p><ul><li>Required for the organization or people owning various domains with distinct extensions</li><li>Up to 100 domains can be verified</li></ul><h4>Type #6: Wildcard SSL Certificates</h4><p>It is efficient at securing your base/primary domain, along with all the linked sub-domains. Websites having this certificate will feature an ‘*’ mark in their name.</p><p>Websites, using various sub-domains, should obtain a Wildcard SSL certificate to keep the overheads under control while keeping the hassles of obtaining different certificates for separate sub-domains.</p><p><strong>Key Details</strong></p><ul><li>Works for Unlimited domains</li><li>Any subdomain type is supported</li></ul><h3>How to get an SSL Certificate?</h3><p>As cited above, the proven source to acquire it is Certificate Authority, a systematized body accountable for maintaining the security, transparency, and security of the internet that we all use presently. Each year, it approves millions of SSL certificates following the respective process.</p><p>Interested people have to contact CA and follow a standard procedure to be SSL certified. The primary step is deciding the SSL certificate type for your requirement.</p><p>Once that’s sorted, the next-to-follow steps are as given under:</p><ol><li>Begin with setting the server and matching the WHOIS credentials with what is offered to the CA. It generally refers to details such as domain name, company name, address, address, and so on. These details should be matched.</li><li>Up next is creating a CSR or Certificate Signing Request on a server with the help of a web hosting company that you’ve hired. Unless you’re highly skilled, you shouldn’t try your hand at this.</li><li>The properly devised CSR should be proffered to CA for verification of the provided details.</li><li>CA will cross-check the details and will grant the certificate upon successful process.</li><li>Install SSL certificate and configure it on the website(s) you have got it for.</li></ol><p>While the process appears straightforward on the surface, particular factors are highly influential.</p><ul><li>Certificate’s price will vary with its type;</li><li>Based upon the type and provider, receiving SSL can be anything from a one-minute job (e.g., for domain validation only) to a week-long affair (e.g., for an extended one).</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*WziDOAqkcHdVpbSW.jpg" /></figure><h3>The Final Word</h3><p>SSL certificate is the resource that a website/application requires to be extra secure for users. Without it, a website is nothing but a hub of online dangers. Now that you have learned about its significance and utility for the owner individual or organization, ensure confirming about your site’s reliability. For this, check SSL certificate status of your sites and in case it is missing, follow our guide to get it smoothly.</p><p><em>Originally published at </em><a href="https://www.wallarm.com/what/what-is-an-ssl-certificate"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=4596b124c3f0" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[What is Cross Site Request Forgery CSRF | Example and Methods of protection]]></title>
      <link>https://d0znpp.medium.com/what-is-cross-site-request-forgery-csrf-example-and-methods-of-protection-59623ccd51b1?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/59623ccd51b1</guid>
      <category><![CDATA[csrf]]></category>
      <category><![CDATA[csrf-protection]]></category>
      <category><![CDATA[crosssiterequestforgery]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Fri, 28 Jan 2022 06:10:00 GMT</pubDate>
      <atom:updated>2022-01-28T06:10:00.133Z</atom:updated>
      <content:encoded><![CDATA[<p>Organizations aspiring for all-around resource security against the damage-causing cyber vulnerabilities must upgrade their knowledge and get acquainted with all the existing types. CSRF is what is covered sizably in the post.</p><h3>What is CSRF Attack?</h3><p>A counterpart of <a href="https://www.wallarm.com/what/what-is-xss-cross-site-scripting">XSS</a>, CSRF is one of the multiples concerning cyber vulnerabilities wherein the authorized users are compelled to perpetrate something unaccepted or unauthorized action on the website that has authenticated them. By using two-factor login, password, and other means, a website authenticates the end-user and permits them access to the services/facilities of the website/application. This way, trust is built between end-user and websites.</p><p>Threat actors use this trust factor to gain unauthorized access to the website by exploiting it via a CSRF attack. CSRF has many synonyms including Hostile Linking, Sea Surf, Session Riding, One-click attack, and so on.</p><p>The attention-worthy markers of CSRF attack areas cited below -</p><ul><li>It is easy to carry out on websites/web applications that skip validating if action is with or without the user’s consent.</li><li>While XSS concerns breach of user’s privacy by a website, CSRF relates to the circumstance where the user exploits the website. One must gather more information in XSS v/s CSRF for distinguishing between these vulnerabilities at a deeper level.</li><li>It doesn’t interest using JavaScript or any other sort of code for successful execution.</li><li>Single-page applications are likely to have a higher chance of being a CSRF victim as they store the CSRF token as cookies, which are favorite of the threat actors.</li></ul><h3>What is a CSRF token?</h3><p>Crucial to keeping the occurrence possibility of CSRF attack as low as possible, CSRF token is a secure, and unique per-session token that is created at random. Challenge and synchronizer tokens are among the most common examples.</p><p>CSRF token must be integrated inside the hidden/invisible components of HTML forms that are used for server-side functionalities and are shared with the end user’s browser. Its volume must be huge so that threat actors can’t make sense out of it.</p><p>The CSRF-enabled websites and web apps will generate exclusive CSRF tokens for individual HTTP requests or login sessions.</p><p>Correct validation of CSRF tokens will discourage CSRF attacks. However, certain factors are impacting the CSRF token validation.</p><p>Validation is highly influenced by the type of request. For instance, some websites will completely validate HTTP post requests while rejecting the GET ones.</p><p>Availability of the tokens also affects the validations. For example, if no token at an instance of time, the request is ignored.</p><h3>How does CSRF work?</h3><p>Carrying out a CSRF attack requires fulfilling 3 conditions.</p><ol><li>A privileged action happening on the website, such as, an action causing altering user-focused data.</li><li>The target site, during the user identity validation, must use at least 1 HTTP request while session cookies also are enabled.</li><li>No part of user request is hidden or non-readable for the attacker.</li></ol><p>Once all these three conditions are fulfilled, one is ready to execute the CSRF attack.</p><p>CSRF is highly diverse when it comes to tricking the user to initiate a forgery request. Before understanding these ways, let’s know how to create the ill-intended request with the help of an example.</p><p><strong>Example</strong></p><p>Say John needs to transfer $500 to Jena via the money.com website.</p><p>Now, the money.com website is not backed by robust CSRF protections and a threat attacker, Leo, uses this opportunity to receive the money that John is trying to transfer.</p><p>To make this happen, attacker, Leo, will move ahead as:</p><ul><li>Creating a manipulated script or URL</li><li>Luring John to use the corrected URL/script via social engineering</li></ul><p>Now, let’s understand the working of CSRF attack under different scenarios:</p><h3>When website accepts GET requests</h3><p>In that case, the money transfer request, made by John, will look like:</p><pre>GET http ://money.com/transfer.do?acct=JENA&amp;amount=500 HTTP/1.1</pre><p>Leo, the threat actor, will exploit this via John. Firstly, he will create a manipulated URL to direct John-initiated money transfer to his bank account.</p><p>He will access the transfer command of John and replace Jena’s name with his. He can also alter the transfer value. The exploited command will look like:</p><p>http ://money.com/transfer.do?acct=LEO&amp;amount=5000</p><p>In the exploited URL, Leo replaced the original transfer value with $5,000.</p><p>Here, social engineering gambits like email featuring HTML content or placing the abused URL in front of the verified page fools John to load the exploited URL. As the altered page/URL/script looks very similar to the original URL/script/page, it’s easy to get fooled.</p><h3>When websites accept POST requests</h3><p>If the website obtains only POST requests then the John’s command will look like this:</p><pre>POST http ://money.com/transfer.do HTTP/1.1</pre><pre>acct=JENA&amp;amount=500</pre><p>Now, such request is delivered with FORM tags:</p><pre>&lt;form action=&quot;http://money.com/transfer.do&quot; method=&quot;POST&quot;&gt;</pre><pre>&lt;input type=&quot;hidden&quot; name=&quot;acct&quot; value=&quot;Leo&quot;/&gt;</pre><pre>&lt;input type=&quot;hidden&quot; name=&quot;amount&quot; value=&quot;5000&quot;/&gt;</pre><pre>&lt;input type=&quot;submit&quot; value=&quot;Check my pictures&quot;/&lt;/form&gt;</pre><p>Use of FORM tag enforces clicking on submit button for completing the request submission. Or, the request can be presented automatically with the usefulness of JavaScript.</p><h3>When a website is using other HTTP methods</h3><p>Other than GET and POST, other HTTP request modes like PUT and DELETE are also used frequently. PUT-based HTTP requests will feature JavaScript in the manipulated page/URL. As advance browsers that we all are using presently enforce the same-origin policy, CSRF attacks on PUT and DELETE requests are not usually witnessed.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*ewcWkf9AzmrtiyHw.jpg" /></figure><h3>How to detect cross site request forgery?</h3><p>Regardless of the type of vulnerability, early detection is the key to keeping the damage under control.</p><p>The most practicable makers that help in the timely detection of CSRF are:</p><ul><li>Websites allowing session management through GET requests. Third-parties can get easy access to such sites. So, they are more prone to CSRF attacks. Make sure your site is not among them.</li><li>Web Proxies are very helpful in CSRF detection. As it keeps track of HTTP requests’ journey from beginning to end, you can replay requests without initiating an interaction with the client-side interface of the app.</li></ul><h3>How to Prevent CSRF Attack?</h3><p>When not dealt first-handedly, CSRF attacks can lead to data threats, money stealing, change of login details, and even losing control over crucial applications. Hence, along with the early detection, doable CSRF prevention strategies should also be deployed.</p><p><strong>CSRF-token-based prevention</strong></p><p>The primary approach to defend a CSRF attack is to figure out whether or not the HTTP request is created legitimately i.e. using the user interface of the app only. CSRF tokens can be utilized by website owners or administrators for it.</p><p>The app security team should figure out the attack-prone part of server-side functions and introduce the CSRF token in the HTML form of that vulnerable operational part.</p><p>Make sure that the intended HTML form is not a component of session cookies. Also, utilize a cryptographically secured random number generator for token-creation.</p><p><strong>Utilizing the SameSite Cookie Attribute</strong></p><p>It is generally used for supporting CSRF attack prevention methodology greatly. Sharing a lot in common with Secure Flag and HTTPOnly, it equips the browser adequately for handling the cookies as well as cross-site requests at once.</p><p>Its acceptable values are as enlisted:</p><ol><li>A ‘<strong>Strict’ </strong>value will stop cookies transfer by browsing.</li><li>‍<strong>‘Lax’ </strong>is the default value that maintains security for web solutions when they wish to allow user-access requests composed of external links. Presently, most browsers have this feature as an added line of defense against CSRF attacks while using the CSRF token alongside.</li><li>The value <strong>‘none’ </strong>is used you want to use cookies for accessing cross-site URLs.</li></ol><p><strong>Utilizing user interaction for CSRF protection</strong></p><p>It is the easiest way to implement a CSRF prevention strategy. It involves the use of re-authentication, one-time token creation, and <a href="https://www.wallarm.com/what/what-is-captcha-types-and-examples">CAPTCHA</a> deployment. All these techniques increase user interaction and leave less scope for threat attacks to barge in. Also, it enhances the user experience.</p><p><strong>Controlling Login CSRF</strong></p><p>Many developers fail to understand the fact that CSRF can exist in the login forms and cause damage. This is why it’s mostly ignored. One can prevent CSRF from impacting the login forms by generating pre-sessions for each user and introducing CSRF tokens in those sessions. It makes the early authentication safe. But, ensure that this pre-session should be destroyed once the real session is initiated. Ignoring this will give invitation to the session-fixation attack.</p><p><strong>Double submit cookies</strong></p><p>This method is commonly used as a CSRF defense strategy. It involves storing the similar token values in a cookie rather than a server session. Doing so encourages the cookie-like CSRF token forwarding while associating a hidden field/value with it. Upon receiving a request, the server needs to figure out whether the CSRF value, stored in hidden fields and cookies, matches.</p><h3>How to prevent CSRF attack in Javascript?</h3><p>Security experts willing to prevent JavaScript from CSRF attack can use custom request header as it banks upon the SOP or Same Origin Policy approach in order to safeguard the JavaScript part of the app. This header can only be implied on the origin of JavaScript. However, JavaScript is not allowed to create custom headers by default by the browser.</p><p>This approach brings dual benefits like there is no need to do any changes in the UI and don’t ask for presenting the server-side state.</p><h3>Is it necessary to protect API from CSRF attacks?</h3><p>CRSF attacks are on an all-time rise and there are no exceptions.</p><p>As API usage has increased and is crucial for web and mobile application development, it has become a prominent target for CSRF attacks. When an API is a victim of a CSRF attack, the whole digital solution or app is put on the stack.</p><p>For robust <a href="https://www.wallarm.com/what/api-security-tutorial">API security</a>, it’s crucial to protect API against CSRF attacks. CSRF attacks targeting the APIs can be prevented easily.</p><p>API requests made to the content-type application or JSON should be restricted. With this, the possibilities of CSRF attacks are less. API requests, done via content type, are more secure.</p><p>API access token should be presented on the request header. Also, APIs should neglect the cookies-based CSRF tokens.</p><p>JavaScript-based single-page applications should be constructed only to use cookies for storage. Such applications should also complete the authentication token transfer to API as header and shouldn’t accept the requests missing the header.</p><p><em>Originally published at </em><a href="https://www.wallarm.com/what/what-is-cross-site-request-forgery"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=59623ccd51b1" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[Server side template injection — SSTI vulnerability ⚠️]]></title>
      <link>https://d0znpp.medium.com/server-side-template-injection-ssti-vulnerability-%EF%B8%8F-8209660a3036?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/8209660a3036</guid>
      <category><![CDATA[ssti]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Wed, 26 Jan 2022 12:11:15 GMT</pubDate>
      <atom:updated>2022-01-26T12:11:15.474Z</atom:updated>
      <content:encoded><![CDATA[<h3>Server side template injection — SSTI vulnerability ⚠️</h3><p><strong>Introduction</strong></p><p>There is hardly any software development or other linked elements that haven’t fallen into the trap of cyber vulnerabilities. Templates, used for HTML code management on the server-side, are amongst them. The attack targeting the server-side templates is known as SSTI (abbreviated). Let’s explore every aspect of it in detail.</p><h3>What is Server Side Template Injection?</h3><p>Most web app owners prefer using Twig, Mustache, and FreeMarker like template engines for the seamless embedding of dynamic &amp; rich data in HTML parts of of e-mails or webpages. When the user input is introduced to the template unsafely or with the presence of malicious elements, an SSTI attack takes place.</p><p>SSTI is the insertion of the malicious elements into the famous template engines via built-in templates that are used on the server-side. Here, the main aim of this act by the actor is to get a hold of server-side operations.</p><p>The easy way to understand the process of SSTI is by explaining it via real-world examples. Now consider the scenario; you’re using a marketing app for sending customer emails in build and use Twig template system to address the email receivers by name.</p><p>If the name is added in the template without granting any modification abilities to the receivers then things will be smooth. As soon as receiver-end customization of the emails is permitted, the sender starts losing the hold over the template content.</p><p>Threat actors can use the user-end customization facility as an opportunity and perform an SSTI attack by figuring out the template-generation engine used in customization and altering the featured payload as per their preferences.</p><p>Not always SSTI attacks are planned; at times, it occurs unknowingly when the user-side input contracts with the template directly. This situation creates an opportunity for the threat actors to introduce template engine distorting commands and operate servers as per their will. In each case, the outcomes of an SSTI attack are destructive mostly.</p><h3>How Do Server-Side Templates Work?</h3><p>Developers often use these templates to create a pre-populated web page featuring customized end-user data directed to the server. The use of these templates reduces the browser-to-server commute during the server-side request processing.</p><p>As server-side templates offer great flexibility and shortcuts to the pre-embedded user inputs, it’s often mistaken with XXS or <a href="https://www.wallarm.com/what/a7-cross-site-scripting-xss-2017-owasp">cross-site scripting</a>.</p><p>Template-creation engines are the most preferred resources to create dynamic HTML for web frameworks. On a structural level, a template features the static portion of the intended HTML user output and specific rules explaining the dynamic content insertion process.</p><p>Despite adopting best practices, template systems are not well-guarded and are prone to get into the hands of threat actors or ill-intended template creators.</p><p>Web applications granting the freedom of supplying or introducing user-created templates are likely to become a target of SSTI attacks. Suppose, an author edits data for a variable in this context. It will trigger the engine to use template files for adding dynamic components on the web app.</p><p>Furthermore, the engine automatically starts generating HTML output responses as soon as an HTTP request takes place.</p><p>To check, you may use an HTTP POST request:</p><p>For example:</p><pre>POST /endpoint-detail HTTP/1.1</pre><pre>Host: example.com</pre><pre>parameter=test_data</pre><p>Here are a few ways to test this vulnerability. We will use different parameter values for this purpose here.</p><ol><li>You may send a polyglot value, e.g. ${{&lt;%[%’”}}%\., which is a particular pattern used in general for such tests. After the engine displays an error message, you may diagnose the URL in the alert text and figure out the right syntax to try for the template engine.</li><li>When the error message do not reveal engine details, use the known syntax that are useful for various template engines, e.g.:</li></ol><p>=${7*3}</p><p>=&lt;%= 7*3 %&gt;</p><p>={{7*3}}</p><p>Next, read the debug output (e.g., for Django). Different template engines will have slightly different ways of doing so.</p><pre>POST /endpoint-detail HTTP/1.1</pre><pre>Host: example.com</pre><pre>parameter={% debug %}</pre><p>This request will fetch you a list of readable objects, available for debugging. From here, objects like ‘settings’ might be accessible too. So, try reading the secret key and see if you could succeed:</p><pre>POST /endpoint-detail HTTP/1.1</pre><pre>Host: example.com</pre><pre>parameter={{settings.SECRET_KEY}}</pre><h3>The impact of Server Side Template Injection</h3><p>Just like any other cyber vulnerability, the SSTI impairs the target. For instance, its introduction makes the website prone to multiple attacks.</p><p>The affected template engine type and the way an application utilizes it are two aspects determining the consequence of the SSTI attack.</p><p>Mostly, the result is highly devastating for the target such as:</p><ul><li>Remote code execution.</li><li>Unauthorized admin-like access enabled for back-end servers;</li><li>Introduction of random files and corruption into your server-side systems;</li><li>Numerous cyberattacks on the inner infrastructure.</li></ul><p>All these actions can cause havoc beyond one’s imagination. In very rare cases, SSTI remains less bothersome.</p><h3>How to Detect SSTI?</h3><p>The above-mentioned consequences of SSTI are a sign for developers and defenders to become foresighted and identify the injection in the early stage. However, that is not as easy as it sounds as SSTIs are complicated to understand, seems very similar to XSS attacks, and often remain unseeable. Hence, one has to make extra efforts for the earlier and precise detection of SSTI.</p><p>As this is the case with any other attacks, the beginning detection step is to find its presence. The most viable way for this to happen is fuzzing out the template via familiarizing generally-used expressions with special character sequences.</p><p>If the tester isn’t able to execute the character sequence, it implies the presence of SSTI.</p><p>Additionally, one can look for the existence of web pages featuring extensions like .stm, .shtml, and .shtm. Websites having pages with these extensions are likely to be impacted by the SSTI attack.</p><p>However, not all these approaches are enough to do 100% precise SSTI detection, because there exists 2 contexts for its presence: plain text and code text.</p><p>Here is a detailed explanation of the most common approaches for detecting SSTI in both the contexts separately:</p><ol><li><strong>Plaintext</strong></li></ol><p>In this detection method, XSS input-like plain text is used to check for presence of the vulnerability. To verify whether or not this is a favorable situation for SSTI, you may also use mathematical expressions in your parameter.</p><p>To check a site, <strong>http://example.com/?username=${7*7}</strong> URL can help in SSTI detection. Here, you need to replace ‘example.com’ with the name of the site. If the URL search result features any mathematical value, it shows the presence of SSTI vulnerability.</p><p><strong>2. Code context</strong></p><p>It concerns constructing a payload that can procure error or blank responses present on the server. Also, it can be done by ensuring zero-probability for the XSS vulnerability. You may try injecting arbitrary HTML in the value to do so.</p><p>When XSS is absent, the first approach, constructing a payload, should be used in this SSTI detection method.</p><h3>How to Identify SSTI?</h3><p>Upon successful detection of SSTI injection, emphasis must be upon recognizing the template engine that has been influenced.</p><p>There are varied templating languages, but most of them use alike syntax. These syntaxes are created in a way that they won’t contradict with used HTML elements. This makes probing payload creation for impacted template engine testing an easy task.</p><p>Submitting invalid syntax is also a viable way to identify SSTI compromise. Your submission will enforce error messages from server-side systems to give out crucial particulars.</p><p>In most cases, this works. Testers looking for alternative ways must manually test the numerous payloads and analyze their interception procedure through the template-creator engines. To narrow down your options, you may try eliminating syntax patterns as per your trials during the process.</p><p>Also, injecting arbitrary arithmetical operations as per the syntax followed by assorted template engines is a very common approach.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*5h1n-wvC4wmoUA5w.jpg" /></figure><p>The above-mentioned logic tree can be followed for accurate identification. While aiming at precise SSTI identification, keep in mind that similar payloads can deliver efficacious responses in multiple languages like Twig or Jinja2. So, testers should always accumulate multiple successful responses to reach a substantial conclusion.</p><p>‍</p><h3>Server Side Template Injection Attack Prevention</h3><p>After comprehending the consequence of an SSTI attack, it’s not intelligent to disregard it and not to learn about the preventive ways. Ditching the use of a template engine is not a consider-worthy alternative as it supports modification at multiple fronts while not causing any disruptions to the code flow.</p><p>Hence, developers and security experts must look out for other ways to keep the applications and websites away from the reach of SSTI’s reach. Here are some expert-approved SSTI prevention strategies to enforce.</p><ol><li><strong>Limited ‘Edit’ Access</strong></li></ol><p>In any case, templates shouldn’t be available for modification and alteration to anyone else, except developers and admins. Templates that are open to all are easy targets for hackers. Hence, it’s wise to execute the access rules on the templates and keep their accessibility restricted. However, this is not an achievable goal all time.</p><p><strong>2. A Quick Scrutiny</strong></p><p>Sanitization is another viable technique to keep the possibilities of SSTI attacks on the lower side. It refers to cross checking all the intended content for the presence of destructive elements beforehand. Most importantly, this prior scrutiny should be performed on the user transmitted data. One can make it happen by using regex and creating a list of verified expressions. Keep in mind that this solution doesn’t warrant 100% protection.</p><p><strong>3. Sandboxing</strong></p><p>For better protection from SSTI, sandboxing is a better option than sanitization. It’s a preventive approach involving creating a secure and close ecosystem for the user. The close environment is free from dangerous features and modules while restricted access to other data when any vulnerability is figured out. Though its efficacy is commendable, its implementation is a tough task. Also, it’s easy to bypass it by using oversights or misconfiguration.</p><p><strong>4. Go for Logicless Templates</strong></p><p>You can use logic-less templates to prevent SSTI attacks. Logic-less engine templates are the templates used to detach code interpretation and visual rendering. Mustache is a common example of a logic-less template. As a logic-less template uses mil control flow statements, all sort of control is data-driven by default and makes application logic integration possible. This reduces the possibility of remote code execution.</p><p><strong>5. Utilize a Docker Container</strong></p><p>If none of the above solutions work then defenders must admit that the remote code execution is inevitable and should try to trim its impact by implementing customized sandboxing by executing the template engine in a completely locked Docker container.</p><h3>The final word</h3><p>Ensuring end-to-end system security demands a detailed understanding of the wide range of vulnerabilities. SSTI (Server Side Template Injection) is one such vulnerability. Hope that reading this article would have helped you understand its seriousness and made you aware about the need for cybersecurity for organizational digital assets.</p><p><em>Originally published at </em><a href="https://www.wallarm.com/what/server-side-template-injection-ssti-vulnerability"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=8209660a3036" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[What is XMPP ❓ — Extensible Messaging & Presence Protocol]]></title>
      <link>https://d0znpp.medium.com/what-is-xmpp-extensible-messaging-presence-protocol-1365b71bb55e?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/1365b71bb55e</guid>
      <category><![CDATA[xmpp]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Tue, 25 Jan 2022 13:46:37 GMT</pubDate>
      <atom:updated>2022-01-25T13:46:37.646Z</atom:updated>
      <content:encoded><![CDATA[<h3>What is XMPP ❓ — Extensible Messaging &amp; Presence Protocol</h3><p><strong>Introduction</strong></p><p>In the early 2000s, when the idea of chat applications was shaping, XMPP was allowing developers to construct interactive chat applications. Since its genesis, this protocol has come a long way and is now included in the tech stack (or framework) suggested for developing high-end chat apps like WhatsApp.</p><p>More than two decades later too, this protocol hasn’t lost its sheen and significance in the abundance of the protocol. Why is it so? What makes XMPP time relevant? What are the key markers? Let’s know this protocol a little better.</p><h3>What is XMPP — Extensible Messaging &amp; Presence Protocol?</h3><p>It is an XML-driven protocol utilized typically in open standard communication. To say it concisely, it is a chat protocol that permits the seamless to and fro sending of essential XML components such as data. Besides making IM and real-time ‘talks’ possible, XMPP also finds its applications in contact list maintenance and presence details.</p><h3>The Usage</h3><p>XMPP is most generally used in forthright message interaction between two points, checking the user status, sharing the status details with the server. It also takes care of server status record keeping, subscription management, contact list updates, and blockading certain users.</p><h3>The Attributes</h3><ul><li>It’s decentralized.</li><li>It supports the asynchronous exchange of data/information.</li><li>Transmits tiny pieces of the data instead of forwarding the big chunks directly.</li><li>It works over TCP.</li><li>Network configuration and components (hardware/software) has no role to play in the XMPP-based data transmission.</li><li>It is designed for client-server model.</li><li>It uses 3 statuses, namely ‘offline’, ‘busy’, or ‘online’, to tell about the status of a user or network.</li><li>It transfers data back and forth between two end-points.</li></ul><h3>XMPP Architecture</h3><p>On a structural level, XMPP shares great similarities with protocols that work on the application layer. For example, it also concerns uniquely named clients communicating over an associated server. Enforcing the protocol as per both clients, XMPP monitors and handles routing for them.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*nfhpsNa8vDwmW7aG.jpg" /></figure><p>The overhead figure illustrates the XMPP architecture straightforwardly.</p><p>However, in a complex implementation, multiple XMPP gateways might also exist. In this scenario, the protocol also needs to takes care of the intercommunication for multiple domain routing. So, the gateways act as a translating medium between various protocols and domains that are in the cycle during the information-exchange.</p><p>Additionally, the XMPP gateway brooks the tasks like commencing and termination of the client-to-server sessios at the intended protocol while including the demanding protocol translation elements.</p><p>Even with the use of considerable gateways and domains, one can succeed in achieving constant connectivity across all the network points with the help of XMPP.</p><p>While comprehending the XMPP architecture, understanding a few terms is crucial.</p><p>For example, you must know about XMPP stanzas. These, simply, are the small XML fragments that are used for starting a communication session. they can be of 3 types:</p><ul><li>The presence stanza defines the network or user’s present status to others. For example, the user/network is online or offline.</li><li>Message stanza is a pushing instrument essential for chat messages exchange.</li><li>IQ stanza is the element that XMPP utilizes for data requests and modification. Just as HTTP has GET and POST, XMPP has IQ stanza.</li></ul><h3>How does XMPP protocol work?</h3><p>The entire processing of XMPP relies upon the client-server architecture that interests message transmission to the server first and then to the clients.</p><p>To find out which client should receive the message, the XMPP server utilizes the unique ID of the receiver. The unique ID or Jabber ID is very much comparable to an email address with negligible changes.</p><p>user@domain.com/resource is the format for the Jabber ID.</p><p>Here, the user directs to the username, domain.com is the domain particulars of the sender, and resource is the device type of message receiver. For example,</p><p>JohnDoe@technology.testing/terminal.</p><p>In the example, John Ray is the user name, Technology.testing is the domain name, and terminal is the type of device or resource that is used by John. The resource is an optional part while the previous two are essential.</p><p>XMPP server employs this Jabber ID for correct message routing over TCP connection. As soon as a communication session is started, an XML stream is shared to the server and client identification is done with the help of Jabber ID.</p><p>Once the identification is done, the server will receive the request and will initiate another XML stream transmission request. This stream will be sent back to the client from the server’s side. This way, each XML stream becomes bi-directional.</p><p>XMPP is efficient to generate a large-scale message network known as a federation. With the help of a federation, clients can communicate with multiple XMPP servers at a time.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*HbpQFagh4FG_48xU.jpg" /></figure><h3>XMPP Features</h3><p>Fundamental features that make XMPP stand out from other protocols are as under:</p><ul><li><strong>Asynchronous Push Messaging</strong></li></ul><p>With XMPP, continual and asynchronous message delivery is achievable. With this, we mean message dispatch in a row, not waiting for the receiver or sender reply, and not necessitating the user to be online to accept the message. Messages are shared in the form of XML stanzas that are distinctive information units featuring segments like metadata, message body, and unique ID of the sender &amp; receiver.</p><p>What makes XMPP distinguishable from other client-server systems is that XMPP doesn’t support polling. Polling is the process where the client prompts the server constantly to review whether or not any recent information is present. As polling is done at regular intervals, there is no instant communication experience for end-users. Also, it ushers in outrageous bandwidth consumption.</p><p>Rather, XMPP automatically propels the recent message to the server even when the previous request is not processed or received by the server. It happens in the server-to-client side of communication as well. This constructs an instant communication experience for users.</p><ul><li><strong>Client-Server Architecture</strong></li></ul><p>This is the core architecture that XMPP follows. In this architecture, XMPP disseminates only a small fraction of XML elements. This portative XML element will first reach to the server and then to the user.</p><p>The XMPP clients are allocated separate names, just like an email. This unique ID is used to recognize the client and route the message in the right direction. This way, XMPP guarantees that each XMPP client observes a fixed and standard route to couple with the server.</p><ul><li><strong>Persistent TCP Connections</strong></li></ul><p>Originally, XMPP can transmit the data or designate a connection over TCP only. Connection built over here is invariant and doesn’t demand re-establishment whenever a new message is transmitted.</p><p>This way, XMPP constructs an XML stream supporting free XML data exchange. However, certain cutting-edge XMPP extensions now use TLS and WebSockets as well.</p><ul><li><strong>Decentralized Hosting</strong></li></ul><p>With decentralized hosting, we refer to having no central authority controlling the server. Anyone can maintain, run, and even maintain the XMPP servers. Additionally, freedom to set up the servers on either cloud or premise is also granted. On this front also, it’s similar to email. Every email owner can set up emails as per their choices. They have the freedom to set up the login details, password, and other details as per their preferences.</p><ul><li><strong>Gateways</strong></li></ul><p>One another very distinguishing feature of XMPP is that it offers gateways for numerous chats and messaging protocols. It’s compatible with many protocols and can link to the networks at length.</p><p>For instance, a given XMPP network can access an SMS domain when a message is supplied to the receiver on the mobile and simultaneously to the SMTP domain to deliver the same message on the receiver’s email. In addition to this, the XMPP network to deliver the message in another form, say IRC, can also use any other particular message protocol, concurrently.</p><h3>XMPP Protocol Example</h3><p>XMPP enjoys the reputation of a core element for many communication apps that we use presently. Some of the most famed apps, developed using XMPP, are as mentioned below.</p><ul><li>WhatApp is built using a proprietary XMPP.</li><li>The amazing chat capability of Zoom is all because of XMPP.</li><li>For instant push notification delivery, Apple uses XMPP both in the iPhone and Mac.</li><li>XMPP is used in the chat functionality of Grindr.</li></ul><p>For development of highly functional chat apps, XMPP is one of the multiple choices offered. However, it continues to grow as a preferred one for many because of its distinctive features and multiple benefits that it brings on the table.</p><h3>Benefits of XMPP</h3><p>Backed by IETF and embraced by thousands of developers, XMPP has become a mainstream open standard protocol for chat application development.</p><p>With outstanding markers, XMPP contrived to fill the gap, assembled by stringent protocols, and has affirmed itself as a necessity for peer-to-peer communication and beyond.</p><p>Below are the fundamental benefits to enjoy after adopting the XMPP protocol.</p><ul><li><strong>A Reliable Protocol to Back upon</strong></li></ul><p>This protocol has been serving the developer community for more than 20 years. Through these years, the protocol has strengthened its infrastructure and gained huge community backing. Presently, multiple XMPP servers are out there, thousands of developers have used it, and it is at the core of many applications.</p><p>All of this ensures that this protocol is time-tested and has great technical support. If that doesn’t impress you then being free and too straightforward will surely do.</p><ul><li><strong>Improves Communication Infrastructure for you</strong></li></ul><p>Being a highly extensible protocol, it enables end-users to use it in communicating different sorts of media and messages. It won’t ask you whether you’re transmitting audio or a video; XMPP will continue to support in creating an efficacious communication infrastructure.</p><ul><li><strong>Guarantee of Delivery</strong></li></ul><p>With XMPP, one can be double sure about the message delivery as it uses constant connectivity over TCP. It will hardly miss any XML stanza delivery, no matter how small it is.</p><ul><li><strong>Support by most of the Standard Programming Languages</strong></li></ul><p>Adoption at a large scale and huge global demand resulted in support for various languages. XMPP libraries are available in many leading languages like Perl, C++, C#, Java, Python, and many more. You name it and the XMPP library is most likely to be compatible with that language. This allowed developers to work in a compatible and preferred ecosystem.</p><ul><li><strong>Decentralized</strong></li></ul><p>XMPP is decentralized and permits multiple implementations. There is a restriction in server and library setup. Everyone can go with it. This grants more freedom and creates space for flexibility.</p><ul><li><strong>Higher Security</strong></li></ul><p>Boosted security is an added advantage of XMPP. While setting-up distinct XMPP servers, developers can choose encryption, security protocols, and access preferences as per the choice. Security is in full control resulting in fewer cyber-attacks and better peace of mind.</p><ul><li><strong>Uninterrupted Transmission of Data</strong></li></ul><p>Performance can be maintained easily as if one XMPP server is affected or is offline, regardless of the reasons, only corresponding users will be impacted. Rest will continue enjoying uninterrupted communication and data transmission. This has made achieving 100% operational continuity possible.</p><ul><li><strong>Server-to-Server Transfers</strong></li></ul><p>Server federation is an optional choice. Because of this, developers have the freedom to close the server-to-server for security reasons while assigning servers a specific task.</p><ul><li><strong>Compatibility</strong></li></ul><p>One major client-side advantage of XMPP is an abundance of clients. There is no dearth of XMPP clients. Regardless of the device type, you’ll find an XMPP client. It goes an extra mile for Windows and Unix systems by offering a command line. Also, one user can be signed up via different devices resulting in better accessibility.</p><h3>The Crux</h3><p>Paramount for constructing applications adept in real-time communication, XMPP (Extensible Messaging &amp; Presence Protocol) is an utterly extendable protocol. Read the above article and find out other particulars about this inventive protocol. We have tried covering it comprehensively.</p><p><em>Originally published at </em><a href="https://www.wallarm.com/what/extensible-messaging-presence-protocol"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1365b71bb55e" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[What is Cryptojacking Attack ❓ Definition and Prevention]]></title>
      <link>https://d0znpp.medium.com/what-is-cryptojacking-attack-definition-and-prevention-fe800ca2aab8?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/fe800ca2aab8</guid>
      <category><![CDATA[cryptojacking]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Wed, 19 Jan 2022 06:30:42 GMT</pubDate>
      <atom:updated>2022-01-19T06:30:42.476Z</atom:updated>
      <content:encoded><![CDATA[<p><strong>Introduction</strong></p><p>A conceivable threat to cryptocurrency owners, cryptojacking is an attack using which threat attackers can mine cryptocurrency at the expenditure of the target’s resources and network health. If not managed properly at the premature stage, the consequences of this vulnerability can be too detrimental.</p><p>If you are not aware of this threat’s existence, let us guide you thoroughly on this. In this article, we will cover what is cryptojacking attacks, what are general methods that attackers use, and a few real-word examples to make you aware about the severely of the matter.</p><h3>Cryptojacking definition</h3><p>Crpytojacking is a type of cyber-attack and is the process of ill-intended cryptomining. The menace works by embedding a befouled code into the targeted device and eradicating its resources to mine unauthorized cryptocurrency.</p><p>Cryptocurrency mining implicates solving tricky arithmetic equations, which is a tedious and resource-consuming task. At times, adequate resources are not available for the hackers. Hence, they plan a cryptojacking attack, gain access to targets’ devices and networks, and use them to unravel presented problems.</p><p>Upon success solving the given equations, hackers are endowed with cryptocurrencies that can be used to trade virtually, buy other cryptocurrencies, or get exchanged with traditional money. The rise of cryptocurrency provoked a surge in cryptojacking.</p><p>Depending upon the intention of the hacker, the cryptocurrency attained via a cryptojacking attack can either be used for trading or left in the liquidity pool. For a deeper understanding of the cryptojacking concept, knowing two terms, cryptocurrency and cryptomining are crucial.</p><ul><li><strong>Cryptocurrency Definition</strong></li></ul><p>Invented accidentally in 2009, cryptocurrency is a well-encrypted digital currency having the facility for end-to-end transaction tracking. The use of Blockchain technology, wherein multiple computer programs and processing powers are merged, is making cryptocurrency trading and invention conceivable.</p><p>The first-ever created cryptocurrency is Bitcoin and it is one of the most high-valued cryptocurrencies. As of now, more than 2,500 cryptocurrency exist. Some other utterly renowned cryptocurrencies are Zcash, Ethereum, and Monero.</p><ul><li><strong>Cryptomining Definition</strong></li></ul><p>Crytomining refers to the computing process that makes cryptocurrency exchange possible. It usually concerns adding cryptocurrency transactions to the Blockchain ledger and revising the information.</p><p>Cryptominer is what we call the professionals handling this job. They are likely to be skilled enough to use powerful servers and high-end hardware.</p><h3>Future of Cryptojacking</h3><p>As long as cryptocurrency will have huge market demand, cryptojacking will be trending as it allows the threat actor to mine cryptocurrency without even owning the needed resources. It keeps the attack free from the tension to pay for heft hardware and build a powerful network system.</p><p>Cryptojacking relies fully upon the the growth of cryptocurrency industry. However, the latter faces the wrath due to this undesired connection. 2 most concerning factors due to this trend are:</p><ul><li>Strict law enforcement that makes things tougher for the crypto world</li><li>Ban of Coinhive</li></ul><p>These two factors have caused little damp in cryptojacking. Let us tell you how:</p><p>Even though cryptocurrency has come a long way, there still exist countries in a good number that do not support cryptocurrency usage. Even if it’s legal in certain regions, many restrictions drive its usage. This is a major reason and inhibition behind the limited acceptance of this digital currencies among people.</p><p>Coinhive is the largest site for cryptominers. But, the site was shut down in 2019 as its code was badly abused and become a target of a hacker. The event caused limited accessibility of cryptocurrency for a while.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*jP4fOz7jAzumpV2F.png" /></figure><h3>How it Works?</h3><p>Performed in multiple stages, cryptojacking is a skilled job. The key steps involved in a successful cryptojacking attack are:</p><ul><li>The attacker integrated the script for mining in a webpage or an email</li><li>The code is auto-installed as soon as the target clicks on the malicious code.</li><li>The script program runs in the background stealthily, controlling the targeted device.</li><li>The desired resources are consumed as per the need of the attacker.</li><li>Attackers start mining using the targeted devices’ resources.</li><li>As the primary step of cryptomining, hackers start cracking the complicated algorithms.</li><li>Once the algorithm is solved, the hacker can earn the cryptocurrency.</li></ul><p>The entire procedure is about controlling a certain part of the device. This seems very much similar to a <a href="https://www.wallarm.com/what/explained-ransomware-attack">ransomware attack</a>. The only difference is the visibility of the attack. While a ransomware is clearly visible, cryptojacking assaults remain hidden and work from behind the screen.</p><p>This concealing nature of the attack makes it more difficult to identify and fix it in the early stage.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*5em_cgthX8vuDVNe.png" /></figure><h3>Cryptojacking Methods</h3><p>Cryptojacking assaults seize its victim using mainly three methods: file-based, browser-based, and cloud cryptojacking. Each method has a different modus-operandi and a different course of action that can be understood by paying attention to the below-mentioned text.</p><ul><li><strong>File-Based Cryptojacking</strong></li></ul><p>It involves downloading and executing a corrupted file. The file features an infected script that spreads its impact throughout the targeted system’s IT ecosystem upon successful downloading. Mostly, emails are used to spread such files or links that are malicious in nature.</p><p>Targets are lured to download or open the file. As soon as this step is done, the script becomes active and starts mining. It works stealthily without letting the target know about its presence.</p><ul><li><strong>Browser-Based Cryptojacking</strong></li></ul><p>It is more of a direct and aggressive attack that impacts the IT ecosystem of the targeted device straightforwardly from the browser.</p><p>It begins with generating a maliciously programmed script. Once the code is generated correctly by the malicious actor, it’s embedded directly in multiple web pages of separate sites. The script is 100% automatic and doesn’t require any manual handling.</p><p>As soon as the target visits the infected URL, his device auto-downloads the inserted code and supports hackers in cryptojacking unintentionally.</p><p>Ads through third-parties and the outdated (or less secure) plugins are the general components that malicious actors use for hiding their scripts in general. Sometime, these attacks act even smartly and embed their malicious code in a JavaScript library. With this, it becomes easier to operate a bigger supply chain attack on the target(s).</p><ul><li><strong>Cloud Cryptojacking</strong></li></ul><p>This method is favorite of intruders trying to access your essential resources at a large scale. Using cloud cryptojacking technique, they try accessing the APIs your organization use for accessing organization’s cloud platform and related services.</p><p>Thereafter, hackers are able to consume the CPU resources without any limitations. This leads to unwanted and excess resource consumption and operational cost for the organization. FYI, this method enables the user to mine at a big level and faster — without much hassles and efforts.</p><p>‍</p><h3>Real examples of cryptojacking</h3><p>Though not affected many till the date, cryptojacking is a real trouble that affects businesses. It has caused damages beyond one’s understanding. Some of the world’s most notorious cryptojacking attacks are as followed:</p><ol><li><strong>Microsoft</strong></li></ol><p>In 2019, the prestigious Microsoft store spotted 8 apps involved in cryptomining activities. The problematic part was, resources that were being used in the process were the ones of the users who’ve installed and used the app.</p><p>Though the apps were removed, a lot of damage was done. Spectacultions were made that though those apps came thorugh separare developers, just one person or organization strategically planned this attack and executed it.</p><p>The infected apps featured corrupted JavaScript codes and were instructed to mine Monero. As a huge amount of resources was consumed for the job, the targeted devices used to encounter ill-effects like slowed-down performance and reduced</p><p><strong>2. A European Department</strong></p><p>In 2018 itself, there was another victim of cryptojacking. It was the central water control system of Europe. Here also, the cryptomining code was instructed to mine Monero.</p><p>Threat actors infected the key operating system of the entire water utility network. Technically, it was the very 1st attack of its kind that targeted the industrial landscape for cryptojacking.</p><p><strong>3. Los Angeles Times</strong></p><p>One of the leading media houses, Los Angeles Times, has been victimized by cryptojacking. The incident happened in 2018 and targeted the report page. Anyone who accessed this page on their mobile or other data-driven device was infected. Unfortunately, this cryptojacking code remained unidentified for a longer time and allowed hackers to mine Monero.</p><p><strong>4. YouTube</strong></p><p>Some of the CoinHive miners were spotted active in multiple YouTube ads.</p><p>‍</p><h3>Detecting cryptojacking. Quick test</h3><p>If you want to figure out how to stop cryptojacking, it is essential that you learn to discover it first.</p><p>A strategically planned cryptojacking attack is potent enough to remain hidden and exhaust the resources extensively. At times, attackers plant the code so dexterously the targets remain unaware of its presence. However, a little bit of diligence and awareness plays a huge role in its early detection.</p><p>The below-mentioned cryptojacking test methods can be of great help in this regard:</p><ul><li><strong>Poor performance delivery</strong></li></ul><p>As quoted above, the successful execution of malicious cryptomining code consumes the targeted device’s resources. So, a significant symptom in your device is the a sudden or gradual dip in its productivity. Its performance chart takes a downslope.</p><p>This unwanted consumption increases the burden on the device and makes it slow. So, it’s obvious to experience slow processing, unexpected shutdown, and failures in opening certain apps or programs. At times, the targeted device may even refuse to open or start as it’s supposed to be.</p><ul><li><strong>Excessive heating</strong></li></ul><p>The extra resource consumption leads to overburden on the OS of the targeted device and makes it overheat.</p><p>When it continues for a longer period, the average lifespan of the device decreases. However, this is not the obvious sign of a cryptojacking attack as overheating is the outcome of multiple reasons. Hence, one has to delve deeper and look at other obvious cryptojacking related behaviors.</p><ul><li><strong>Inspect the CPU usage</strong></li></ul><p>CPU’s health of the targeted devices will surely deteriorate when it will perform heavy tasks like mining. This is why one must check the CPU health regularly. If one witnesses too much CPU usage while visiting a website having no rich media data on it, a suspicious code snippet could be lying in it background.</p><p>While doing it on personal computers, one must go to Task Manager (or any equivalent tool) and lookout the mention of excess CPU usages. In an enterprise ecosystem, there should be a dedicated IT team for this task.</p><ul><li><strong>Keeping an eye on the website</strong></li></ul><p>Threat actors remain highly vigilant and hunt for a website that is vulnerable and offers multiple opportunities to embed a code. Make sure that the website is not featuring any outdated plugin or add-on.</p><p>Also, if you own a website, it’s crucial to inspect it regularly so that any corrupted code can be spotted in the early stage. The earlier is the detection, the lesser is the damage.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*uzqZNjnQ6qZ8F0Ux.png" /></figure><h3>Cryptojacking Prevention Tips and Tricks</h3><p>Cryptojacking is an issue for business because, if not addressed or fixed properly, these attacks can cause damage beyond one’s imagination. However, its dangers can be under-control by diligently following the below-mentioned tips:</p><ul><li>Use cybersecurity tools that could speedily detect malicious code in your system;</li><li>Web browsers are the first choice of threat attackers. This is why protecting it is the first defense action. There are a few trustworthy add-ons (e.g., No Coin, AntiMiner, and minerBlock) you may bank upon for this.</li><li>Be aware of current cryptojacking trends to figure out what all the attackers are capable of currently;</li><li>Blocking ads from untrusted sources, one can reduce the risks of cryptojacking. For this, you can spend some time and find a reliable ad blocker for your use.</li><li>Disable JavaScript while visiting a suspicious site or disable auto-downloading in your browser.</li><li>Use Walarm <a href="https://www.wallarm.com/product/api-security-platform">API Security Platform</a>, also read the important post about <a href="https://www.wallarm.com/what/api-security-tutorial">API security</a></li></ul><p><em>Originally published at </em><a href="https://www.wallarm.com/what/what-is-cryptojacking-attack"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=fe800ca2aab8" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[What is API Abuse ❓ Prevention measures.]]></title>
      <link>https://d0znpp.medium.com/what-is-api-abuse-prevention-measures-1c277f4ba85d?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/1c277f4ba85d</guid>
      <category><![CDATA[api-abuse]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Tue, 18 Jan 2022 17:06:37 GMT</pubDate>
      <atom:updated>2022-01-18T17:06:37.250Z</atom:updated>
      <content:encoded><![CDATA[<p>APIs are paramount for constructing a steadfast and constant communication bridge that empowers devices to pass-on desired information seamlessly. Hackers adopt many ways to exploit the APIs and corrupt the targeted device. This API exploitation is a potential threat to API security and needs foremost attention while constructing utterly secured application development is the goal.</p><h3>What is API abuse?</h3><p>API abuse refers to the act of wrong-handling of APIs, gaining unsanctioned access, and modifying the key functions so that APIs can be used for adversarial processes like raiding a server or overburdening a server. It’s performed with the help of bots, phishing attacks, or manual insertion of malicious code.</p><h3>Consequences of API abuse</h3><p>A thriving API abuse permits hackers to achieve admin-like access to the targeted API. This access endows hackers to make API work as per their will. Hackers make use of existing API vulnerabilities to rob crucial private or business information while corrupting your websites or applications. In addition, one can take over the entire account or software ecosystem with a viable API abuse attack.</p><p>API abuse exists in many forms, a few examples are:</p><ul><li><strong>Injection Attacks</strong></li></ul><p>This method requires adding a piece of malicious code script in an API. The attack happened only on API featuring vulnerabilities. Presently, injection attackers are the most notorious abuse for web apps as well as APIs.</p><p>Currently, SQLi and XSS are the most common types of this attack in use. The code insertion can happen in the API code or in the API message.</p><ul><li><strong>DDoS Attacks</strong></li></ul><p>It is a key type of API abuse wherein the threat actor prevents legitimate access to a particular device or system. Hackers make this happen by encumbering APIs with huge traffic volumes. The traffic is sent with the help of a bot and asymmetrical processes.</p><p>This type of attack consumes system resources at a huge scale and makes them inaccessible to intended users. The Distributed Denial of Service (DDoS) attack can occur at a slow pace, wherein negligible bandwidth is consumed, or at a fast speed as well. Either way, this type of API abuse tarnishes the reputation of the applications and systems as end-users fail to use them.</p><ul><li><strong>Data Exposure</strong></li></ul><p>APIs are used mainly to let 2 or more endpoints communication and share data whenever required. When API abuse happens, the information warehoused in the APIs is likely to be exposed to ill resources. RESTful APIs are more prone to this hander as they transfer data over HTTP protocol.</p><h3>How to prevent API abuse?</h3><p>The outcomes of API abuse are deadly and hold the power to crush the entire IT ecosystem of the target. Hence, one must always remain aware of every possible solution of the ‘<em>How do you prevent abuse of your public API?</em>’ issue. Here are some tips that actually work:</p><ul><li>Every API call coming from bots should be monitored and managed through and through. As most API abuse happens with the help of bots, API calls made from bots shouldn’t be entertained casually.</li><li>API authentication and authorization of the highest grade should be implemented.</li><li>The API login process must have the backing of 2FA and robust encryption.</li><li>The entire API path should be watched over carefully to spot any vulnerability in the infancy stage.</li><li>For effective fault tolerance, one must adopt the cluster API implementation process.</li></ul><p>All sorts of APIs, public or private, <a href="https://www.wallarm.com/what/differences-soap-vs-rest#what_is_soap__">SOAP</a> or <a href="https://www.wallarm.com/what/differences-soap-vs-rest#what_is_rest_">REST</a>, and many more should have effective <a href="https://www.wallarm.com/what/api-security-tutorial">API security</a> measures in place. Tools like <a href="https://www.wallarm.com/">Wallarm</a> make this happen as it offers every necessary resource to keep API vulnerabilities at a minimum level and keep API abuse probabilities as low as possible.</p><p><em>Originally published at </em><a href="https://www.wallarm.com/what/what-is-api-abuse"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1c277f4ba85d" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[What is RAT Remote Access Trojan ❓ Detection and Removal]]></title>
      <link>https://d0znpp.medium.com/what-is-rat-remote-access-trojan-detection-and-removal-ac6786fd9011?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/ac6786fd9011</guid>
      <category><![CDATA[trojan]]></category>
      <category><![CDATA[remoteaccesstrojan]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Fri, 14 Jan 2022 10:26:59 GMT</pubDate>
      <atom:updated>2022-01-14T10:26:59.813Z</atom:updated>
      <content:encoded><![CDATA[<p><strong>Introduction</strong></p><p>Humans live in the 21st century where a large portion of our exchanges are taken care of on the web. Thus, people, businesses and organizations are presented with new online protection dangers. A significant number of these digital dangers will break into your framework and challenge a person’s activities. One of the most hazardous digital dangers in our present reality is this malware type. In this piece, we’ll talk about this malware’s significance, how the digital danger can influence your framework, how to recognize it and how to ensure your frameworks against it.</p><h3>What is Remote Access Trojan?</h3><p>This is a malware program that incorporates a secondary passage for authoritative command on a target PC. These <a href="https://www.wallarm.com/what/malware-types-and-detection">malware</a> are normally stored imperceptibly with a normal program such as games or delivered as an email connection. When the main framework is broken into, the interloper might utilize it to circulate the <a href="https://www.wallarm.com/what/trojan-horse-attack">trojan</a> to other weak PCs and create up a botnet.</p><p>Since a RAT empowers regulatory control, it makes it workable for the interloper to do pretty much anything on the designated PC, including:</p><ul><li>Checking client conduct through keyloggers or other spyware.</li><li>Getting to private data, for example, Mastercard and government backed retirement numbers.</li><li>Enacting a framework’s webcam and recording video.</li><li>Taking screen captures.</li><li>Appropriating infections and other malware.</li><li>Designing drives.</li><li>Erasing, downloading or adjusting documents and record frameworks.</li></ul><p>THE BACK ORIFICE ROOTKIT is one of the most mind-blowing known instances of a RAT. A programmer known as the Cult of the Dead Cow made Back Orifice to uncover the security flaws of Microsoft’s Windows working frameworks.</p><p>RATs can be hard to recognize on the grounds that they normally don’t appear in arrangements of running projects or assignments. The activities they perform can be like those of authentic projects. Besides, a gatecrasher will regularly deal with the degree of asset use. This way a drop in execution doesn’t prepare the client that something’s wrong.‍</p><h3>How Does A Remote Access Trojan Work?</h3><p>Like different types of malware, Remote Access Trojans are typically connected to what in particular seem, by all accounts, to be genuine documents, like messages or pre-introduced programming. In any case, it has lately been seen that these hazardous danger entertainers are rapidly changing working procedures when their techniques are found and openly uncovered.</p><p>In any case, what truly makes this malware especially risky is the way that it can mirror dependable remote access applications. You won’t have the foggiest idea about it’s presence whenever they have been introduced as it doesn’t show up in a rundown of dynamic projects or running cycles. Why? It’s more invaluable for attackers to keep out of the spotlight and try not to be gotten. Assuming you’re not going to extreme security lengths, it’s conceivable you could have a Remote Access Trojan on your PC for a significant stretch without it being distinguished.</p><p>Uniquely in contrast to keylogging, a sort of infection that records the keystrokes on a client’s console without the casualty acknowledging it, or <a href="https://www.wallarm.com/what/explained-ransomware-attack">ransomware</a>, which encodes every one of the information on a PC or cell phone, hindering the information proprietor’s admittance to it until a payment is paid; Remote Access Trojans give aggressors complete regulatory command over the tainted framework, as long as they stay unseen.</p><p>As you can envision, this sort of action can bring about fragile circumstances. For instance, on the off chance that a RAT is matched with a keylogger, it can undoubtedly acquire login data for monetary and individual records. To exacerbate the situation, they can covertly initiate a PC’s camera or mouthpiece, and even access private photographs and archives, or utilize your home organization as an intermediary server, to perpetrate violations secretly.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*sWDpR99irEeAyf-x.jpg" /></figure><h3>Remote Access Trojan Detection</h3><p>As fraudsters develop their strategies to sidestep banks’ security, extortion prevention arrangements should likewise advance to keep pace. Most arrangements can’t identify the presence of RATs since they depend on conventional safety efforts like unique finger impression approval or gadget validation. Since this malware hides by not really trying to hide on the client’s authentic gadget and it is as yet the genuine client who is working the gadget . Therefore, banks need a complex way to deal with security in the event that they are to check RATs and RATs-in-the-Browser effectively.</p><p>What’s more? Two-factor validation (a robust new guideline PSD2) offers restricted insurance, basically with regards to RATs. For instance, assuming the bank asks the assailant for an OTP (One Time Passcode) while they endeavor a false exchange, they can subtly utilize the genuine client’s suspended meeting to obtain it by means of the actual casualty.</p><p>Social biometrics is generally perceived similar to the main network safety capacity with the capacity to recognize and in this manner defeat this malware assaults. This is on the grounds that, just as approving the known client gadget, biometrics likewise investigates the client’s conduct and intellectual capacities without meddling with the client experience itself. It can progressively profile the client behind the gadget utilizing advanced AI calculations to distinguish their extraordinary social biometric qualities.</p><p>Through learning these standards of conduct — identifying peculiarities in their mouse direction, dubious console use or postponement in the gadget controlling the PC — high-tech social biometrics can signal startling changes in conduct that happen mid-meeting — but slight or transitory. These crucial pieces of information could flag a potential Remote Access Trojan penetration or Account Takeover ( <a href="https://www.wallarm.com/what/what-is-ato-account-takeover-fraud">ATO</a>) endeavor.‍</p><h3>How To Protect Against Remote Access Trojan?</h3><p>RATs are intended to conceal themselves on contaminated machines, giving mystery admittance to an aggressor. They frequently achieve this by piggybacking pernicious usefulness on an apparently genuine application. For instance, a pilfered computer game or business application might be accessible free of charge since it has been changed to incorporate malware.</p><p>The covertness of RATs can make them hard to ensure against. A few techniques to distinguish and limit the effect of RATs include:</p><ul><li><strong>Zero in on Infection Vectors</strong>: RATs, similar to any malware, are just a risk on the off chance that they are introduced and executed on an objective PC. By sending against phishing and routinely fixing frameworks can diminish the danger of RATs by making it more hard for them to contaminate a PC in any case.</li><li><strong>Search for Abnormal Behavior</strong>: RATs are trojans that ordinarily take on the appearance of authentic applications and might be made out of vindictive usefulness added to a genuine application. Screen applications for strange conduct, for example, notepad.exe producing network traffic.</li><li><strong>Screen Network Traffic</strong>: RATs empower an aggressor to remotely control a contaminated PC over the organization, sending it orders and getting the outcomes. Search for atypical organization traffic that might be related to these interchanges.</li><li><strong>Carry out Least Privilege</strong>: The rule of least advantage expresses that clients, applications, frameworks, and so forth ought to just have the entrance and consents that they need to take care of their business. Executing and authorizing least advantage can assist with restricting what an assailant can accomplish utilizing a RAT.</li><li>‍<strong>Send </strong><a href="https://www.wallarm.com/what/what-is-multifactor-authentication-mfa"><strong>Multi-Factor Authentication</strong></a><strong> (MFA)</strong>: RATs generally endeavor to take usernames and passwords for online records. Sending MFA can assist with limiting the effect of qualification compromises.</li></ul><p><em>Originally published at </em><a href="https://www.wallarm.com/what/what-is-rat-remote-access-trojan"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ac6786fd9011" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[What is SAML authentication ❓ How does it work ❓]]></title>
      <link>https://d0znpp.medium.com/what-is-saml-authentication-how-does-it-work-221533fd58cc?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/221533fd58cc</guid>
      <category><![CDATA[saml]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Thu, 30 Dec 2021 09:06:19 GMT</pubDate>
      <atom:updated>2021-12-30T09:06:19.292Z</atom:updated>
      <content:encoded><![CDATA[<p>Enterprises using various business apps have a tough time maintaining data’s secrecy and access grants as per user roles throughout the infrastructure landscape. SAML (Security Assertion Markup Language) shows up as a great aid at this front.</p><p>Let’s see what is it, how it works, what are its advantages, how it differs from SSO, what makes it similar to SSO, and how it helps in API access verification to ensure an astonishing security level.</p><h3>SAML — A Quick Overview</h3><p>SAML’s main work is to permit IdP (the identity details providers) to share the authentication-concerned credential with the concerned authority. It is the open standard that allows granting unified access for all kinds of apps while making no compromise on data security.</p><p>A few more things you must know about SAML are:</p><ul><li>It brings XML into action for completing the customary connection between IdPs and service-givers to communicate reliably.</li><li>SAML authentication process confirms the end-user’s identity while SAML authorization defines which all resources should be in user’s access.</li><li>It checks for SPs, IdPs, and end-users if the user is eligible for what it is demanding.</li><li>It’s an OASIS standard.</li><li>It ensures safe exchange of information.</li><li>It supports SSO activation. However, this procedure will require connecting to an external IdP and sharing the XML tokens with it.</li></ul><h3>A Quick Glimpse of Single Sign-on (SSO)</h3><p>Considered among the topmost viable authentication frameworks, SSO merges multiple sign-in screens. This implies, you won’t have to sign-in independently for your app(s). Instead, 1 set of sign-in data for your accounts will work fine for diverse SaaS apps.</p><p>By doing so, it makes accessing the app faster, simpler, and auditable. It’s a key aspect of IAM strategies of businesses seeking frictionless app access validation and better security implementations.</p><p>With SSO enabled, one can enjoy:</p><ul><li>Strong passwords, as there is no need to create multiple passwords sharing similarities. One tough and complex password is enough for everyone.</li><li>Users do not have to memorize various passwords.</li><li>Easy MFA deployment that verifies multiple factors, as its activation at 1 point will secure various applications.</li><li>Quick password re-entry policy enforcement, as administrators have a single point where the policy should be enforced.</li><li>Seamless internal credential management because the SSO stores user passwords internally and grants the IT team more control over the database.</li><li>Instant recovery of user password as the IT team has to work on recovering one password.</li></ul><h3>SAML Authentication — The Step-by-Step Process</h3><p>Let us tell you the whole procedure in a few steps.</p><ol><li>First of all, the identiy service hands over the user login related input to the SP. For the seamless of SAML parameters to the SPs, every end-user is bound to login via SSO once.</li><li>Next, the SP contacts IdPs, asking about the credibility of a request. This process requires giving consent for SAML SSO configuration too. Doing so ensures that the same SAML settings are used for checking the identity and authorizing the user/request.</li></ol><h3>Benefits</h3><ol><li>Being a standard format, it grants an open approach to businesses that is free from platform compatibility and vendor implementations.</li><li>It uses directories in a loose coupling manner, that implies there is no need to store or sync user data to local directories.</li><li>As it supports SSO, end-users are going to have great experience in accessing applications.</li><li>SAML lets businesses reuse integrations for registration/sign-in while maintaining the same level of security. It trims the account management cost.</li><li>The burden of maintaining the user identities is shifted to the IdP when SAML is at work. This frees service-givers from registration and sign-in related hassles.</li></ol><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*TUNSLjohiHFRKhn5.png" /></figure><h3>What is SAML Assertion?</h3><p>In simple terms, it is an XML-formatted document that comprises the user authorization status information. This detail is offered by an IdP to a service-giver.</p><p>Its 3 typesos assertions are:</p><p><strong>Authentication </strong>is all about the validation of user’s credibility, related technique, and session duration tracking details.</p><p><strong>Assigned </strong>takes care of successfully passing SAML tokens to the SP. IdP as well as SP directory use the same attributes to confirm the trustworthiness of request-creator.</p><p>Finally, assertion of <strong>Authorization-decision </strong>type explains where or not the user is given access as per his request. Detailed reason behind denied access is also offered if it happens.</p><h3>SAML Example</h3><p>The simplest example of how SAML processes its operations is given below:</p><p><em>Let’s consider an end-user, named John, who tries to access a business application for official purposes.</em></p><ul><li>John will begin a session with SSO and complete the identity verification part of the procedure.</li><li>Zoho CRM will request the IdP to share the user details for confirmation.</li><li>The SaaS tool will access the fetched results to complete the authority verification step.</li><li>IdP will revert to this request in SAML format. It will feature the digital signatures of John. Based upon the similarities between the identification details provided by John and the IdP, the revert message may feature other details as well.</li><li>SaaS tool receives the response and grants or denies access, as instructed by the IdP.</li><li>If access is permitted John is allowed to use his Zoho account.</li></ul><h3>SAML vs SSO</h3><p>SAML helps in user identity verification and in making SSO possible. SSO can exist alone and allows end-users to use various applications with unified login details. SSO can bring the standard SAML protocols into action while performing information trading as it has no specific protocols of its own. Additionally, it can use third-party protocols like OpenID for effective cross-domain user identity check. SAML offers a wide range of protocols.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*lhT47kry521dsWdC.png" /></figure><h3>SAML vs oAuth2</h3><p>Owing to similarities between key purposes, SAML 2.0 and oAuth 2.0 are often considered the same. While they both share great similarities, they differ from each other in various aspects.</p><p><strong>Similarities</strong></p><ul><li>Both are required to promote secure application interoperability.</li><li>Both support easy access management and fast integration.</li></ul><p><strong>Differences</strong></p><ul><li>oAuth 2.0 pays attention to authorization while SAML prioritizes authentication</li><li>SAML is XML based while oAuth 2.0 is utilizes <a href="https://www.wallarm.com/what/what-is-json-rpc">JSON</a></li><li>SAML maintains session data through cookies while API calls are used in the case of oAuth for this.</li></ul><h3>API authentication with SAML</h3><p>While the most common use of SAML is supporting user identity verification and enabling SSO, it can be proved highly fruitful for request’s genuinity checking in APIs. User access right verification, to check if the request is genuine, is crucial from the <a href="https://www.wallarm.com/what/api-security-tutorial">API security</a> front and can be achieved by sending a SAML request that must comprise:</p><ul><li>SAML prepare authentication API based API auth request</li><li>SAML message that can support the SSO process auto-initiated by IdP</li></ul><p>By all means, it’s crucial for a SAML request message to be based on an encoded XML document featuring &lt;Response&gt; root element.</p><p>The request’s body must feature content, ids, and realm. The first two aspects are essentials while the last one is optional.</p><p>The SAML response includes access_token (a SAML token granting or denying the access), username, expires_in, refresh_token, and realm.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*Ixpb2UNKUt5YINBf.png" /></figure><h3>The Final Word</h3><p>SAML and Single Sign-On have a close relationship with each other. These are vital for zero-compromise data security. Hope this article helps you learn about these two efficiently.</p><p><em>Originally published at </em><a href="https://www.wallarm.com/what/what-is-saml-authentication"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=221533fd58cc" width="1" height="1" alt="">]]></content:encoded>
    </item>
    <item>
      <title><![CDATA[What is a Botnet ❓ Definition, Types, Example Attack]]></title>
      <link>https://d0znpp.medium.com/what-is-a-botnet-definition-types-example-attack-db7d7bf02f93?source=rss-952c3fe8c7c7------2</link>
      <guid isPermaLink="false">https://medium.com/p/db7d7bf02f93</guid>
      <category><![CDATA[botnet-detection]]></category>
      <category><![CDATA[botnet]]></category>
      <dc:creator><![CDATA[Ivan Novikov]]></dc:creator>
      <pubDate>Wed, 29 Dec 2021 14:49:46 GMT</pubDate>
      <atom:updated>2021-12-29T14:49:46.742Z</atom:updated>
      <content:encoded><![CDATA[<p>Professionals, who make system security arrangements, are well-aware of the term ‘botnet’. Often used for the chain of hijacked computers/systems, the term ‘botnet’ should be well understood if a restorative and robust system is instructed as their wrong usage can lead to tremendous chaos.</p><h3>Botnet Definition</h3><p>By literal definition, botnet refers to the web of blighted or hijacked computers used for processes like sending spam emails, distributing malware, and framing DDoS attacks. Activation of botnet doesn’t mandate the permission of the device owner.</p><p>Alone, botnets are not detrimental to the network and can be used for crucial tasks like chatroom management and tracking the points accumulated during online games. The controlling party of the botnet is known as a bot-herder and each individual machine, concerned in the network, is known as a bot.</p><p>The earlier key purpose of assembling a botnet is to make monotonous tasks easier than ever. The best example of this chatroom management wherein it handles the job of eliminating people who are violating the policies. Botnets keep track of language used during the chats, which is otherwise a too taxing job for humans.</p><p>However, some clever minds figure out other its ill-usage, by utilizing its ability of seamless code execution inside another system. Because of these features, hackers or attackers were succeeded in using for password theft and tracking the keystrokes made on a specific device.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*edHbKig-kYtYitJd.png" /></figure><h3>How Does a Botnet Work?</h3><p>There are multiple stages in this process. Botnets, when used in full capacity, can perform attacks at a large scale. Hackers need to support botnets with supplementary machinery or devices to enhance the ability of a botnet. To have a deeper understanding of botnets modus operandi, one must understand the key terminologies.</p><p>Bot herder is what is required to lead the connected corrupted devices in the network. It’s functional via remote commands and guides the devices to perform certain actions.</p><p>Bot or zombie computer is the term used for the infected system/device used in the creation of a botnet. The bots are mindless devices and behave as instructed or guided by the bot herder’s command.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*4Ciow1Z7fGnH53h6.png" /></figure><h3>Stages of botnet building</h3><p>The next step to figure out the functionality of botnet is knowing the building process. The procedure involves three steps:</p><ol><li>‍<strong>Stage 1 — Prepare and Expose</strong></li></ol><p>At this stage, the bad actor figures out the vulnerability to introduce into the user’s device.</p><p>The vulnerability hunting takes place in the website, human behavior, and application. By doing so, the hacker prepares a set-up to lure the target to get exposed to malware, knowingly or unknowingly.</p><p>Most commonly, hackers figure out the vulnerabilities in websites and the software.</p><p>Additionally, malware is delivered via emails or random messages.</p><p>2‍. <strong>Stage 2 — Infecting the user via malware</strong></p><p>The next action that the botnet performs is activating the malware so that the end-user is infected and has compromised security. The process of infecting the device usually takes place via the Trojan virus or social engineering method.</p><p>Some attackers adopt a more hostile approach and deploy drive-by-download techniques to infect the device. Using all these methods, attackers corrupt the targeted device with botnet malware.</p><p>3. ‍<strong>Stage 3 — Controlling the targeted devices</strong></p><p>The last stage of botnet working methodology is gaining control over each device. Hackers systematize the involved infected machines in the botnet and design a methodology to manage them remotely. In general, around thousands of devices are controlled in the process via a huge zombie network. Once the stage is successfully completed, the bad actor is able to gain admin-like access to the targeted devices or computers.</p><p>The fruitful activation of the botnet allowed hackers to read or write the data stored in the system, capture any personal information, share the data from targeted devices, keep an eye on all the activities happening on the targeted device, and search other hidden vulnerabilities.</p><h3>Types of Botnet Attacks</h3><ul><li><strong>DDoS</strong></li></ul><p>DDoS or <a href="https://www.wallarm.com/what/types-of-ddos-attack-and-measures-protection">Distributed Denial-of-service attack</a> involves disturbing the customary traffic of a server in a way that actual or intended audiences are not able to access the website. The attack gains its efficacy from using the assorted corrupted systems as the sources of creating disturbing traffic. The corrupted devices involved could be computers, PC, IoT devices, and many other data-driven devices.</p><p>From another angle, a DDoS attack can look like a traffic jam created intentionally so that desired end-users don’t reach their destinations.</p><ul><li><strong>Phishing</strong></li></ul><p>One of the most common botnet attacks, phishing involves representing bad actors or hackers as reliable sources to lure victims to share crucial information like passwords and banking credentials. Using these details, bad actors can steal data and money. The attack is accomplished by multiple means like email phishing, vishing, and smishing. <a href="https://www.wallarm.com/what/types-of-phishing-attacks-and-business-impact">Phishing attack</a> targeting a huge audience is often performed via spear and whale phishing</p><ul><li><strong>Brute Force Attacks</strong></li></ul><p>Causing more than 5% of total security breaches, brute force attack is based on guessing. The threat actor keeps on guessing the user credentials till the time s/he gets the right credentials and gains unwanted access to the targeted system. The Hit and Trial methodology work here. It’s a simple process with a better success rate. There are some brute force attack tools used for the task as well.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*CXsebaSV9Z2JspCa.png" /></figure><h3>Botnet control models</h3><p>To ensure the effective functioning of the botnet and complete the intended aim, attackers need to control the botnet continuously. Usually, two models are used for this task.</p><p><strong>Model #1- Centralized or The client-server model</strong></p><p>The centralized botnets utilize this model’s basic network infrastructure to establish the communication network with the devices facing the attack. It’s highly functional as command and control servers generate robust communication.</p><p>However, as these servers can be spotted easily and can be deactivated effortlessly, bot herder won’t be communicative with the bots once the C&amp;C server is down or hacked.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*8yo2D91I2Gx5Rlkp.png" /></figure><p><strong>Model #2- Decentralized or The peer-to-peer model</strong></p><p>An advanced model, this model involves establishing communication while involving all nodes or peers connected in this network. In this type of botnet controlling model, all infected nodes are commanded to communicate in the network without asking for a particular and dedicated C&amp;C server (or authentication).</p><p>Botnets following the P2P model are stronger as compared to botnets functional via the client-to-server model. Also, they are not easy to be disturbed. This advantage has made the P2P model more popular these days.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/0*10b0OOxvolCec7st.png" /></figure><h3>Examples of a Botnet</h3><ul><li><strong>Mirai Botnet Attack</strong></li></ul><p>You might have heard of it. After all, Mirai is one of the most powerful botnets until today.</p><p>First noticed in 2016, this botnet attack impacted many Linux-based webcams and routers under a high-end DDoS attack. The attack infected the machines used for scanning the internet consumed by IoT devices. Users, who didn’t change the default passwords, we targeted in this attack.</p><p>Things become worse when the original code of Mirai was published online and gave other hackers an opportunity to create more powerful malware by modifying it accordingly.</p><ul><li><strong>Zeus Botnet Attack</strong></li></ul><p>The attack happened in 2007 and is one of the most notorious attacks happened in history. It was first designed to fetch the end-users banking details using spam or phishing emails.</p><p>The attack involved the use of a <a href="https://www.wallarm.com/what/trojan-horse-attack">Trojan horse</a> program in infecting the devices. Since its inception, its multiple variants have been presented. CrytoLockerransomware is an example of this. As per the estimation of Damballa in 2009, the botnet infected 3.6 million hosts.</p><p>‍</p><h3>What Are Botnets Used For?</h3><p>Based upon the intention of the attackers, botnets can be used widely to fulfill money or data theft-related aims. The most common usage of botnets is as quoted below.</p><ul><li><strong>Fraudulent or money stealing</strong></li></ul><p>Attacks can use a botnet to steal money directly or indirectly. Phishing emails or creating a false website for banks are key methods to accomplish this goal. They can translate the payment or transaction details and use them to steal money.</p><ul><li><strong>Data theft</strong></li></ul><p>User data has huge worth in the market and hackers they the help of botnets to steal individual data or break into the database of an enterprise. They later sell user data to third parties and earn money. Such botnets remain dormant and steal personal information.</p><ul><li><strong>Cryptocurrency mining</strong></li></ul><p>Cryptocurrency has gained huge popularity and attackers can mine cryptocurrency with the help of botnets. The process is known as cryptojacking.</p><ul><li><strong>Perform spamming and phishing frauds</strong></li></ul><p>Using botnets, bad actors can launch email spamming and phishing scams at large as they can disperse the infected emails to millions of targets in one go. There are specially designed spam botnets for this job.</p><p>Regardless of the method used, the motives are the same, stealing money or data. However, some attackers can use botnets just because they can. They use botnets to display their capabilities and prove their excellence to the world. We have witnessed many security breaches when bad actors steal enterprise data and expose it on the dark web for free.</p><h3>How to Track Botnets?</h3><p>The early detection of botnets plays a crucial role in hazard management as it will keep the damage as less as possible. However, tracking the presence of botnet is a demanding task as this malware doesn’t consume noticeable processing power. This makes it difficult to figure out whether or not a botnet is present on your system.</p><p>Still, there are certain ways that can make this job done:</p><ul><li>Consider the presence of botnet in your device if you witness an abrupt spike in bandwidth consumption and a sudden dip in the internet speed. Whenever a botnet is active, it consumes bandwidth to send spam emails or perform a DDoS attack. This results in excess bandwidth consumption and a significant drop in speed.</li><li>The presence of a botnet will also lead to unwanted or unexpected changes in the system files. If you’re feeling that a certain account’s configuration or file’s access preference has altered without any intervention then it’s because of a botnet.</li><li>Botnets will force a particular program to run as long as a malware attack is performed. So, if you’re facing any issues in closing a particular program then botnet could be a reason for this.</li><li>The presence of botnets will infect the system’s OS and will create a hindrance in an OS update.</li><li>If you’re noticing any unidentified processes in the task manager refers to the botnet presence.</li><li>One can easily track botnet with the help of anti-virus software. They can scan the presence of botnets and much other malware easily and effortlessly. Some high-end anti-virus software even comes with a special botnet checker.</li></ul><h3>How to Protect Your Computer from Botnets?</h3><p>Botnet attacks can be too damaging, if not handled properly. The below-mentioned ways can keep botnet attacks at bay.</p><ul><li><strong>Updated OS</strong></li></ul><p>Make sure the used system features updated software. With each software update, users are granted enhanced security patches that can deal with known vulnerabilities. It’s an easier way to stay out of the reach of botnet malware.</p><ul><li><strong>Download from trusted resources</strong></li></ul><p>The most common way to introduce a botnet attack is to lure the target. Enhanced security seekers must download the attachments coming from untrusted or unknown sources. For professional communications, it’s better to make PDFs password-protected so that they don’t serve as a botnet attack mean.</p><ul><li><strong>No accessibility to suspicious links</strong></li></ul><p>Just like attachments from unknown sources are trouble-makers, strange links can be a phishing attack. So, don’t entertain any strange link.</p><ul><li><strong>Paying attention to website security</strong></li></ul><p>Websites having no security wall and robust encryption could be a hub for botnets. Learn more about the website security criteria and maintain a safe distance from shady websites.</p><ul><li><strong>Stay away from P2P downloads</strong></li></ul><p>P2P downloading services are very risky as they feature many malicious attachments. If possible, don’t use P2P downloads.</p><ul><li><strong>Changing login details while introducing new devices</strong></li></ul><p>Each time you install a new device like a webcam, router, or any IoT device, make sure you’re changing the login credentials. The use of default passwords makes botnet or IoT botnet attacks easier than ever.</p><ul><li><strong>Using the protection of firewall</strong></li></ul><p>Using a firewall is a sure shot way to stay safe from botnet and much other malware as it automatically blocks the insecure connection.</p><ul><li><strong>Strong password and 2FA</strong></li></ul><p>Using a strong password is a smart strategy to keep the odds of any kind of malware attack as little as possible. 2FA or two–factor authentication will keep botnet malware away from your devices and make it a bit safer.</p><ul><li><strong>Deployment of anti-virus software</strong></li></ul><p>Reliable anti-virus software will spot the presence of botnet malware in its infancy stage and will get rid of it before it can do any harm to the system.</p><ul><li><strong>Dependable security tool</strong></li></ul><p>Elimination of botnet with the help of a renowned security tool like <a href="https://www.wallarm.com/">Wallarm</a> allows end-users to enhance the overall security of the system, spot the presence of botnets in the early stage, and frame a protective security strategy.</p><p><em>Originally published at </em><a href="https://www.wallarm.com/what/what-is-a-botnet"><em>https://www.wallarm.com</em></a><em>.</em></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=db7d7bf02f93" width="1" height="1" alt="">]]></content:encoded>
    </item>
  </channel>
</rss>